url;new_message1;Decision;Rationale
https://github.com/square/okhttp/commit/2fd0da8bc4a9c9d61b93af83b87383eacba850a3;Update concurrency.md ( <pr_link> ) ;Update concurrency.md;
https://github.com/square/okhttp/commit/c310d27440bd58c23a8cb7795fe1e9514488c962;workaround broken system  <file_name>  behaviour ;Workaround broken system behavior;
https://github.com/square/okhttp/commit/f87d32984dd9b1f5a7092b52dbecbafd784bd764;README: <iden> changes for OkHttp <version> ;<iden> changes for OkHttp <version>;
https://github.com/square/okhttp/commit/2d75be404a6c5371faded5dcdcadd26f64199e0a;Convert  <file_name>  to Kotlin ( <pr_link> )  <enter> * Convert  <file_name>  to Kotlin <enter> * Idiomatic Kotlin <enter> * Revert back to if condition ;Convert <file_name> to Kotlin ( <pr_link> );Idiomatic Kotlin
https://github.com/square/okhttp/commit/6b17f9edf338173c6491cc30feeb6e4ff539be9d;Doc:  <file_name>  should be treated as immutable once shared  <enter> ...given that requirement, it's safe for many threads to call the open() method concurrently to open their own connections. <enter>  <pr_link> ;<file_name> should be treated as immutable once shared;given that requirement, it's safe for many threads to call the open() method concurrently to open their own connections
https://github.com/square/okhttp/commit/c8c790a6c8862778cbf8f140b19944732316f0e7;fix small types in the changelog ;fix small types in the changelog;small types
https://github.com/square/okhttp/commit/6a79c3223c5ff2d556bbab8eb9909fffc4ca4387;Update README.md -> <iden> moved to Github ;Update README.md  ;<iden> moved to Github
https://github.com/square/okhttp/commit/4910039a572abc6d20cac48eb2c5e92591520537;Support querying & setting transport lists on connections.  <enter> The list is specified via a magic request property '<iden>' and can be queried via the request property '<iden>'. <enter> System wide defaults / switches don't need any changes to okhttp. They can be set as options on the OkHttpClient used by the platform UrlStreamHandlers. ;Support querying & setting transport lists on connections  ;The list is specified via a magic request property '<iden>' and can be queried via the request property '<iden>' 
https://github.com/square/okhttp/commit/d4a9cf4772ae9d8991e58d934dea433798c9b8eb;`response` receives null explicitly from several catch clauses => Fix nullability (override default parameter nullability set at package-info). ( <pr_link> ) ;Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses
https://github.com/square/okhttp/commit/c6c7ce7dadf2ccaa04122f57a278a4a96d1f5c50; <file_name>  snapshot() method removing entries that are being cached (<pr_link> ) <enter> Fixed a bug I found. When using  <file_name> , <iden>() method of <iden>> returned by snapshot() method iterates through lruEntries, however if entry is not completed yet, it is removed (together with dirtyFiles) as cleanFiles don't exist yet - during saving response to disk. This caused sometimes file not being cached at all. ;snapshot() method removing entries that are being cached  ;because cleanFiles don't exist yet
https://github.com/square/okhttp/commit/dabbd56572089cfef00d358edcc87b3f5c73e580;Update README.md ( <pr_link> ) ;Update README.md  ;
https://github.com/square/okhttp/commit/35b031fb63534b9664e622ca4ecf5b19536f63a8;Fix mockwebserver jar download 404 ;Fix mockwebserver jar download 404;404
https://github.com/square/okhttp/commit/1801d0cb2c7132a97c3e9c011a8546f883dfcf12;update proguard rules on README.md ( <pr_link> ) ;update proguard rules on README.md ( <pr_link> );-
https://github.com/square/okhttp/commit/5569a0d20f4669ddde8227d8777de54ddf373181;Remove obsolete <iden> ;Remove obsolete <iden>;obsolete
https://github.com/square/okhttp/commit/c7d508b79c9e201c91ec23f5eec47c18be206567;Add support for connect start/end events. ( <pr_link> ) ;Add support for connect start/end events;
https://github.com/square/okhttp/commit/0827fc62da61fce5cf7bedb088575fe41573b39d;Update  <file_name>  factories to be idiomatic <iden> ;Update factories to be idiomatic;be idiomatic
https://github.com/square/okhttp/commit/a0a3ef543cd5bf199878e14e34b2167e6cf9c575;Beef up  <file_name> 's toString  <enter> Previously it unconditionally showed tags even if empty and would not show headers. ;Beef up <file_name>'s toString;Previously it unconditionally showed tags even if empty and would not show headers
https://github.com/square/okhttp/commit/0e9a5c8054f8ae9b2bc4c41f32790fb52fd73944;Make error-prone validate missing override annotations ;Make error-prone validate missing override annotations;error-prone, missing override annotations
https://github.com/square/okhttp/commit/09f424f12e48e2640915bf61c86a9ecd928e459e;fix README.md typo ( <pr_link> ) ;fix README.md typo;README.md typo
https://github.com/square/okhttp/commit/a334f6f14f40f1586ae309277033c5b1ea53a749;Fix single failing graal test ( <pr_link> ) ;Fix single failing graal test ( <pr_link> );single failing
https://github.com/square/okhttp/commit/5c10006e0a0299ff39ad2e5ee425057b20644afd;Centralise logging behind JUL ( <pr_link> )  <enter> Use JUL, but wire up to the  <method_name>  <enter> Use `adb shell setprop log.tag.okhttp.Http2 <iden>` to enable logging for known levels. ;Centralise logging behind JUL (<pr_link>) <enter> Use JUL, but wire up to the <method_name> <enter> Use `adb shell setprop log.tag.okhttp.Http2 <iden>` to enable logging for known levels;to enable logging for known levels
https://github.com/square/okhttp/commit/a2716d984bdf0930657aebb08c2b12c565130de3;Fix master build ( <pr_link> ) ;Fix master build;
https://github.com/square/okhttp/commit/4b204037e6415a486df4eadb0c659c666e6b9aba;Remove overlapping  <file_name>  ;Remove overlapping \<file_name\>  ;
https://github.com/square/okhttp/commit/70bf8e78b7dbf8ed08dfd93596ba6ebfca52d3a3; <file_name>  init speedup ( <pr_link> ) ;init speedup  ;file_name, pr_link
https://github.com/square/okhttp/commit/63ed542534eec2b1eb124531452a467b5541baa7;API for handling an unexpected SSE response ;API for handling an unexpected SSE response;unexpected
https://github.com/square/okhttp/commit/a01b5115985e555761fee9f9dafb9d7f14ad13cd;MockWebserver fix for <iden> addresses ( <pr_link> )  <enter> Wrap <iden> addresses with [] and return '/' path URIs for proxy CONNECT ;Wrap <iden> addresses with [] and return '/' path URIs for proxy CONNECT;Fix MockWebserver for <iden> addresses
https://github.com/square/okhttp/commit/69bdd6961ba294894620f850b6b01d7175ae8009;Restricted ciphers ( <pr_link> )  <enter> Add a 'best practice' restricted <iden>  <file_name>  ;Add a 'best practice' restricted <iden> <file_name>  ;Restricted ciphers 
https://github.com/square/okhttp/commit/18f3564a4f2b17c3067e7f02337e3909ba5cb3ba;Update  <file_name>  to temporarily ignore javadoc errors and compile tests but not run ( <pr_link> ) ;Update  <file_name>  to temporarily ignore javadoc errors and compile tests but not run ( <pr_link> );temporarily ignore javadoc errors and compile tests
https://github.com/square/okhttp/commit/0cf6f33c1fd1ff84970fa2400afb70a1ea176d5d;document buffer ( <pr_link> ) ;document buffer;
https://github.com/square/okhttp/commit/d6fd0d3832907ff36789b89450df09320081fc66;Fix travis build ;Fix travis build;Fix
https://github.com/square/okhttp/commit/cdc48ba8b0e4bdfccc208985bfef200220096d9d;IOException instead of <iden> in  <file_name>  API ( <pr_link> ) ;Use IOException instead of <iden>;more specific in <file_name> API
https://github.com/square/okhttp/commit/9e0b5b81b0ac25f59a25bd744dc788fe5c3e2971;Make  <file_name>  more capable. ;Make  <file_name>  more capable.;more capable
https://github.com/square/okhttp/commit/caec3c711887b16852c9a4b1bd6d795f3f1b9ca4;fix  <file_name>  for Java 9 ;fix <file_name> for Java 9;Java 9
https://github.com/square/okhttp/commit/c63be3ee65184d119d5145e77986298287118c3a;document support for SNI ;document support for SNI;support for SNI
https://github.com/square/okhttp/commit/08e23fcd02ccbd453b2037128b66f57bc7c8f1d2;Add a canceled event to  <file_name>  ;Add a canceled event to <file_name>;
https://github.com/square/okhttp/commit/5ba145aa6c737878281c3fc655657002320b71c0;Limit recovery attempts for REFUSED_STREAM errors  <enter> We limit per-connection retries but not per-call retries, so this was creating large numbers of connections each of which called the server and accepted yet another REFUSED_STREAM. <enter> Instead we fail sooner with a <iden>. <enter> This shows that the  <file_name>  interface is still somewhat inadequate to support all of the use cases we have. ;Limit recovery attempts for REFUSED_STREAM errors;We limit per-connection retries but not per-call retries, so this was creating large numbers of connections each of which called the server and accepted yet another REFUSED_STREAM.
https://github.com/square/okhttp/commit/82f773376e19bb7e10916627349fad06e45f90cb;Add HTTP/2 and <iden><version> columns to our security providers doc ;Add HTTP/2 and <iden><version> columns to our security providers doc ;to enhance our security documentation
https://github.com/square/okhttp/commit/7c4c8c724dd8e05c4907c46309d0290dc44764fb;Use  <file_name> 's built-in <iden> style  <enter> The boilerplate to set this up is unfortunate. ;Use  <file_name> 's built-in <iden> style  <enter>  ;The boilerplate to set this up is unfortunate
https://github.com/square/okhttp/commit/96e596117e25d108bf9b96ad2899d3610f9915a0;Use our test rule instead of the Maven Surefire listener  <enter> Closes :  <issue_link> ;Use our test rule instead of the Maven Surefire listener  ;to Close the issue indicated by the link
https://github.com/square/okhttp/commit/b5efb41a636154cb8bbc7c5ea3c8244090692d28;Degrade connections after a timeout  <enter> This is based roughly on the '<iden> Connections' proposal here  <issue_link>  <enter> I'm using 1000 ms instead of 500 ms. That's about the cost of a (slow) <iden> handshake, which is what callers would need to do if we degrade unnecessarily. ;Degrade connections after a timeout;This is based roughly on the '<iden> Connections' proposal here
https://github.com/square/okhttp/commit/620be4c97baf5d20cb21c55a11a6191b2511f1ce;Use <iden> in  <file_name> <enter> The utility here is negligible. We're sharing threads between HTTP, HTTP/2 and web sockets now. ;Use <iden> in <file_name>  ;The utility here is negligible. We're sharing threads between HTTP, HTTP/2 and web sockets now.
https://github.com/square/okhttp/commit/53e0f9e7fb39f7babd6388a7a56e9c7e827667e7;Adopt idiomatic <iden> in  <file_name>  ;Adopt idiomatic <iden> in <file_name>;idiomatic
https://github.com/square/okhttp/commit/e3e829d2060542d50f33d1a9864f7ace82c9db5c;<iden> change: Make  <file_name>  accessors final  <enter> If we want these to be vals to Kotlin, they can't be open. I think the motivation to make these non-final was pretty weak, and I don't mind breaking <iden> compatibility here. ;Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they can't be open. I think the motivation to make these non-final was pretty weak, and I don't mind breaking <iden> compatibility here.
https://github.com/square/okhttp/commit/a1265b6140a8fe336602b969960d4048ebd1d3da;Fix a regression in combining cache headers  <enter> This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesn't work because header names are not distinct. <enter>  Closes :  <issue_link> ;Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesn't work because header names are not distinct.
https://github.com/square/okhttp/commit/99b83a3b20e6fe22b6ea587599fde1423056af2d;Include prerequisites in the releasing guide.  <enter> <url> ;Include prerequisites in the releasing guide.;to provide necessary information for users
https://github.com/square/okhttp/commit/bc6776c751b4cd93551a2a20f56429bb78296829;Convert  <file_name>  to Kotlin ( <pr_link> )  <enter> * Rename  <file_name>  to .kt <enter> * Convert  <file_name>  to Kotlin ;Convert <file_name> to Kotlin;"to Kotlin

Decision: Rename <file_name> to .kt"
https://github.com/square/okhttp/commit/7292e54a63733493553a98184080c90168370399;Update the changelog for <iden> <version> ;Update the changelog for <iden> <version>;
https://github.com/square/okhttp/commit/59e68cd2bcba789e7faca70f8910afd2edeed2be;Introduce  <method_name> <enter> This is the payoff that preceding changes have been working towards. This splits  <file_name>  into three parts: <enter>  -  <file_name> : strategy to allocate connections for exchanges  -  <file_name> : a single  <file_name>  pair  -  <file_name> : a sequence of exchanges for a <iden> <enter> The refactoring isn't totally complete, but this should be the last big one. <enter>  <issue_link> ;Introduce <method_name> ;This is the payoff that preceding changes have been working towards.
https://github.com/square/okhttp/commit/aac6c8da0720c53ccd8aa8385f8f250f78a7b61c;Introduce  <method_name>  responseFailed events  <enter> These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously. ;Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.
https://github.com/square/okhttp/commit/2b5337d14ecce5f965ea0d0001f30565f0e1d4a0;Fix some maven problems that are blocking the <version> release ;Fix some maven problems that are blocking the <version> release;blocking the <version> release
https://github.com/square/okhttp/commit/137e7de0454f10160370f105ac7d9d2fc5403c84;"New API,  <method_name> <enter> Also rename  <method_name>  to <iden>(). 'Issued' is the word used by certificates; 'signed' is the word used by cryptographers. I prefer 'signed'. ";Rename <method_name> to <iden()>;I prefer 'signed'
https://github.com/square/okhttp/commit/db2ae92156242255a0d42caaf50c7801e79de917;Fixup  <file_name>  so that it's worthy of production use.  <enter> This changes the default from the insecure 1024-bit <iden> to a secure 256-bit <iden> key. It adds a new option to use <iden> keys for interoperating with older clients. ;Fixup <file_name> so that it's worthy of production use.;This changes the default from the insecure 1024-bit <iden> to a secure 256-bit <iden> key. It adds a new option to use <iden> keys for interoperating with older clients.
https://github.com/square/okhttp/commit/d908a676c25b6b3d547b45a9970f4bfb7a358010;Support client authentication in  <file_name> <enter> Also expose the handshake in the RecordedResponse. <enter>  <issue_link> ;Support client authentication in <file_name>;client authentication
https://github.com/square/okhttp/commit/ea014716fd2a8712ee39888725f91bed43148cd3;Remove <iden>-mode <iden> cipher suites  <enter> This removes the following cipher suites as supported-by-default: TLS_ECDHE_<iden>_WITH_AES_128_<iden>_SHA TLS_ECDHE_<iden>_WITH_AES_256_<iden>_SHA <enter> This tracks a similar change in Chromium 56:  <url>#remove_cbc-mode_ecdsa_ciphers_in_tls  <enter> OkHttp's updated cipher suites, plus comparisons to <iden>, <iden>, Chromium, Firefox, and Square's server-site configuration is here:  <url>  <enter>  Closes :  <issue_link> ;Remove <iden>-mode <iden> cipher suites;This removes the following cipher suites as supported-by-default
https://github.com/square/okhttp/commit/e7e22feb12244b455c8f4961d7eeab7cd21965fe;Fix Javadoc builds with the jsr305 dependency.  <enter> Because multiple modules share a package we need to share the dependency on everything in package-info.java. ;Fix Javadoc builds with the jsr305 dependency  ;Because multiple modules share a package we need to share the dependency on everything in package-info.java
https://github.com/square/okhttp/commit/ca76167504d5323f2a8c1011402907b9a755585c;Make the  <file_name>  a little better.  <enter> <iden> threads by their URLs. Don't follow all fragments of the same <iden>. ;Make the  <file_name>  a little better.  <enter> <iden> threads by their URLs. Don't follow all fragments of the same <iden>;"For better organization; to prevent following all fragments of the same <iden>"
https://github.com/square/okhttp/commit/5d43df973ae841ca05a63580c6a225ff251c410b;Fix an invalid HTML entity in the  <file_name>  Javadoc.  <enter> And-per-se-and ;Fix an invalid HTML entity in the <file_name> Javadoc  ;
https://github.com/square/okhttp/commit/fd509b937c4a5438fe02ddf06ade5ad56736af5d;Inject a leading . for better matching under  <file_name> <enter> Closes :  <issue_link> ;Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching
https://github.com/square/okhttp/commit/5b8c043329b181d6d762d6192f3ded8abd84852e;Fix tests to share a common <iden>.  <enter> Also fix the memory limit, which may prevent Travis from failing our tests. ;Fix tests to share a common <iden>. Also fix the memory limit, which may prevent Travis from failing our tests.;share a common <iden>, memory limit, prevent Travis from failing our tests
https://github.com/square/okhttp/commit/15a5bc40a4520d935bbc02a3552f51dda77fcc9c;Collapse interceptors into a single chain.  <enter> Instead of having a chain of application interceptors and a separate chain of network interceptors, this makes a single heterogeneous chain. It makes the <iden> core and network caller into interceptors. ;Collapse interceptors into a single chain;Instead of having a chain of application interceptors and a separate chain of network interceptors, this makes a single heterogeneous chain. It makes the <iden> core and network caller into interceptors.
https://github.com/square/okhttp/commit/b8fd4e3de0098c44010800c8206000a21feeb252;Update readme and changelog for <version>. ;Update readme and changelog for <version>;<version>
https://github.com/square/okhttp/commit/18b2660873ed8f028ee72981c882ed676aa08030;New  <file_name>  class to normalize certificate chains.  <enter> The goal of this is to get the root <iden> certificate into the certificate chain, so that it can be considered by the certificate pinner. The work to integrate  <file_name>  with <iden> will come in a follow-up PR. <enter> See:  <issue_link> ;New <file_name> class to normalize certificate chains  ;The goal of this is to get the root <iden> certificate into the certificate chain, so that it can be considered by the certificate pinner
https://github.com/square/okhttp/commit/7826bcb2fb1facb697a4c512776756c05d8c9deb;Fix some get prefixes on  <file_name>  and  <method_name>  ;Fix some get prefixes on <file_name> and <method_name>;"-
None"
https://github.com/square/okhttp/commit/4262a05f8e858ac9c39599b2e1dfc53c03020cd2;Write some new connection pool tests.  <enter> These use the <iden> APIs. They're high-level so they won't break with the implementation rewrite. ;Write some new connection pool tests;These use the <iden> APIs. They're high-level so they won't break with the implementation rewrite.
https://github.com/square/okhttp/commit/cc216c6f731f4f08ac29e5619943f502c50bfafd;Add  <method_name> <enter> Might be useful to expose this bookkeeping to app developers. ;Add <method_name>;Might be useful to expose this bookkeeping to app developers
https://github.com/square/okhttp/commit/e36d7ecc26be18021da3555fc8b14381df7af34d;Fix flakiness in  <method_name> <enter> There's a race where the HTTP engine has been created, but not yet connected and the cancel isn't as immediate as it could be. Fix the test by making sure there's a response to be retrieved. <enter> With the upcoming connection pool changes we might make the implementation more robust. <enter>  Closes :  <issue_link> ;Fix flakiness in <method_name>  ;There's a race where the HTTP engine has been created, but not yet connected and the cancel isn't as immediate as it could be. Fix the test by making sure there's a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.
https://github.com/square/okhttp/commit/868ee844458eda9ee7b1b6f9a5238b7c3f84c0e4;Drop our one remaining <iden> cipher suite.  <enter> Tracking <iden> and Firefox, which have also dropped this cipher suite. <enter> This is the only cipher suite change since the last update. See our cipher suites spreadsheet for a comparison:  <url>  <enter>  Closes <issue_link> ;Drop our one remaining <iden> cipher suite;Tracking <iden> and Firefox, which have also dropped this cipher suite
https://github.com/square/okhttp/commit/a560f721937f7f7299167a4d1c3f3ca87998635b;Expose internal APIs for pluggable file systems.  <enter> We aren't yet ready to make <iden> a public type, but I don't mind making it _almost_ available via an internal API for those brave enough to try that. <enter> Also migrate all of our tests to use the  <method_name>  It's simpler. <enter>  <issue_link> ;Expose internal APIs for pluggable file systems, Also migrate all of our tests to use the <method_name>  ;We aren't yet ready to make <iden> a public type, but I don't mind making it _almost_ available via an internal API for those brave enough to try that, It's simpler.
https://github.com/square/okhttp/commit/26401d816215e1050b8c1cc070ddc7f6210df523;Use Okio <version> final. ;Use Okio <version> final  ;
https://github.com/square/okhttp/commit/2ec2027fc00e24a83cd7bb7fef8b11e7c751bc13;Add missing copyright headers.  <enter> <issue_link> ;Add missing copyright headers  ;
https://github.com/square/okhttp/commit/7e28b1d6b6834879556b9c3caa62e49e428351cc;Change  <file_name>  to not implement java.net.ResponseCache.  <enter> This marks some methods as  @deprecated  and internal-only. Unfortunately we don't have a great mechanism to hide them from the documented <iden>. ;Change  <file_name>  to not implement java.net.ResponseCache;This marks some methods as  @deprecated and internal-only. Unfortunately we don't have a great mechanism to hide them from the documented <iden>.
https://github.com/square/okhttp/commit/770a1f954dfbd1b956ffceaf67c38f10a4de4401;Small cleanups.  <enter> Return the  <file_name>  on setters. Remove some completed TODOs in  <method_name>  Link to Okio in Javadoc. ;Small cleanups. Return the <file_name> on setters. Remove some completed TODOs in <method_name>. Link to Okio in Javadoc.;
https://github.com/square/okhttp/commit/d3c57bd4f38d5d3944da88266dd9b474a84d802b;" <file_name>  parsing.  <enter> This includes everything but character encoding. The implementation is built around one oversized method that runs top to bottom; I found this was easier to follow than the switch statement recommended by the <iden> standard. ";The implementation is built around one oversized method that runs top to bottom;I found this was easier to follow than the switch statement recommended by the <iden> standard
https://github.com/square/okhttp/commit/5b6f64a46220911466350202ae974f167497225a;Fix <iden> post retransmit in the new API.  <enter> We don't buffer response bodies in the new API. But we should retransmit POST bodies when a request fails. ;Fix <iden> post retransmit in the new API  ;We don't buffer response bodies in the new API. But we should retransmit POST bodies when a request fails.
https://github.com/square/okhttp/commit/2d47bc2631048fc713dbc7dbb6e7603619fce776;Add a test for corner-case behavior.  <enter> I'm looking to make HttpURLConnectionImpl delegate to Job, and that means writing tests for all the weird things it does above HttpEngine. ;Add a test for corner-case behavior;I'm looking to make HttpURLConnectionImpl delegate to Job, and that means writing tests for all the weird things it does above HttpEngine.
https://github.com/square/okhttp/commit/ff7946416d86aedcf154b868ba869241cd4816e9;Add some pings to force happens-before in <iden> tests.  <enter> Previously we were relying on accidents to get our tests to pass. There may still be some that require work, but this should fix the three tests that I saw fail. <enter>  <issue_link> ;Add some pings to force happens-before in <iden> tests;Previously we were relying on accidents to get our tests to pass
https://github.com/square/okhttp/commit/6c57d76915a7e79cc8b8f743ccd8ecc35889ce7c;Track  <file_name>  ownership.  <enter>  <file_name>  ownership is somewhat racy: when an HttpURLConnection reads the last byte of a connection, its ownership is released and given to the  <method_name>  ;Track <file_name> ownership  ;<file_name> ownership is somewhat racy: when an HttpURLConnection reads the last byte of a connection, its ownership is released and given to the <method_name>
https://github.com/square/okhttp/commit/6d8e198e2dd1ef808e81c57a9e88aa6218e0dbab;New mockwebserver docs. ;New mockwebserver docs;
https://github.com/square/okhttp/commit/97524fb5c9b94b1544a641f115318a41d976a801;Use <iden> in  <method_name>  ;Use <iden> in <method_name>  ;
https://github.com/square/okhttp/commit/dac5aed3d5f9307b9d1ab0a8c7840b232d053ef3;Move  <file_name>  pooling logic.  <enter> Previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams. <enter> Move  <file_name>  reuse to  <file_name> , with policy informed by  <method_name>  It specifies what to do when the  <file_name>  becomes idle: pool, close or hold. The  <file_name>  does what it's told. ;Move  <file_name>  pooling logic  ;"previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams; move  <file_name>  reuse to  <file_name>, with policy informed by  <method_name>  specifying what to do when the  <file_name>  becomes idle: pool, close or hold, so the  <file_name>  does what it's told."
https://github.com/square/okhttp/commit/5fe67f1bfc00a1c2027802515079137f6fd70bea;Implement moving bytes between OkBuffers.  <enter> This is more complicated than I'd anticipated. ;Implement moving bytes between OkBuffers  ;This is more complicated than I'd anticipated
https://github.com/square/okhttp/commit/46a0852c202acf68cd890867a35f8e51b81c2948;Don't attempt <iden> modes we know will fail.  <enter> <issue_link> ;Don't attempt <iden> modes we know will fail.;we know will fail
https://github.com/square/okhttp/commit/9eb276043fc14cda856671ccdba4065bba2a7bae;Small docs fixes. Remove <iden> 2 warnings. ;Remove <iden> 2 warnings;Small docs fixes
https://github.com/square/okhttp/commit/37c01895cca5ec2bec26a3d381611f0938acd6d0;"Define async APIs and switch  <file_name>  to use <iden> directly.  <enter> Using <iden> directly introduces some duplicated code with <iden>. It also breaks the  <file_name>  cache. I think this is the best route going forward; and eventually we could invert this relationship to have <iden> depending on  <file_name>  directly rather than vice versa. ";"Define async APIs and switch <file_name> to use <iden> directly. I think this is the best route going forward; and eventually we could invert this relationship to have <iden> depending on <file_name> directly rather than vice versa.";Using <iden> directly introduces some duplicated code with <iden>. It also breaks the <file_name> cache.
https://github.com/square/okhttp/commit/8f03548249d3292ab95fc5cf016b51133705e771;Fix checkstyle issues in new <iden> code. ;Fix checkstyle issues in new <iden> code;checkstyle issues
https://github.com/square/okhttp/commit/00a50d1919549b51d941aeb893b2a5ed465aa472;Teach  <file_name>  <iden>.  <enter> Kill  <file_name>  in the process. ;Kill <file_name> in the process  ;Teach <file_name> <iden>
https://github.com/square/okhttp/commit/ef09f798a32dc4d0593388054e446f199c14ec8f;Don't use <iden> APIs not in Gingerbread ;Don't use <iden> APIs not in Gingerbread;APIs not in Gingerbread
https://github.com/square/okhttp/commit/5f87fc19ab269a929b61c088a806a674644caa6a;Introduce a  <file_name>  interface between engine and connection.  <enter> This breaks the direct dependency from  <file_name>  to  <method_name>  With this dependency broken, we can start to use  <file_name>  directly from Dispatcher and Job. ;Introduce a <file_name> interface between engine and connection.;This breaks the direct dependency from <file_name> to <method_name>
https://github.com/square/okhttp/commit/a39032cb0af0de4cbc1c18397c64f67074981538;Make  <file_name>  less flaky  <enter> I was seeing flaky results in the debugger because pooled connections were being evicted as the test ran. ;Make  <file_name> less flaky;I was seeing flaky results in the debugger because pooled connections were being evicted as the test ran
https://github.com/square/okhttp/commit/6ed0f2c2cbf5872684bcc50a883fb6d5d0ac207f;Update to the latest  <method_name> <enter> Includes everything thru 8842981cbcfe20eb4721c0a2c867fa9a18233062 ;Update to the latest <method_name>;Includes everything thru 8842981cbcfe20eb4721c0a2c867fa9a18233062
https://github.com/square/okhttp/commit/b9580d68e9bc34eef397e9bc7f13091f1e3f1528;"Be more careful around IOExceptions.  <enter> This adds a first test where a frame is truncated. That has some unpleasant consequences for the other tests because it means the  <file_name>  is more aggressive about closing the socket when all frames have been sent. <enter> It also reduces the use of exceptions for flow control when handling bogus incoming frames. This is a bit worse and a bit better; my goal is to make it easier to differentiate between protocol-level problems (bogus frames) from transport-level problems (closed sockets and EOF streams). ";Be more careful around IOExceptions;my goal is to make it easier to differentiate between protocol-level problems (bogus frames) from transport-level problems (closed sockets and EOF streams)
https://github.com/square/okhttp/commit/3d2547f18886e771aaa9baa996a21136c93460c4;Restore tests for response caching + <iden>.  <enter> One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed. ;Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.
https://github.com/square/okhttp/commit/50999cceb5f5bcdaf79baa5ac7eeef90c72bda8d;Move out of the  <file_name>  package.  <enter> To promote the code into AOSP, we'll keep this package as-is and do the jarjar in <iden> instead. ;Move out of the <file_name> package;To promote the code into AOSP, we'll keep this package as-is and do the jarjar in <iden> instead
https://github.com/square/okhttp/commit/40ff76547064c3fb5acb9047a6f679dd4379a4d0;Make  <method_name>  return full working connections.  <enter> Previously the returned connections required the caller to do extra work: setting up tunnels (which could require auth) and performing an <iden> handshake. With this change we make a complete working connection in  <method_name>  <enter> This will make it easier to fix fallback when a single domain has multiple <iden> addresses and some of those addresses are not reachable. <enter> This will also make it easier to do SPDY through <iden> proxies. ;Make the `<method_name>` return full working connections;Previously the returned connections required the caller to do extra work: setting up tunnels and performing an `<iden>` handshake. With this change, we make a complete working connection in `<method_name>`. This will make it easier to fix fallback when a single domain has multiple `<iden>` addresses that are not reachable. Also, this will make it easier to do SPDY through `<iden>` proxies.
https://github.com/square/okhttp/commit/ac0a0b98e425be757b04b93ab9d4d7b0600d3815;We don't need no stinkin braces. ;We don't need no stinkin braces;no stinkin braces
https://github.com/square/okhttp/commit/7a7ad1cdb22ed381c468ee38d757da03b4b1877a;Handle incoming <iden> frames in <iden>. ;Handle incoming <iden> frames in <iden>;
https://github.com/square/okhttp/commit/5aa2456a145883f6688c6ee325635ed0c6339076;Fix <iden> which was being computed incorrectly.  <enter> We were only returning 'true' once we were already in a tunnel. This was bogus. In theory a <iden> tunnel sending extra data could be corrupted due to this bug. <enter> Also migrate one of the <iden> tunnel tests to use SslContextBuilder instead of <iden>. ;Fix <iden> which was being computed incorrectly;<enter> We were only returning 'true' once we were already in a tunnel. This was bogus. In theory a <iden> tunnel sending extra data could be corrupted due to this bug.
https://github.com/square/okhttp/commit/0ea4c8fc132d2b452b2ea57e06fcab67ae317473;Give the in-progress code a <iden> version number. ;Give the in-progress code a <iden> version number;
https://github.com/square/okhttp/commit/1c2c57b1a9e037d81aeac3ad5088db9ec4358fb1;Add error-prone compiler and fix its found issues. ;Add error-prone compiler and fix its found issues;error-prone, its found issues
https://github.com/square/okhttp/commit/4ab6a8258b0df3a3528029f810e1f48952dba2d7;Remove old <iden> protocol method. ;Remove old <iden> protocol method;old
https://github.com/square/okhttp/commit/c5c4e7857cb25af822b9b3b1fbd158cbd168f48a;Expose <iden> directly on  <method_name>  ;Expose <iden> directly on <method_name>  ;direct
https://github.com/square/okhttp/commit/8b6aa0dca55576a54e69fec59f40ddfaa3561adb;Use a <iden> for body contents. ;Use a <iden> for body contents;
https://github.com/square/okhttp/commit/cabd391637d9fa4fdeb7238c844b0c528722fe1b;Use HTML entity for ampersand. ;Use HTML entity for ampersand;to represent the ampersand symbol in HTML
https://github.com/square/okhttp/commit/3a8967322d06ff2d8445aa277ae103653adf4eee;Use <iden>'s appending sink for <iden>. ;Use <iden>'s appending sink for <iden>;
https://github.com/square/okhttp/commit/35d0922f46c95bd73b1d070b6963cf3512167854;Add convenience overload for <iden>-backed  <method_name>  ;Add convenience overload for <iden>-backed <method_name>;convenience
https://github.com/square/okhttp/commit/eb5e72280b56427139bb14ffe14036f8dca6dba3;Use consistent camel casing of <iden>. ;Use consistent camel casing of <iden>;consistent camel casing
https://github.com/square/okhttp/commit/59b1c1dc5290b9f96ebeefb7ea2369d58042fed3; <file_name>  version updates. Drop unused dependencies. ;Drop unused dependencies;unused
https://github.com/square/okhttp/commit/0ff5ce5a6dd22b24c0c080e6fe8b734ec0859418;Update website to the latest design. ;Update website to the latest design  ;latest design
https://github.com/square/okhttp/commit/58c42623d084b05c249f1948686f250413a3611a;Minor doc fix. ;Minor doc fix  ;
https://github.com/square/okhttp/commit/62177b80f051ffa1f0f95c15fd20482db2006b24;Add <iden>  <enter> <url> ;Add <iden> <enter> <url>  ;
https://github.com/square/okhttp/commit/abb3ab4f50a99119caf0871fe95234a3e619dc82;New Javadocs.  <enter> <url> ;New Javadocs;
https://github.com/square/okhttp/commit/4c1436b3d6e6a7f9722bbcaa4d9a286747168ec0;HTTP/2 initial window size is 65535 not 65536. ;HTTP/2 initial window size is 65535 not 65536  ;not 65536
https://github.com/square/okhttp/commit/0a4896a296c113c5fe0e82f0f052e615b95527bf;Transfer to/from <iden> directly from <iden>. ( <pr_link> ) ;Transfer to/from <iden> directly from <iden>  ;<pr_link>
https://github.com/square/okhttp/commit/b3027a52edfe25824ca96a4eaab3dfc08b622016;Replace Math.min() with <iden> ( <pr_link> )  <enter> * Replace Math.min() with <iden> <enter> * Fix ;Replace Math.min() with <iden> ( <pr_link> ), Replace Math.min() with <iden>, Fix;
https://github.com/square/okhttp/commit/58a0a363d0c5f7a7c2fb6736bf96b459f40d39c5;Convert  <file_name>  to <iden> ;Convert  <file_name>  to <iden>;
https://github.com/square/okhttp/commit/1e386df1fe6293d1d00ce8a8cc98e75e1bf2d858;Convert  <file_name>  to Kotlin  <enter> Update  <file_name>  ;Convert <file_name> to Kotlin, Update <file_name>;
https://github.com/square/okhttp/commit/a7603602ca8b58c5a32117f03189d6d6a7c8e7be;add @overide for subclass override method ;add @override for subclass override method;subclass override method
https://github.com/square/okhttp/commit/967635662ab7b853508872c743629249cec2bb0c;Clean up  <file_name>  ;Clean up <file_name>  ;
https://github.com/square/okhttp/commit/43f93d014c6cf42847ba88fe67dc2d7237bbfb4b;Fix flaky testRfc2109Response()  <enter> The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error. <enter>  Fixes <issue_link> . ;Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.
https://github.com/square/okhttp/commit/be245e75cdfe87f077743ba9e72c66e04c3ded02;Document HttpLoggingInterceptor.redactHeader() ;Document HttpLoggingInterceptor.redactHeader()  ;
https://github.com/square/okhttp/commit/a9942c7c902a4ecc3c96b97b34737c54b07b48d2;Fix code reference in Javadoc. ;Fix code reference in Javadoc;
https://github.com/square/okhttp/commit/92e64f0279f1ce10ddd280fe048a92f6a959203d;Partially revert connection timeout behavior  <enter> Related to issue  <issue_link> . <enter> If there is a *connection* timeout the next route should be tried. Timeouts during a request/response should probably not be retried. <enter> The timeout/interrupt behavior was changed in PR  <pr_link>  for issue  <issue_link> . This modified both connection and request/response behavior. The issue reported was actually about the use of Thread.interrupt(), not timeouts, but the behavior change modified both behavior for interrupt and timeout. <enter> PR  <pr_link>  split the handling of exceptions so that separate code now handles connection errors from that which handles request/response errors. It faithfully kept the behavior from PR  <pr_link> . <enter> The modification of the timeout behavior during *connection* caused problems on <iden>. Now that the two types of error handling are split it's possible to deal with them differently and return the connection behavior to trying the next route. This does not modify behavior during request/response. ;Partially revert connection timeout behavior  ;The modification of the timeout behavior during connection caused problems
https://github.com/square/okhttp/commit/7a3bb19ea44f6771a20d3f5c323cc8bd15d73a56;Prevent  <file_name>  interfering with Android tests  <enter> On Android we run the OkHttp tests as an instrumented test case. The default UncaughtExceptionHandler on Android will quit the app, causing the current test to fail. <enter>  <file_name>  creates a thread that fails for various reasons that are not related to / required for the actual test. Often the exception is thrown during a subsequent test. <enter> This change logs the exception but prevent it from propagating out of the top of the call stack. This decreases overall flakiness. ;This change logs the exception but prevent it from propagating out of the top of the call stack.;This decreases overall flakiness.
https://github.com/square/okhttp/commit/426c11de7b411bd47e9ef5ba3ce08d8589a8a88c;Upstream commit of <iden> / <iden> fix  <enter> <url>#/c/111211  <enter> The change's to <iden>'s  <file_name>  have been ported. <enter> This does not include the introduction of PlatformTest, which will be difficult to write so it works everywhere. ;The change's to <iden>'s  <file_name> have been ported  ;Upstream commit of <iden> / <iden> fix, This does not include the introduction of PlatformTest, which will be difficult to write so it works everywhere
https://github.com/square/okhttp/commit/60f5406dcc094d0431420139bd002e8bdd4ea5d5;Move <iden> retries / fallback into  <method_name> <enter> <iden> changes: 1) Added:  <method_name>  2) Incompatible <iden> change:  <file_name>  constructor no longer includes <iden>. Removed <iden>(). 3) Added:  <method_name>  4) Added:  <method_name>  <enter> Implicit / semantic /  <file_name>  changes: <enter> 1)  <file_name>  now handles all attempts to connect via a  <file_name>  (effectively a {proxy, socket address} pair), rather than just one attempt. i.e.  <file_name>  now handles all the <iden> negotiation fallbacks internally. <enter> 2) <iden> no longer deals with <iden> versions. Individual <iden> failures are not counted against a <iden>. If no connection attempts to a  <file_name>  were successful the failure is counted against the  <method_name>  <enter> 3) The code makes a distinction between when various IOExceptions occur, with the intention making retries a bit smarter. It is now more obvious which exceptions happen during setup ( <file_name> ), connection ( <file_name> ), <iden> communication and thus which can be retried and whether the request might have been sent. ;Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.
https://github.com/square/okhttp/commit/6cf56de5d0701ff26aa6043c552e17c4665c1287;Return  <file_name>  to previous (e.g. KitKat) behavior  <enter> This change required to handle this <iden> scenario: <enter> When this version of <iden> is packaged into <iden> in a future release (in com.android.okhttp...) there is a possibility that an older version of <iden> bundled with application (in com.squareup.okhttp...) will pick up the newer  <file_name>  via ResponseCache.getDefault(). It will attempt to use the get() / put() methods. Commit  <otherCommit_link>  was intended to restore  <file_name>  get() and put() and avoid the UnsupportedOperationException that would be thrown. <enter> Unfortunately, it didn't quite do it: <enter> In KitKat and older versions <iden>, in  <file_name>  the behavior was to ignore any calls to put(URI, <iden>) including any <iden> that wasn't its own (i.e. only ones from com.android.okhttp would be cached). The previous fix to  <file_name>  re-introduced get()/put() but didn't implement the necessary instanceof checks. <enter> Jesse also informs me that coexistance with other implementations of <iden> is not required (since <iden> replaces the <iden> implementation on the desktop). I have also since discovered that  <file_name>  didn't implement the cache-control logic required to follow the letter of the <iden> anyway, which means that  <file_name>  is not suitable for use in cases where the Http(s)<iden> implementation expects a fully compliant implementation. <enter> Also addressed nits from  <otherCommit_link> . ;Return <file_name> to previous (e.g. KitKat) behavior;this change required to handle this <iden> scenario
https://github.com/square/okhttp/commit/e19326c0337758817e5879f9e1bef452d27f9a4a;Add  <method_name>  ;Add <method_name>  ;
https://github.com/square/okhttp/commit/b03026067b3686e45d4e11886eaccf084c36b01e;Update to HTTP/2 <iden> 10 and  <file_name>  6. ;Update to HTTP/2 <iden> 10 and  <file_name> 6;
https://github.com/square/okhttp/commit/08bc3c8808ec4495a1284ed6eb2325d44b435d33;Add  <method_name>  ;Add <method_name>  ;
https://github.com/square/okhttp/commit/241814257b774f39896d7384c3452ef22612307f;Backfill spdy and http/2 related tests wrt zero-length messages. ;Backfill spdy and http/2 related tests wrt zero-length messages;
https://github.com/square/okhttp/commit/8c2f383f14e354a45d0f9f16f5b0fa35b7244a51;Document  <file_name>  throwing modes ( <pr_link> ) ;Document <file_name> throwing modes;To include the <pr_link> information
https://github.com/square/okhttp/commit/0e0f3a2d8d95278bf362eaeb08f13516e383fafd;Push OkHttp 3.1<version> into the sea. It is no longer supported. ( <pr_link> )  <enter> OkHttp <version> is our only branch receiving security fixes, bug fixes, and new features. <enter> OkHttp <version> gets security fixes only. ;Push OkHttp 3.1<version> into the sea;It is no longer supported
https://github.com/square/okhttp/commit/02052b01f6cd1533dd5490ceb61ab6391c4cf2f8;Convert  <file_name>  to Kotlin ( <pr_link> )  <enter> * <iden>  <file_name>  to  <file_name>  <enter> * Convert  <file_name>  to Kotlin ;Convert <file_name> to Kotlin;<pr_link>, <iden>, <file_name>
https://github.com/square/okhttp/commit/23ca0ea3bb33706f8e75412ab7d3ce1faa15a1d6;Convert  <file_name> ,  <file_name>  to Kotlin ( <pr_link> )  <enter> * Rename  <file_name> <version> to .kt (and others) <enter> * Convert  <file_name> ,  <file_name>  to Kotlin ;Convert <file_name>, <file_name> to Kotlin  ;"to Kotlin

Decision: Rename <file_name> <version> to .kt (and others)  "
https://github.com/square/okhttp/commit/18f2b5e6e69de28f420298862378abfd243096ce;Fix source compatibility for some <iden> callsites. ( <pr_link> )  <enter> We had a problem where boolean vals needed to be reverted back to boolean funs. I'd like to go back to vals later, but supporting existing source patterns is more important. <enter> We also had a problem where single abstract method types (<iden> types) could be supplied as lambas when calling into <iden> but not when calling into <iden>. <enter> I found these by pointing  <file_name>  at the <iden> <enter> Get there like this: git co  <otherCommit_link> ^ git co  <otherCommit_link>  okhttp/build.gradle git co  <otherCommit_link>  build.gradle ;Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important
https://github.com/square/okhttp/commit/af6198a1e992b55ff4d16dcaeeacbb4e90e29c8a;Fail HTTP/2 connections if the pong is not received. ( <pr_link> )  <enter> This removes the  <file_name>  abstraction from our http2 package. This was written as if it were a public API, but never exposed to any callers but tests. Removing it makes it easier to lock down how pings are used. <enter> This also removes the  <file_name>  class, replacing it with a new  <file_name>  on  <method_name>  The new  <file_name> , STALL_SOCKET_AT_START, allows us to do <iden> and negotiate an HTTP/2 connection without actually building a proper  <file_name>  and without responding to pings. <enter> The behavior in HTTP/2 connections is modeled after our behavior in web sockets. We count outgoing pings, incoming pongs, and confirm that the pongs are keeping up. If later we make this policy more sophisticated we can track the changes in both places. <enter>  Closes :  <issue_link> ;Fail HTTP/2 connections if the pong is not received;This removes the abstraction from our http2 package
https://github.com/square/okhttp/commit/3646138247488c9832a7f325401fe0b12fcdbebf;Don't summarize the request and response  <method_name>  ( <pr_link> )  <enter> Just pass the <iden> and <iden> objects in directly. ;Just pass the <iden> and <iden> objects in directly;Don't summarize the request and response
https://github.com/square/okhttp/commit/a95ec06a5037f7ca84f4f596397ce6090734c59b;Fix a race in  <method_name>  ( <pr_link> )  <enter> We were assuming on a client failure the server wouldn't have any further events. But it will get a failure if we give it a moment. This was causing some test flakiness. ;Fix a race in <method_name> ( <pr_link> );We were assuming on a client failure the server wouldn't have any further events. But it will get a failure if we give it a moment. This was causing some test flakiness.
https://github.com/square/okhttp/commit/87b86a53c4a5c591b8e1c5ec94b4d81edece00a8;Add <iden> config to README ;Add <iden> config to README;
https://github.com/square/okhttp/commit/69cabb714e2a9972a69be991e660bae99b356824;Improve some Markdown ;Improve some Markdown;improve
https://github.com/square/okhttp/commit/2d73da131dfa77de81ff8a54831c7385a0ce2d72;fix <issue_link> : PROPFIND request should not redirect to GET request ;fix <issue_link> : PROPFIND request should not redirect to GET request;PROPFIND request should not redirect to GET request
https://github.com/square/okhttp/commit/bc3c787ea2df854ac399603d5c67111716137d31;Refactor  <file_name>  by using <iden>  <enter> Cont.  <pr_link>  <enter> We can use <iden> instead of overriding <iden> abstract class. ;Refactor <file_name> by using <iden>;We can use <iden> instead of overriding <iden> abstract class
https://github.com/square/okhttp/commit/0137eb9dbad165caea7189c5c3e09382563ef8bd;Remove unnecessary use of grouping parentheses  <enter> Let's remove warnings found by errorprone. <enter> - attempt  <enter> - isEaualTo  ;Remove unnecessary use of grouping parentheses  ;Let's remove warnings found by errorprone.
https://github.com/square/okhttp/commit/fc238a225d6da5b8d6e8fcb580b9d66021953fd7;Handle <iden> in  <file_name>  ;Handle <iden> in <file_name>;
https://github.com/square/okhttp/commit/eba8a830929c2a696c48e702a0e22766ed9ab516;Enable GitHub <iden> Security Scanning ( <pr_link> ) ( <pr_link> )  <enter> Add  <file_name>  to configure GitHub workflow for code security scanning. Added <iden> action to override default <iden> 8. ;Enable GitHub Security Scanning;To configure GitHub workflow for code security scanning
https://github.com/square/okhttp/commit/512f3528daf902fb74ad0e128420763cb91bdd35; <file_name>  - load through bootstrap ;load through bootstrap;-
https://github.com/square/okhttp/commit/e97bb77a0efc057e47e1692fdf7f858bdbdb65ed;adds optional  <file_name>  body for <iden> requests to ammend <pr_link> ;adds optional <file_name> body for <iden> requests to ammend <pr_link>;
https://github.com/square/okhttp/commit/8e996aadc5d7839f249399abac657e3c9df1dc4a;Fix bug where request body isn't sent when it should ;Fix bug where request body isn't sent when it should  ;request body isn't sent when it should
https://github.com/square/okhttp/commit/0665b628fafec38271d7a66421ae04c7fd35dd29;Add support for following <iden> 307 temporary redirects.  <enter> Fixes Android bug 41739. ;Add support for following <iden> 307 temporary redirects  ;Fixes Android bug 41739
https://github.com/square/okhttp/commit/28434ce17d1b0bfb7f398d047e825f0f76b6e403;Add wildcard hostnames support in  <file_name>  ;Add wildcard hostnames support in <file_name>;support
https://github.com/square/okhttp/commit/eae6f32101a5be6bf20621b7765791d32cb70f09;Fix correctness of WebSocketReader reserved flags test ;Fix correctness of WebSocketReader reserved flags test;reserved flags
