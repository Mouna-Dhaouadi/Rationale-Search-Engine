;Decision1;Rationale1;URL1;Decision2;Rationale2;URL2;Relationship;Alpha;similarity_rationales
0;Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;https://github.com/torvalds/linux/commit/e4e62d5fd8ecb0ea4174afda654432927d248a8a;re-using the existing option;keeps things simple and it will make it much easier to add DMI quirks which can either disable the LID completely or set another non-default lid_init_state value, both of which are necessary on some devices;https://github.com/torvalds/linux/commit/593681e2c75f59f23cf6f6cefc4f00cae2a4522b;Contradicts;0.8645511865615845;0.3650838136672973
1;Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;https://github.com/torvalds/linux/commit/e4e62d5fd8ecb0ea4174afda654432927d248a8a;"The only solution is to add a DMI based blacklist and ignore the LID device on these tablets.
";There is nothing the ACPI button driver (or the gpio code) can do to fix this.;https://github.com/torvalds/linux/commit/9e811e19a7aca16d40e1ce0c68e9bbffea1b9810;Contradicts;0.9147369265556335;0.2722031474113464
2;Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;https://github.com/torvalds/linux/commit/e4e62d5fd8ecb0ea4174afda654432927d248a8a;it is sufficient to set/unset the wakeup mask bits for them during system sleep transitions;"this means that the reference counting of ""wakeup"" GPEs doesnt really make sense";https://github.com/torvalds/linux/commit/cb1cb1780f2025a7d612de09131bf6530f80fb1a;Contradicts;0.815011739730835;0.3686802089214325
3;Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;https://github.com/torvalds/linux/commit/e4e62d5fd8ecb0ea4174afda654432927d248a8a;Drop no longer necessary Acer SW5-012 lid_init_state quirk;no longer necessary;https://github.com/torvalds/linux/commit/136a4dfe87cd34db2153330aa84dbbc210eb36b6;Contradicts;0.851567804813385;0.3214991092681885
4;Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;https://github.com/torvalds/linux/commit/e4e62d5fd8ecb0ea4174afda654432927d248a8a;"The only solution is to add a DMI based blacklist and ignore the LID device on these tablets.
";There is nothing the ACPI button driver (or the gpio code) can do to fix this.;https://github.com/torvalds/linux/commit/9e811e19a7aca16d40e1ce0c68e9bbffea1b9810;Contradicts;0.8511714339256287;0.334909975528717
5;Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;https://github.com/torvalds/linux/commit/e4e62d5fd8ecb0ea4174afda654432927d248a8a;This patch makes it deprecated;lid_init__state=open is more useful than this mode;https://github.com/torvalds/linux/commit/ecb10b694b72ca5ea51b3c90a71ff2a11963425a;Contradicts;0.9546050429344176;0.5875755548477173
6;Driver core needs no inform from callee(bus driver) about the result of remove callback;increases separation of concerns;https://github.com/torvalds/linux/commit/6c0eb5ba3500f6da367351ff3c4452c029cb72fa;Remove the old GPE type handling entirely  ;Gets rid of various quirks, like the implicit disabling with GPE type setting;https://github.com/torvalds/linux/commit/9630bdd9b15d2f489c646d8bc04b60e53eb5ec78;Contradicts;0.8569427132606506;0.4625479280948639
7;"Remove the "" MD60198"" part from the E2215T quirk";the MD60### part of the model number differs per country/batch while all of the E2215T and E2228T models have this issue;https://github.com/torvalds/linux/commit/7daaa06357bf7f1874b62bb1ea9d66a51d4e567e;This commit adds a quirk for this;as no lid-switch function is better then the interrupt storm;https://github.com/torvalds/linux/commit/90ed9c639c1b53556f87b1c5031c7e4c57285a92;Contradicts;0.8323667645454407;0.423761248588562
8;"Remove the "" MD60198"" part from the E2215T quirk";the MD60### part of the model number differs per country/batch while all of the E2215T and E2228T models have this issue;https://github.com/torvalds/linux/commit/7daaa06357bf7f1874b62bb1ea9d66a51d4e567e;Remove the old GPE type handling entirely  ;Gets rid of various quirks, like the implicit disabling with GPE type setting;https://github.com/torvalds/linux/commit/9630bdd9b15d2f489c646d8bc04b60e53eb5ec78;Contradicts;0.8411511778831482;0.5245858430862427
9;"Commit 78a5b53e9fb4 (""Input: soc_button_array - work around DSDTs which modify the irqflags"") adds a workaround for DSDTs with a _LID method which play tricks with the irqflags";assuming that the OS is using an irq-type of IRQ_TYPE_LEVEL_LOW;https://github.com/torvalds/linux/commit/136a4dfe87cd34db2153330aa84dbbc210eb36b6;"Fixes: 17e5888e4e18 (""x86: Select HARDIRQS_SW_RESEND on x86"")";"(""x86: Select HARDIRQS_SW_RESEND on x86"")";https://github.com/torvalds/linux/commit/2b6022a32e1c6e740a5929951d9d8cbed3b162b1;Contradicts;0.8618293404579163;0.5882037878036499
10;"Commit 78a5b53e9fb4 (""Input: soc_button_array - work around DSDTs which modify the irqflags"") adds a workaround for DSDTs with a _LID method which play tricks with the irqflags";assuming that the OS is using an irq-type of IRQ_TYPE_LEVEL_LOW;https://github.com/torvalds/linux/commit/136a4dfe87cd34db2153330aa84dbbc210eb36b6;"The only solution is to add a DMI based blacklist and ignore the LID device on these tablets.
";There is nothing the ACPI button driver (or the gpio code) can do to fix this.;https://github.com/torvalds/linux/commit/9e811e19a7aca16d40e1ce0c68e9bbffea1b9810;Contradicts;0.8578787446022034;0.3535188436508178
11;"Commit 78a5b53e9fb4 (""Input: soc_button_array - work around DSDTs which modify the irqflags"") adds a workaround for DSDTs with a _LID method which play tricks with the irqflags";assuming that the OS is using an irq-type of IRQ_TYPE_LEVEL_LOW;https://github.com/torvalds/linux/commit/136a4dfe87cd34db2153330aa84dbbc210eb36b6;Remove the old GPE type handling entirely  ;Gets rid of various quirks, like the implicit disabling with GPE type setting;https://github.com/torvalds/linux/commit/9630bdd9b15d2f489c646d8bc04b60e53eb5ec78;Contradicts;0.8366401195526123;0.6626706719398499
12;we no longer need to disable the lid functionality on the Acer SW5-012;Now that this workaround is in place;https://github.com/torvalds/linux/commit/136a4dfe87cd34db2153330aa84dbbc210eb36b6;"The only solution is to add a DMI based blacklist and ignore the LID device on these tablets.
";There is nothing the ACPI button driver (or the gpio code) can do to fix this.;https://github.com/torvalds/linux/commit/9e811e19a7aca16d40e1ce0c68e9bbffea1b9810;Contradicts;0.9657790660858154;0.2024052739143371
13;Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;https://github.com/torvalds/linux/commit/21988a8e51479ceffe7b0568b170effabb708dfe;When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;https://github.com/torvalds/linux/commit/e370cc8640305aa2fa42b852cccd89e80c28d9a0;Contradicts;0.872973620891571;0.5560500621795654
14;Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;https://github.com/torvalds/linux/commit/21988a8e51479ceffe7b0568b170effabb708dfe;this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;https://github.com/torvalds/linux/commit/c2dd420034f24f356b86f90222ef19148b82a5c1;Contradicts;0.8448073267936707;0.4802822768688202
15;Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;https://github.com/torvalds/linux/commit/21988a8e51479ceffe7b0568b170effabb708dfe;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);https://github.com/torvalds/linux/commit/6468463abd7051fcc29f3ee7c931f9bbbb26f5a4;Contradicts;0.844693660736084;0.5042665004730225
16;Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];https://github.com/torvalds/linux/commit/57d2dd4bd18b1378b3bc0b6b2b8b858deb6c2fa7;re-using the existing option;keeps things simple and it will make it much easier to add DMI quirks which can either disable the LID completely or set another non-default lid_init_state value, both of which are necessary on some devices;https://github.com/torvalds/linux/commit/593681e2c75f59f23cf6f6cefc4f00cae2a4522b;Contradicts;0.941566288471222;0.0818921253085136
17;Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];https://github.com/torvalds/linux/commit/57d2dd4bd18b1378b3bc0b6b2b8b858deb6c2fa7;"The only solution is to add a DMI based blacklist and ignore the LID device on these tablets.
";There is nothing the ACPI button driver (or the gpio code) can do to fix this.;https://github.com/torvalds/linux/commit/9e811e19a7aca16d40e1ce0c68e9bbffea1b9810;Contradicts;0.8992103338241577;0.1693098843097686
18;"
The problem here is the accesses to the PBCG and HMCG
";"
these are the pinconf0 registers for the power";https://github.com/torvalds/linux/commit/90ed9c639c1b53556f87b1c5031c7e4c57285a92;it is sufficient to set/unset the wakeup mask bits for them during system sleep transitions;"this means that the reference counting of ""wakeup"" GPEs doesnt really make sense";https://github.com/torvalds/linux/commit/cb1cb1780f2025a7d612de09131bf6530f80fb1a;Contradicts;0.8881378173828125;0.3304371237754822
19;"
The problem here is the accesses to the PBCG and HMCG
";"
these are the pinconf0 registers for the power";https://github.com/torvalds/linux/commit/90ed9c639c1b53556f87b1c5031c7e4c57285a92;Im fairly confident about the coverage of this conversion patch  ;Given the fact that I had only a couple of failures from tests on step 6;https://github.com/torvalds/linux/commit/5a0e3ad6af8660be21ca98a971cd00f331318c05;Contradicts;0.9643394947052002;0.2460852563381195
20;Setting lid_init_state to ACPI_BUTTON_LID_INIT_OPEN on the T200TA  ;fixes the unwanted behavior, adds a DMI based quirk;https://github.com/torvalds/linux/commit/00e250367cc6c4ab80fea6ec605d464e624bd520;Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;https://github.com/torvalds/linux/commit/13e962140be671f31a011543f11477af67a6c33e;Contradicts;0.9343755841255188;0.5504752397537231
21;Setting lid_init_state to ACPI_BUTTON_LID_INIT_OPEN on the T200TA  ;fixes the unwanted behavior, adds a DMI based quirk;https://github.com/torvalds/linux/commit/00e250367cc6c4ab80fea6ec605d464e624bd520;libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;https://github.com/torvalds/linux/commit/878d8db039daac0938238e9a40a5bd6e50ee3c9b;Contradicts;0.8596915602684021;0.6872481107711792
22; the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;https://github.com/torvalds/linux/commit/932e1ba486117de2fcea3df27ad8218ad6c11470;Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;https://github.com/torvalds/linux/commit/13e962140be671f31a011543f11477af67a6c33e;Contradicts;0.9090687036514282;0.4575066268444061
23; the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;https://github.com/torvalds/linux/commit/932e1ba486117de2fcea3df27ad8218ad6c11470;"The only solution is to add a DMI based blacklist and ignore the LID device on these tablets.
";There is nothing the ACPI button driver (or the gpio code) can do to fix this.;https://github.com/torvalds/linux/commit/9e811e19a7aca16d40e1ce0c68e9bbffea1b9810;Contradicts;0.9227952361106871;0.3172403872013092
24;"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;https://github.com/torvalds/linux/commit/593681e2c75f59f23cf6f6cefc4f00cae2a4522b;"The only solution is to add a DMI based blacklist and ignore the LID device on these tablets.
";There is nothing the ACPI button driver (or the gpio code) can do to fix this.;https://github.com/torvalds/linux/commit/9e811e19a7aca16d40e1ce0c68e9bbffea1b9810;Contradicts;0.809007465839386;0.4983609616756439
25;update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;https://github.com/torvalds/linux/commit/13e962140be671f31a011543f11477af67a6c33e;only trigger acpi_pm_wakeup_event() in the acpi_button_notify() path and dont do that in the acpi_lid_initialize_state() path;To avoid the confusion;https://github.com/torvalds/linux/commit/7c058c7c74b3dbeb7d157c273959f87faf710350;Contradicts;0.9652805924415588;0.4969711899757385
26;update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;https://github.com/torvalds/linux/commit/13e962140be671f31a011543f11477af67a6c33e;it should not send the complement switch event for the unreliable initial lid state notification;However this mechanism is not suitable for lid_init_state=open/method;https://github.com/torvalds/linux/commit/dfa46c50f65b6ca10cea389327a6f1f1749bc633;Contradicts;0.8344817161560059;0.5901334881782532
27;update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;https://github.com/torvalds/linux/commit/13e962140be671f31a011543f11477af67a6c33e;this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;https://github.com/torvalds/linux/commit/c2dd420034f24f356b86f90222ef19148b82a5c1;Contradicts;0.9669692516326904;0.3994065523147583
28;update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;https://github.com/torvalds/linux/commit/13e962140be671f31a011543f11477af67a6c33e;Use acpi_devices handle instead of drivers  ;-;https://github.com/torvalds/linux/commit/27b1d3e85b1dfd9037d3fbb98b2e2aacca01da39;Contradicts;0.902649223804474;0.3775092661380768
29;Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;https://github.com/torvalds/linux/commit/13e962140be671f31a011543f11477af67a6c33e;Remove the old GPE type handling entirely  ;Gets rid of various quirks, like the implicit disabling with GPE type setting;https://github.com/torvalds/linux/commit/9630bdd9b15d2f489c646d8bc04b60e53eb5ec78;Contradicts;0.8075802326202393;0.3236753046512604
30;Fix a build warning in the ACPI button driver when CONFIG_PROC_FS is not enabled by marking the unused function as __maybe_unused;not enabled, unused;https://github.com/torvalds/linux/commit/2c4c2a71bd6f75c3982ac09407889b110673ac83;"The only solution is to add a DMI based blacklist and ignore the LID device on these tablets.
";There is nothing the ACPI button driver (or the gpio code) can do to fix this.;https://github.com/torvalds/linux/commit/9e811e19a7aca16d40e1ce0c68e9bbffea1b9810;Contradicts;0.9645082354545592;0.5512829422950745
31;Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;https://github.com/torvalds/linux/commit/3f3942aca6da351a12543aa776467791b63b3a78;Remove the old GPE type handling entirely  ;Gets rid of various quirks, like the implicit disabling with GPE type setting;https://github.com/torvalds/linux/commit/9630bdd9b15d2f489c646d8bc04b60e53eb5ec78;Contradicts;0.8896327614784241;0.6685274839401245
32;"The only solution is to add a DMI based blacklist and ignore the LID device on these tablets.
";There is nothing the ACPI button driver (or the gpio code) can do to fix this.;https://github.com/torvalds/linux/commit/9e811e19a7aca16d40e1ce0c68e9bbffea1b9810;This patch adds a mechanism to insert lid events as a compensation for the platform triggered ones to form a complete event switches  ;in order to make sure that the platform triggered events can always be reliably delivered to the userspace;https://github.com/torvalds/linux/commit/dfa46c50f65b6ca10cea389327a6f1f1749bc633;Contradicts;0.9552225470542908;0.3034797012805938
33;"The only solution is to add a DMI based blacklist and ignore the LID device on these tablets.
";There is nothing the ACPI button driver (or the gpio code) can do to fix this.;https://github.com/torvalds/linux/commit/9e811e19a7aca16d40e1ce0c68e9bbffea1b9810;it is sufficient to set/unset the wakeup mask bits for them during system sleep transitions;"this means that the reference counting of ""wakeup"" GPEs doesnt really make sense";https://github.com/torvalds/linux/commit/cb1cb1780f2025a7d612de09131bf6530f80fb1a;Contradicts;0.922550618648529;0.5053271055221558
34;"The only solution is to add a DMI based blacklist and ignore the LID device on these tablets.
";There is nothing the ACPI button driver (or the gpio code) can do to fix this.;https://github.com/torvalds/linux/commit/9e811e19a7aca16d40e1ce0c68e9bbffea1b9810;Im fairly confident about the coverage of this conversion patch  ;Given the fact that I had only a couple of failures from tests on step 6;https://github.com/torvalds/linux/commit/5a0e3ad6af8660be21ca98a971cd00f331318c05;Contradicts;0.930466651916504;0.371175467967987
35;adds an acpi_handle_debug call  ;to help debugging this;https://github.com/torvalds/linux/commit/ae35d656d796fa203787455ce59874c6682dc0cf;This patch makes it deprecated;lid_init__state=open is more useful than this mode;https://github.com/torvalds/linux/commit/ecb10b694b72ca5ea51b3c90a71ff2a11963425a;Contradicts;0.886807918548584;0.4557927548885345
36;It breaks docking stations basically;there is no way to have a user-space hwdb to fix that;https://github.com/torvalds/linux/commit/878d8db039daac0938238e9a40a5bd6e50ee3c9b;it is sufficient to set/unset the wakeup mask bits for them during system sleep transitions;"this means that the reference counting of ""wakeup"" GPEs doesnt really make sense";https://github.com/torvalds/linux/commit/cb1cb1780f2025a7d612de09131bf6530f80fb1a;Contradicts;0.8459145426750183;0.5604110956192017
37;It breaks docking stations basically;there is no way to have a user-space hwdb to fix that;https://github.com/torvalds/linux/commit/878d8db039daac0938238e9a40a5bd6e50ee3c9b;failures were fixed;Build tests were done on the following configurations;https://github.com/torvalds/linux/commit/5a0e3ad6af8660be21ca98a971cd00f331318c05;Contradicts;0.8032366037368774;0.307424396276474
38;It breaks docking stations basically;there is no way to have a user-space hwdb to fix that;https://github.com/torvalds/linux/commit/878d8db039daac0938238e9a40a5bd6e50ee3c9b;We no longer need a pointer from struct acpi_button back to the struct acpi_device;no longer need;https://github.com/torvalds/linux/commit/106c19e7b978e1b84ea5cabbd470a0ddced577c8;Contradicts;0.8519871830940247;0.6529994606971741
39;libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;https://github.com/torvalds/linux/commit/878d8db039daac0938238e9a40a5bd6e50ee3c9b;This patch makes it deprecated;lid_init__state=open is more useful than this mode;https://github.com/torvalds/linux/commit/ecb10b694b72ca5ea51b3c90a71ff2a11963425a;Contradicts;0.9260413646697998;0.475563108921051
40;libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;https://github.com/torvalds/linux/commit/878d8db039daac0938238e9a40a5bd6e50ee3c9b;add #ifdefs to prevent them from being built in that case  ;several suspend/resume functions in ACPI drivers are not used for CONFIG_PM_SLEEP unset;https://github.com/torvalds/linux/commit/9069240480e24a2d6ce23404c9ad6cabf59b7258;Contradicts;0.830618143081665;0.3920445740222931
41;This patch adds a mechanism to insert lid events as a compensation for the platform triggered ones to form a complete event switches  ;in order to make sure that the platform triggered events can always be reliably delivered to the userspace;https://github.com/torvalds/linux/commit/dfa46c50f65b6ca10cea389327a6f1f1749bc633;it should not send the complement switch event for the unreliable initial lid state notification;However this mechanism is not suitable for lid_init_state=open/method;https://github.com/torvalds/linux/commit/dfa46c50f65b6ca10cea389327a6f1f1749bc633;Contradicts;0.8293910026550293;0.223578006029129
42;This patch adds a mechanism to insert lid events as a compensation for the platform triggered ones to form a complete event switches  ;in order to make sure that the platform triggered events can always be reliably delivered to the userspace;https://github.com/torvalds/linux/commit/dfa46c50f65b6ca10cea389327a6f1f1749bc633;When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;https://github.com/torvalds/linux/commit/e370cc8640305aa2fa42b852cccd89e80c28d9a0;Contradicts;0.8720148205757141;0.2649532556533813
43;This patch adds a mechanism to insert lid events as a compensation for the platform triggered ones to form a complete event switches  ;in order to make sure that the platform triggered events can always be reliably delivered to the userspace;https://github.com/torvalds/linux/commit/dfa46c50f65b6ca10cea389327a6f1f1749bc633;removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;https://github.com/torvalds/linux/commit/0bf6368ee8f25826d0645c0f7a4f17c8845356a4;Contradicts;0.8385393619537354;0.2469784319400787
44;This patch adds a mechanism to insert lid events as a compensation for the platform triggered ones to form a complete event switches  ;in order to make sure that the platform triggered events can always be reliably delivered to the userspace;https://github.com/torvalds/linux/commit/dfa46c50f65b6ca10cea389327a6f1f1749bc633;Remove the old GPE type handling entirely  ;Gets rid of various quirks, like the implicit disabling with GPE type setting;https://github.com/torvalds/linux/commit/9630bdd9b15d2f489c646d8bc04b60e53eb5ec78;Contradicts;0.8162992000579834;0.299862802028656
45;This patch adds a mechanism to insert lid events as a compensation for the platform triggered ones to form a complete event switches  ;in order to make sure that the platform triggered events can always be reliably delivered to the userspace;https://github.com/torvalds/linux/commit/dfa46c50f65b6ca10cea389327a6f1f1749bc633;Remove button->device pointer;button;https://github.com/torvalds/linux/commit/106c19e7b978e1b84ea5cabbd470a0ddced577c8;Contradicts;0.8892360925674438;0.347475916147232
46;This patch adds a mechanism to insert lid events as a compensation for the platform triggered ones to form a complete event switches  ;in order to make sure that the platform triggered events can always be reliably delivered to the userspace;https://github.com/torvalds/linux/commit/dfa46c50f65b6ca10cea389327a6f1f1749bc633;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;https://github.com/torvalds/linux/commit/14e04fb34ffa82ee61ae69f98d8fca12d2e8e31c;Contradicts;0.8817843198776245;0.282615453004837
47;When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;https://github.com/torvalds/linux/commit/e370cc8640305aa2fa42b852cccd89e80c28d9a0;Remove the old GPE type handling entirely  ;Gets rid of various quirks, like the implicit disabling with GPE type setting;https://github.com/torvalds/linux/commit/9630bdd9b15d2f489c646d8bc04b60e53eb5ec78;Contradicts;0.8243234157562256;0.5572176575660706
48;"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;https://github.com/torvalds/linux/commit/e71eeb2a6bcc6282b95215eb353a3ac9ce3e0de3;Remove the old GPE type handling entirely  ;Gets rid of various quirks, like the implicit disabling with GPE type setting;https://github.com/torvalds/linux/commit/9630bdd9b15d2f489c646d8bc04b60e53eb5ec78;Contradicts;0.8611810803413391;0.6335421800613403
49;Add ACPI Button event via netlink routine;-;https://github.com/torvalds/linux/commit/0bf6368ee8f25826d0645c0f7a4f17c8845356a4;removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;https://github.com/torvalds/linux/commit/0bf6368ee8f25826d0645c0f7a4f17c8845356a4;Contradicts;0.9874193072319032;0.4598496258258819
50;Add ACPI Button event via netlink routine;-;https://github.com/torvalds/linux/commit/0bf6368ee8f25826d0645c0f7a4f17c8845356a4;Remove button->device pointer;button;https://github.com/torvalds/linux/commit/106c19e7b978e1b84ea5cabbd470a0ddced577c8;Contradicts;0.9239407777786256;0.790786862373352
51;removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;https://github.com/torvalds/linux/commit/0bf6368ee8f25826d0645c0f7a4f17c8845356a4;Remove the old GPE type handling entirely  ;Gets rid of various quirks, like the implicit disabling with GPE type setting;https://github.com/torvalds/linux/commit/9630bdd9b15d2f489c646d8bc04b60e53eb5ec78;Contradicts;0.8578506112098694;0.6366584300994873
52;add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;https://github.com/torvalds/linux/commit/0bf6368ee8f25826d0645c0f7a4f17c8845356a4;Remove button->device pointer;button;https://github.com/torvalds/linux/commit/106c19e7b978e1b84ea5cabbd470a0ddced577c8;Contradicts;0.8712674975395203;0.4736993014812469
53;Fix enabling button GPEs twice;Fix;https://github.com/torvalds/linux/commit/8eaa29f92a66c92ade1ad663d14d975d776ef492;Remove the old GPE type handling entirely  ;Gets rid of various quirks, like the implicit disabling with GPE type setting;https://github.com/torvalds/linux/commit/9630bdd9b15d2f489c646d8bc04b60e53eb5ec78;Contradicts;0.8709266781806946;0.5397182703018188
54;Button GPEs have been enabled in the acpi_wake_device_init() during boot;the button driver enables them for the second time;https://github.com/torvalds/linux/commit/8eaa29f92a66c92ade1ad663d14d975d776ef492;Remove the old GPE type handling entirely  ;Gets rid of various quirks, like the implicit disabling with GPE type setting;https://github.com/torvalds/linux/commit/9630bdd9b15d2f489c646d8bc04b60e53eb5ec78;Contradicts;0.8994452953338623;0.4350598156452179
55;"The second argument of ACPI driver .remove() operation is only used by the ACPI processor driver
";the value passed to that driver through it is always available from the given struct acpi_device objects removal_type field;https://github.com/torvalds/linux/commit/51fac8388a0325a43f0ae67453ece2c373e2ec28;Use acpi_devices handle instead of drivers  ;-;https://github.com/torvalds/linux/commit/27b1d3e85b1dfd9037d3fbb98b2e2aacca01da39;Contradicts;0.8106938004493713;0.3027127087116241
56;Avoid disabling wakeup unnecessarily on remove;-;https://github.com/torvalds/linux/commit/c19f9a84ec807da57fd75bbd9a3f2b8269611f79;Remove the old GPE type handling entirely  ;Gets rid of various quirks, like the implicit disabling with GPE type setting;https://github.com/torvalds/linux/commit/9630bdd9b15d2f489c646d8bc04b60e53eb5ec78;Contradicts;0.8012880682945251;0.4685078859329223
57;Use device wakeup flags for handling ACPI wakeup devices;for handling ACPI wakeup devices;https://github.com/torvalds/linux/commit/f2b56bc808addb908a5bf435d9b942c02af9a7c4;use standard device wakeup flags instead of the special ACPI flags for handling those devices;address this problem;https://github.com/torvalds/linux/commit/f2b56bc808addb908a5bf435d9b942c02af9a7c4;Contradicts;0.9453654885292052;0.5590667128562927
58;use standard device wakeup flags instead of the special ACPI flags for handling those devices;address this problem;https://github.com/torvalds/linux/commit/f2b56bc808addb908a5bf435d9b942c02af9a7c4;Use acpi_devices handle instead of drivers  ;-;https://github.com/torvalds/linux/commit/27b1d3e85b1dfd9037d3fbb98b2e2aacca01da39;Contradicts;0.8795613646507263;0.7650917172431946
59;Use GPE reference counting to support shared GPEs  ;the wakeup enable mask bits of GPEs are set as soon as the GPEs are enabled to wake up the system;https://github.com/torvalds/linux/commit/cb1cb1780f2025a7d612de09131bf6530f80fb1a;Remove the old GPE type handling entirely  ;Gets rid of various quirks, like the implicit disabling with GPE type setting;https://github.com/torvalds/linux/commit/9630bdd9b15d2f489c646d8bc04b60e53eb5ec78;Contradicts;0.9210445880889891;0.3026514649391174
60;it is sufficient to set/unset the wakeup mask bits for them during system sleep transitions;"this means that the reference counting of ""wakeup"" GPEs doesnt really make sense";https://github.com/torvalds/linux/commit/cb1cb1780f2025a7d612de09131bf6530f80fb1a;Remove the old GPE type handling entirely  ;Gets rid of various quirks, like the implicit disabling with GPE type setting;https://github.com/torvalds/linux/commit/9630bdd9b15d2f489c646d8bc04b60e53eb5ec78;Contradicts;0.930239200592041;0.6579524278640747
61;Prepare for this change by updating users of gfp and slab facilities;include those headers directly instead of assuming availability;https://github.com/torvalds/linux/commit/5a0e3ad6af8660be21ca98a971cd00f331318c05;Better to oops and learn about a bug;than to silently cover it up;https://github.com/torvalds/linux/commit/e2fb9754d27513918a4936e8cbaad50ff56cfd3d;Contradicts;0.8031954765319824;0.6415814161300659
62;Introduce a reference counter for run-wake devices and a function that will initialize all of the run-time wake-up fields for given device.;-;https://github.com/torvalds/linux/commit/f517709d65beed95f52f021b43e3035b52ef791a;Remove the old GPE type handling entirely  ;Gets rid of various quirks, like the implicit disabling with GPE type setting;https://github.com/torvalds/linux/commit/9630bdd9b15d2f489c646d8bc04b60e53eb5ec78;Contradicts;0.8221305012702942;0.4685078859329223
63;Introduce a reference counter for run-wake devices and a function that will initialize all of the run-time wake-up fields for given device.;-;https://github.com/torvalds/linux/commit/f517709d65beed95f52f021b43e3035b52ef791a;Remove button->device pointer;button;https://github.com/torvalds/linux/commit/106c19e7b978e1b84ea5cabbd470a0ddced577c8;Contradicts;0.8266857266426086;0.790786862373352
64;Introduce a reference counter for run-wake devices and a function that will initialize all of the run-time wake-up fields for given device.;-;https://github.com/torvalds/linux/commit/f517709d65beed95f52f021b43e3035b52ef791a;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);https://github.com/torvalds/linux/commit/6468463abd7051fcc29f3ee7c931f9bbbb26f5a4;Contradicts;0.8760104775428772;0.5748636722564697
65;Add an API to allow devices to indicate whether or not they want their devices GPE to be enabled for both runtime and wakeup events;to allow devices to indicate whether or not they want their devices GPE to be enabled;https://github.com/torvalds/linux/commit/9630bdd9b15d2f489c646d8bc04b60e53eb5ec78;Remove the old GPE type handling entirely  ;Gets rid of various quirks, like the implicit disabling with GPE type setting;https://github.com/torvalds/linux/commit/9630bdd9b15d2f489c646d8bc04b60e53eb5ec78;Contradicts;0.8899784088134766;0.4500379562377929
66;This patch adds temporaries to cache the acpi_device_hid(), acpi_device_name(), and acpi_device_class() pointers;so we dont have to clutter the code with so many uses of those interfaces;https://github.com/torvalds/linux/commit/bf04a77227db76f163bc2355ef4e176794987be2;"rmmoded directories will be empty and return ""."" and "".."" -- no harm";no harm;https://github.com/torvalds/linux/commit/99b76233803beab302123d243eea9e41149804f3;Contradicts;0.8349640369415283;0.4895134568214416
67;Setting ->owner as done currently (pde->owner = THIS_MODULE) is racy;as correctly noted at bug #12454;https://github.com/torvalds/linux/commit/99b76233803beab302123d243eea9e41149804f3;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);https://github.com/torvalds/linux/commit/6468463abd7051fcc29f3ee7c931f9bbbb26f5a4;Contradicts;0.8064483404159546;0.5274195671081543
68;Move all the component definitions for drivers to a single shared place, include/acpi/acpi_drivers.h  ;to have a single shared place;https://github.com/torvalds/linux/commit/89595b8f2850a080d290bf778ec933ea1d99f78e;Use acpi_devices handle instead of drivers  ;-;https://github.com/torvalds/linux/commit/27b1d3e85b1dfd9037d3fbb98b2e2aacca01da39;Contradicts;0.8271269202232361;0.6452577710151672
69;Use proc_create()/proc_create_data() to make sure that ->proc_fops and ->data be setup;before gluing PDE to main tree;https://github.com/torvalds/linux/commit/cf7acfab032ff262f42954328cdfd20a5d9aaaac;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);https://github.com/torvalds/linux/commit/6468463abd7051fcc29f3ee7c931f9bbbb26f5a4;Contradicts;0.843336820602417;0.5376063585281372
70;Add correct ->owner to proc_fops to fix reading/module unloading race  ;fix reading/module unloading race;https://github.com/torvalds/linux/commit/cf7acfab032ff262f42954328cdfd20a5d9aaaac;Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;https://github.com/torvalds/linux/commit/14e04fb34ffa82ee61ae69f98d8fca12d2e8e31c;Contradicts;0.8556905388832092;0.4188296794891357
71;Add correct ->owner to proc_fops to fix reading/module unloading race  ;fix reading/module unloading race;https://github.com/torvalds/linux/commit/cf7acfab032ff262f42954328cdfd20a5d9aaaac;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);https://github.com/torvalds/linux/commit/6468463abd7051fcc29f3ee7c931f9bbbb26f5a4;Contradicts;0.8102622628211975;0.5148836970329285
