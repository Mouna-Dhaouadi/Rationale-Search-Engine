;Decision1;Rationale1;URL1;Decision2;Rationale2;URL2;Relationship;Alpha;similarity_rationales;contradiction_rationales
0;__alloc_size attribute was added to allocators;In the effort to help the compiler reason about buffer sizes;https://github.com/torvalds/linux/commit/05a940656e1eb2026d9ee31019d5b47e9545124d;Introduce kmalloc_size_roundup();"serve this function so we can start replacing the ""anticipatory resizing"" uses of ksize()";https://github.com/torvalds/linux/commit/05a940656e1eb2026d9ee31019d5b47e9545124d;Similar;0.8149130344390869;0.5648862719535828;
1;Introduce kmalloc_size_roundup();"serve this function so we can start replacing the ""anticipatory resizing"" uses of ksize()";https://github.com/torvalds/linux/commit/05a940656e1eb2026d9ee31019d5b47e9545124d;Add the function `__kmalloc_track_caller()`  ;This breaks Pekkas slab/next tree;https://github.com/torvalds/linux/commit/82bd5508b4080e851ac1a9b62bed6d727b1b4a84;Similar;0.8136509656906128;0.4753948748111725;
2;Introduce kmalloc_size_roundup();"serve this function so we can start replacing the ""anticipatory resizing"" uses of ksize()";https://github.com/torvalds/linux/commit/05a940656e1eb2026d9ee31019d5b47e9545124d;Introduce krealloc();reallocates memory while keeping the contents unchanged;https://github.com/torvalds/linux/commit/fd76bab2fa6d8f3ef6b326a4c6ae442fa21d30a4;Similar;0.813710629940033;0.4669268727302551;
3;Remove export symbol and move declaration to mm/slab.h  ;we dont want to grow its callers;https://github.com/torvalds/linux/commit/8dfa9d554061873f96335730fb1d403698b2b1b4;Remove kmemtrace ftrace plugin;tracing;https://github.com/torvalds/linux/commit/039ca4e74a1cf60bd7487324a564ecf5c981f254;Similar;0.8384854793548584;0.4034021198749542;
4;Remove export symbol and move declaration to mm/slab.h  ;we dont want to grow its callers;https://github.com/torvalds/linux/commit/8dfa9d554061873f96335730fb1d403698b2b1b4;Remove obsolete SLAB_MUST_HWCACHE_ALIGN;obsolete;https://github.com/torvalds/linux/commit/5af60839909b8e3b28ca7cd7912fa0b23475617f;Similar;0.8083182573318481;0.6438542604446411;
5;Make kmalloc_track_caller() wrapper of kmalloc_node_track_caller();-;https://github.com/torvalds/linux/commit/c45248db04f8e3aca4798d67a394fb9cc2168118;Add the function `__kmalloc_track_caller()`  ;This breaks Pekkas slab/next tree;https://github.com/torvalds/linux/commit/82bd5508b4080e851ac1a9b62bed6d727b1b4a84;Similar;0.9312577247619628;0.3261217474937439;
6;Remove CONFIG_NUMA ifdefs for common kmalloc functions;Now that slab_alloc_node() is available for SLAB when CONFIG_NUMA=n;https://github.com/torvalds/linux/commit/f78a03f6e28be0283f73d3c18b54837b638a8ccf;Remove kmemtrace ftrace plugin;tracing;https://github.com/torvalds/linux/commit/039ca4e74a1cf60bd7487324a564ecf5c981f254;Similar;0.8214273452758789;0.440896987915039;
7;Introduce kmem_cache_alloc_lru to allocate objects and its list_lru;to allocate objects;https://github.com/torvalds/linux/commit/88f2ef73fd66491a2f9a82373d22ca6540f23c62;Add a return parameter to slob_page_alloc();to signal that the list was modified;https://github.com/torvalds/linux/commit/130e8e09e2675bbc484581825fe29e2e5a6b8b0a;Similar;0.8133531808853149;0.6538981795310974;
8;Introduce kmem_cache_alloc_lru to allocate objects and its list_lru;to allocate objects;https://github.com/torvalds/linux/commit/88f2ef73fd66491a2f9a82373d22ca6540f23c62;Add a return parameter to slob_page_alloc()  ;to signal that the allocation used up the whole page and that the page was removed from the free list;https://github.com/torvalds/linux/commit/130e8e09e2675bbc484581825fe29e2e5a6b8b0a;Similar;0.8133531808853149;0.2297077775001526;
9;Introduce kmem_cache_alloc_lru to allocate objects and its list_lru;to allocate objects;https://github.com/torvalds/linux/commit/88f2ef73fd66491a2f9a82373d22ca6540f23c62;Add the function `__kmalloc_track_caller()`  ;This breaks Pekkas slab/next tree;https://github.com/torvalds/linux/commit/82bd5508b4080e851ac1a9b62bed6d727b1b4a84;Similar;0.8084738254547119;0.2747687995433807;
10;Remove unnecessary page_mapcount_reset() function call;unnecessary;https://github.com/torvalds/linux/commit/b01af5c0b0414f96e6c3891e704d1c40faa18813;Remove the unnecessary NULL pointer check;unnecessary;https://github.com/torvalds/linux/commit/9f88faee3ff7d6e8b09c9d23b7d4ac0c15a3eae9;Similar;0.8394695520401001;1.0;
11;Remove unnecessary page_mapcount_reset() function call;unnecessary;https://github.com/torvalds/linux/commit/b01af5c0b0414f96e6c3891e704d1c40faa18813;rename reset_page_mapcount() to page_mapcount_reset();it looked jarring to have them beside each other;https://github.com/torvalds/linux/commit/22b751c3d0376e86a377e3a0aa2ddbbe9d2eefc1;Similar;0.8120056390762329;0.5877834558486938;
12;Remove unnecessary page_mapcount_reset() function call;unnecessary;https://github.com/torvalds/linux/commit/b01af5c0b0414f96e6c3891e704d1c40faa18813;fix RCU-callback-after-kmem_cache_destroy problem in sl[aou]b  ;to address the issue;https://github.com/torvalds/linux/commit/7ed9f7e5db58c6e8c2b4b738a75d5dcd8e17aad5;Similar;0.8113442659378052;0.599732518196106;
13;Remove unnecessary page_mapcount_reset() function call;unnecessary;https://github.com/torvalds/linux/commit/b01af5c0b0414f96e6c3891e704d1c40faa18813;Remove obsolete SLAB_MUST_HWCACHE_ALIGN;obsolete;https://github.com/torvalds/linux/commit/5af60839909b8e3b28ca7cd7912fa0b23475617f;Similar;0.8182327747344971;0.915457248687744;
14;use struct folio instead of struct page;Where non-slab page can appear;https://github.com/torvalds/linux/commit/50757018b4c9b02dbf7fcc0514e0fc45b8689c62;By using the slab type instead of the page type  ;we make it obvious that this can only be called for slabs;https://github.com/torvalds/linux/commit/7213230af5e1e83ff010b3448260b9d3f95dd036;Similar;0.8281378746032715;0.4968287944793701;
15;dont introduce wrappers for PageSlobFree in mm/slab.h;"just for the single callers being wrappers in mm/slob.c

Decision: fix NULL pointer deference";https://github.com/torvalds/linux/commit/50757018b4c9b02dbf7fcc0514e0fc45b8689c62;Dont build mm_dump_obj() on CONFIG_PRINTK=n kernels;CONFIG_PRINTK=n;https://github.com/torvalds/linux/commit/5bb1bb353cfe343fc3c84faf06f72ba309fde541;Similar;0.8277384042739868;0.4687477052211761;
16;By using the slab type instead of the page type  ;we make it obvious that this can only be called for slabs;https://github.com/torvalds/linux/commit/7213230af5e1e83ff010b3448260b9d3f95dd036;Use slab_list list_head instead of the lru list_head for maintaining lists of slabs  ;maintain;https://github.com/torvalds/linux/commit/adab7b68189d14504e9f690ee7eb7e98af68301b;Similar;0.8131656646728516;0.5163740515708923;
17;mem_dump_obj() messages will be suppressed;kernels built with CONFIG_PRINTK=n;https://github.com/torvalds/linux/commit/5bb1bb353cfe343fc3c84faf06f72ba309fde541;CONFIG_SLUB_DEBUG or CONFIG_SLOB, and blocks stop being aligned  ;blocks stop being aligned;https://github.com/torvalds/linux/commit/59bb47985c1db229ccff8c5deebecd54fc77d2a9;Similar;0.8202522993087769;0.371492326259613;
18;mem_dump_obj() messages will be suppressed;kernels built with CONFIG_PRINTK=n;https://github.com/torvalds/linux/commit/5bb1bb353cfe343fc3c84faf06f72ba309fde541;reduce list scanning;slob;https://github.com/torvalds/linux/commit/d6269543ef24aa012aa228c27af3adb074f7b36b;Similar;0.8099866509437561;0.4032654166221618;
19;This patch adds the slab name to trace_kmem_cache_free();to trace_kmem_cache_free;https://github.com/torvalds/linux/commit/3544de8ee6e4817278b15fe08658de49abf58954;fix lockup in slob_free()  ;lockup;https://github.com/torvalds/linux/commit/6fb8f424393025674fde7869b59f485d1e352182;Similar;0.801626980304718;0.4862172305583954;
20;Add mem_dump_obj() to print source of memory block;to print source of memory block;https://github.com/torvalds/linux/commit/8e7f37f2aaa56b723a24f6872817cf9c6410b613;Add a return parameter to slob_page_alloc();to signal that the list was modified;https://github.com/torvalds/linux/commit/130e8e09e2675bbc484581825fe29e2e5a6b8b0a;Similar;0.8057849407196045;0.6530901789665222;
21;Add mem_dump_obj() to print source of memory block;to print source of memory block;https://github.com/torvalds/linux/commit/8e7f37f2aaa56b723a24f6872817cf9c6410b613;Add a return parameter to slob_page_alloc()  ;to signal that the allocation used up the whole page and that the page was removed from the free list;https://github.com/torvalds/linux/commit/130e8e09e2675bbc484581825fe29e2e5a6b8b0a;Similar;0.8057849407196045;0.3818187713623047;
22;Add mem_dump_obj() to print source of memory block;to print source of memory block;https://github.com/torvalds/linux/commit/8e7f37f2aaa56b723a24f6872817cf9c6410b613;rename reset_page_mapcount() to page_mapcount_reset();it looked jarring to have them beside each other;https://github.com/torvalds/linux/commit/22b751c3d0376e86a377e3a0aa2ddbbe9d2eefc1;Similar;0.8035950660705566;0.3812965750694275;
23;Updates gfpflags_allow_blocking();Theres a ton of callers all over the place for that already.;https://github.com/torvalds/linux/commit/95d6c701f4ca7c44dc148d664f604541266a2333;Add a return parameter to slob_page_alloc();to signal that the list was modified;https://github.com/torvalds/linux/commit/130e8e09e2675bbc484581825fe29e2e5a6b8b0a;Similar;0.80347740650177;0.3385640382766723;
24;Updates gfpflags_allow_blocking();Theres a ton of callers all over the place for that already.;https://github.com/torvalds/linux/commit/95d6c701f4ca7c44dc148d664f604541266a2333;Add a return parameter to slob_page_alloc()  ;to signal that the allocation used up the whole page and that the page was removed from the free list;https://github.com/torvalds/linux/commit/130e8e09e2675bbc484581825fe29e2e5a6b8b0a;Similar;0.80347740650177;0.4081417322158813;
25;Updates gfpflags_allow_blocking();Theres a ton of callers all over the place for that already.;https://github.com/torvalds/linux/commit/95d6c701f4ca7c44dc148d664f604541266a2333;Fix gfp flags passed to lockdep;lockdep;https://github.com/torvalds/linux/commit/bd50cfa89153a67429935a15e577a5eb5f10dd1b;Similar;0.805382490158081;0.3256775736808777;
26;CONFIG_SLUB_DEBUG or CONFIG_SLOB, and blocks stop being aligned  ;blocks stop being aligned;https://github.com/torvalds/linux/commit/59bb47985c1db229ccff8c5deebecd54fc77d2a9;slab_mutex for kmem_cache_shrink is removed;after its applied, there is no need in taking the slab_mutex;https://github.com/torvalds/linux/commit/03afc0e25f7fc03537014a770f4c54ebbe63a24c;Similar;0.8389064073562622;0.7001917362213135;
27;CONFIG_SLUB_DEBUG or CONFIG_SLOB, and blocks stop being aligned  ;blocks stop being aligned;https://github.com/torvalds/linux/commit/59bb47985c1db229ccff8c5deebecd54fc77d2a9;can be done in __kmem_cache_shutdown;What is done there;https://github.com/torvalds/linux/commit/12c3667fb780e20360ad0bde32dfb3591ef609ad;Similar;0.8336160182952881;0.6372968554496765;
28;CONFIG_SLUB_DEBUG or CONFIG_SLOB, and blocks stop being aligned  ;blocks stop being aligned;https://github.com/torvalds/linux/commit/59bb47985c1db229ccff8c5deebecd54fc77d2a9;Remove kmemtrace ftrace plugin;tracing;https://github.com/torvalds/linux/commit/039ca4e74a1cf60bd7487324a564ecf5c981f254;Similar;0.8030635118484497;0.6231599450111389;
29;Add a return parameter to slob_page_alloc();to signal that the list was modified;https://github.com/torvalds/linux/commit/130e8e09e2675bbc484581825fe29e2e5a6b8b0a;Add a return parameter to slob_page_alloc()  ;to signal that the allocation used up the whole page and that the page was removed from the free list;https://github.com/torvalds/linux/commit/130e8e09e2675bbc484581825fe29e2e5a6b8b0a;Similar;1.000000238418579;0.4189118146896362;
30;Add a return parameter to slob_page_alloc();to signal that the list was modified;https://github.com/torvalds/linux/commit/130e8e09e2675bbc484581825fe29e2e5a6b8b0a;rename reset_page_mapcount() to page_mapcount_reset();it looked jarring to have them beside each other;https://github.com/torvalds/linux/commit/22b751c3d0376e86a377e3a0aa2ddbbe9d2eefc1;Similar;0.8003391027450562;0.5968138575553894;
31;Add a return parameter to slob_page_alloc();to signal that the list was modified;https://github.com/torvalds/linux/commit/130e8e09e2675bbc484581825fe29e2e5a6b8b0a;Add the function `__kmalloc_track_caller()`  ;This breaks Pekkas slab/next tree;https://github.com/torvalds/linux/commit/82bd5508b4080e851ac1a9b62bed6d727b1b4a84;Similar;0.8592509031295776;0.4655742645263672;
32;Add a return parameter to slob_page_alloc();to signal that the list was modified;https://github.com/torvalds/linux/commit/130e8e09e2675bbc484581825fe29e2e5a6b8b0a;The bit should be passed to trace_kmalloc_node()  ;as well;https://github.com/torvalds/linux/commit/8df275af8db8220d7e3f1bf97b6ac7aad05f96f0;Similar;0.8490380048751831;0.5860772132873535;
33;Add a return parameter to slob_page_alloc()  ;to signal that the allocation used up the whole page and that the page was removed from the free list;https://github.com/torvalds/linux/commit/130e8e09e2675bbc484581825fe29e2e5a6b8b0a;rename reset_page_mapcount() to page_mapcount_reset();it looked jarring to have them beside each other;https://github.com/torvalds/linux/commit/22b751c3d0376e86a377e3a0aa2ddbbe9d2eefc1;Similar;0.8003391027450562;0.2855081856250763;
34;Add a return parameter to slob_page_alloc()  ;to signal that the allocation used up the whole page and that the page was removed from the free list;https://github.com/torvalds/linux/commit/130e8e09e2675bbc484581825fe29e2e5a6b8b0a;Add the function `__kmalloc_track_caller()`  ;This breaks Pekkas slab/next tree;https://github.com/torvalds/linux/commit/82bd5508b4080e851ac1a9b62bed6d727b1b4a84;Similar;0.8592509031295776;0.5051929950714111;
35;Add a return parameter to slob_page_alloc()  ;to signal that the allocation used up the whole page and that the page was removed from the free list;https://github.com/torvalds/linux/commit/130e8e09e2675bbc484581825fe29e2e5a6b8b0a;The bit should be passed to trace_kmalloc_node()  ;as well;https://github.com/torvalds/linux/commit/8df275af8db8220d7e3f1bf97b6ac7aad05f96f0;Similar;0.8490380048751831;0.1299475282430648;
36;remove an unnecessary check for __GFP_ZERO;unnecessary;https://github.com/torvalds/linux/commit/9f88faee3ff7d6e8b09c9d23b7d4ac0c15a3eae9;Remove the unnecessary NULL pointer check;unnecessary;https://github.com/torvalds/linux/commit/9f88faee3ff7d6e8b09c9d23b7d4ac0c15a3eae9;Similar;0.8974013328552246;1.0;
37;remove an unnecessary check for __GFP_ZERO;unnecessary;https://github.com/torvalds/linux/commit/9f88faee3ff7d6e8b09c9d23b7d4ac0c15a3eae9;remove useless ctor parameter and reorder parameters;useless;https://github.com/torvalds/linux/commit/4ba9b9d0ba0a49d91fa6417c7510ee36f48cf957;Similar;0.8305707573890686;0.9355728030204772;
38;remove an unnecessary check for __GFP_ZERO;unnecessary;https://github.com/torvalds/linux/commit/9f88faee3ff7d6e8b09c9d23b7d4ac0c15a3eae9;reduce list scanning;slob;https://github.com/torvalds/linux/commit/d6269543ef24aa012aa228c27af3adb074f7b36b;Similar;0.823667049407959;0.8151568174362183;
39;remove an unnecessary check for __GFP_ZERO;unnecessary;https://github.com/torvalds/linux/commit/9f88faee3ff7d6e8b09c9d23b7d4ac0c15a3eae9;Cleanup zeroing allocations;Slab allocators;https://github.com/torvalds/linux/commit/81cda6626178cd55297831296ba8ecedbfd8b52d;Similar;0.8183853626251221;0.4357461631298065;
40;Remove the unnecessary NULL pointer check;unnecessary;https://github.com/torvalds/linux/commit/9f88faee3ff7d6e8b09c9d23b7d4ac0c15a3eae9;remove useless ctor parameter and reorder parameters;useless;https://github.com/torvalds/linux/commit/4ba9b9d0ba0a49d91fa6417c7510ee36f48cf957;Similar;0.8053261041641235;0.9355728030204772;
41;Thomas wrote a script to parse the csv files and add the proper SPDX tag to the file  ;in the format that the file expected;https://github.com/torvalds/linux/commit/b24413180f5600bcb3bb70fbed5cf186b60864bd;Greg ran the script using the .csv files to generate the patches;to detect more types of files automatically and to distinguish between header and source .c files;https://github.com/torvalds/linux/commit/b24413180f5600bcb3bb70fbed5cf186b60864bd;Similar;0.854971170425415;0.5514034032821655;
42;reducing the irq states;allows reducing the irq states and will reduce the amount of __bfs() lookups we do;https://github.com/torvalds/linux/commit/d92a8cfcb37ecd1315269dab741f073b63b3a8b6;Remove various small accessors;various small;https://github.com/torvalds/linux/commit/b5568280c9b9162b384be9d447013b74d682d4b3;Similar;0.8317462205886841;0.4048186838626861;
43;reducing the irq states;allows reducing the irq states and will reduce the amount of __bfs() lookups we do;https://github.com/torvalds/linux/commit/d92a8cfcb37ecd1315269dab741f073b63b3a8b6;We remove kmemtrace  ;kmemtrace has been superseded by kmem trace events and perf-kmem;https://github.com/torvalds/linux/commit/039ca4e74a1cf60bd7487324a564ecf5c981f254;Similar;0.8668506145477295;0.5843202471733093;
44;reducing the irq states;allows reducing the irq states and will reduce the amount of __bfs() lookups we do;https://github.com/torvalds/linux/commit/d92a8cfcb37ecd1315269dab741f073b63b3a8b6;Drop it  ;if you want;https://github.com/torvalds/linux/commit/36994e58a48fb8f9651c7dc845a6de298aba5bfc;Similar;0.804094672203064;0.4634997546672821;
45;reducing the irq states;allows reducing the irq states and will reduce the amount of __bfs() lookups we do;https://github.com/torvalds/linux/commit/d92a8cfcb37ecd1315269dab741f073b63b3a8b6;reduce list scanning;slob;https://github.com/torvalds/linux/commit/d6269543ef24aa012aa228c27af3adb074f7b36b;Similar;0.9132909774780272;0.4503751993179321;
46;renames SLAB_DESTROY_BY_RCU to SLAB_TYPESAFE_BY_RCU;to avoid future instances of this sort of confusion;https://github.com/torvalds/linux/commit/5f0d5a3ae7cff0d7fa943c199c3a2e44f23e1fac;fix RCU-callback-after-kmem_cache_destroy problem in sl[aou]b  ;to address the issue;https://github.com/torvalds/linux/commit/7ed9f7e5db58c6e8c2b4b738a75d5dcd8e17aad5;Similar;0.8136236667633057;0.6325908899307251;
47;renames SLAB_DESTROY_BY_RCU to SLAB_TYPESAFE_BY_RCU;to avoid future instances of this sort of confusion;https://github.com/torvalds/linux/commit/5f0d5a3ae7cff0d7fa943c199c3a2e44f23e1fac;Remove obsolete SLAB_MUST_HWCACHE_ALIGN;obsolete;https://github.com/torvalds/linux/commit/5af60839909b8e3b28ca7cd7912fa0b23475617f;Similar;0.821791410446167;0.5472950339317322;
48;move it out of the slab_mutex  ;which we have to hold for iterating over the slab cache list;https://github.com/torvalds/linux/commit/89e364db71fb5e7fc8d93228152abfa67daf35fa;slab_mutex for kmem_cache_shrink is removed;after its applied, there is no need in taking the slab_mutex;https://github.com/torvalds/linux/commit/03afc0e25f7fc03537014a770f4c54ebbe63a24c;Similar;0.805903434753418;0.3324757814407348;0.9000850319862366
49;move it out of the slab_mutex  ;which we have to hold for iterating over the slab cache list;https://github.com/torvalds/linux/commit/89e364db71fb5e7fc8d93228152abfa67daf35fa;We remove kmemtrace  ;kmemtrace has been superseded by kmem trace events and perf-kmem;https://github.com/torvalds/linux/commit/039ca4e74a1cf60bd7487324a564ecf5c981f254;Similar;0.8209226131439209;0.4703749418258667;
50;move it out of the slab_mutex  ;which we have to hold for iterating over the slab cache list;https://github.com/torvalds/linux/commit/89e364db71fb5e7fc8d93228152abfa67daf35fa;Remove obsolete SLAB_MUST_HWCACHE_ALIGN;obsolete;https://github.com/torvalds/linux/commit/5af60839909b8e3b28ca7cd7912fa0b23475617f;Similar;0.8013726472854614;0.2491836249828338;
51;These optimizations may avoid taking locks repeatedly and bypass metadata creation if all objects in slab pages can be used to provide the objects required;avoid taking locks repeatedly and bypass metadata creation if all objects in slab pages can be used to provide the objects required;https://github.com/torvalds/linux/commit/484748f0b65a1950b2b93f444a2287e8dd2cedd6;SLUB may store empty slabs in per cpu/node partial lists instead of freeing them immediately;To speed up further allocations;https://github.com/torvalds/linux/commit/d6e0b7fa11862433773d986b5f995ffdf47ce672;Similar;0.818953275680542;0.3085547685623169;
52;I do not see it as an option;SLUB shrinker would be too costly to call since SLUB does not keep free slabs on a separate list;https://github.com/torvalds/linux/commit/d6e0b7fa11862433773d986b5f995ffdf47ce672;They are no longer needed;They have become so simple;https://github.com/torvalds/linux/commit/b5568280c9b9162b384be9d447013b74d682d4b3;Similar;0.8125553131103516;0.0256374143064022;0.8780893683433533
53;Thanks to list_lru reparenting, we no longer keep entries for offline cgroups in per-memcg arrays;We do not have to bother if a per-memcg cache will be shrunk a bit later than it could be;https://github.com/torvalds/linux/commit/d6e0b7fa11862433773d986b5f995ffdf47ce672;removes the obsolete and no longer used exports of ksize  ;obsolete and no longer used;https://github.com/torvalds/linux/commit/231367fd9bccbb36309ab5bf5012e11a84231031;Similar;0.8038849830627441;0.4999103546142578;
54;slab_mutex for kmem_cache_shrink is removed;after its applied, there is no need in taking the slab_mutex;https://github.com/torvalds/linux/commit/03afc0e25f7fc03537014a770f4c54ebbe63a24c;can be done in __kmem_cache_shutdown;What is done there;https://github.com/torvalds/linux/commit/12c3667fb780e20360ad0bde32dfb3591ef609ad;Similar;0.803275465965271;0.3981854021549225;
55;slab_mutex for kmem_cache_shrink is removed;after its applied, there is no need in taking the slab_mutex;https://github.com/torvalds/linux/commit/03afc0e25f7fc03537014a770f4c54ebbe63a24c;Remove kmemtrace ftrace plugin;tracing;https://github.com/torvalds/linux/commit/039ca4e74a1cf60bd7487324a564ecf5c981f254;Similar;0.8294204473495483;0.3748778402805328;
56;slab_mutex for kmem_cache_shrink is removed;after its applied, there is no need in taking the slab_mutex;https://github.com/torvalds/linux/commit/03afc0e25f7fc03537014a770f4c54ebbe63a24c;remove useless ctor parameter and reorder parameters;useless;https://github.com/torvalds/linux/commit/4ba9b9d0ba0a49d91fa6417c7510ee36f48cf957;Similar;0.8273647427558899;0.5658456683158875;
57;slab_mutex for kmem_cache_shrink is removed;after its applied, there is no need in taking the slab_mutex;https://github.com/torvalds/linux/commit/03afc0e25f7fc03537014a770f4c54ebbe63a24c;Remove obsolete SLAB_MUST_HWCACHE_ALIGN;obsolete;https://github.com/torvalds/linux/commit/5af60839909b8e3b28ca7cd7912fa0b23475617f;Similar;0.8448187112808228;0.6395039558410645;
58;Rename the function names page_xchg_last_nid(), page_last_nid(), and reset_page_last_nid() to a struct_field_op style pattern;The function names were judged to be inconsistent;https://github.com/torvalds/linux/commit/22b751c3d0376e86a377e3a0aa2ddbbe9d2eefc1;rename reset_page_mapcount() to page_mapcount_reset();it looked jarring to have them beside each other;https://github.com/torvalds/linux/commit/22b751c3d0376e86a377e3a0aa2ddbbe9d2eefc1;Similar;0.8565096259117126;0.6847496628761292;
59;Improve trace accuracy;by correctly tracing reported size;https://github.com/torvalds/linux/commit/fe74fe2bf293d061826f0d7afc2ca8456bdbb40e;enable and use this tracer;To enable and use this tracer;https://github.com/torvalds/linux/commit/36994e58a48fb8f9651c7dc845a6de298aba5bfc;Similar;0.8528776168823242;0.7510898113250732;
60;Improve trace accuracy;by correctly tracing reported size;https://github.com/torvalds/linux/commit/fe74fe2bf293d061826f0d7afc2ca8456bdbb40e;improved alignment handling;improved;https://github.com/torvalds/linux/commit/553948491c18413928b85a9025b92af80e7d61d6;Similar;0.8486950397491455;0.6413378715515137;
61;Add the function `__kmalloc_track_caller()`  ;This breaks Pekkas slab/next tree;https://github.com/torvalds/linux/commit/82bd5508b4080e851ac1a9b62bed6d727b1b4a84;The bit should be passed to trace_kmalloc_node()  ;as well;https://github.com/torvalds/linux/commit/8df275af8db8220d7e3f1bf97b6ac7aad05f96f0;Similar;0.8170105814933777;0.3213204443454742;
62;Fix build breakage in __kmalloc_node_track_caller;gfp is undeclared;https://github.com/torvalds/linux/commit/82bd5508b4080e851ac1a9b62bed6d727b1b4a84;fix RCU-callback-after-kmem_cache_destroy problem in sl[aou]b  ;to address the issue;https://github.com/torvalds/linux/commit/7ed9f7e5db58c6e8c2b4b738a75d5dcd8e17aad5;Similar;0.8026189804077148;0.5073464512825012;
63;This will allow us to push more processing into common code later;improve readability;https://github.com/torvalds/linux/commit/8a13a4cc80bb25c9eab2e7e56bab724fcfa55fce;refactor code for future changes;Impact;https://github.com/torvalds/linux/commit/02af61bb50f5d5f0322dbe5ab2a0d75808d25c7b;Similar;0.8159323930740356;0.5838217735290527;
64;can be done in __kmem_cache_shutdown;What is done there;https://github.com/torvalds/linux/commit/12c3667fb780e20360ad0bde32dfb3591ef609ad;Remove kmemtrace ftrace plugin;tracing;https://github.com/torvalds/linux/commit/039ca4e74a1cf60bd7487324a564ecf5c981f254;Similar;0.8111629486083984;0.8011128902435303;
65;can be done in __kmem_cache_shutdown;What is done there;https://github.com/torvalds/linux/commit/12c3667fb780e20360ad0bde32dfb3591ef609ad;Introduce a memory-zeroing variant of kmem_cache_alloc;memory-zeroing variant;https://github.com/torvalds/linux/commit/a8c0f9a41f88da703ade33f9c1626a55c786e8bb;Similar;0.8259381055831909;0.5840917825698853;
66;This is possible now;the acquisition of the mutex was moved into kmem_cache_create();https://github.com/torvalds/linux/commit/7c9adf5a5471647f392169ef19d3e81dcfa76045;have some improvement  ;the concept is no less complete than discovery of a locks interrupt contexts;https://github.com/torvalds/linux/commit/cf40bd16fdad42c053040bcd3988f5fdedbb6c57;Similar;0.8300827741622925;0.473706990480423;
67;Remove various small accessors;various small;https://github.com/torvalds/linux/commit/b5568280c9b9162b384be9d447013b74d682d4b3;reduce list scanning;slob;https://github.com/torvalds/linux/commit/d6269543ef24aa012aa228c27af3adb074f7b36b;Similar;0.8466690182685852;0.7113665342330933;
68;No need to zero mapping since it is no longer in use;it is no longer in use;https://github.com/torvalds/linux/commit/690d5777392180fdc05a82c0c7979e50e8d93de8;Slob does not need any special definitions;since we introduce a fallback case;https://github.com/torvalds/linux/commit/2e892f43ccb602e8ffad73396a1000f2040c9e0b;Similar;0.8062189817428589;0.539348840713501;
69;move duplicated code in <asm/atomic.h> to <linux/atomic.h>;to avoid duplication of code;https://github.com/torvalds/linux/commit/60063497a95e716c9a689af3be2687d261f115b4;include/linux/kmemtrace.h: header file for kmemtrace, include/trace/kmem.h: definition of kmem tracepoints;header file for kmemtrace, definition of kmem tracepoints;https://github.com/torvalds/linux/commit/02af61bb50f5d5f0322dbe5ab2a0d75808d25c7b;Similar;0.8208510875701904;0.444146454334259;
70;Remove kmemtrace ftrace plugin;tracing;https://github.com/torvalds/linux/commit/039ca4e74a1cf60bd7487324a564ecf5c981f254;We remove kmemtrace  ;kmemtrace has been superseded by kmem trace events and perf-kmem;https://github.com/torvalds/linux/commit/039ca4e74a1cf60bd7487324a564ecf5c981f254;Similar;0.8647539615631104;0.6287064552307129;
71;Remove kmemtrace ftrace plugin;tracing;https://github.com/torvalds/linux/commit/039ca4e74a1cf60bd7487324a564ecf5c981f254;remove bigblock tracking;slob;https://github.com/torvalds/linux/commit/d87a133fc21d842e3cc285e6bbff727181abec81;Similar;0.8015408515930176;0.707062304019928;
72;Remove kmemtrace ftrace plugin;tracing;https://github.com/torvalds/linux/commit/039ca4e74a1cf60bd7487324a564ecf5c981f254;Remove obsolete SLAB_MUST_HWCACHE_ALIGN;obsolete;https://github.com/torvalds/linux/commit/5af60839909b8e3b28ca7cd7912fa0b23475617f;Similar;0.8483313918113708;0.6303781270980835;
73;We remove kmemtrace  ;kmemtrace has been superseded by kmem trace events and perf-kmem;https://github.com/torvalds/linux/commit/039ca4e74a1cf60bd7487324a564ecf5c981f254;Drop it  ;if you want;https://github.com/torvalds/linux/commit/36994e58a48fb8f9651c7dc845a6de298aba5bfc;Similar;0.8542777299880981;0.4595608115196228;
74;We remove kmemtrace  ;kmemtrace has been superseded by kmem trace events and perf-kmem;https://github.com/torvalds/linux/commit/039ca4e74a1cf60bd7487324a564ecf5c981f254;removes the obsolete and no longer used exports of ksize  ;obsolete and no longer used;https://github.com/torvalds/linux/commit/231367fd9bccbb36309ab5bf5012e11a84231031;Similar;0.8357622623443604;0.6107777953147888;
75;We remove kmemtrace  ;kmemtrace has been superseded by kmem trace events and perf-kmem;https://github.com/torvalds/linux/commit/039ca4e74a1cf60bd7487324a564ecf5c981f254;remove useless ctor parameter and reorder parameters;useless;https://github.com/torvalds/linux/commit/4ba9b9d0ba0a49d91fa6417c7510ee36f48cf957;Similar;0.8131567239761353;0.4126796722412109;0.6677667498588562
76;We remove kmemtrace  ;kmemtrace has been superseded by kmem trace events and perf-kmem;https://github.com/torvalds/linux/commit/039ca4e74a1cf60bd7487324a564ecf5c981f254;reduce list scanning;slob;https://github.com/torvalds/linux/commit/d6269543ef24aa012aa228c27af3adb074f7b36b;Similar;0.8518403768539429;0.6095860600471497;
77;We remove kmemtrace  ;kmemtrace has been superseded by kmem trace events and perf-kmem;https://github.com/torvalds/linux/commit/039ca4e74a1cf60bd7487324a564ecf5c981f254;remove bigblock tracking;slob;https://github.com/torvalds/linux/commit/d87a133fc21d842e3cc285e6bbff727181abec81;Similar;0.8058533668518066;0.6095860600471497;
78;fix RCU-callback-after-kmem_cache_destroy problem in sl[aou]b  ;to address the issue;https://github.com/torvalds/linux/commit/7ed9f7e5db58c6e8c2b4b738a75d5dcd8e17aad5;The SLOB allocator should implement SLAB_DESTROY_BY_RCU correctly;even on UP, RCU freeing semantics are not equivalent to simply freeing immediately;https://github.com/torvalds/linux/commit/afc0cedbe9138e3e8b38bfa1e4dfd01a2c537d62;Similar;0.8012063503265381;0.50240558385849;
79;use tracepoints;kmemtrace;https://github.com/torvalds/linux/commit/ca2b84cb3c4a0d4d2143b46ec072cdff5d1b3b87;enable and use this tracer;To enable and use this tracer;https://github.com/torvalds/linux/commit/36994e58a48fb8f9651c7dc845a6de298aba5bfc;Similar;0.8726144433021545;0.5851861238479614;
80;have some improvement  ;the concept is no less complete than discovery of a locks interrupt contexts;https://github.com/torvalds/linux/commit/cf40bd16fdad42c053040bcd3988f5fdedbb6c57;I find it more readable  ;personal opinion;https://github.com/torvalds/linux/commit/36994e58a48fb8f9651c7dc845a6de298aba5bfc;Similar;0.8534252643585205;0.3259435892105102;
81;have some improvement  ;the concept is no less complete than discovery of a locks interrupt contexts;https://github.com/torvalds/linux/commit/cf40bd16fdad42c053040bcd3988f5fdedbb6c57;improved alignment handling;improved;https://github.com/torvalds/linux/commit/553948491c18413928b85a9025b92af80e7d61d6;Similar;0.8334860801696777;0.5242627263069153;
82;I find it more readable  ;personal opinion;https://github.com/torvalds/linux/commit/36994e58a48fb8f9651c7dc845a6de298aba5bfc;improved alignment handling;improved;https://github.com/torvalds/linux/commit/553948491c18413928b85a9025b92af80e7d61d6;Similar;0.8286669254302979;0.4809322953224182;
83;Drop it  ;if you want;https://github.com/torvalds/linux/commit/36994e58a48fb8f9651c7dc845a6de298aba5bfc;reduce list scanning;slob;https://github.com/torvalds/linux/commit/d6269543ef24aa012aa228c27af3adb074f7b36b;Similar;0.8101249933242798;0.6972525119781494;
84;fix bogus ksize calculation fix  ;SLOB;https://github.com/torvalds/linux/commit/70096a561d1e09120bae1f293f3632cedbfd5c68;fix bogus ksize calculation;bogus;https://github.com/torvalds/linux/commit/85ba94ba0592296053f7f2846812173424afe1cb;Similar;0.9872711896896362;0.846623420715332;
85;fix bogus ksize calculation fix  ;SLOB;https://github.com/torvalds/linux/commit/70096a561d1e09120bae1f293f3632cedbfd5c68;fix;SLOB=y && SMP=y fix;https://github.com/torvalds/linux/commit/9934a7939e1cdce62ece9ef7d25ebb3c55547fac;Similar;0.8096705675125122;0.6227595210075378;
86;fix bogus ksize calculation;bogus;https://github.com/torvalds/linux/commit/85ba94ba0592296053f7f2846812173424afe1cb;fix;SLOB=y && SMP=y fix;https://github.com/torvalds/linux/commit/9934a7939e1cdce62ece9ef7d25ebb3c55547fac;Similar;0.822981595993042;0.4897864460945129;
87;removes the obsolete and no longer used exports of ksize  ;obsolete and no longer used;https://github.com/torvalds/linux/commit/231367fd9bccbb36309ab5bf5012e11a84231031;remove useless ctor parameter and reorder parameters;useless;https://github.com/torvalds/linux/commit/4ba9b9d0ba0a49d91fa6417c7510ee36f48cf957;Similar;0.8588235378265381;0.8851944804191589;
88;remove useless ctor parameter and reorder parameters;useless;https://github.com/torvalds/linux/commit/4ba9b9d0ba0a49d91fa6417c7510ee36f48cf957;reduce list scanning;slob;https://github.com/torvalds/linux/commit/d6269543ef24aa012aa228c27af3adb074f7b36b;Similar;0.8205522298812866;0.7383036017417908;
89;remove useless ctor parameter and reorder parameters;useless;https://github.com/torvalds/linux/commit/4ba9b9d0ba0a49d91fa6417c7510ee36f48cf957;Remove obsolete SLAB_MUST_HWCACHE_ALIGN;obsolete;https://github.com/torvalds/linux/commit/5af60839909b8e3b28ca7cd7912fa0b23475617f;Similar;0.803428590297699;0.9298909306526184;
90;reduce list scanning;slob;https://github.com/torvalds/linux/commit/d6269543ef24aa012aa228c27af3adb074f7b36b;Cleanup zeroing allocations;Slab allocators;https://github.com/torvalds/linux/commit/81cda6626178cd55297831296ba8ecedbfd8b52d;Similar;0.8207494616508484;0.6148500442504883;
91;remove bigblock tracking;slob;https://github.com/torvalds/linux/commit/d87a133fc21d842e3cc285e6bbff727181abec81;Remove obsolete SLAB_MUST_HWCACHE_ALIGN;obsolete;https://github.com/torvalds/linux/commit/5af60839909b8e3b28ca7cd7912fa0b23475617f;Similar;0.8203655481338501;0.7713018655776978;
