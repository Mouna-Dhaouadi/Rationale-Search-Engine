Decision1;Rationale1;Decision2;Rationale2;Relationship;Alpha;similarity_rationales;contradiction_rationales
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;adds an acpi_handle_debug call  ;to help debugging this;Similar;0.8696728944778442;0.4927486777305603;
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;Similar;0.8089457750320435;0.4785800576210022;
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.8144063949584961;0.5723090171813965;
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;"proc_fops is declared as ""const""";should give some thoughts;Similar;0.8226295709609985;0.474880576133728;
fix some coding style issues;fix some coding style issues;Fix some coding style issues reported by checkpatch.pl;including the following types;Similar;0.850007176399231;0.5377175807952881;
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;Remove unused ACPI button procfs interface;unused;Similar;0.816499650478363;0.3610398769378662;
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.8068422079086304;0.45413005352020264;
"Remove the "" MD60198"" part from the E2215T quirk";the MD60### part of the model number differs per country/batch while all of the E2215T and E2228T models have this issue;Drop no longer necessary Acer SW5-012 lid_init_state quirk;no longer necessary;Similar;0.8025887608528137;0.33833014965057373;
"Remove the "" MD60198"" part from the E2215T quirk";the MD60### part of the model number differs per country/batch while all of the E2215T and E2228T models have this issue;drop the second ACPI driver .remove() argument  ;the second ACPI driver .remove() argument is in fact useless;Similar;0.8028779625892639;0.37987688183784485;
"Remove the "" MD60198"" part from the E2215T quirk";the MD60### part of the model number differs per country/batch while all of the E2215T and E2228T models have this issue;remove unused procfs I/F;unused;Similar;0.8061790466308594;0.30530813336372375;
Drop no longer necessary Acer SW5-012 lid_init_state quirk;no longer necessary;Drop no longer necessary Asus T200TA lid_init_state quirk;no longer necessary;Similar;0.960751175880432;1.0;
Drop no longer necessary Acer SW5-012 lid_init_state quirk;no longer necessary;drop the second ACPI driver .remove() argument  ;the second ACPI driver .remove() argument is in fact useless;Similar;0.8100870251655579;0.6530174612998962;
Drop no longer necessary Acer SW5-012 lid_init_state quirk;no longer necessary;remove unused procfs I/F;unused;Similar;0.8044151067733765;0.8652921915054321;
we no longer need to disable the lid functionality on the Acer SW5-012;Now that this workaround is in place;We no longer need a pointer from struct acpi_button back to the struct acpi_device;no longer need;Similar;0.8631794452667236;0.5786699652671814;
Remove unnecessary fall-through markings  ;when it is the case;Avoid disabling wakeup unnecessarily on remove;-;Similar;0.8177422285079956;0.8752346634864807;
Delete unused proc filename macros;unused;Remove unused acpi_lid_notifier_[un]register() functions;unused;Similar;0.876331090927124;1.0;
Delete unused proc filename macros;unused;Remove pointer to old lid_sysfs on unbind;ACPI / button;Similar;0.862403392791748;0.5368050932884216;
Delete unused proc filename macros;unused;remove the GPE enabling code from the button driver;to avoid the problem;Similar;0.823997437953949;0.7377198934555054;
Delete unused proc filename macros;unused;Remove unused ACPI button procfs interface;unused;Similar;0.8663809299468994;1.0;
Drop no longer necessary Asus T200TA lid_init_state quirk;no longer necessary;We no longer need a pointer from struct acpi_button back to the struct acpi_device;no longer need;Similar;0.8036028146743774;0.9835231304168701;
drop the quirk  ;the lid_init_state=ACPI_BUTTON_LID_INIT_OPEN quirk for the Asus T200TA is no longer necessary, the lid now works properly without it;"Invoke with ; as leaving it off confuses Lindent  ";gcc doesnt care;Similar;0.8076921701431274;0.2967129945755005;
Remove unused acpi_lid_notifier_[un]register() functions;unused;Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);Similar;0.8566288948059082;0.3128507733345032;
Remove unused acpi_lid_notifier_[un]register() functions;unused;have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;Similar;0.8139975666999817;0.3512990176677704;
Remove unused acpi_lid_notifier_[un]register() functions;unused;Remove pointer to old lid_sysfs on unbind;ACPI / button;Similar;0.8895823955535889;0.5368050932884216;
Remove unused acpi_lid_notifier_[un]register() functions;unused;Remove useless type argument of driver .remove() operation;useless;Similar;0.822012186050415;0.8847368955612183;
Remove unused acpi_lid_notifier_[un]register() functions;unused;drop the second ACPI driver .remove() argument  ;the second ACPI driver .remove() argument is in fact useless;Similar;0.8156611919403076;0.5940310955047607;
Remove unused acpi_lid_notifier_[un]register() functions;unused;remove unused procfs I/F;unused;Similar;0.8759138584136963;1.0;
Remove unused acpi_lid_notifier_[un]register() functions;unused;Remove unused ACPI button procfs interface;unused;Similar;0.8617091774940491;1.0;
Remove unused acpi_lid_notifier_[un]register() functions;unused;Remove button->device pointer;button;Similar;0.8291540145874023;0.635229229927063;
Remove unused acpi_lid_notifier_[un]register() functions;unused;get rid of input BIT* duplicate defines;duplicate;Similar;0.862663984298706;0.7639277577400208;
Remove unused acpi_lid_notifier_[un]register() functions;unused;Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;Similar;0.8250961303710938;0.6756806373596191;
Remove unused acpi_lid_notifier_[un]register() functions;unused;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.8576558828353882;0.600906491279602;
Remove unused acpi_lid_notifier_[un]register() functions;unused;Remove unneeded acpi_handle from driver;unneeded;Similar;0.8088442087173462;0.9054083824157715;
Remove unused acpi_lid_notifier_[un]register() functions;unused;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.8023233413696289;0.43378570675849915;
Setting lid_init_state to ACPI_BUTTON_LID_INIT_OPEN on the T200TA  ;fixes the unwanted behavior, adds a DMI based quirk; the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;Similar;0.8589924573898315;0.5520404577255249;
Setting lid_init_state to ACPI_BUTTON_LID_INIT_OPEN on the T200TA  ;fixes the unwanted behavior, adds a DMI based quirk;Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;Similar;0.8063229918479919;0.7016026973724365;
 the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;Similar;0.8428410291671753;0.6787580847740173;
 the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.8027684688568115;0.6453498601913452;
"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;Similar;0.8217902183532715;0.32061371207237244;
re-using the existing option;keeps things simple and it will make it much easier to add DMI quirks which can either disable the LID completely or set another non-default lid_init_state value, both of which are necessary on some devices;implements this mechanism  ;only;Similar;0.80223548412323;0.0649600401520729;
[ an action or a change that has been made, including a description of the patch behaviour ];[ the reason for a decision or value judgment ];description of the patch behaviour;an action or a change;Similar;0.8693506717681885;0.7742266654968262;
Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;remove the GPE enabling code from the button driver;to avoid the problem;Similar;0.8430756330490112;0.1150355339050293;
Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;Remove unused ACPI button procfs interface;unused;Similar;0.8334183692932129;0.10710489749908447;
Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;Remove button->device pointer;button;Similar;0.8494284152984619;0.3700607120990753;
Fix a build warning in the ACPI button driver when CONFIG_PROC_FS is not enabled by marking the unused function as __maybe_unused;not enabled, unused;fix button driver compile error when CONFIG_PM_SLEEP is undefined;CONFIG_PM_SLEEP is undefined;Similar;0.8544233441352844;0.6260517835617065;
Fix a build warning in the ACPI button driver when CONFIG_PROC_FS is not enabled by marking the unused function as __maybe_unused;not enabled, unused;remove the GPE enabling code from the button driver;to avoid the problem;Similar;0.8085322380065918;0.6845641732215881;
Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;Similar;0.803489089012146;0.34996703267097473;
adds an acpi_handle_debug call  ;to help debugging this;Fix function prototypes for module_param_call();-;Similar;0.8412418365478516;0.6593663692474365;
adds an acpi_handle_debug call  ;to help debugging this;Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;Similar;0.8283900022506714;0.6412885189056396;
adds an acpi_handle_debug call  ;to help debugging this;convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.8320568799972534;0.6591727137565613;
adds an acpi_handle_debug call  ;to help debugging this;fix acpi_driver.name usage;fix;Similar;0.8144656419754028;0.7927802801132202;
Fix function prototypes for module_param_call();-;fix whitespace in pr_fmt() to align log entries;align log entries;Similar;0.8015280961990356;0.5979794263839722;
Fix function prototypes for module_param_call();-;fix acpi_driver.name usage;fix;Similar;0.8270348906517029;0.8382233381271362;
The ->sync hook allows all of the relevant event queues to be flushed;to prevent events from being missed due to race conditions;The ->sync hook allows all of the relevant event queues to be flushed;to prevent events from being missed due to race conditions;Similar;0.9999996423721312;1.0000001192092896;
Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);Similar;0.8576885461807251;0.5083023309707642;
Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;Add ACPI Button event via netlink routine;-;Similar;0.8003367185592651;0.2652820348739624;
Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;Similar;0.803377628326416;0.6332255601882935;
Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;Remove button->device pointer;button;Similar;0.8198971152305603;0.4129016399383545;
Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.8631254434585571;0.5272176861763;
Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);Remove pointer to old lid_sysfs on unbind;ACPI / button;Similar;0.8137568235397339;0.581181526184082;
Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);Remove button->device pointer;button;Similar;0.8441688418388367;0.5185487270355225;
Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);get rid of input BIT* duplicate defines;duplicate;Similar;0.8236989974975586;0.3808711767196655;
Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.8221520185470581;0.7340399026870728;
have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.8050592541694641;0.3299894332885742;
This patch adds a mechanism to insert lid events as a compensation for the platform triggered ones to form a complete event switches  ;in order to make sure that the platform triggered events can always be reliably delivered to the userspace;This patch adds temporaries to cache the acpi_device_hid(), acpi_device_name(), and acpi_device_class() pointers;so we dont have to clutter the code with so many uses of those interfaces;Similar;0.8234648704528809;0.4295834004878998;
Remove pointer to old lid_sysfs on unbind;ACPI / button;Remove unused ACPI button procfs interface;unused;Similar;0.8188803195953369;0.5368050932884216;
Remove pointer to old lid_sysfs on unbind;ACPI / button;Remove button->device pointer;button;Similar;0.8067060708999634;0.856471061706543;
Remove pointer to old lid_sysfs on unbind;ACPI / button;get rid of input BIT* duplicate defines;duplicate;Similar;0.8220229744911194;0.6253111362457275;
Remove pointer to old lid_sysfs on unbind;ACPI / button;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.8260646462440491;0.6418699622154236;
When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;Remove unneeded acpi_handle from driver;unneeded;Similar;0.8310418128967285;0.6369130611419678;
this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;Similar;0.8032214045524597;0.41283804178237915;
this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;This caused ACPI shutdown regression on gentoo;VirtualBox;Similar;0.8214467167854309;0.24196457862854004;
this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;Remove unused ACPI button procfs interface;unused;Similar;0.8025480508804321;0.26422467827796936;
Add ACPI Button event via netlink routine;-;add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;Similar;0.9549936056137084;0.3277333676815033;
Add ACPI Button event via netlink routine;-;convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.8217678070068359;0.506582498550415;
removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;remove the GPE enabling code from the button driver;to avoid the problem;Similar;0.8432878851890564;0.5382874608039856;
removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;Remove unused ACPI button procfs interface;unused;Similar;0.8755013942718506;0.5973829030990601;
removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.8383603096008301;0.8963146209716797;
This caused ACPI shutdown regression on gentoo;VirtualBox;drop the second ACPI driver .remove() argument  ;the second ACPI driver .remove() argument is in fact useless;Similar;0.8376805186271667;0.20993535220623016;
This caused ACPI shutdown regression on gentoo;VirtualBox;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.8037893176078796;0.4185035526752472;
add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.8535811901092529;0.3439033031463623;
fix button driver compile error when CONFIG_PM_SLEEP is undefined;CONFIG_PM_SLEEP is undefined;Fix unused function warnings for CONFIG_PM_SLEEP;unused function warnings;Similar;0.8434484601020813;0.6168668270111084;
remove the GPE enabling code from the button driver;to avoid the problem;Remove unused ACPI button procfs interface;unused;Similar;0.8864560723304749;0.7377198934555054;
remove the GPE enabling code from the button driver;to avoid the problem;Remove button->device pointer;button;Similar;0.828407883644104;0.6087701320648193;
remove the GPE enabling code from the button driver;to avoid the problem;Remove unneeded acpi_handle from driver;unneeded;Similar;0.8245996236801147;0.6926985383033752;
Remove useless type argument of driver .remove() operation;useless;drop the second ACPI driver .remove() argument  ;the second ACPI driver .remove() argument is in fact useless;Similar;0.8664847612380981;0.6707824468612671;
Remove useless type argument of driver .remove() operation;useless;remove unused procfs I/F;unused;Similar;0.831093966960907;0.8847368955612183;
Remove useless type argument of driver .remove() operation;useless;Remove unneeded acpi_handle from driver;unneeded;Similar;0.8486064672470093;0.8635250329971313;
drop the second ACPI driver .remove() argument  ;the second ACPI driver .remove() argument is in fact useless;remove unused procfs I/F;unused;Similar;0.8187741041183472;0.5940310955047607;
drop the second ACPI driver .remove() argument  ;the second ACPI driver .remove() argument is in fact useless;Remove unused ACPI button procfs interface;unused;Similar;0.8367040157318115;0.5940310955047607;
drop the second ACPI driver .remove() argument  ;the second ACPI driver .remove() argument is in fact useless;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.8253688812255859;0.5906888246536255;
drop the second ACPI driver .remove() argument  ;the second ACPI driver .remove() argument is in fact useless;Remove unneeded acpi_handle from driver;unneeded;Similar;0.8084568977355957;0.5806170701980591;
remove unused procfs I/F;unused;Remove unused ACPI button procfs interface;unused;Similar;0.8344510197639465;1.0;
remove unused procfs I/F;unused;Remove the old GPE type handling entirely  ;Gets rid of various quirks, like the implicit disabling with GPE type setting;Similar;0.8138864040374756;0.6013535261154175;
remove unused procfs I/F;unused;Remove button->device pointer;button;Similar;0.8084392547607422;0.635229229927063;
remove unused procfs I/F;unused;get rid of input BIT* duplicate defines;duplicate;Similar;0.8417754173278809;0.7639277577400208;
remove unused procfs I/F;unused;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.8276091814041138;0.600906491279602;
Remove unused ACPI button procfs interface;unused;Remove button->device pointer;button;Similar;0.8324025869369507;0.635229229927063;
Remove unused ACPI button procfs interface;unused;We no longer need a pointer from struct acpi_button back to the struct acpi_device;no longer need;Similar;0.8082320690155029;0.8947106003761292;
Remove unused ACPI button procfs interface;unused;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.8377443552017212;0.600906491279602;
Remove unused ACPI button procfs interface;unused;Remove unneeded acpi_handle from driver;unneeded;Similar;0.811384916305542;0.9054083824157715;
Introduce a reference counter for run-wake devices and a function that will initialize all of the run-time wake-up fields for given device.;-;Add an API to allow devices to indicate whether or not they want their devices GPE to be enabled for both runtime and wakeup events;to allow devices to indicate whether or not they want their devices GPE to be enabled;Similar;0.80560302734375;0.4359501004219055;
we could install either a fixed event handler or a notify handler, but the Linux/ACPI code now handles that for us;We previously needed that so we dont need to worry about it;The presence of .notify() causes Linux/ACPI to manage event handlers and notify handlers on our behalf  ;so we dont have to install and remove them ourselves;Similar;0.8582358360290527;0.7794554233551025;
Remove button->device pointer;button;get rid of input BIT* duplicate defines;duplicate;Similar;0.8325756192207336;0.7838795185089111;
Remove button->device pointer;button;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.8023934364318848;0.5751427412033081;
get rid of input BIT* duplicate defines;duplicate;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.8035550713539124;0.5313756465911865;
get rid of input BIT* duplicate defines;duplicate;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.8240187764167786;0.587765097618103;
