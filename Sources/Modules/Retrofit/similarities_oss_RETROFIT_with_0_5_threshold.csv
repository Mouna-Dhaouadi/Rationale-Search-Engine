Decision1;Rationale1;Decision2;Rationale2;Relationship;Alpha
Add missing <iden> wrappers as return type;missing;Added a <file_name> rule for the line indentation  ;Indentation;Similar;0.6278139352798462
Add missing <iden> wrappers as return type;missing;Adding GET support to <file_name>;support;Similar;0.6129245162010193
Add missing <iden> wrappers as return type;missing;Fix inconsistencies in javadocs  ;These changes were made with consistency in mind, in relation to the rest of the project;Similar;0.6220280528068542
Add missing <iden> wrappers as return type;missing;baseUrl should end with /;end with /;Similar;0.6596556901931763
Add missing <iden> wrappers as return type;missing;add paragraph clarifying logging;clarifying logging;Similar;0.5154154300689697
Add missing <iden> wrappers as return type;missing;Add response object to <file_name> success;Gives access to response headers while still converting response within retrofit;Similar;0.594090461730957
Add missing <iden> wrappers as return type;missing;Support <iden> / <iden> for @field;Supporting <iden> / <iden> for @field;Similar;0.5990536212921143
Add missing <iden> wrappers as return type;missing;Add <iden> wrapper validation  ;validation;Similar;0.6614072918891907
Add missing <iden> wrappers as return type;missing;Add <iden> integration tests;integration;Similar;0.5689905881881714
Add missing <iden> wrappers as return type;missing;Add coroutine support to <file_name> ;coroutine support;Similar;0.6206487417221069
Add missing <iden> wrappers as return type;missing;Migrate forced suspension mechanism from yield to <iden>;Since its possible for certain dispatchers to completely avoid yielding, and currently the immediate dispatchers exhibit this behavior, we need an alternate mechanism of forcing suspension or UndeclaredThrowableExceptions will still be seen.;Similar;0.7598366737365723
Add missing <iden> wrappers as return type;missing;Allow service interfaces to extend other interfaces  ;With a higher minSdkVersion, the bug which prevented this on <iden> no longer exists;Similar;0.5330925583839417
Add missing <iden> wrappers as return type;missing;Add more obviously missing @nullable annotations;missing;Similar;0.7936851978302002
Add missing <iden> wrappers as return type;missing;Add some missing @nullable annotations to <file_name> ;missing;Similar;0.8534389734268188
Add missing <iden> wrappers as return type;missing;Fatal errors should crash the dispatcher thread;Fatal errors should be propagated by the async observer instead of attempting to make its way back downstream.;Similar;0.5512629747390747
Add missing <iden> wrappers as return type;missing;Add some missing Nullable annotations;missing;Similar;0.8054558038711548
Add missing <iden> wrappers as return type;missing;Add some missing Nullable annotations;missing;Similar;0.8054558038711548
Add missing <iden> wrappers as return type;missing;Use a dummy value to further validation optional delegation;This ensures the value can only come from only one place;Similar;0.7368026971817017
Add missing <iden> wrappers as return type;missing;Expose static factory for <file_name> <enter> Also rework the internals of how an <file_name> gets instantiated and set as a tag on the <iden>;This will make a future change easier to land;Similar;0.5158989429473877
Add missing <iden> wrappers as return type;missing;Re-work unresolvable type detection in parameters  ;"In order to natively support Kotlins suspend modifier in the future, we need to allow wildcards to be used for the last parameter; As a result, we only validate the shape of a type once an annotation is detected.";Similar;0.7459313869476318
Add missing <iden> wrappers as return type;missing;Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;Similar;0.6558281183242798
Add missing <iden> wrappers as return type;missing;Consolidate exception formatters in one place  ;streamline implementation and improve maintenance;Similar;0.5962445735931396
Add missing <iden> wrappers as return type;missing;Pull out <file_name> base class <enter>;This will allow us to support multiple forms of invocation beyond <iden> calls.;Similar;0.6430860757827759
Add missing <iden> wrappers as return type;missing;Remove old <iden> nonsense;As of API 26 the android.jar contains the classes checked by <iden> and used by <iden>.Java8. And we dont encourage throwing checked exceptions from the service method but instead routing them through your call adapter.;Similar;0.6933205723762512
Add missing <iden> wrappers as return type;missing;Use HTTPS links in documentation where possible  ;where possible;Similar;0.5303260087966919
Add missing <iden> wrappers as return type;missing;Combine <file_name> and <iden> into <method_name> <enter>  ;This is one class that handles all of the annotations and binding for a service method;Similar;0.6893134713172913
Add missing <iden> wrappers as return type;missing;Rename <method_name> to onSuccess(), and failure() to <iden>();to onSuccess(), and failure(), <iden>;Similar;0.7755011916160583
Add missing <iden> wrappers as return type;missing;Add JSR 305 nullability annotations;nullability annotations;Similar;0.6716731786727905
Add missing <iden> wrappers as return type;missing;Remove unused interface  ;unused;Similar;0.7029491662979126
Add missing <iden> wrappers as return type;missing;Simplify observable creation and reduce runtime allocations;Simplify, reduce;Similar;0.6324502825737
Add missing <iden> wrappers as return type;missing;Refactor <iden> tests to avoid the use of blocking operators  ;avoid the use of blocking operators;Similar;0.6089320182800293
Add missing <iden> wrappers as return type;missing;Remove duplicated test  ;It is the same as in this file;Similar;0.7340592741966248
Add missing <iden> wrappers as return type;missing;call it a <version>;Actually;Similar;0.5848087668418884
Add missing <iden> wrappers as return type;missing;Add missing import  ;missing;Similar;0.8049452900886536
Add missing <iden> wrappers as return type;missing;Document maps dont allow null anywhere;null anywhere;Similar;0.5120176076889038
Add missing <iden> wrappers as return type;missing;Remove the need for generated accessor methods  ;need for generated accessor methods;Similar;0.6792663931846619
Add missing <iden> wrappers as return type;missing;Propagate callback executor even when not explicitly specified  ;This lets custom <iden> implementations use the <file_name> default for their callbacks;Similar;0.5058738589286804
Add missing <iden> wrappers as return type;missing;Add example of using <iden> <file_name> as a <iden> <method_name>  ;This also adds the <file_name> instance as a param to the string <file_name> to allow it to delegate to others directly. This brings it into parity with the method signatures of the other <file_name> methods anyway.;Similar;0.6691563129425049
Add missing <iden> wrappers as return type;missing;Use new <iden>s non-throwing close and a simpler body copy;non-throwing close and a simpler body			      ;Similar;0.5640429258346558
Add missing <iden> wrappers as return type;missing;Remove incorrect generic parameter  ;incorrect;Similar;0.6957355737686157
Add missing <iden> wrappers as return type;missing;Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;Similar;0.5460422039031982
Add missing <iden> wrappers as return type;missing;Naming, API changes, and documentation around mock services.  ;mock services;Similar;0.5783073902130127
Add missing <iden> wrappers as return type;missing;Introduce factory for <file_name> concept;This is still highly-inefficient in its internal use and there are no tests proving that we now fail earlier in configuring a service method;Similar;0.5220202207565308
Add missing <iden> wrappers as return type;missing;Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;Similar;0.7100579738616943
Add missing <iden> wrappers as return type;missing;Remove unused classes from <otherCommit_link>;unused;Similar;0.7838219404220581
Add missing <iden> wrappers as return type;missing;Update to OkHttp <version>. Fix a tiny potential NPE;potential NPE;Similar;0.6818286776542664
Add missing <iden> wrappers as return type;missing;Fix annotation link;<iden> is gone;Similar;0.6634988188743591
Add missing <iden> wrappers as return type;missing;Use the annotations directly for parameter handling.;Before we attempted to normalize the parameter annotations into a name and type model. The introduction of multi-part transfer encodings required something more expressive so the annotation instances themselves were used. This change removes the name and type in favor of using the annotation for everything.;Similar;0.5598620772361755
Add missing <iden> wrappers as return type;missing;Expose success type on <method_name>;Theres a bit of a test gap going on for all the variants of successful and erroneous handling of sync, async, and rx. This new behavior is fully tested in all three but more general behavior testing for them will be needed in a follow-up.;Similar;0.6482028365135193
Add missing <iden> wrappers as return type;missing;Update <file_name> to latest. Add default constructor.;latest, Add default constructor;Similar;0.5770481824874878
Add missing <iden> wrappers as return type;missing;Add simple package info to root package  ;simple;Similar;0.5834109783172607
Add missing <iden> wrappers as return type;missing;Properly name ignored exception in catch block  ;Properly naming;Similar;0.6223255395889282
Add missing <iden> wrappers as return type;missing;Correct header length checking logic. Improve exception message;Improve;Similar;0.5615442991256714
Add missing <iden> wrappers as return type;missing;Fix IntelliJ auto-formatting  ;Improve the formatting;Similar;0.6675065755844116
Add missing <iden> wrappers as return type;missing;Add path and query tests for pre-encoded values;-;Similar;0.6552726030349731
Add missing <iden> wrappers as return type;missing;Add converters module and protobuf converter;to the sentence;Similar;0.505010724067688
Add missing <iden> wrappers as return type;missing;Newline at end of file  ;Yes plz;Similar;0.6023828983306885
Add missing <iden> wrappers as return type;missing;Log network and unexpected exceptions if logging is enabled  ;if logging is enabled;Similar;0.5700523853302002
Add missing <iden> wrappers as return type;missing;Fix styling of <iden> download;styling;Similar;0.6445097923278809
Add missing <iden> wrappers as return type;missing;" 
- Add <iden> <method_name>  
- Also update our sample to use <iden> contributors rather than the <iden>  
- Bump some dependencies to their latest versions  
";" 
- Use this on <iden> <version> and prior and when on the <iden>  
- because the latter is shutting down and subject to lame rate limiting when on common networks";Similar;0.577080249786377
Add missing <iden> wrappers as return type;missing;Provide a mutable <file_name> implementation. <iden> to conform.;to conform;Similar;0.5779627561569214
Add missing <iden> wrappers as return type;missing;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Similar;0.6680049896240234
Add missing <iden> wrappers as return type;missing;Simplify test method fetching;-;Similar;0.5194978713989258
Add missing <iden> wrappers as return type;missing;Allow <file_name> instantiation  ;Hide some Apache implementation details;Similar;0.6345327496528625
Add missing <iden> wrappers as return type;missing;Hide more implementation details;more implementation details;Similar;0.6180568933486938
Add missing <iden> wrappers as return type;missing;Remove unused <file_name> classes;unused;Similar;0.7570862770080566
Add missing <iden> wrappers as return type;missing;Introduce builder pattern to instantiate <method_name>;profiler are now optional. Convenience methods for specifying a <iden> or an <iden> directly are also provided.;Similar;0.5800241231918335
Add missing <iden> wrappers as return type;missing;Use no_aop Guice variant  ;no_aop;Similar;0.6779629588127136
Add missing <iden> wrappers as return type;missing;Adding a human-readable name to the  <file_name>  interface;human-readable;Similar;0.5069011449813843
Add missing <iden> wrappers as return type;missing;Added getTag() and logChunk() methods;for easier subclassing;Similar;0.6026740074157715
Add missing <iden> wrappers as return type;missing;Reintroduced deprecated <file_name> constructor;deprecated;Similar;0.7803894877433777
Add missing <iden> wrappers as return type;missing;Fix small wording issues in custom converter docs;small wording issues;Similar;0.5317124724388123
Add missing <iden> wrappers as return type;missing;Update custom conversion docs per feedback;Clarify that <iden> is just the default converter, Add section on other built-in converters, Add section on implementing your own custom converters;Similar;0.5376083850860596
Add missing <iden> wrappers as return type;missing;Fix style nits per review;per review;Similar;0.6059468984603882
Add missing <iden> wrappers as return type;missing;fix issue <issue_link> : permit use when servers or intermediaries mistakingly miss Content-<iden> header;mistakingly miss Content-<iden> header;Similar;0.6871132850646973
Add missing <iden> wrappers as return type;missing;rename <iden> ->  <file_name>  ;to harvest the names for new annotations;Similar;0.6626133918762207
Add missing <iden> wrappers as return type;missing;Move variable to where it is used;where it is used;Similar;0.6478022336959839
Add missing <iden> wrappers as return type;missing;Fix spelling;spelling;Similar;0.6241357326507568
Add missing <iden> wrappers as return type;missing;Add fixed query parameter support;support;Similar;0.6815981864929199
Add missing <iden> wrappers as return type;missing;Add <file_name>, <file_name> support to <file_name>  ;-;Similar;0.5521889925003052
Add missing <iden> wrappers as return type;missing;Allow <file_name> extensions;improved <file_name>;Similar;0.6427912712097168
Add missing <iden> wrappers as return type;missing;Repackage gson into retrofit.internal.gson  ;enhance integration;Similar;0.6319974660873413
Add missing <iden> wrappers as return type;missing;Ensure <file_name> and <file_name> use FileDescriptor.sync();Ensure <file_name> and <file_name> use FileDescriptor.sync();Similar;0.5747880935668945
Add missing <iden> wrappers as return type;missing;moved util to <file_name>, added <file_name>  ;Organize and enhance code files;Similar;0.6295338869094849
Add missing <iden> wrappers as return type;missing;Use <iden> <version>s JsonAdapter.serializeNulls();serializeNulls;Similar;0.6573539972305298
Add missing <iden> wrappers as return type;missing;Removal of Unnecessary Creation of <iden>;if <iden> has length 0 there is no point to create stringBuilder for that. that condition check needs to happen before stringBuilder creation.;Similar;0.735526442527771
Add missing <iden> wrappers as return type;missing;Expose <iden> via the <file_name> injection-like framework;injection-like framework;Similar;0.6145894527435303
Add missing <iden> wrappers as return type;missing;Changing `<file_name>` to implement `<file_name>` interface;interface;Similar;0.5968495607376099
Add missing <iden> wrappers as return type;missing;Fix support for protobuf <version>+;ExtensionRegistry cannot be null;Similar;0.6710391640663147
Add missing <iden> wrappers as return type;missing;Fix typo;typo;Similar;0.6201193332672119
Add missing <iden> wrappers as return type;missing;Remove redundant throws  ;redundant;Similar;0.6864303350448608
Added a <file_name> rule for the line indentation  ;Indentation;Adding GET support to <file_name>;support;Similar;0.8554009199142456
Added a <file_name> rule for the line indentation  ;Indentation;add paragraph clarifying logging;clarifying logging;Similar;0.6194334030151367
Added a <file_name> rule for the line indentation  ;Indentation;Add response object to <file_name> success;Gives access to response headers while still converting response within retrofit;Similar;0.7522678375244141
Added a <file_name> rule for the line indentation  ;Indentation;Support <iden> / <iden> for @field;Supporting <iden> / <iden> for @field;Similar;0.6827021241188049
Added a <file_name> rule for the line indentation  ;Indentation;Add <iden> wrapper validation  ;validation;Similar;0.7514346241950989
Added a <file_name> rule for the line indentation  ;Indentation;Add <iden> integration tests;integration;Similar;0.690321683883667
Added a <file_name> rule for the line indentation  ;Indentation;Add coroutine support to <file_name> ;coroutine support;Similar;0.8920019268989563
Added a <file_name> rule for the line indentation  ;Indentation;Migrate forced suspension mechanism from yield to <iden>;Since its possible for certain dispatchers to completely avoid yielding, and currently the immediate dispatchers exhibit this behavior, we need an alternate mechanism of forcing suspension or UndeclaredThrowableExceptions will still be seen.;Similar;0.6314963698387146
Added a <file_name> rule for the line indentation  ;Indentation;Add some missing @nullable annotations to <file_name> ;missing;Similar;0.7064200639724731
Added a <file_name> rule for the line indentation  ;Indentation;Add some missing Nullable annotations;missing;Similar;0.5079424381256104
Added a <file_name> rule for the line indentation  ;Indentation;Add some missing Nullable annotations;missing;Similar;0.5079424381256104
Added a <file_name> rule for the line indentation  ;Indentation;Expose static factory for <file_name> <enter> Also rework the internals of how an <file_name> gets instantiated and set as a tag on the <iden>;This will make a future change easier to land;Similar;0.7024717330932617
Added a <file_name> rule for the line indentation  ;Indentation;Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;Similar;0.7408139109611511
Added a <file_name> rule for the line indentation  ;Indentation;Consolidate exception formatters in one place  ;streamline implementation and improve maintenance;Similar;0.5187859535217285
Added a <file_name> rule for the line indentation  ;Indentation;Pull out <file_name> base class <enter>;This will allow us to support multiple forms of invocation beyond <iden> calls.;Similar;0.7947534322738647
Added a <file_name> rule for the line indentation  ;Indentation;Use HTTPS links in documentation where possible  ;where possible;Similar;0.6320212483406067
Added a <file_name> rule for the line indentation  ;Indentation;Combine <file_name> and <iden> into <method_name> <enter>  ;This is one class that handles all of the annotations and binding for a service method;Similar;0.8550240397453308
Added a <file_name> rule for the line indentation  ;Indentation;Rename <method_name> to onSuccess(), and failure() to <iden>();to onSuccess(), and failure(), <iden>;Similar;0.6819144487380981
Added a <file_name> rule for the line indentation  ;Indentation;Refer to the latest OkHttp version;latest;Similar;0.5580732226371765
Added a <file_name> rule for the line indentation  ;Indentation;Add JSR 305 nullability annotations;nullability annotations;Similar;0.5710746049880981
Added a <file_name> rule for the line indentation  ;Indentation;Update <file_name> to the latest version;the latest version;Similar;0.6538387537002563
Added a <file_name> rule for the line indentation  ;Indentation;Remove duplicated test  ;It is the same as in this file;Similar;0.5491775274276733
Added a <file_name> rule for the line indentation  ;Indentation;call it a <version>;Actually;Similar;0.6536388993263245
Added a <file_name> rule for the line indentation  ;Indentation;Add example of using <iden> <file_name> as a <iden> <method_name>  ;This also adds the <file_name> instance as a param to the string <file_name> to allow it to delegate to others directly. This brings it into parity with the method signatures of the other <file_name> methods anyway.;Similar;0.8964203596115112
Added a <file_name> rule for the line indentation  ;Indentation;Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;Similar;0.68825364112854
Added a <file_name> rule for the line indentation  ;Indentation;Naming, API changes, and documentation around mock services.  ;mock services;Similar;0.6445251703262329
Added a <file_name> rule for the line indentation  ;Indentation;Introduce factory for <file_name> concept;This is still highly-inefficient in its internal use and there are no tests proving that we now fail earlier in configuring a service method;Similar;0.7218958735466003
Added a <file_name> rule for the line indentation  ;Indentation;Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;Similar;0.6880208849906921
Added a <file_name> rule for the line indentation  ;Indentation;Remove unused classes from <otherCommit_link>;unused;Similar;0.5538401007652283
Added a <file_name> rule for the line indentation  ;Indentation;Update to OkHttp <version>. Fix a tiny potential NPE;potential NPE;Similar;0.5290937423706055
Added a <file_name> rule for the line indentation  ;Indentation;Fix annotation link;<iden> is gone;Similar;0.6603543162345886
Added a <file_name> rule for the line indentation  ;Indentation;Use the annotations directly for parameter handling.;Before we attempted to normalize the parameter annotations into a name and type model. The introduction of multi-part transfer encodings required something more expressive so the annotation instances themselves were used. This change removes the name and type in favor of using the annotation for everything.;Similar;0.720511794090271
Added a <file_name> rule for the line indentation  ;Indentation;Expose success type on <method_name>;Theres a bit of a test gap going on for all the variants of successful and erroneous handling of sync, async, and rx. This new behavior is fully tested in all three but more general behavior testing for them will be needed in a follow-up.;Similar;0.771174430847168
Added a <file_name> rule for the line indentation  ;Indentation;Correct map parameter type detection for query and field  ;-;Similar;0.5646955966949463
Added a <file_name> rule for the line indentation  ;Indentation;Update <file_name> to latest. Add default constructor.;latest, Add default constructor;Similar;0.7637903690338135
Added a <file_name> rule for the line indentation  ;Indentation;Add simple package info to root package  ;simple;Similar;0.5616097450256348
Added a <file_name> rule for the line indentation  ;Indentation;Correct header length checking logic. Improve exception message;Improve;Similar;0.5804822444915771
Added a <file_name> rule for the line indentation  ;Indentation;Promote <iden> logging to a class which knows about chunking  ;This is an <iden>-specific implementation detail which is now only performed when needed;Similar;0.607724666595459
Added a <file_name> rule for the line indentation  ;Indentation;Fix IntelliJ auto-formatting  ;Improve the formatting;Similar;0.6491088271141052
Added a <file_name> rule for the line indentation  ;Indentation;Add path and query tests for pre-encoded values;-;Similar;0.7414048910140991
Added a <file_name> rule for the line indentation  ;Indentation;Add converters module and protobuf converter;to the sentence;Similar;0.6531474590301514
Added a <file_name> rule for the line indentation  ;Indentation;Newline at end of file  ;Yes plz;Similar;0.6499911546707153
Added a <file_name> rule for the line indentation  ;Indentation;Log network and unexpected exceptions if logging is enabled  ;if logging is enabled;Similar;0.5137192010879517
Added a <file_name> rule for the line indentation  ;Indentation;Fix styling of <iden> download;styling;Similar;0.6852887868881226
Added a <file_name> rule for the line indentation  ;Indentation;Rename pair to field to match annotation;match annotation;Similar;0.5577985644340515
Added a <file_name> rule for the line indentation  ;Indentation;" 
- Add <iden> <method_name>  
- Also update our sample to use <iden> contributors rather than the <iden>  
- Bump some dependencies to their latest versions  
";" 
- Use this on <iden> <version> and prior and when on the <iden>  
- because the latter is shutting down and subject to lame rate limiting when on common networks";Similar;0.5705277919769287
Added a <file_name> rule for the line indentation  ;Indentation;Provide a mutable <file_name> implementation. <iden> to conform.;to conform;Similar;0.8113129138946533
Added a <file_name> rule for the line indentation  ;Indentation;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Similar;0.6635324358940125
Added a <file_name> rule for the line indentation  ;Indentation;Simplify test method fetching;-;Similar;0.5312961339950562
Added a <file_name> rule for the line indentation  ;Indentation;Allow <file_name> instantiation  ;Hide some Apache implementation details;Similar;0.8032503128051758
Added a <file_name> rule for the line indentation  ;Indentation;Remove unused <file_name> classes;unused;Similar;0.6038678884506226
Added a <file_name> rule for the line indentation  ;Indentation;Introduce builder pattern to instantiate <method_name>;profiler are now optional. Convenience methods for specifying a <iden> or an <iden> directly are also provided.;Similar;0.7842742204666138
Added a <file_name> rule for the line indentation  ;Indentation;Use no_aop Guice variant  ;no_aop;Similar;0.518791675567627
Added a <file_name> rule for the line indentation  ;Indentation;Adding a human-readable name to the  <file_name>  interface;human-readable;Similar;0.822344183921814
Added a <file_name> rule for the line indentation  ;Indentation;Added getTag() and logChunk() methods;for easier subclassing;Similar;0.7259490489959717
Added a <file_name> rule for the line indentation  ;Indentation;Reintroduced deprecated <file_name> constructor;deprecated;Similar;0.6688984036445618
Added a <file_name> rule for the line indentation  ;Indentation;Fix small wording issues in custom converter docs;small wording issues;Similar;0.5362818241119385
Added a <file_name> rule for the line indentation  ;Indentation;Update custom conversion docs per feedback;Clarify that <iden> is just the default converter, Add section on other built-in converters, Add section on implementing your own custom converters;Similar;0.6816932559013367
Added a <file_name> rule for the line indentation  ;Indentation;Fix style nits per review;per review;Similar;0.5772399306297302
Added a <file_name> rule for the line indentation  ;Indentation;fix issue <issue_link> : permit use when servers or intermediaries mistakingly miss Content-<iden> header;mistakingly miss Content-<iden> header;Similar;0.5508260726928711
Added a <file_name> rule for the line indentation  ;Indentation;rename <iden> ->  <file_name>  ;to harvest the names for new annotations;Similar;0.8561747074127197
Added a <file_name> rule for the line indentation  ;Indentation;Move variable to where it is used;where it is used;Similar;0.6036152839660645
Added a <file_name> rule for the line indentation  ;Indentation;Fix spelling;spelling;Similar;0.5757867693901062
Added a <file_name> rule for the line indentation  ;Indentation;Add fixed query parameter support;support;Similar;0.7403875589370728
Added a <file_name> rule for the line indentation  ;Indentation;Add <file_name>, <file_name> support to <file_name>  ;-;Similar;0.8266809582710266
Added a <file_name> rule for the line indentation  ;Indentation;Allow <file_name> extensions;improved <file_name>;Similar;0.8177690505981445
Added a <file_name> rule for the line indentation  ;Indentation;Repackage gson into retrofit.internal.gson  ;enhance integration;Similar;0.6568114757537842
Added a <file_name> rule for the line indentation  ;Indentation;Ensure <file_name> and <file_name> use FileDescriptor.sync();Ensure <file_name> and <file_name> use FileDescriptor.sync();Similar;0.770876944065094
Added a <file_name> rule for the line indentation  ;Indentation;moved util to <file_name>, added <file_name>  ;Organize and enhance code files;Similar;0.8607685565948486
Added a <file_name> rule for the line indentation  ;Indentation;Use <iden> <version>s JsonAdapter.serializeNulls();serializeNulls;Similar;0.7259629964828491
Added a <file_name> rule for the line indentation  ;Indentation;Removal of Unnecessary Creation of <iden>;if <iden> has length 0 there is no point to create stringBuilder for that. that condition check needs to happen before stringBuilder creation.;Similar;0.5354008674621582
Added a <file_name> rule for the line indentation  ;Indentation;Expose <iden> via the <file_name> injection-like framework;injection-like framework;Similar;0.8430824279785156
Added a <file_name> rule for the line indentation  ;Indentation;Changing `<file_name>` to implement `<file_name>` interface;interface;Similar;0.8287795186042786
Added a <file_name> rule for the line indentation  ;Indentation;Fix support for protobuf <version>+;ExtensionRegistry cannot be null;Similar;0.7096214890480042
Added a <file_name> rule for the line indentation  ;Indentation;Fix typo;typo;Similar;0.5936979055404663
Adding GET support to <file_name>;support;baseUrl should end with /;end with /;Similar;0.5086513757705688
Adding GET support to <file_name>;support;add paragraph clarifying logging;clarifying logging;Similar;0.6733664870262146
Adding GET support to <file_name>;support;Add response object to <file_name> success;Gives access to response headers while still converting response within retrofit;Similar;0.8925526142120361
Adding GET support to <file_name>;support;Support <iden> / <iden> for @field;Supporting <iden> / <iden> for @field;Similar;0.7214571237564087
Adding GET support to <file_name>;support;Add <iden> wrapper validation  ;validation;Similar;0.8020498156547546
Adding GET support to <file_name>;support;Add <iden> integration tests;integration;Similar;0.7338217496871948
Adding GET support to <file_name>;support;Add coroutine support to <file_name> ;coroutine support;Similar;0.9555798768997192
Adding GET support to <file_name>;support;Migrate forced suspension mechanism from yield to <iden>;Since its possible for certain dispatchers to completely avoid yielding, and currently the immediate dispatchers exhibit this behavior, we need an alternate mechanism of forcing suspension or UndeclaredThrowableExceptions will still be seen.;Similar;0.626343846321106
Adding GET support to <file_name>;support;Allow service interfaces to extend other interfaces  ;With a higher minSdkVersion, the bug which prevented this on <iden> no longer exists;Similar;0.6179026365280151
Adding GET support to <file_name>;support;Add some missing @nullable annotations to <file_name> ;missing;Similar;0.680355429649353
Adding GET support to <file_name>;support;Add some missing Nullable annotations;missing;Similar;0.5068851709365845
Adding GET support to <file_name>;support;Add some missing Nullable annotations;missing;Similar;0.5068851709365845
Adding GET support to <file_name>;support;Use a dummy value to further validation optional delegation;This ensures the value can only come from only one place;Similar;0.5482832193374634
Adding GET support to <file_name>;support;Expose static factory for <file_name> <enter> Also rework the internals of how an <file_name> gets instantiated and set as a tag on the <iden>;This will make a future change easier to land;Similar;0.6555442214012146
Adding GET support to <file_name>;support;Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;Similar;0.8117362260818481
Adding GET support to <file_name>;support;Consolidate exception formatters in one place  ;streamline implementation and improve maintenance;Similar;0.622450590133667
Adding GET support to <file_name>;support;Pull out <file_name> base class <enter>;This will allow us to support multiple forms of invocation beyond <iden> calls.;Similar;0.8199319839477539
Adding GET support to <file_name>;support;Use HTTPS links in documentation where possible  ;where possible;Similar;0.7085001468658447
Adding GET support to <file_name>;support;Combine <file_name> and <iden> into <method_name> <enter>  ;This is one class that handles all of the annotations and binding for a service method;Similar;0.8595447540283203
Adding GET support to <file_name>;support;Rename <method_name> to onSuccess(), and failure() to <iden>();to onSuccess(), and failure(), <iden>;Similar;0.6547768115997314
Adding GET support to <file_name>;support;Refer to the latest OkHttp version;latest;Similar;0.6016908884048462
Adding GET support to <file_name>;support;Add JSR 305 nullability annotations;nullability annotations;Similar;0.5189284682273865
Adding GET support to <file_name>;support;Update <file_name> to the latest version;the latest version;Similar;0.698113203048706
Adding GET support to <file_name>;support;Remove duplicated test  ;It is the same as in this file;Similar;0.5511826276779175
Adding GET support to <file_name>;support;call it a <version>;Actually;Similar;0.7453464865684509
Adding GET support to <file_name>;support;Remove the need for generated accessor methods  ;need for generated accessor methods;Similar;0.5054275393486023
Adding GET support to <file_name>;support;Propagate callback executor even when not explicitly specified  ;This lets custom <iden> implementations use the <file_name> default for their callbacks;Similar;0.551925778388977
Adding GET support to <file_name>;support;Add example of using <iden> <file_name> as a <iden> <method_name>  ;This also adds the <file_name> instance as a param to the string <file_name> to allow it to delegate to others directly. This brings it into parity with the method signatures of the other <file_name> methods anyway.;Similar;0.9110247492790222
Adding GET support to <file_name>;support;Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;Similar;0.6871768236160278
Adding GET support to <file_name>;support;Naming, API changes, and documentation around mock services.  ;mock services;Similar;0.6412254571914673
Adding GET support to <file_name>;support;Introduce factory for <file_name> concept;This is still highly-inefficient in its internal use and there are no tests proving that we now fail earlier in configuring a service method;Similar;0.7394587993621826
Adding GET support to <file_name>;support;Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;Similar;0.6678153276443481
Adding GET support to <file_name>;support;Remove unused classes from <otherCommit_link>;unused;Similar;0.5582492351531982
Adding GET support to <file_name>;support;Update to OkHttp <version>. Fix a tiny potential NPE;potential NPE;Similar;0.5504217743873596
Adding GET support to <file_name>;support;Fix annotation link;<iden> is gone;Similar;0.7371342182159424
Adding GET support to <file_name>;support;Use the annotations directly for parameter handling.;Before we attempted to normalize the parameter annotations into a name and type model. The introduction of multi-part transfer encodings required something more expressive so the annotation instances themselves were used. This change removes the name and type in favor of using the annotation for everything.;Similar;0.7270143628120422
Adding GET support to <file_name>;support;Expose success type on <method_name>;Theres a bit of a test gap going on for all the variants of successful and erroneous handling of sync, async, and rx. This new behavior is fully tested in all three but more general behavior testing for them will be needed in a follow-up.;Similar;0.8535876870155334
Adding GET support to <file_name>;support;Correct map parameter type detection for query and field  ;-;Similar;0.5485800504684448
Adding GET support to <file_name>;support;Update <file_name> to latest. Add default constructor.;latest, Add default constructor;Similar;0.7919994592666626
Adding GET support to <file_name>;support;Add simple package info to root package  ;simple;Similar;0.5882188081741333
Adding GET support to <file_name>;support;Correct header length checking logic. Improve exception message;Improve;Similar;0.617047905921936
Adding GET support to <file_name>;support;Promote <iden> logging to a class which knows about chunking  ;This is an <iden>-specific implementation detail which is now only performed when needed;Similar;0.6894911527633667
Adding GET support to <file_name>;support;Fix IntelliJ auto-formatting  ;Improve the formatting;Similar;0.6818487048149109
Adding GET support to <file_name>;support;Add path and query tests for pre-encoded values;-;Similar;0.7347501516342163
Adding GET support to <file_name>;support;Add converters module and protobuf converter;to the sentence;Similar;0.7092060446739197
Adding GET support to <file_name>;support;Newline at end of file  ;Yes plz;Similar;0.6211174726486206
Adding GET support to <file_name>;support;Log network and unexpected exceptions if logging is enabled  ;if logging is enabled;Similar;0.6405555009841919
Adding GET support to <file_name>;support;Fix styling of <iden> download;styling;Similar;0.7330445647239685
Adding GET support to <file_name>;support;Rename pair to field to match annotation;match annotation;Similar;0.5234713554382324
Adding GET support to <file_name>;support;" 
- Add <iden> <method_name>  
- Also update our sample to use <iden> contributors rather than the <iden>  
- Bump some dependencies to their latest versions  
";" 
- Use this on <iden> <version> and prior and when on the <iden>  
- because the latter is shutting down and subject to lame rate limiting when on common networks";Similar;0.5823470950126648
Adding GET support to <file_name>;support;Provide a mutable <file_name> implementation. <iden> to conform.;to conform;Similar;0.8494551181793213
Adding GET support to <file_name>;support;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Similar;0.6621847152709961
Adding GET support to <file_name>;support;Simplify test method fetching;-;Similar;0.61456298828125
Adding GET support to <file_name>;support;Allow <file_name> instantiation  ;Hide some Apache implementation details;Similar;0.8850601315498352
Adding GET support to <file_name>;support;Hide more implementation details;more implementation details;Similar;0.5603369474411011
Adding GET support to <file_name>;support;Remove unused <file_name> classes;unused;Similar;0.6041333675384521
Adding GET support to <file_name>;support;Introduce builder pattern to instantiate <method_name>;profiler are now optional. Convenience methods for specifying a <iden> or an <iden> directly are also provided.;Similar;0.7716882228851318
Adding GET support to <file_name>;support;Use no_aop Guice variant  ;no_aop;Similar;0.5240155458450317
Adding GET support to <file_name>;support;Adding a human-readable name to the  <file_name>  interface;human-readable;Similar;0.8336607217788696
Adding GET support to <file_name>;support;Added getTag() and logChunk() methods;for easier subclassing;Similar;0.7783747315406799
Adding GET support to <file_name>;support;Reintroduced deprecated <file_name> constructor;deprecated;Similar;0.6692468523979187
Adding GET support to <file_name>;support;Fix small wording issues in custom converter docs;small wording issues;Similar;0.52044677734375
Adding GET support to <file_name>;support;Update custom conversion docs per feedback;Clarify that <iden> is just the default converter, Add section on other built-in converters, Add section on implementing your own custom converters;Similar;0.6896656155586243
Adding GET support to <file_name>;support;Fix style nits per review;per review;Similar;0.6088923811912537
Adding GET support to <file_name>;support;fix issue <issue_link> : permit use when servers or intermediaries mistakingly miss Content-<iden> header;mistakingly miss Content-<iden> header;Similar;0.5865510106086731
Adding GET support to <file_name>;support;rename <iden> ->  <file_name>  ;to harvest the names for new annotations;Similar;0.84527188539505
Adding GET support to <file_name>;support;Move variable to where it is used;where it is used;Similar;0.6592556238174438
Adding GET support to <file_name>;support;Fix spelling;spelling;Similar;0.5919249057769775
Adding GET support to <file_name>;support;Add fixed query parameter support;support;Similar;0.8055375814437866
Adding GET support to <file_name>;support;Add <file_name>, <file_name> support to <file_name>  ;-;Similar;0.9528114199638367
Adding GET support to <file_name>;support;Allow <file_name> extensions;improved <file_name>;Similar;0.9060639142990112
Adding GET support to <file_name>;support;Repackage gson into retrofit.internal.gson  ;enhance integration;Similar;0.6622980833053589
Adding GET support to <file_name>;support;Ensure <file_name> and <file_name> use FileDescriptor.sync();Ensure <file_name> and <file_name> use FileDescriptor.sync();Similar;0.8475877642631531
Adding GET support to <file_name>;support;moved util to <file_name>, added <file_name>  ;Organize and enhance code files;Similar;0.9100902080535889
Adding GET support to <file_name>;support;Use <iden> <version>s JsonAdapter.serializeNulls();serializeNulls;Similar;0.756777286529541
Adding GET support to <file_name>;support;Removal of Unnecessary Creation of <iden>;if <iden> has length 0 there is no point to create stringBuilder for that. that condition check needs to happen before stringBuilder creation.;Similar;0.5137323141098022
Adding GET support to <file_name>;support;Expose <iden> via the <file_name> injection-like framework;injection-like framework;Similar;0.8407281637191772
Adding GET support to <file_name>;support;Changing `<file_name>` to implement `<file_name>` interface;interface;Similar;0.8630207777023315
Adding GET support to <file_name>;support;Fix support for protobuf <version>+;ExtensionRegistry cannot be null;Similar;0.7941693663597107
Adding GET support to <file_name>;support;Fix typo;typo;Similar;0.6560318470001221
Fix inconsistencies in javadocs  ;These changes were made with consistency in mind, in relation to the rest of the project;Small fixes  ;error-prone;Similar;0.5668681859970093
Fix inconsistencies in javadocs  ;These changes were made with consistency in mind, in relation to the rest of the project;Migrate forced suspension mechanism from yield to <iden>;Since its possible for certain dispatchers to completely avoid yielding, and currently the immediate dispatchers exhibit this behavior, we need an alternate mechanism of forcing suspension or UndeclaredThrowableExceptions will still be seen.;Similar;0.5094176530838013
Fix inconsistencies in javadocs  ;These changes were made with consistency in mind, in relation to the rest of the project;Add more obviously missing @nullable annotations;missing;Similar;0.7087246179580688
Fix inconsistencies in javadocs  ;These changes were made with consistency in mind, in relation to the rest of the project;Add some missing @nullable annotations to <file_name> ;missing;Similar;0.7100552916526794
Fix inconsistencies in javadocs  ;These changes were made with consistency in mind, in relation to the rest of the project;Fatal errors should crash the dispatcher thread;Fatal errors should be propagated by the async observer instead of attempting to make its way back downstream.;Similar;0.6376450061798096
Fix inconsistencies in javadocs  ;These changes were made with consistency in mind, in relation to the rest of the project;Add some missing Nullable annotations;missing;Similar;0.7643290758132935
Fix inconsistencies in javadocs  ;These changes were made with consistency in mind, in relation to the rest of the project;Add some missing Nullable annotations;missing;Similar;0.7643290758132935
Fix inconsistencies in javadocs  ;These changes were made with consistency in mind, in relation to the rest of the project;Use a dummy value to further validation optional delegation;This ensures the value can only come from only one place;Similar;0.5796386003494263
Fix inconsistencies in javadocs  ;These changes were made with consistency in mind, in relation to the rest of the project;Re-work unresolvable type detection in parameters  ;"In order to natively support Kotlins suspend modifier in the future, we need to allow wildcards to be used for the last parameter; As a result, we only validate the shape of a type once an annotation is detected.";Similar;0.7115610837936401
Fix inconsistencies in javadocs  ;These changes were made with consistency in mind, in relation to the rest of the project;Remove old <iden> nonsense;As of API 26 the android.jar contains the classes checked by <iden> and used by <iden>.Java8. And we dont encourage throwing checked exceptions from the service method but instead routing them through your call adapter.;Similar;0.5874601006507874
Fix inconsistencies in javadocs  ;These changes were made with consistency in mind, in relation to the rest of the project;Rename <method_name> to onSuccess(), and failure() to <iden>();to onSuccess(), and failure(), <iden>;Similar;0.5914023518562317
Fix inconsistencies in javadocs  ;These changes were made with consistency in mind, in relation to the rest of the project;Add JSR 305 nullability annotations;nullability annotations;Similar;0.5698378086090088
Fix inconsistencies in javadocs  ;These changes were made with consistency in mind, in relation to the rest of the project;Remove unused interface  ;unused;Similar;0.614713191986084
Fix inconsistencies in javadocs  ;These changes were made with consistency in mind, in relation to the rest of the project;Simplify observable creation and reduce runtime allocations;Simplify, reduce;Similar;0.6985411643981934
Fix inconsistencies in javadocs  ;These changes were made with consistency in mind, in relation to the rest of the project;Refactor <iden> tests to avoid the use of blocking operators  ;avoid the use of blocking operators;Similar;0.5934456586837769
Fix inconsistencies in javadocs  ;These changes were made with consistency in mind, in relation to the rest of the project;Remove duplicated test  ;It is the same as in this file;Similar;0.6911025047302246
Fix inconsistencies in javadocs  ;These changes were made with consistency in mind, in relation to the rest of the project;Add missing import  ;missing;Similar;0.623245894908905
Fix inconsistencies in javadocs  ;These changes were made with consistency in mind, in relation to the rest of the project;Remove the need for generated accessor methods  ;need for generated accessor methods;Similar;0.602614164352417
Fix inconsistencies in javadocs  ;These changes were made with consistency in mind, in relation to the rest of the project;Use new <iden>s non-throwing close and a simpler body copy;non-throwing close and a simpler body			      ;Similar;0.5165000557899475
Fix inconsistencies in javadocs  ;These changes were made with consistency in mind, in relation to the rest of the project;Remove incorrect generic parameter  ;incorrect;Similar;0.6894098520278931
Fix inconsistencies in javadocs  ;These changes were made with consistency in mind, in relation to the rest of the project;Update RxJava to the specified version with an important Android fix  ;In case someone is relying on the transitive dependency;Similar;0.5233398675918579
Fix inconsistencies in javadocs  ;These changes were made with consistency in mind, in relation to the rest of the project;Naming, API changes, and documentation around mock services.  ;mock services;Similar;0.584291934967041
Fix inconsistencies in javadocs  ;These changes were made with consistency in mind, in relation to the rest of the project;Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;Similar;0.503110408782959
Fix inconsistencies in javadocs  ;These changes were made with consistency in mind, in relation to the rest of the project;Remove unused classes from <otherCommit_link>;unused;Similar;0.5807636976242065
Fix inconsistencies in javadocs  ;These changes were made with consistency in mind, in relation to the rest of the project;Update to OkHttp <version>. Fix a tiny potential NPE;potential NPE;Similar;0.6657133102416992
Fix inconsistencies in javadocs  ;These changes were made with consistency in mind, in relation to the rest of the project;Fix annotation link;<iden> is gone;Similar;0.6577272415161133
Fix inconsistencies in javadocs  ;These changes were made with consistency in mind, in relation to the rest of the project;Add simple package info to root package  ;simple;Similar;0.5134149789810181
Fix inconsistencies in javadocs  ;These changes were made with consistency in mind, in relation to the rest of the project;Correct header length checking logic. Improve exception message;Improve;Similar;0.5621263384819031
Fix inconsistencies in javadocs  ;These changes were made with consistency in mind, in relation to the rest of the project;Fix IntelliJ auto-formatting  ;Improve the formatting;Similar;0.6680961847305298
Fix inconsistencies in javadocs  ;These changes were made with consistency in mind, in relation to the rest of the project;Log network and unexpected exceptions if logging is enabled  ;if logging is enabled;Similar;0.5094463229179382
Fix inconsistencies in javadocs  ;These changes were made with consistency in mind, in relation to the rest of the project;Fix styling of <iden> download;styling;Similar;0.6287875175476074
Fix inconsistencies in javadocs  ;These changes were made with consistency in mind, in relation to the rest of the project;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Similar;0.5883734226226807
Fix inconsistencies in javadocs  ;These changes were made with consistency in mind, in relation to the rest of the project;Simplify test method fetching;-;Similar;0.5629251003265381
Fix inconsistencies in javadocs  ;These changes were made with consistency in mind, in relation to the rest of the project;Hide more implementation details;more implementation details;Similar;0.5444446802139282
Fix inconsistencies in javadocs  ;These changes were made with consistency in mind, in relation to the rest of the project;Remove unused <file_name> classes;unused;Similar;0.571894109249115
Fix inconsistencies in javadocs  ;These changes were made with consistency in mind, in relation to the rest of the project;Use no_aop Guice variant  ;no_aop;Similar;0.5052095651626587
Fix inconsistencies in javadocs  ;These changes were made with consistency in mind, in relation to the rest of the project;Reintroduced deprecated <file_name> constructor;deprecated;Similar;0.5856097936630249
Fix inconsistencies in javadocs  ;These changes were made with consistency in mind, in relation to the rest of the project;Fix small wording issues in custom converter docs;small wording issues;Similar;0.6676241159439087
Fix inconsistencies in javadocs  ;These changes were made with consistency in mind, in relation to the rest of the project;Fix style nits per review;per review;Similar;0.5697368383407593
Fix inconsistencies in javadocs  ;These changes were made with consistency in mind, in relation to the rest of the project;fix issue <issue_link> : permit use when servers or intermediaries mistakingly miss Content-<iden> header;mistakingly miss Content-<iden> header;Similar;0.6868598461151123
Fix inconsistencies in javadocs  ;These changes were made with consistency in mind, in relation to the rest of the project;Fix spelling;spelling;Similar;0.6828950643539429
Fix inconsistencies in javadocs  ;These changes were made with consistency in mind, in relation to the rest of the project;Add fixed query parameter support;support;Similar;0.5573145151138306
Fix inconsistencies in javadocs  ;These changes were made with consistency in mind, in relation to the rest of the project;Removal of Unnecessary Creation of <iden>;if <iden> has length 0 there is no point to create stringBuilder for that. that condition check needs to happen before stringBuilder creation.;Similar;0.6764300465583801
Fix inconsistencies in javadocs  ;These changes were made with consistency in mind, in relation to the rest of the project;Changing `<file_name>` to implement `<file_name>` interface;interface;Similar;0.5172497034072876
Fix inconsistencies in javadocs  ;These changes were made with consistency in mind, in relation to the rest of the project;Fix support for protobuf <version>+;ExtensionRegistry cannot be null;Similar;0.5942398905754089
Fix inconsistencies in javadocs  ;These changes were made with consistency in mind, in relation to the rest of the project;Fix typo;typo;Similar;0.6449512243270874
Fix inconsistencies in javadocs  ;These changes were made with consistency in mind, in relation to the rest of the project;Remove redundant throws  ;redundant;Similar;0.5897541046142578
baseUrl should end with /;end with /;Add response object to <file_name> success;Gives access to response headers while still converting response within retrofit;Similar;0.5143992304801941
baseUrl should end with /;end with /;Support <iden> / <iden> for @field;Supporting <iden> / <iden> for @field;Similar;0.526675820350647
baseUrl should end with /;end with /;Add <iden> wrapper validation  ;validation;Similar;0.563166618347168
baseUrl should end with /;end with /;Small fixes  ;error-prone;Similar;0.5888446569442749
baseUrl should end with /;end with /;Migrate forced suspension mechanism from yield to <iden>;Since its possible for certain dispatchers to completely avoid yielding, and currently the immediate dispatchers exhibit this behavior, we need an alternate mechanism of forcing suspension or UndeclaredThrowableExceptions will still be seen.;Similar;0.7015411853790283
baseUrl should end with /;end with /;Add more obviously missing @nullable annotations;missing;Similar;0.6329324245452881
baseUrl should end with /;end with /;Add some missing @nullable annotations to <file_name> ;missing;Similar;0.5282593965530396
baseUrl should end with /;end with /;Add some missing Nullable annotations;missing;Similar;0.6269799470901489
baseUrl should end with /;end with /;Add some missing Nullable annotations;missing;Similar;0.6269799470901489
baseUrl should end with /;end with /;Use a dummy value to further validation optional delegation;This ensures the value can only come from only one place;Similar;0.6020828485488892
baseUrl should end with /;end with /;Re-work unresolvable type detection in parameters  ;"In order to natively support Kotlins suspend modifier in the future, we need to allow wildcards to be used for the last parameter; As a result, we only validate the shape of a type once an annotation is detected.";Similar;0.6463890671730042
baseUrl should end with /;end with /;Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;Similar;0.6840623617172241
baseUrl should end with /;end with /;Consolidate exception formatters in one place  ;streamline implementation and improve maintenance;Similar;0.6617404222488403
baseUrl should end with /;end with /;Pull out <file_name> base class <enter>;This will allow us to support multiple forms of invocation beyond <iden> calls.;Similar;0.505242645740509
baseUrl should end with /;end with /;Remove old <iden> nonsense;As of API 26 the android.jar contains the classes checked by <iden> and used by <iden>.Java8. And we dont encourage throwing checked exceptions from the service method but instead routing them through your call adapter.;Similar;0.7612262964248657
baseUrl should end with /;end with /;Combine <file_name> and <iden> into <method_name> <enter>  ;This is one class that handles all of the annotations and binding for a service method;Similar;0.5456314086914062
baseUrl should end with /;end with /;Rename <method_name> to onSuccess(), and failure() to <iden>();to onSuccess(), and failure(), <iden>;Similar;0.664207935333252
baseUrl should end with /;end with /;Refer to the latest OkHttp version;latest;Similar;0.5063794851303101
baseUrl should end with /;end with /;Add JSR 305 nullability annotations;nullability annotations;Similar;0.5136200189590454
baseUrl should end with /;end with /;Remove unused interface  ;unused;Similar;0.7846797108650208
baseUrl should end with /;end with /;Simplify observable creation and reduce runtime allocations;Simplify, reduce;Similar;0.6810723543167114
baseUrl should end with /;end with /;Refactor <iden> tests to avoid the use of blocking operators  ;avoid the use of blocking operators;Similar;0.5076907277107239
baseUrl should end with /;end with /;Remove duplicated test  ;It is the same as in this file;Similar;0.7011443376541138
baseUrl should end with /;end with /;call it a <version>;Actually;Similar;0.7560815811157227
baseUrl should end with /;end with /;Add missing import  ;missing;Similar;0.7284948825836182
baseUrl should end with /;end with /;Remove the need for generated accessor methods  ;need for generated accessor methods;Similar;0.7503529787063599
baseUrl should end with /;end with /;Propagate callback executor even when not explicitly specified  ;This lets custom <iden> implementations use the <file_name> default for their callbacks;Similar;0.5443321466445923
baseUrl should end with /;end with /;Add example of using <iden> <file_name> as a <iden> <method_name>  ;This also adds the <file_name> instance as a param to the string <file_name> to allow it to delegate to others directly. This brings it into parity with the method signatures of the other <file_name> methods anyway.;Similar;0.5360698699951172
baseUrl should end with /;end with /;Remove incorrect generic parameter  ;incorrect;Similar;0.7384666204452515
baseUrl should end with /;end with /;Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;Similar;0.5526731014251709
baseUrl should end with /;end with /;Remove unused classes from <otherCommit_link>;unused;Similar;0.7335023880004883
baseUrl should end with /;end with /;Update to OkHttp <version>. Fix a tiny potential NPE;potential NPE;Similar;0.5275474786758423
baseUrl should end with /;end with /;Fix annotation link;<iden> is gone;Similar;0.6232432126998901
baseUrl should end with /;end with /;Use the annotations directly for parameter handling.;Before we attempted to normalize the parameter annotations into a name and type model. The introduction of multi-part transfer encodings required something more expressive so the annotation instances themselves were used. This change removes the name and type in favor of using the annotation for everything.;Similar;0.5340855121612549
baseUrl should end with /;end with /;Expose success type on <method_name>;Theres a bit of a test gap going on for all the variants of successful and erroneous handling of sync, async, and rx. This new behavior is fully tested in all three but more general behavior testing for them will be needed in a follow-up.;Similar;0.5366029739379883
baseUrl should end with /;end with /;Properly name ignored exception in catch block  ;Properly naming;Similar;0.6299113035202026
baseUrl should end with /;end with /;Fix IntelliJ auto-formatting  ;Improve the formatting;Similar;0.5435099005699158
baseUrl should end with /;end with /;Newline at end of file  ;Yes plz;Similar;0.6265661716461182
baseUrl should end with /;end with /;Provide a mutable <file_name> implementation. <iden> to conform.;to conform;Similar;0.527496874332428
baseUrl should end with /;end with /;Simplify test method fetching;-;Similar;0.536707878112793
baseUrl should end with /;end with /;Allow <file_name> instantiation  ;Hide some Apache implementation details;Similar;0.5783632397651672
baseUrl should end with /;end with /;Hide more implementation details;more implementation details;Similar;0.5833869576454163
baseUrl should end with /;end with /;Remove unused <file_name> classes;unused;Similar;0.6618316173553467
baseUrl should end with /;end with /;Use no_aop Guice variant  ;no_aop;Similar;0.7745439410209656
baseUrl should end with /;end with /;Reintroduced deprecated <file_name> constructor;deprecated;Similar;0.6580824851989746
baseUrl should end with /;end with /;Fix style nits per review;per review;Similar;0.5501956343650818
baseUrl should end with /;end with /;rename <iden> ->  <file_name>  ;to harvest the names for new annotations;Similar;0.6013953685760498
baseUrl should end with /;end with /;Move variable to where it is used;where it is used;Similar;0.7240951061248779
baseUrl should end with /;end with /;Fix spelling;spelling;Similar;0.6377885341644287
baseUrl should end with /;end with /;Add fixed query parameter support;support;Similar;0.6105910539627075
baseUrl should end with /;end with /;Allow <file_name> extensions;improved <file_name>;Similar;0.5785838961601257
baseUrl should end with /;end with /;Repackage gson into retrofit.internal.gson  ;enhance integration;Similar;0.6337287425994873
baseUrl should end with /;end with /;moved util to <file_name>, added <file_name>  ;Organize and enhance code files;Similar;0.5494860410690308
baseUrl should end with /;end with /;Use <iden> <version>s JsonAdapter.serializeNulls();serializeNulls;Similar;0.5501244068145752
baseUrl should end with /;end with /;Removal of Unnecessary Creation of <iden>;if <iden> has length 0 there is no point to create stringBuilder for that. that condition check needs to happen before stringBuilder creation.;Similar;0.7905409336090088
baseUrl should end with /;end with /;Fix support for protobuf <version>+;ExtensionRegistry cannot be null;Similar;0.6360130310058594
baseUrl should end with /;end with /;Fix typo;typo;Similar;0.638251543045044
baseUrl should end with /;end with /;Remove redundant throws  ;redundant;Similar;0.7381889820098877
add paragraph clarifying logging;clarifying logging;Add response object to <file_name> success;Gives access to response headers while still converting response within retrofit;Similar;0.6328753232955933
add paragraph clarifying logging;clarifying logging;Support <iden> / <iden> for @field;Supporting <iden> / <iden> for @field;Similar;0.5591437816619873
add paragraph clarifying logging;clarifying logging;Add <iden> wrapper validation  ;validation;Similar;0.6721311211585999
add paragraph clarifying logging;clarifying logging;Add <iden> integration tests;integration;Similar;0.6076309084892273
add paragraph clarifying logging;clarifying logging;Add coroutine support to <file_name> ;coroutine support;Similar;0.6431013345718384
add paragraph clarifying logging;clarifying logging;Migrate forced suspension mechanism from yield to <iden>;Since its possible for certain dispatchers to completely avoid yielding, and currently the immediate dispatchers exhibit this behavior, we need an alternate mechanism of forcing suspension or UndeclaredThrowableExceptions will still be seen.;Similar;0.5945107340812683
add paragraph clarifying logging;clarifying logging;Add some missing @nullable annotations to <file_name> ;missing;Similar;0.5064579248428345
add paragraph clarifying logging;clarifying logging;Use a dummy value to further validation optional delegation;This ensures the value can only come from only one place;Similar;0.5433318614959717
add paragraph clarifying logging;clarifying logging;Expose static factory for <file_name> <enter> Also rework the internals of how an <file_name> gets instantiated and set as a tag on the <iden>;This will make a future change easier to land;Similar;0.5114358067512512
add paragraph clarifying logging;clarifying logging;Re-work unresolvable type detection in parameters  ;"In order to natively support Kotlins suspend modifier in the future, we need to allow wildcards to be used for the last parameter; As a result, we only validate the shape of a type once an annotation is detected.";Similar;0.5225695371627808
add paragraph clarifying logging;clarifying logging;Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;Similar;0.6539900302886963
add paragraph clarifying logging;clarifying logging;Consolidate exception formatters in one place  ;streamline implementation and improve maintenance;Similar;0.6368823647499084
add paragraph clarifying logging;clarifying logging;Pull out <file_name> base class <enter>;This will allow us to support multiple forms of invocation beyond <iden> calls.;Similar;0.5916481018066406
add paragraph clarifying logging;clarifying logging;Use HTTPS links in documentation where possible  ;where possible;Similar;0.5813002586364746
add paragraph clarifying logging;clarifying logging;Combine <file_name> and <iden> into <method_name> <enter>  ;This is one class that handles all of the annotations and binding for a service method;Similar;0.6228556632995605
add paragraph clarifying logging;clarifying logging;Rename <method_name> to onSuccess(), and failure() to <iden>();to onSuccess(), and failure(), <iden>;Similar;0.5319790840148926
add paragraph clarifying logging;clarifying logging;Refer to the latest OkHttp version;latest;Similar;0.5810678005218506
add paragraph clarifying logging;clarifying logging;Update <file_name> to the latest version;the latest version;Similar;0.5654228925704956
add paragraph clarifying logging;clarifying logging;Simplify observable creation and reduce runtime allocations;Simplify, reduce;Similar;0.5142898559570312
add paragraph clarifying logging;clarifying logging;Remove duplicated test  ;It is the same as in this file;Similar;0.5616806745529175
add paragraph clarifying logging;clarifying logging;call it a <version>;Actually;Similar;0.6268802881240845
add paragraph clarifying logging;clarifying logging;Remove the need for generated accessor methods  ;need for generated accessor methods;Similar;0.5201478600502014
add paragraph clarifying logging;clarifying logging;Propagate callback executor even when not explicitly specified  ;This lets custom <iden> implementations use the <file_name> default for their callbacks;Similar;0.505897581577301
add paragraph clarifying logging;clarifying logging;Add example of using <iden> <file_name> as a <iden> <method_name>  ;This also adds the <file_name> instance as a param to the string <file_name> to allow it to delegate to others directly. This brings it into parity with the method signatures of the other <file_name> methods anyway.;Similar;0.6322764158248901
add paragraph clarifying logging;clarifying logging;Use a correct implementation of path encoding;correct;Similar;0.517770528793335
add paragraph clarifying logging;clarifying logging;Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;Similar;0.5849891901016235
add paragraph clarifying logging;clarifying logging;Naming, API changes, and documentation around mock services.  ;mock services;Similar;0.5163254737854004
add paragraph clarifying logging;clarifying logging;Introduce factory for <file_name> concept;This is still highly-inefficient in its internal use and there are no tests proving that we now fail earlier in configuring a service method;Similar;0.605728268623352
add paragraph clarifying logging;clarifying logging;Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;Similar;0.5684401392936707
add paragraph clarifying logging;clarifying logging;Update to OkHttp <version>. Fix a tiny potential NPE;potential NPE;Similar;0.573822021484375
add paragraph clarifying logging;clarifying logging;Fix annotation link;<iden> is gone;Similar;0.6794095039367676
add paragraph clarifying logging;clarifying logging;Use the annotations directly for parameter handling.;Before we attempted to normalize the parameter annotations into a name and type model. The introduction of multi-part transfer encodings required something more expressive so the annotation instances themselves were used. This change removes the name and type in favor of using the annotation for everything.;Similar;0.6288704872131348
add paragraph clarifying logging;clarifying logging;Expose success type on <method_name>;Theres a bit of a test gap going on for all the variants of successful and erroneous handling of sync, async, and rx. This new behavior is fully tested in all three but more general behavior testing for them will be needed in a follow-up.;Similar;0.6185435652732849
add paragraph clarifying logging;clarifying logging;Correct map parameter type detection for query and field  ;-;Similar;0.5290868878364563
add paragraph clarifying logging;clarifying logging;Update <file_name> to latest. Add default constructor.;latest, Add default constructor;Similar;0.6203693151473999
add paragraph clarifying logging;clarifying logging;Add simple package info to root package  ;simple;Similar;0.5816757678985596
add paragraph clarifying logging;clarifying logging;Correct header length checking logic. Improve exception message;Improve;Similar;0.5779027938842773
add paragraph clarifying logging;clarifying logging;Promote <iden> logging to a class which knows about chunking  ;This is an <iden>-specific implementation detail which is now only performed when needed;Similar;0.6988387107849121
add paragraph clarifying logging;clarifying logging;Fix IntelliJ auto-formatting  ;Improve the formatting;Similar;0.6188712120056152
add paragraph clarifying logging;clarifying logging;Add path and query tests for pre-encoded values;-;Similar;0.6266539096832275
add paragraph clarifying logging;clarifying logging;Add converters module and protobuf converter;to the sentence;Similar;0.6121302843093872
add paragraph clarifying logging;clarifying logging;Newline at end of file  ;Yes plz;Similar;0.5879473686218262
add paragraph clarifying logging;clarifying logging;Log network and unexpected exceptions if logging is enabled  ;if logging is enabled;Similar;0.6887970566749573
add paragraph clarifying logging;clarifying logging;Fix styling of <iden> download;styling;Similar;0.689635157585144
add paragraph clarifying logging;clarifying logging;Rename pair to field to match annotation;match annotation;Similar;0.5473425388336182
add paragraph clarifying logging;clarifying logging;Provide a mutable <file_name> implementation. <iden> to conform.;to conform;Similar;0.6620541214942932
add paragraph clarifying logging;clarifying logging;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Similar;0.5430837869644165
add paragraph clarifying logging;clarifying logging;Simplify test method fetching;-;Similar;0.6121882200241089
add paragraph clarifying logging;clarifying logging;Allow <file_name> instantiation  ;Hide some Apache implementation details;Similar;0.6118629574775696
add paragraph clarifying logging;clarifying logging;Hide more implementation details;more implementation details;Similar;0.5972127318382263
add paragraph clarifying logging;clarifying logging;Introduce builder pattern to instantiate <method_name>;profiler are now optional. Convenience methods for specifying a <iden> or an <iden> directly are also provided.;Similar;0.6410174369812012
add paragraph clarifying logging;clarifying logging;Adding a human-readable name to the  <file_name>  interface;human-readable;Similar;0.5603899955749512
add paragraph clarifying logging;clarifying logging;Added getTag() and logChunk() methods;for easier subclassing;Similar;0.6547206044197083
add paragraph clarifying logging;clarifying logging;Reintroduced deprecated <file_name> constructor;deprecated;Similar;0.6223558187484741
add paragraph clarifying logging;clarifying logging;Update custom conversion docs per feedback;Clarify that <iden> is just the default converter, Add section on other built-in converters, Add section on implementing your own custom converters;Similar;0.643965482711792
add paragraph clarifying logging;clarifying logging;Fix style nits per review;per review;Similar;0.5718584060668945
add paragraph clarifying logging;clarifying logging;fix issue <issue_link> : permit use when servers or intermediaries mistakingly miss Content-<iden> header;mistakingly miss Content-<iden> header;Similar;0.5593885779380798
add paragraph clarifying logging;clarifying logging;rename <iden> ->  <file_name>  ;to harvest the names for new annotations;Similar;0.5918141007423401
add paragraph clarifying logging;clarifying logging;Move variable to where it is used;where it is used;Similar;0.5591882467269897
add paragraph clarifying logging;clarifying logging;Fix spelling;spelling;Similar;0.6231311559677124
add paragraph clarifying logging;clarifying logging;Add fixed query parameter support;support;Similar;0.6661514043807983
add paragraph clarifying logging;clarifying logging;Add <file_name>, <file_name> support to <file_name>  ;-;Similar;0.6129347681999207
add paragraph clarifying logging;clarifying logging;Allow <file_name> extensions;improved <file_name>;Similar;0.625907301902771
add paragraph clarifying logging;clarifying logging;Repackage gson into retrofit.internal.gson  ;enhance integration;Similar;0.6270949840545654
add paragraph clarifying logging;clarifying logging;Ensure <file_name> and <file_name> use FileDescriptor.sync();Ensure <file_name> and <file_name> use FileDescriptor.sync();Similar;0.607917308807373
add paragraph clarifying logging;clarifying logging;moved util to <file_name>, added <file_name>  ;Organize and enhance code files;Similar;0.6282095313072205
add paragraph clarifying logging;clarifying logging;Use <iden> <version>s JsonAdapter.serializeNulls();serializeNulls;Similar;0.5845077037811279
add paragraph clarifying logging;clarifying logging;Removal of Unnecessary Creation of <iden>;if <iden> has length 0 there is no point to create stringBuilder for that. that condition check needs to happen before stringBuilder creation.;Similar;0.5111938714981079
add paragraph clarifying logging;clarifying logging;Expose <iden> via the <file_name> injection-like framework;injection-like framework;Similar;0.5769347548484802
add paragraph clarifying logging;clarifying logging;Changing `<file_name>` to implement `<file_name>` interface;interface;Similar;0.6375230550765991
add paragraph clarifying logging;clarifying logging;Fix support for protobuf <version>+;ExtensionRegistry cannot be null;Similar;0.649572491645813
add paragraph clarifying logging;clarifying logging;Fix typo;typo;Similar;0.654037356376648
Add response object to <file_name> success;Gives access to response headers while still converting response within retrofit;Support <iden> / <iden> for @field;Supporting <iden> / <iden> for @field;Similar;0.7400631308555603
Add response object to <file_name> success;Gives access to response headers while still converting response within retrofit;Add <iden> wrapper validation  ;validation;Similar;0.8273918628692627
Add response object to <file_name> success;Gives access to response headers while still converting response within retrofit;Add <iden> integration tests;integration;Similar;0.7437894344329834
Add response object to <file_name> success;Gives access to response headers while still converting response within retrofit;Add coroutine support to <file_name> ;coroutine support;Similar;0.8626139163970947
Add response object to <file_name> success;Gives access to response headers while still converting response within retrofit;Migrate forced suspension mechanism from yield to <iden>;Since its possible for certain dispatchers to completely avoid yielding, and currently the immediate dispatchers exhibit this behavior, we need an alternate mechanism of forcing suspension or UndeclaredThrowableExceptions will still be seen.;Similar;0.6235260963439941
Add response object to <file_name> success;Gives access to response headers while still converting response within retrofit;Allow service interfaces to extend other interfaces  ;With a higher minSdkVersion, the bug which prevented this on <iden> no longer exists;Similar;0.5668180584907532
Add response object to <file_name> success;Gives access to response headers while still converting response within retrofit;Add some missing @nullable annotations to <file_name> ;missing;Similar;0.5770732760429382
Add response object to <file_name> success;Gives access to response headers while still converting response within retrofit;Use a dummy value to further validation optional delegation;This ensures the value can only come from only one place;Similar;0.5839780569076538
Add response object to <file_name> success;Gives access to response headers while still converting response within retrofit;Expose static factory for <file_name> <enter> Also rework the internals of how an <file_name> gets instantiated and set as a tag on the <iden>;This will make a future change easier to land;Similar;0.6281261444091797
Add response object to <file_name> success;Gives access to response headers while still converting response within retrofit;Re-work unresolvable type detection in parameters  ;"In order to natively support Kotlins suspend modifier in the future, we need to allow wildcards to be used for the last parameter; As a result, we only validate the shape of a type once an annotation is detected.";Similar;0.5041515231132507
Add response object to <file_name> success;Gives access to response headers while still converting response within retrofit;Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;Similar;0.7827857136726379
Add response object to <file_name> success;Gives access to response headers while still converting response within retrofit;Consolidate exception formatters in one place  ;streamline implementation and improve maintenance;Similar;0.6439854502677917
Add response object to <file_name> success;Gives access to response headers while still converting response within retrofit;Pull out <file_name> base class <enter>;This will allow us to support multiple forms of invocation beyond <iden> calls.;Similar;0.799689769744873
Add response object to <file_name> success;Gives access to response headers while still converting response within retrofit;Use HTTPS links in documentation where possible  ;where possible;Similar;0.645206093788147
Add response object to <file_name> success;Gives access to response headers while still converting response within retrofit;Combine <file_name> and <iden> into <method_name> <enter>  ;This is one class that handles all of the annotations and binding for a service method;Similar;0.813328742980957
Add response object to <file_name> success;Gives access to response headers while still converting response within retrofit;Rename <method_name> to onSuccess(), and failure() to <iden>();to onSuccess(), and failure(), <iden>;Similar;0.6467981338500977
Add response object to <file_name> success;Gives access to response headers while still converting response within retrofit;Refer to the latest OkHttp version;latest;Similar;0.6367213726043701
Add response object to <file_name> success;Gives access to response headers while still converting response within retrofit;Update <file_name> to the latest version;the latest version;Similar;0.6884845495223999
Add response object to <file_name> success;Gives access to response headers while still converting response within retrofit;Remove duplicated test  ;It is the same as in this file;Similar;0.5480028986930847
Add response object to <file_name> success;Gives access to response headers while still converting response within retrofit;call it a <version>;Actually;Similar;0.7446829080581665
Add response object to <file_name> success;Gives access to response headers while still converting response within retrofit;Remove the need for generated accessor methods  ;need for generated accessor methods;Similar;0.518578827381134
Add response object to <file_name> success;Gives access to response headers while still converting response within retrofit;Propagate callback executor even when not explicitly specified  ;This lets custom <iden> implementations use the <file_name> default for their callbacks;Similar;0.6088594198226929
Add response object to <file_name> success;Gives access to response headers while still converting response within retrofit;Add example of using <iden> <file_name> as a <iden> <method_name>  ;This also adds the <file_name> instance as a param to the string <file_name> to allow it to delegate to others directly. This brings it into parity with the method signatures of the other <file_name> methods anyway.;Similar;0.8472152948379517
Add response object to <file_name> success;Gives access to response headers while still converting response within retrofit;Use a correct implementation of path encoding;correct;Similar;0.6072542071342468
Add response object to <file_name> success;Gives access to response headers while still converting response within retrofit;Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;Similar;0.6794355511665344
Add response object to <file_name> success;Gives access to response headers while still converting response within retrofit;Naming, API changes, and documentation around mock services.  ;mock services;Similar;0.6030646562576294
Add response object to <file_name> success;Gives access to response headers while still converting response within retrofit;Introduce factory for <file_name> concept;This is still highly-inefficient in its internal use and there are no tests proving that we now fail earlier in configuring a service method;Similar;0.7327440977096558
Add response object to <file_name> success;Gives access to response headers while still converting response within retrofit;Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;Similar;0.6403162479400635
Add response object to <file_name> success;Gives access to response headers while still converting response within retrofit;Update to OkHttp <version>. Fix a tiny potential NPE;potential NPE;Similar;0.5557916164398193
Add response object to <file_name> success;Gives access to response headers while still converting response within retrofit;Fix annotation link;<iden> is gone;Similar;0.7230714559555054
Add response object to <file_name> success;Gives access to response headers while still converting response within retrofit;Use the annotations directly for parameter handling.;Before we attempted to normalize the parameter annotations into a name and type model. The introduction of multi-part transfer encodings required something more expressive so the annotation instances themselves were used. This change removes the name and type in favor of using the annotation for everything.;Similar;0.718768835067749
Add response object to <file_name> success;Gives access to response headers while still converting response within retrofit;Expose success type on <method_name>;Theres a bit of a test gap going on for all the variants of successful and erroneous handling of sync, async, and rx. This new behavior is fully tested in all three but more general behavior testing for them will be needed in a follow-up.;Similar;0.9160473346710205
Add response object to <file_name> success;Gives access to response headers while still converting response within retrofit;Correct map parameter type detection for query and field  ;-;Similar;0.6190305352210999
Add response object to <file_name> success;Gives access to response headers while still converting response within retrofit;Update <file_name> to latest. Add default constructor.;latest, Add default constructor;Similar;0.7816962599754333
Add response object to <file_name> success;Gives access to response headers while still converting response within retrofit;Add simple package info to root package  ;simple;Similar;0.6189048290252686
Add response object to <file_name> success;Gives access to response headers while still converting response within retrofit;Correct header length checking logic. Improve exception message;Improve;Similar;0.6428055763244629
Add response object to <file_name> success;Gives access to response headers while still converting response within retrofit;Promote <iden> logging to a class which knows about chunking  ;This is an <iden>-specific implementation detail which is now only performed when needed;Similar;0.6609495878219604
Add response object to <file_name> success;Gives access to response headers while still converting response within retrofit;Fix IntelliJ auto-formatting  ;Improve the formatting;Similar;0.6853139400482178
Add response object to <file_name> success;Gives access to response headers while still converting response within retrofit;Add path and query tests for pre-encoded values;-;Similar;0.7405757904052734
Add response object to <file_name> success;Gives access to response headers while still converting response within retrofit;Add converters module and protobuf converter;to the sentence;Similar;0.7025229334831238
Add response object to <file_name> success;Gives access to response headers while still converting response within retrofit;Newline at end of file  ;Yes plz;Similar;0.5933119058609009
Add response object to <file_name> success;Gives access to response headers while still converting response within retrofit;Log network and unexpected exceptions if logging is enabled  ;if logging is enabled;Similar;0.665759801864624
Add response object to <file_name> success;Gives access to response headers while still converting response within retrofit;Fix styling of <iden> download;styling;Similar;0.7034356594085693
Add response object to <file_name> success;Gives access to response headers while still converting response within retrofit;Rename pair to field to match annotation;match annotation;Similar;0.5520305633544922
Add response object to <file_name> success;Gives access to response headers while still converting response within retrofit;" 
- Add <iden> <method_name>  
- Also update our sample to use <iden> contributors rather than the <iden>  
- Bump some dependencies to their latest versions  
";" 
- Use this on <iden> <version> and prior and when on the <iden>  
- because the latter is shutting down and subject to lame rate limiting when on common networks";Similar;0.5326334238052368
Add response object to <file_name> success;Gives access to response headers while still converting response within retrofit;Provide a mutable <file_name> implementation. <iden> to conform.;to conform;Similar;0.8121593594551086
Add response object to <file_name> success;Gives access to response headers while still converting response within retrofit;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Similar;0.6203242540359497
Add response object to <file_name> success;Gives access to response headers while still converting response within retrofit;Simplify test method fetching;-;Similar;0.6605017781257629
Add response object to <file_name> success;Gives access to response headers while still converting response within retrofit;Allow <file_name> instantiation  ;Hide some Apache implementation details;Similar;0.8785316348075867
Add response object to <file_name> success;Gives access to response headers while still converting response within retrofit;Hide more implementation details;more implementation details;Similar;0.5703127384185791
Add response object to <file_name> success;Gives access to response headers while still converting response within retrofit;Remove unused <file_name> classes;unused;Similar;0.5277964472770691
Add response object to <file_name> success;Gives access to response headers while still converting response within retrofit;Introduce builder pattern to instantiate <method_name>;profiler are now optional. Convenience methods for specifying a <iden> or an <iden> directly are also provided.;Similar;0.7939157485961914
Add response object to <file_name> success;Gives access to response headers while still converting response within retrofit;Use no_aop Guice variant  ;no_aop;Similar;0.5542046427726746
Add response object to <file_name> success;Gives access to response headers while still converting response within retrofit;Adding a human-readable name to the  <file_name>  interface;human-readable;Similar;0.7492682933807373
Add response object to <file_name> success;Gives access to response headers while still converting response within retrofit;Added getTag() and logChunk() methods;for easier subclassing;Similar;0.719505786895752
Add response object to <file_name> success;Gives access to response headers while still converting response within retrofit;Reintroduced deprecated <file_name> constructor;deprecated;Similar;0.6508387327194214
Add response object to <file_name> success;Gives access to response headers while still converting response within retrofit;Update custom conversion docs per feedback;Clarify that <iden> is just the default converter, Add section on other built-in converters, Add section on implementing your own custom converters;Similar;0.6487099528312683
Add response object to <file_name> success;Gives access to response headers while still converting response within retrofit;Fix style nits per review;per review;Similar;0.6067851781845093
Add response object to <file_name> success;Gives access to response headers while still converting response within retrofit;fix issue <issue_link> : permit use when servers or intermediaries mistakingly miss Content-<iden> header;mistakingly miss Content-<iden> header;Similar;0.5529181957244873
Add response object to <file_name> success;Gives access to response headers while still converting response within retrofit;rename <iden> ->  <file_name>  ;to harvest the names for new annotations;Similar;0.7789652347564697
Add response object to <file_name> success;Gives access to response headers while still converting response within retrofit;Move variable to where it is used;where it is used;Similar;0.681821346282959
Add response object to <file_name> success;Gives access to response headers while still converting response within retrofit;Fix spelling;spelling;Similar;0.5777567625045776
Add response object to <file_name> success;Gives access to response headers while still converting response within retrofit;Add fixed query parameter support;support;Similar;0.803900957107544
Add response object to <file_name> success;Gives access to response headers while still converting response within retrofit;Add <file_name>, <file_name> support to <file_name>  ;-;Similar;0.8964241743087769
Add response object to <file_name> success;Gives access to response headers while still converting response within retrofit;Allow <file_name> extensions;improved <file_name>;Similar;0.8613278865814209
Add response object to <file_name> success;Gives access to response headers while still converting response within retrofit;Repackage gson into retrofit.internal.gson  ;enhance integration;Similar;0.6686888933181763
Add response object to <file_name> success;Gives access to response headers while still converting response within retrofit;Ensure <file_name> and <file_name> use FileDescriptor.sync();Ensure <file_name> and <file_name> use FileDescriptor.sync();Similar;0.7985368967056274
Add response object to <file_name> success;Gives access to response headers while still converting response within retrofit;moved util to <file_name>, added <file_name>  ;Organize and enhance code files;Similar;0.8472074270248413
Add response object to <file_name> success;Gives access to response headers while still converting response within retrofit;Use <iden> <version>s JsonAdapter.serializeNulls();serializeNulls;Similar;0.739356279373169
Add response object to <file_name> success;Gives access to response headers while still converting response within retrofit;Removal of Unnecessary Creation of <iden>;if <iden> has length 0 there is no point to create stringBuilder for that. that condition check needs to happen before stringBuilder creation.;Similar;0.5024146437644958
Add response object to <file_name> success;Gives access to response headers while still converting response within retrofit;Expose <iden> via the <file_name> injection-like framework;injection-like framework;Similar;0.7915377616882324
Add response object to <file_name> success;Gives access to response headers while still converting response within retrofit;Changing `<file_name>` to implement `<file_name>` interface;interface;Similar;0.7887721061706543
Add response object to <file_name> success;Gives access to response headers while still converting response within retrofit;Fix support for protobuf <version>+;ExtensionRegistry cannot be null;Similar;0.7839232087135315
Add response object to <file_name> success;Gives access to response headers while still converting response within retrofit;Fix typo;typo;Similar;0.669589638710022
Support <iden> / <iden> for @field;Supporting <iden> / <iden> for @field;Add <iden> wrapper validation  ;validation;Similar;0.768236517906189
Support <iden> / <iden> for @field;Supporting <iden> / <iden> for @field;Add <iden> integration tests;integration;Similar;0.7302436828613281
Support <iden> / <iden> for @field;Supporting <iden> / <iden> for @field;Add coroutine support to <file_name> ;coroutine support;Similar;0.7147278785705566
Support <iden> / <iden> for @field;Supporting <iden> / <iden> for @field;Migrate forced suspension mechanism from yield to <iden>;Since its possible for certain dispatchers to completely avoid yielding, and currently the immediate dispatchers exhibit this behavior, we need an alternate mechanism of forcing suspension or UndeclaredThrowableExceptions will still be seen.;Similar;0.5983892679214478
Support <iden> / <iden> for @field;Supporting <iden> / <iden> for @field;Allow service interfaces to extend other interfaces  ;With a higher minSdkVersion, the bug which prevented this on <iden> no longer exists;Similar;0.5578873753547668
Support <iden> / <iden> for @field;Supporting <iden> / <iden> for @field;Add some missing @nullable annotations to <file_name> ;missing;Similar;0.551821231842041
Support <iden> / <iden> for @field;Supporting <iden> / <iden> for @field;Use a dummy value to further validation optional delegation;This ensures the value can only come from only one place;Similar;0.5324257612228394
Support <iden> / <iden> for @field;Supporting <iden> / <iden> for @field;Expose static factory for <file_name> <enter> Also rework the internals of how an <file_name> gets instantiated and set as a tag on the <iden>;This will make a future change easier to land;Similar;0.5700656175613403
Support <iden> / <iden> for @field;Supporting <iden> / <iden> for @field;Re-work unresolvable type detection in parameters  ;"In order to natively support Kotlins suspend modifier in the future, we need to allow wildcards to be used for the last parameter; As a result, we only validate the shape of a type once an annotation is detected.";Similar;0.5012378692626953
Support <iden> / <iden> for @field;Supporting <iden> / <iden> for @field;Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;Similar;0.7644627094268799
Support <iden> / <iden> for @field;Supporting <iden> / <iden> for @field;Consolidate exception formatters in one place  ;streamline implementation and improve maintenance;Similar;0.5462824702262878
Support <iden> / <iden> for @field;Supporting <iden> / <iden> for @field;Pull out <file_name> base class <enter>;This will allow us to support multiple forms of invocation beyond <iden> calls.;Similar;0.7468624114990234
Support <iden> / <iden> for @field;Supporting <iden> / <iden> for @field;Use HTTPS links in documentation where possible  ;where possible;Similar;0.6375445127487183
Support <iden> / <iden> for @field;Supporting <iden> / <iden> for @field;Combine <file_name> and <iden> into <method_name> <enter>  ;This is one class that handles all of the annotations and binding for a service method;Similar;0.7190617322921753
Support <iden> / <iden> for @field;Supporting <iden> / <iden> for @field;Rename <method_name> to onSuccess(), and failure() to <iden>();to onSuccess(), and failure(), <iden>;Similar;0.5715716481208801
Support <iden> / <iden> for @field;Supporting <iden> / <iden> for @field;Refer to the latest OkHttp version;latest;Similar;0.5098890066146851
Support <iden> / <iden> for @field;Supporting <iden> / <iden> for @field;Update <file_name> to the latest version;the latest version;Similar;0.5029679536819458
Support <iden> / <iden> for @field;Supporting <iden> / <iden> for @field;call it a <version>;Actually;Similar;0.6789745688438416
Support <iden> / <iden> for @field;Supporting <iden> / <iden> for @field;Remove the need for generated accessor methods  ;need for generated accessor methods;Similar;0.5065363645553589
Support <iden> / <iden> for @field;Supporting <iden> / <iden> for @field;Propagate callback executor even when not explicitly specified  ;This lets custom <iden> implementations use the <file_name> default for their callbacks;Similar;0.5903280973434448
Support <iden> / <iden> for @field;Supporting <iden> / <iden> for @field;Add example of using <iden> <file_name> as a <iden> <method_name>  ;This also adds the <file_name> instance as a param to the string <file_name> to allow it to delegate to others directly. This brings it into parity with the method signatures of the other <file_name> methods anyway.;Similar;0.7779451608657837
Support <iden> / <iden> for @field;Supporting <iden> / <iden> for @field;Use a correct implementation of path encoding;correct;Similar;0.5509097576141357
Support <iden> / <iden> for @field;Supporting <iden> / <iden> for @field;Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;Similar;0.5701404809951782
Support <iden> / <iden> for @field;Supporting <iden> / <iden> for @field;Naming, API changes, and documentation around mock services.  ;mock services;Similar;0.5795223116874695
Support <iden> / <iden> for @field;Supporting <iden> / <iden> for @field;Introduce factory for <file_name> concept;This is still highly-inefficient in its internal use and there are no tests proving that we now fail earlier in configuring a service method;Similar;0.5913455486297607
Support <iden> / <iden> for @field;Supporting <iden> / <iden> for @field;Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;Similar;0.5206765532493591
Support <iden> / <iden> for @field;Supporting <iden> / <iden> for @field;Remove unused classes from <otherCommit_link>;unused;Similar;0.5058842897415161
Support <iden> / <iden> for @field;Supporting <iden> / <iden> for @field;Update to OkHttp <version>. Fix a tiny potential NPE;potential NPE;Similar;0.5308386087417603
Support <iden> / <iden> for @field;Supporting <iden> / <iden> for @field;Fix annotation link;<iden> is gone;Similar;0.6587357521057129
Support <iden> / <iden> for @field;Supporting <iden> / <iden> for @field;Use the annotations directly for parameter handling.;Before we attempted to normalize the parameter annotations into a name and type model. The introduction of multi-part transfer encodings required something more expressive so the annotation instances themselves were used. This change removes the name and type in favor of using the annotation for everything.;Similar;0.6782841682434082
Support <iden> / <iden> for @field;Supporting <iden> / <iden> for @field;Expose success type on <method_name>;Theres a bit of a test gap going on for all the variants of successful and erroneous handling of sync, async, and rx. This new behavior is fully tested in all three but more general behavior testing for them will be needed in a follow-up.;Similar;0.7657234072685242
Support <iden> / <iden> for @field;Supporting <iden> / <iden> for @field;Correct map parameter type detection for query and field  ;-;Similar;0.7090984582901001
Support <iden> / <iden> for @field;Supporting <iden> / <iden> for @field;Update <file_name> to latest. Add default constructor.;latest, Add default constructor;Similar;0.6026541590690613
Support <iden> / <iden> for @field;Supporting <iden> / <iden> for @field;Add simple package info to root package  ;simple;Similar;0.6383365392684937
Support <iden> / <iden> for @field;Supporting <iden> / <iden> for @field;Correct header length checking logic. Improve exception message;Improve;Similar;0.568549633026123
Support <iden> / <iden> for @field;Supporting <iden> / <iden> for @field;Promote <iden> logging to a class which knows about chunking  ;This is an <iden>-specific implementation detail which is now only performed when needed;Similar;0.554384708404541
Support <iden> / <iden> for @field;Supporting <iden> / <iden> for @field;Fix IntelliJ auto-formatting  ;Improve the formatting;Similar;0.5896583795547485
Support <iden> / <iden> for @field;Supporting <iden> / <iden> for @field;Add path and query tests for pre-encoded values;-;Similar;0.6343572735786438
Support <iden> / <iden> for @field;Supporting <iden> / <iden> for @field;Add converters module and protobuf converter;to the sentence;Similar;0.623874306678772
Support <iden> / <iden> for @field;Supporting <iden> / <iden> for @field;Newline at end of file  ;Yes plz;Similar;0.5580369234085083
Support <iden> / <iden> for @field;Supporting <iden> / <iden> for @field;Log network and unexpected exceptions if logging is enabled  ;if logging is enabled;Similar;0.5718403458595276
Support <iden> / <iden> for @field;Supporting <iden> / <iden> for @field;Fix styling of <iden> download;styling;Similar;0.6176276803016663
Support <iden> / <iden> for @field;Supporting <iden> / <iden> for @field;Rename pair to field to match annotation;match annotation;Similar;0.6544255018234253
Support <iden> / <iden> for @field;Supporting <iden> / <iden> for @field;Provide a mutable <file_name> implementation. <iden> to conform.;to conform;Similar;0.73292076587677
Support <iden> / <iden> for @field;Supporting <iden> / <iden> for @field;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Similar;0.515216052532196
Support <iden> / <iden> for @field;Supporting <iden> / <iden> for @field;Simplify test method fetching;-;Similar;0.609230101108551
Support <iden> / <iden> for @field;Supporting <iden> / <iden> for @field;Allow <file_name> instantiation  ;Hide some Apache implementation details;Similar;0.7417432069778442
Support <iden> / <iden> for @field;Supporting <iden> / <iden> for @field;Hide more implementation details;more implementation details;Similar;0.5480978488922119
Support <iden> / <iden> for @field;Supporting <iden> / <iden> for @field;Introduce builder pattern to instantiate <method_name>;profiler are now optional. Convenience methods for specifying a <iden> or an <iden> directly are also provided.;Similar;0.669310450553894
Support <iden> / <iden> for @field;Supporting <iden> / <iden> for @field;Use no_aop Guice variant  ;no_aop;Similar;0.5604825019836426
Support <iden> / <iden> for @field;Supporting <iden> / <iden> for @field;Adding a human-readable name to the  <file_name>  interface;human-readable;Similar;0.6056761145591736
Support <iden> / <iden> for @field;Supporting <iden> / <iden> for @field;Added getTag() and logChunk() methods;for easier subclassing;Similar;0.612766444683075
Support <iden> / <iden> for @field;Supporting <iden> / <iden> for @field;Reintroduced deprecated <file_name> constructor;deprecated;Similar;0.5138279795646667
Support <iden> / <iden> for @field;Supporting <iden> / <iden> for @field;Update custom conversion docs per feedback;Clarify that <iden> is just the default converter, Add section on other built-in converters, Add section on implementing your own custom converters;Similar;0.5526362657546997
Support <iden> / <iden> for @field;Supporting <iden> / <iden> for @field;Fix style nits per review;per review;Similar;0.530508816242218
Support <iden> / <iden> for @field;Supporting <iden> / <iden> for @field;rename <iden> ->  <file_name>  ;to harvest the names for new annotations;Similar;0.6847575902938843
Support <iden> / <iden> for @field;Supporting <iden> / <iden> for @field;Move variable to where it is used;where it is used;Similar;0.6762276887893677
Support <iden> / <iden> for @field;Supporting <iden> / <iden> for @field;Fix spelling;spelling;Similar;0.5062527060508728
Support <iden> / <iden> for @field;Supporting <iden> / <iden> for @field;Add fixed query parameter support;support;Similar;0.7530344724655151
Support <iden> / <iden> for @field;Supporting <iden> / <iden> for @field;Add <file_name>, <file_name> support to <file_name>  ;-;Similar;0.7572768926620483
Support <iden> / <iden> for @field;Supporting <iden> / <iden> for @field;Allow <file_name> extensions;improved <file_name>;Similar;0.785690188407898
Support <iden> / <iden> for @field;Supporting <iden> / <iden> for @field;Repackage gson into retrofit.internal.gson  ;enhance integration;Similar;0.5608017444610596
Support <iden> / <iden> for @field;Supporting <iden> / <iden> for @field;Ensure <file_name> and <file_name> use FileDescriptor.sync();Ensure <file_name> and <file_name> use FileDescriptor.sync();Similar;0.6641643643379211
Support <iden> / <iden> for @field;Supporting <iden> / <iden> for @field;moved util to <file_name>, added <file_name>  ;Organize and enhance code files;Similar;0.6776584386825562
Support <iden> / <iden> for @field;Supporting <iden> / <iden> for @field;Use <iden> <version>s JsonAdapter.serializeNulls();serializeNulls;Similar;0.6971595883369446
Support <iden> / <iden> for @field;Supporting <iden> / <iden> for @field;Removal of Unnecessary Creation of <iden>;if <iden> has length 0 there is no point to create stringBuilder for that. that condition check needs to happen before stringBuilder creation.;Similar;0.532319188117981
Support <iden> / <iden> for @field;Supporting <iden> / <iden> for @field;Expose <iden> via the <file_name> injection-like framework;injection-like framework;Similar;0.7412335872650146
Support <iden> / <iden> for @field;Supporting <iden> / <iden> for @field;Changing `<file_name>` to implement `<file_name>` interface;interface;Similar;0.6308172345161438
Support <iden> / <iden> for @field;Supporting <iden> / <iden> for @field;Fix support for protobuf <version>+;ExtensionRegistry cannot be null;Similar;0.7039968967437744
Support <iden> / <iden> for @field;Supporting <iden> / <iden> for @field;Fix typo;typo;Similar;0.6147517561912537
Add <iden> wrapper validation  ;validation;Add <iden> integration tests;integration;Similar;0.9047722220420837
Add <iden> wrapper validation  ;validation;Add coroutine support to <file_name> ;coroutine support;Similar;0.8029508590698242
Add <iden> wrapper validation  ;validation;Migrate forced suspension mechanism from yield to <iden>;Since its possible for certain dispatchers to completely avoid yielding, and currently the immediate dispatchers exhibit this behavior, we need an alternate mechanism of forcing suspension or UndeclaredThrowableExceptions will still be seen.;Similar;0.7218384146690369
Add <iden> wrapper validation  ;validation;Allow service interfaces to extend other interfaces  ;With a higher minSdkVersion, the bug which prevented this on <iden> no longer exists;Similar;0.6425282955169678
Add <iden> wrapper validation  ;validation;Add more obviously missing @nullable annotations;missing;Similar;0.507568895816803
Add <iden> wrapper validation  ;validation;Add some missing @nullable annotations to <file_name> ;missing;Similar;0.5769609212875366
Add <iden> wrapper validation  ;validation;Add some missing Nullable annotations;missing;Similar;0.5410287380218506
Add <iden> wrapper validation  ;validation;Add some missing Nullable annotations;missing;Similar;0.5410287380218506
Add <iden> wrapper validation  ;validation;Use a dummy value to further validation optional delegation;This ensures the value can only come from only one place;Similar;0.6965738534927368
Add <iden> wrapper validation  ;validation;Expose static factory for <file_name> <enter> Also rework the internals of how an <file_name> gets instantiated and set as a tag on the <iden>;This will make a future change easier to land;Similar;0.6090054512023926
Add <iden> wrapper validation  ;validation;Re-work unresolvable type detection in parameters  ;"In order to natively support Kotlins suspend modifier in the future, we need to allow wildcards to be used for the last parameter; As a result, we only validate the shape of a type once an annotation is detected.";Similar;0.5485243797302246
Add <iden> wrapper validation  ;validation;Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;Similar;0.8768751621246338
Add <iden> wrapper validation  ;validation;Consolidate exception formatters in one place  ;streamline implementation and improve maintenance;Similar;0.722678005695343
Add <iden> wrapper validation  ;validation;Pull out <file_name> base class <enter>;This will allow us to support multiple forms of invocation beyond <iden> calls.;Similar;0.7929859757423401
Add <iden> wrapper validation  ;validation;Use HTTPS links in documentation where possible  ;where possible;Similar;0.6324928402900696
Add <iden> wrapper validation  ;validation;Combine <file_name> and <iden> into <method_name> <enter>  ;This is one class that handles all of the annotations and binding for a service method;Similar;0.8373289108276367
Add <iden> wrapper validation  ;validation;Rename <method_name> to onSuccess(), and failure() to <iden>();to onSuccess(), and failure(), <iden>;Similar;0.6807373762130737
Add <iden> wrapper validation  ;validation;Refer to the latest OkHttp version;latest;Similar;0.683357834815979
Add <iden> wrapper validation  ;validation;Add JSR 305 nullability annotations;nullability annotations;Similar;0.5450904965400696
Add <iden> wrapper validation  ;validation;Update <file_name> to the latest version;the latest version;Similar;0.642764151096344
Add <iden> wrapper validation  ;validation;Remove unused interface  ;unused;Similar;0.5024579167366028
Add <iden> wrapper validation  ;validation;Simplify observable creation and reduce runtime allocations;Simplify, reduce;Similar;0.515743613243103
Add <iden> wrapper validation  ;validation;Remove duplicated test  ;It is the same as in this file;Similar;0.6172622442245483
Add <iden> wrapper validation  ;validation;call it a <version>;Actually;Similar;0.7923367023468018
Add <iden> wrapper validation  ;validation;Add missing import  ;missing;Similar;0.5598192811012268
Add <iden> wrapper validation  ;validation;Remove the need for generated accessor methods  ;need for generated accessor methods;Similar;0.5509839057922363
Add <iden> wrapper validation  ;validation;Propagate callback executor even when not explicitly specified  ;This lets custom <iden> implementations use the <file_name> default for their callbacks;Similar;0.6198279857635498
Add <iden> wrapper validation  ;validation;Add example of using <iden> <file_name> as a <iden> <method_name>  ;This also adds the <file_name> instance as a param to the string <file_name> to allow it to delegate to others directly. This brings it into parity with the method signatures of the other <file_name> methods anyway.;Similar;0.8376315236091614
Add <iden> wrapper validation  ;validation;Use new <iden>s non-throwing close and a simpler body copy;non-throwing close and a simpler body			      ;Similar;0.5333545207977295
Add <iden> wrapper validation  ;validation;Remove incorrect generic parameter  ;incorrect;Similar;0.5227700471878052
Add <iden> wrapper validation  ;validation;Use a correct implementation of path encoding;correct;Similar;0.5794657468795776
Add <iden> wrapper validation  ;validation;Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;Similar;0.6677567958831787
Add <iden> wrapper validation  ;validation;Naming, API changes, and documentation around mock services.  ;mock services;Similar;0.725398063659668
Add <iden> wrapper validation  ;validation;Introduce factory for <file_name> concept;This is still highly-inefficient in its internal use and there are no tests proving that we now fail earlier in configuring a service method;Similar;0.7292301058769226
Add <iden> wrapper validation  ;validation;Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;Similar;0.6337217092514038
Add <iden> wrapper validation  ;validation;Remove unused classes from <otherCommit_link>;unused;Similar;0.5227591395378113
Add <iden> wrapper validation  ;validation;Update to OkHttp <version>. Fix a tiny potential NPE;potential NPE;Similar;0.6154927015304565
Add <iden> wrapper validation  ;validation;Fix annotation link;<iden> is gone;Similar;0.7623339891433716
Add <iden> wrapper validation  ;validation;Use the annotations directly for parameter handling.;Before we attempted to normalize the parameter annotations into a name and type model. The introduction of multi-part transfer encodings required something more expressive so the annotation instances themselves were used. This change removes the name and type in favor of using the annotation for everything.;Similar;0.7452421188354492
Add <iden> wrapper validation  ;validation;Expose success type on <method_name>;Theres a bit of a test gap going on for all the variants of successful and erroneous handling of sync, async, and rx. This new behavior is fully tested in all three but more general behavior testing for them will be needed in a follow-up.;Similar;0.8179787397384644
Add <iden> wrapper validation  ;validation;Correct map parameter type detection for query and field  ;-;Similar;0.5915593504905701
Add <iden> wrapper validation  ;validation;Update <file_name> to latest. Add default constructor.;latest, Add default constructor;Similar;0.7413513660430908
Add <iden> wrapper validation  ;validation;Add simple package info to root package  ;simple;Similar;0.6936020851135254
Add <iden> wrapper validation  ;validation;Correct header length checking logic. Improve exception message;Improve;Similar;0.6501688361167908
Add <iden> wrapper validation  ;validation;Promote <iden> logging to a class which knows about chunking  ;This is an <iden>-specific implementation detail which is now only performed when needed;Similar;0.6081466674804688
Add <iden> wrapper validation  ;validation;Fix IntelliJ auto-formatting  ;Improve the formatting;Similar;0.6943737268447876
Add <iden> wrapper validation  ;validation;Add path and query tests for pre-encoded values;-;Similar;0.8270606994628906
Add <iden> wrapper validation  ;validation;Add converters module and protobuf converter;to the sentence;Similar;0.8266749382019043
Add <iden> wrapper validation  ;validation;Newline at end of file  ;Yes plz;Similar;0.6451414823532104
Add <iden> wrapper validation  ;validation;Log network and unexpected exceptions if logging is enabled  ;if logging is enabled;Similar;0.6279874444007874
Add <iden> wrapper validation  ;validation;Fix styling of <iden> download;styling;Similar;0.7320420742034912
Add <iden> wrapper validation  ;validation;Rename pair to field to match annotation;match annotation;Similar;0.5797098875045776
Add <iden> wrapper validation  ;validation;" 
- Add <iden> <method_name>  
- Also update our sample to use <iden> contributors rather than the <iden>  
- Bump some dependencies to their latest versions  
";" 
- Use this on <iden> <version> and prior and when on the <iden>  
- because the latter is shutting down and subject to lame rate limiting when on common networks";Similar;0.5629847645759583
Add <iden> wrapper validation  ;validation;Provide a mutable <file_name> implementation. <iden> to conform.;to conform;Similar;0.8558805584907532
Add <iden> wrapper validation  ;validation;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Similar;0.6165127754211426
Add <iden> wrapper validation  ;validation;Simplify test method fetching;-;Similar;0.6915025115013123
Add <iden> wrapper validation  ;validation;Allow <file_name> instantiation  ;Hide some Apache implementation details;Similar;0.7747341394424438
Add <iden> wrapper validation  ;validation;Hide more implementation details;more implementation details;Similar;0.6596834659576416
Add <iden> wrapper validation  ;validation;Introduce builder pattern to instantiate <method_name>;profiler are now optional. Convenience methods for specifying a <iden> or an <iden> directly are also provided.;Similar;0.7780135273933411
Add <iden> wrapper validation  ;validation;Use no_aop Guice variant  ;no_aop;Similar;0.592048168182373
Add <iden> wrapper validation  ;validation;Adding a human-readable name to the  <file_name>  interface;human-readable;Similar;0.6795872449874878
Add <iden> wrapper validation  ;validation;Added getTag() and logChunk() methods;for easier subclassing;Similar;0.7419660091400146
Add <iden> wrapper validation  ;validation;Reintroduced deprecated <file_name> constructor;deprecated;Similar;0.6360011100769043
Add <iden> wrapper validation  ;validation;Update custom conversion docs per feedback;Clarify that <iden> is just the default converter, Add section on other built-in converters, Add section on implementing your own custom converters;Similar;0.6890214681625366
Add <iden> wrapper validation  ;validation;Fix style nits per review;per review;Similar;0.6285676956176758
Add <iden> wrapper validation  ;validation;fix issue <issue_link> : permit use when servers or intermediaries mistakingly miss Content-<iden> header;mistakingly miss Content-<iden> header;Similar;0.5558160543441772
Add <iden> wrapper validation  ;validation;rename <iden> ->  <file_name>  ;to harvest the names for new annotations;Similar;0.7771646976470947
Add <iden> wrapper validation  ;validation;Move variable to where it is used;where it is used;Similar;0.698621392250061
Add <iden> wrapper validation  ;validation;Fix spelling;spelling;Similar;0.6167833805084229
Add <iden> wrapper validation  ;validation;Add fixed query parameter support;support;Similar;0.8160593509674072
Add <iden> wrapper validation  ;validation;Add <file_name>, <file_name> support to <file_name>  ;-;Similar;0.8176412582397461
Add <iden> wrapper validation  ;validation;Allow <file_name> extensions;improved <file_name>;Similar;0.8261744379997253
Add <iden> wrapper validation  ;validation;Repackage gson into retrofit.internal.gson  ;enhance integration;Similar;0.7274649143218994
Add <iden> wrapper validation  ;validation;Ensure <file_name> and <file_name> use FileDescriptor.sync();Ensure <file_name> and <file_name> use FileDescriptor.sync();Similar;0.7692899703979492
Add <iden> wrapper validation  ;validation;moved util to <file_name>, added <file_name>  ;Organize and enhance code files;Similar;0.8039212226867676
Add <iden> wrapper validation  ;validation;Use <iden> <version>s JsonAdapter.serializeNulls();serializeNulls;Similar;0.820044755935669
Add <iden> wrapper validation  ;validation;Removal of Unnecessary Creation of <iden>;if <iden> has length 0 there is no point to create stringBuilder for that. that condition check needs to happen before stringBuilder creation.;Similar;0.5587835311889648
Add <iden> wrapper validation  ;validation;Expose <iden> via the <file_name> injection-like framework;injection-like framework;Similar;0.8188077211380005
Add <iden> wrapper validation  ;validation;Changing `<file_name>` to implement `<file_name>` interface;interface;Similar;0.7561297416687012
Add <iden> wrapper validation  ;validation;Fix support for protobuf <version>+;ExtensionRegistry cannot be null;Similar;0.8233850002288818
Add <iden> wrapper validation  ;validation;Fix typo;typo;Similar;0.7401909232139587
Add <iden> wrapper validation  ;validation;Remove redundant throws  ;redundant;Similar;0.545831024646759
Add <iden> integration tests;integration;Add coroutine support to <file_name> ;coroutine support;Similar;0.7332064509391785
Add <iden> integration tests;integration;Migrate forced suspension mechanism from yield to <iden>;Since its possible for certain dispatchers to completely avoid yielding, and currently the immediate dispatchers exhibit this behavior, we need an alternate mechanism of forcing suspension or UndeclaredThrowableExceptions will still be seen.;Similar;0.6464933156967163
Add <iden> integration tests;integration;Allow service interfaces to extend other interfaces  ;With a higher minSdkVersion, the bug which prevented this on <iden> no longer exists;Similar;0.6326160430908203
Add <iden> integration tests;integration;Add some missing @nullable annotations to <file_name> ;missing;Similar;0.5093528032302856
Add <iden> integration tests;integration;Use a dummy value to further validation optional delegation;This ensures the value can only come from only one place;Similar;0.5998795032501221
Add <iden> integration tests;integration;Expose static factory for <file_name> <enter> Also rework the internals of how an <file_name> gets instantiated and set as a tag on the <iden>;This will make a future change easier to land;Similar;0.6022962331771851
Add <iden> integration tests;integration;Re-work unresolvable type detection in parameters  ;"In order to natively support Kotlins suspend modifier in the future, we need to allow wildcards to be used for the last parameter; As a result, we only validate the shape of a type once an annotation is detected.";Similar;0.5264557600021362
Add <iden> integration tests;integration;Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;Similar;0.8368161916732788
Add <iden> integration tests;integration;Consolidate exception formatters in one place  ;streamline implementation and improve maintenance;Similar;0.6640139818191528
Add <iden> integration tests;integration;Pull out <file_name> base class <enter>;This will allow us to support multiple forms of invocation beyond <iden> calls.;Similar;0.7627909779548645
Add <iden> integration tests;integration;Use HTTPS links in documentation where possible  ;where possible;Similar;0.5674700736999512
Add <iden> integration tests;integration;Combine <file_name> and <iden> into <method_name> <enter>  ;This is one class that handles all of the annotations and binding for a service method;Similar;0.8008688688278198
Add <iden> integration tests;integration;Rename <method_name> to onSuccess(), and failure() to <iden>();to onSuccess(), and failure(), <iden>;Similar;0.6102408170700073
Add <iden> integration tests;integration;Refer to the latest OkHttp version;latest;Similar;0.6651456356048584
Add <iden> integration tests;integration;Add JSR 305 nullability annotations;nullability annotations;Similar;0.5251998901367188
Add <iden> integration tests;integration;Update <file_name> to the latest version;the latest version;Similar;0.6144211292266846
Add <iden> integration tests;integration;Remove duplicated test  ;It is the same as in this file;Similar;0.611034095287323
Add <iden> integration tests;integration;call it a <version>;Actually;Similar;0.7079257965087891
Add <iden> integration tests;integration;Remove the need for generated accessor methods  ;need for generated accessor methods;Similar;0.5183250308036804
Add <iden> integration tests;integration;Propagate callback executor even when not explicitly specified  ;This lets custom <iden> implementations use the <file_name> default for their callbacks;Similar;0.5263974070549011
Add <iden> integration tests;integration;Add example of using <iden> <file_name> as a <iden> <method_name>  ;This also adds the <file_name> instance as a param to the string <file_name> to allow it to delegate to others directly. This brings it into parity with the method signatures of the other <file_name> methods anyway.;Similar;0.7804175615310669
Add <iden> integration tests;integration;Use a correct implementation of path encoding;correct;Similar;0.5332314968109131
Add <iden> integration tests;integration;Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;Similar;0.6134403347969055
Add <iden> integration tests;integration;Naming, API changes, and documentation around mock services.  ;mock services;Similar;0.6816847920417786
Add <iden> integration tests;integration;Introduce factory for <file_name> concept;This is still highly-inefficient in its internal use and there are no tests proving that we now fail earlier in configuring a service method;Similar;0.7103171944618225
Add <iden> integration tests;integration;Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;Similar;0.6099032163619995
Add <iden> integration tests;integration;Update to OkHttp <version>. Fix a tiny potential NPE;potential NPE;Similar;0.5681135654449463
Add <iden> integration tests;integration;Fix annotation link;<iden> is gone;Similar;0.714924693107605
Add <iden> integration tests;integration;Use the annotations directly for parameter handling.;Before we attempted to normalize the parameter annotations into a name and type model. The introduction of multi-part transfer encodings required something more expressive so the annotation instances themselves were used. This change removes the name and type in favor of using the annotation for everything.;Similar;0.7048709988594055
Add <iden> integration tests;integration;Expose success type on <method_name>;Theres a bit of a test gap going on for all the variants of successful and erroneous handling of sync, async, and rx. This new behavior is fully tested in all three but more general behavior testing for them will be needed in a follow-up.;Similar;0.736444354057312
Add <iden> integration tests;integration;Correct map parameter type detection for query and field  ;-;Similar;0.5590835809707642
Add <iden> integration tests;integration;Update <file_name> to latest. Add default constructor.;latest, Add default constructor;Similar;0.7017360925674438
Add <iden> integration tests;integration;Add simple package info to root package  ;simple;Similar;0.6034790873527527
Add <iden> integration tests;integration;Correct header length checking logic. Improve exception message;Improve;Similar;0.588057279586792
Add <iden> integration tests;integration;Promote <iden> logging to a class which knows about chunking  ;This is an <iden>-specific implementation detail which is now only performed when needed;Similar;0.5957428812980652
Add <iden> integration tests;integration;Fix IntelliJ auto-formatting  ;Improve the formatting;Similar;0.664580762386322
Add <iden> integration tests;integration;Add path and query tests for pre-encoded values;-;Similar;0.797278106212616
Add <iden> integration tests;integration;Add converters module and protobuf converter;to the sentence;Similar;0.8342825174331665
Add <iden> integration tests;integration;Newline at end of file  ;Yes plz;Similar;0.635914146900177
Add <iden> integration tests;integration;Log network and unexpected exceptions if logging is enabled  ;if logging is enabled;Similar;0.5558254718780518
Add <iden> integration tests;integration;Fix styling of <iden> download;styling;Similar;0.6651128530502319
Add <iden> integration tests;integration;Rename pair to field to match annotation;match annotation;Similar;0.5805461406707764
Add <iden> integration tests;integration;" 
- Add <iden> <method_name>  
- Also update our sample to use <iden> contributors rather than the <iden>  
- Bump some dependencies to their latest versions  
";" 
- Use this on <iden> <version> and prior and when on the <iden>  
- because the latter is shutting down and subject to lame rate limiting when on common networks";Similar;0.5472280979156494
Add <iden> integration tests;integration;Provide a mutable <file_name> implementation. <iden> to conform.;to conform;Similar;0.8104881048202515
Add <iden> integration tests;integration;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Similar;0.5739308595657349
Add <iden> integration tests;integration;Simplify test method fetching;-;Similar;0.693299412727356
Add <iden> integration tests;integration;Allow <file_name> instantiation  ;Hide some Apache implementation details;Similar;0.7020100355148315
Add <iden> integration tests;integration;Hide more implementation details;more implementation details;Similar;0.6088657379150391
Add <iden> integration tests;integration;Introduce builder pattern to instantiate <method_name>;profiler are now optional. Convenience methods for specifying a <iden> or an <iden> directly are also provided.;Similar;0.7472599744796753
Add <iden> integration tests;integration;Use no_aop Guice variant  ;no_aop;Similar;0.526437520980835
Add <iden> integration tests;integration;Adding a human-readable name to the  <file_name>  interface;human-readable;Similar;0.6633248329162598
Add <iden> integration tests;integration;Added getTag() and logChunk() methods;for easier subclassing;Similar;0.6959465146064758
Add <iden> integration tests;integration;Reintroduced deprecated <file_name> constructor;deprecated;Similar;0.5632573366165161
Add <iden> integration tests;integration;Update custom conversion docs per feedback;Clarify that <iden> is just the default converter, Add section on other built-in converters, Add section on implementing your own custom converters;Similar;0.6929747462272644
Add <iden> integration tests;integration;Fix style nits per review;per review;Similar;0.5998741388320923
Add <iden> integration tests;integration;rename <iden> ->  <file_name>  ;to harvest the names for new annotations;Similar;0.7150444984436035
Add <iden> integration tests;integration;Move variable to where it is used;where it is used;Similar;0.6367254257202148
Add <iden> integration tests;integration;Fix spelling;spelling;Similar;0.5527505874633789
Add <iden> integration tests;integration;Add fixed query parameter support;support;Similar;0.763589084148407
Add <iden> integration tests;integration;Add <file_name>, <file_name> support to <file_name>  ;-;Similar;0.7537956833839417
Add <iden> integration tests;integration;Allow <file_name> extensions;improved <file_name>;Similar;0.7478867769241333
Add <iden> integration tests;integration;Repackage gson into retrofit.internal.gson  ;enhance integration;Similar;0.7126197814941406
Add <iden> integration tests;integration;Ensure <file_name> and <file_name> use FileDescriptor.sync();Ensure <file_name> and <file_name> use FileDescriptor.sync();Similar;0.7416727542877197
Add <iden> integration tests;integration;moved util to <file_name>, added <file_name>  ;Organize and enhance code files;Similar;0.7367236018180847
Add <iden> integration tests;integration;Use <iden> <version>s JsonAdapter.serializeNulls();serializeNulls;Similar;0.7425316572189331
Add <iden> integration tests;integration;Removal of Unnecessary Creation of <iden>;if <iden> has length 0 there is no point to create stringBuilder for that. that condition check needs to happen before stringBuilder creation.;Similar;0.5016373991966248
Add <iden> integration tests;integration;Expose <iden> via the <file_name> injection-like framework;injection-like framework;Similar;0.7869939804077148
Add <iden> integration tests;integration;Changing `<file_name>` to implement `<file_name>` interface;interface;Similar;0.728736162185669
Add <iden> integration tests;integration;Fix support for protobuf <version>+;ExtensionRegistry cannot be null;Similar;0.7695872783660889
Add <iden> integration tests;integration;Fix typo;typo;Similar;0.6931986808776855
Small fixes  ;error-prone;Add more obviously missing @nullable annotations;missing;Similar;0.5223421454429626
Small fixes  ;error-prone;Add some missing Nullable annotations;missing;Similar;0.6517589092254639
Small fixes  ;error-prone;Add some missing Nullable annotations;missing;Similar;0.6517589092254639
Small fixes  ;error-prone;Use a dummy value to further validation optional delegation;This ensures the value can only come from only one place;Similar;0.5256195068359375
Small fixes  ;error-prone;Re-work unresolvable type detection in parameters  ;"In order to natively support Kotlins suspend modifier in the future, we need to allow wildcards to be used for the last parameter; As a result, we only validate the shape of a type once an annotation is detected.";Similar;0.5763759613037109
Small fixes  ;error-prone;Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;Similar;0.5103598833084106
Small fixes  ;error-prone;Consolidate exception formatters in one place  ;streamline implementation and improve maintenance;Similar;0.5996774435043335
Small fixes  ;error-prone;Remove old <iden> nonsense;As of API 26 the android.jar contains the classes checked by <iden> and used by <iden>.Java8. And we dont encourage throwing checked exceptions from the service method but instead routing them through your call adapter.;Similar;0.5291239619255066
Small fixes  ;error-prone;Remove unused interface  ;unused;Similar;0.6306057572364807
Small fixes  ;error-prone;Simplify observable creation and reduce runtime allocations;Simplify, reduce;Similar;0.6774032115936279
Small fixes  ;error-prone;Remove duplicated test  ;It is the same as in this file;Similar;0.5493917465209961
Small fixes  ;error-prone;call it a <version>;Actually;Similar;0.5873004198074341
Small fixes  ;error-prone;Add missing import  ;missing;Similar;0.5991663336753845
Small fixes  ;error-prone;Remove the need for generated accessor methods  ;need for generated accessor methods;Similar;0.5768401622772217
Small fixes  ;error-prone;Use new <iden>s non-throwing close and a simpler body copy;non-throwing close and a simpler body			      ;Similar;0.5418164134025574
Small fixes  ;error-prone;Remove incorrect generic parameter  ;incorrect;Similar;0.6159274578094482
Small fixes  ;error-prone;Update to OkHttp <version>. Fix a tiny potential NPE;potential NPE;Similar;0.6648168563842773
Small fixes  ;error-prone;Fix annotation link;<iden> is gone;Similar;0.5750839114189148
Small fixes  ;error-prone;Add simple package info to root package  ;simple;Similar;0.6409654021263123
Small fixes  ;error-prone;Properly name ignored exception in catch block  ;Properly naming;Similar;0.5042498111724854
Small fixes  ;error-prone;Simplify test method fetching;-;Similar;0.53208327293396
Small fixes  ;error-prone;Hide more implementation details;more implementation details;Similar;0.5478912591934204
Small fixes  ;error-prone;Use no_aop Guice variant  ;no_aop;Similar;0.596769392490387
Small fixes  ;error-prone;Fix small wording issues in custom converter docs;small wording issues;Similar;0.5270010828971863
Small fixes  ;error-prone;Fix style nits per review;per review;Similar;0.5683581829071045
Small fixes  ;error-prone;Move variable to where it is used;where it is used;Similar;0.541066586971283
Small fixes  ;error-prone;Fix spelling;spelling;Similar;0.6409667730331421
Small fixes  ;error-prone;Removal of Unnecessary Creation of <iden>;if <iden> has length 0 there is no point to create stringBuilder for that. that condition check needs to happen before stringBuilder creation.;Similar;0.6133311986923218
Small fixes  ;error-prone;Fix support for protobuf <version>+;ExtensionRegistry cannot be null;Similar;0.5391274690628052
Small fixes  ;error-prone;Fix typo;typo;Similar;0.6257271766662598
Small fixes  ;error-prone;Remove redundant throws  ;redundant;Similar;0.5827211141586304
Add coroutine support to <file_name> ;coroutine support;Migrate forced suspension mechanism from yield to <iden>;Since its possible for certain dispatchers to completely avoid yielding, and currently the immediate dispatchers exhibit this behavior, we need an alternate mechanism of forcing suspension or UndeclaredThrowableExceptions will still be seen.;Similar;0.6241211891174316
Add coroutine support to <file_name> ;coroutine support;Allow service interfaces to extend other interfaces  ;With a higher minSdkVersion, the bug which prevented this on <iden> no longer exists;Similar;0.5803284049034119
Add coroutine support to <file_name> ;coroutine support;Add some missing @nullable annotations to <file_name> ;missing;Similar;0.7027034759521484
Add coroutine support to <file_name> ;coroutine support;Use a dummy value to further validation optional delegation;This ensures the value can only come from only one place;Similar;0.5437857508659363
Add coroutine support to <file_name> ;coroutine support;Expose static factory for <file_name> <enter> Also rework the internals of how an <file_name> gets instantiated and set as a tag on the <iden>;This will make a future change easier to land;Similar;0.7118556499481201
Add coroutine support to <file_name> ;coroutine support;Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;Similar;0.791386067867279
Add coroutine support to <file_name> ;coroutine support;Consolidate exception formatters in one place  ;streamline implementation and improve maintenance;Similar;0.5797167420387268
Add coroutine support to <file_name> ;coroutine support;Pull out <file_name> base class <enter>;This will allow us to support multiple forms of invocation beyond <iden> calls.;Similar;0.8386882543563843
Add coroutine support to <file_name> ;coroutine support;Use HTTPS links in documentation where possible  ;where possible;Similar;0.7376166582107544
Add coroutine support to <file_name> ;coroutine support;Combine <file_name> and <iden> into <method_name> <enter>  ;This is one class that handles all of the annotations and binding for a service method;Similar;0.8767303824424744
Add coroutine support to <file_name> ;coroutine support;Rename <method_name> to onSuccess(), and failure() to <iden>();to onSuccess(), and failure(), <iden>;Similar;0.6631301641464233
Add coroutine support to <file_name> ;coroutine support;Refer to the latest OkHttp version;latest;Similar;0.5767993927001953
Add coroutine support to <file_name> ;coroutine support;Add JSR 305 nullability annotations;nullability annotations;Similar;0.5409742593765259
Add coroutine support to <file_name> ;coroutine support;Update <file_name> to the latest version;the latest version;Similar;0.6798161268234253
Add coroutine support to <file_name> ;coroutine support;Remove duplicated test  ;It is the same as in this file;Similar;0.5304253101348877
Add coroutine support to <file_name> ;coroutine support;call it a <version>;Actually;Similar;0.7009085416793823
Add coroutine support to <file_name> ;coroutine support;Add example of using <iden> <file_name> as a <iden> <method_name>  ;This also adds the <file_name> instance as a param to the string <file_name> to allow it to delegate to others directly. This brings it into parity with the method signatures of the other <file_name> methods anyway.;Similar;0.925632655620575
Add coroutine support to <file_name> ;coroutine support;Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;Similar;0.718108594417572
Add coroutine support to <file_name> ;coroutine support;Naming, API changes, and documentation around mock services.  ;mock services;Similar;0.6751508116722107
Add coroutine support to <file_name> ;coroutine support;Introduce factory for <file_name> concept;This is still highly-inefficient in its internal use and there are no tests proving that we now fail earlier in configuring a service method;Similar;0.7789691686630249
Add coroutine support to <file_name> ;coroutine support;Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;Similar;0.7077938318252563
Add coroutine support to <file_name> ;coroutine support;Remove unused classes from <otherCommit_link>;unused;Similar;0.5626938939094543
Add coroutine support to <file_name> ;coroutine support;Update to OkHttp <version>. Fix a tiny potential NPE;potential NPE;Similar;0.5508521795272827
Add coroutine support to <file_name> ;coroutine support;Fix annotation link;<iden> is gone;Similar;0.7199894189834595
Add coroutine support to <file_name> ;coroutine support;Use the annotations directly for parameter handling.;Before we attempted to normalize the parameter annotations into a name and type model. The introduction of multi-part transfer encodings required something more expressive so the annotation instances themselves were used. This change removes the name and type in favor of using the annotation for everything.;Similar;0.745272696018219
Add coroutine support to <file_name> ;coroutine support;Expose success type on <method_name>;Theres a bit of a test gap going on for all the variants of successful and erroneous handling of sync, async, and rx. This new behavior is fully tested in all three but more general behavior testing for them will be needed in a follow-up.;Similar;0.8515074253082275
Add coroutine support to <file_name> ;coroutine support;Correct map parameter type detection for query and field  ;-;Similar;0.536411702632904
Add coroutine support to <file_name> ;coroutine support;Update <file_name> to latest. Add default constructor.;latest, Add default constructor;Similar;0.8038377165794373
Add coroutine support to <file_name> ;coroutine support;Add simple package info to root package  ;simple;Similar;0.5944069623947144
Add coroutine support to <file_name> ;coroutine support;Correct header length checking logic. Improve exception message;Improve;Similar;0.5931225419044495
Add coroutine support to <file_name> ;coroutine support;Promote <iden> logging to a class which knows about chunking  ;This is an <iden>-specific implementation detail which is now only performed when needed;Similar;0.6927566528320312
Add coroutine support to <file_name> ;coroutine support;Fix IntelliJ auto-formatting  ;Improve the formatting;Similar;0.685650646686554
Add coroutine support to <file_name> ;coroutine support;Add path and query tests for pre-encoded values;-;Similar;0.7516096830368042
Add coroutine support to <file_name> ;coroutine support;Add converters module and protobuf converter;to the sentence;Similar;0.708450436592102
Add coroutine support to <file_name> ;coroutine support;Newline at end of file  ;Yes plz;Similar;0.6101105809211731
Add coroutine support to <file_name> ;coroutine support;Log network and unexpected exceptions if logging is enabled  ;if logging is enabled;Similar;0.6199687719345093
Add coroutine support to <file_name> ;coroutine support;Fix styling of <iden> download;styling;Similar;0.7403890490531921
Add coroutine support to <file_name> ;coroutine support;Rename pair to field to match annotation;match annotation;Similar;0.5135606527328491
Add coroutine support to <file_name> ;coroutine support;" 
- Add <iden> <method_name>  
- Also update our sample to use <iden> contributors rather than the <iden>  
- Bump some dependencies to their latest versions  
";" 
- Use this on <iden> <version> and prior and when on the <iden>  
- because the latter is shutting down and subject to lame rate limiting when on common networks";Similar;0.5855562686920166
Add coroutine support to <file_name> ;coroutine support;Provide a mutable <file_name> implementation. <iden> to conform.;to conform;Similar;0.8500094413757324
Add coroutine support to <file_name> ;coroutine support;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Similar;0.7034233808517456
Add coroutine support to <file_name> ;coroutine support;Simplify test method fetching;-;Similar;0.5679472088813782
Add coroutine support to <file_name> ;coroutine support;Allow <file_name> instantiation  ;Hide some Apache implementation details;Similar;0.8726332187652588
Add coroutine support to <file_name> ;coroutine support;Hide more implementation details;more implementation details;Similar;0.5195117592811584
Add coroutine support to <file_name> ;coroutine support;Remove unused <file_name> classes;unused;Similar;0.6112880110740662
Add coroutine support to <file_name> ;coroutine support;Introduce builder pattern to instantiate <method_name>;profiler are now optional. Convenience methods for specifying a <iden> or an <iden> directly are also provided.;Similar;0.8172329664230347
Add coroutine support to <file_name> ;coroutine support;Use no_aop Guice variant  ;no_aop;Similar;0.5230059623718262
Add coroutine support to <file_name> ;coroutine support;Adding a human-readable name to the  <file_name>  interface;human-readable;Similar;0.8532384037971497
Add coroutine support to <file_name> ;coroutine support;Added getTag() and logChunk() methods;for easier subclassing;Similar;0.8006175756454468
Add coroutine support to <file_name> ;coroutine support;Reintroduced deprecated <file_name> constructor;deprecated;Similar;0.6716159582138062
Add coroutine support to <file_name> ;coroutine support;Fix small wording issues in custom converter docs;small wording issues;Similar;0.535270631313324
Add coroutine support to <file_name> ;coroutine support;Update custom conversion docs per feedback;Clarify that <iden> is just the default converter, Add section on other built-in converters, Add section on implementing your own custom converters;Similar;0.6952645182609558
Add coroutine support to <file_name> ;coroutine support;Fix style nits per review;per review;Similar;0.5841788053512573
Add coroutine support to <file_name> ;coroutine support;fix issue <issue_link> : permit use when servers or intermediaries mistakingly miss Content-<iden> header;mistakingly miss Content-<iden> header;Similar;0.6065042018890381
Add coroutine support to <file_name> ;coroutine support;rename <iden> ->  <file_name>  ;to harvest the names for new annotations;Similar;0.8472147583961487
Add coroutine support to <file_name> ;coroutine support;Move variable to where it is used;where it is used;Similar;0.6275964975357056
Add coroutine support to <file_name> ;coroutine support;Fix spelling;spelling;Similar;0.5663777589797974
Add coroutine support to <file_name> ;coroutine support;Add fixed query parameter support;support;Similar;0.7793033123016357
Add coroutine support to <file_name> ;coroutine support;Add <file_name>, <file_name> support to <file_name>  ;-;Similar;0.9231959581375122
Add coroutine support to <file_name> ;coroutine support;Allow <file_name> extensions;improved <file_name>;Similar;0.8888744115829468
Add coroutine support to <file_name> ;coroutine support;Repackage gson into retrofit.internal.gson  ;enhance integration;Similar;0.6633983850479126
Add coroutine support to <file_name> ;coroutine support;Ensure <file_name> and <file_name> use FileDescriptor.sync();Ensure <file_name> and <file_name> use FileDescriptor.sync();Similar;0.8455690741539001
Add coroutine support to <file_name> ;coroutine support;moved util to <file_name>, added <file_name>  ;Organize and enhance code files;Similar;0.8907725811004639
Add coroutine support to <file_name> ;coroutine support;Use <iden> <version>s JsonAdapter.serializeNulls();serializeNulls;Similar;0.780055046081543
Add coroutine support to <file_name> ;coroutine support;Expose <iden> via the <file_name> injection-like framework;injection-like framework;Similar;0.8943928480148315
Add coroutine support to <file_name> ;coroutine support;Changing `<file_name>` to implement `<file_name>` interface;interface;Similar;0.8749696016311646
Add coroutine support to <file_name> ;coroutine support;Fix support for protobuf <version>+;ExtensionRegistry cannot be null;Similar;0.7659549117088318
Add coroutine support to <file_name> ;coroutine support;Fix typo;typo;Similar;0.6235040426254272
Migrate forced suspension mechanism from yield to <iden>;Since its possible for certain dispatchers to completely avoid yielding, and currently the immediate dispatchers exhibit this behavior, we need an alternate mechanism of forcing suspension or UndeclaredThrowableExceptions will still be seen.;Allow service interfaces to extend other interfaces  ;With a higher minSdkVersion, the bug which prevented this on <iden> no longer exists;Similar;0.5444295406341553
Migrate forced suspension mechanism from yield to <iden>;Since its possible for certain dispatchers to completely avoid yielding, and currently the immediate dispatchers exhibit this behavior, we need an alternate mechanism of forcing suspension or UndeclaredThrowableExceptions will still be seen.;Add more obviously missing @nullable annotations;missing;Similar;0.6880558133125305
Migrate forced suspension mechanism from yield to <iden>;Since its possible for certain dispatchers to completely avoid yielding, and currently the immediate dispatchers exhibit this behavior, we need an alternate mechanism of forcing suspension or UndeclaredThrowableExceptions will still be seen.;Add some missing @nullable annotations to <file_name> ;missing;Similar;0.6535519361495972
Migrate forced suspension mechanism from yield to <iden>;Since its possible for certain dispatchers to completely avoid yielding, and currently the immediate dispatchers exhibit this behavior, we need an alternate mechanism of forcing suspension or UndeclaredThrowableExceptions will still be seen.;Add some missing Nullable annotations;missing;Similar;0.6121658682823181
Migrate forced suspension mechanism from yield to <iden>;Since its possible for certain dispatchers to completely avoid yielding, and currently the immediate dispatchers exhibit this behavior, we need an alternate mechanism of forcing suspension or UndeclaredThrowableExceptions will still be seen.;Add some missing Nullable annotations;missing;Similar;0.6121658682823181
Migrate forced suspension mechanism from yield to <iden>;Since its possible for certain dispatchers to completely avoid yielding, and currently the immediate dispatchers exhibit this behavior, we need an alternate mechanism of forcing suspension or UndeclaredThrowableExceptions will still be seen.;Use a dummy value to further validation optional delegation;This ensures the value can only come from only one place;Similar;0.704393208026886
Migrate forced suspension mechanism from yield to <iden>;Since its possible for certain dispatchers to completely avoid yielding, and currently the immediate dispatchers exhibit this behavior, we need an alternate mechanism of forcing suspension or UndeclaredThrowableExceptions will still be seen.;Re-work unresolvable type detection in parameters  ;"In order to natively support Kotlins suspend modifier in the future, we need to allow wildcards to be used for the last parameter; As a result, we only validate the shape of a type once an annotation is detected.";Similar;0.6407864093780518
Migrate forced suspension mechanism from yield to <iden>;Since its possible for certain dispatchers to completely avoid yielding, and currently the immediate dispatchers exhibit this behavior, we need an alternate mechanism of forcing suspension or UndeclaredThrowableExceptions will still be seen.;Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;Similar;0.75359046459198
Migrate forced suspension mechanism from yield to <iden>;Since its possible for certain dispatchers to completely avoid yielding, and currently the immediate dispatchers exhibit this behavior, we need an alternate mechanism of forcing suspension or UndeclaredThrowableExceptions will still be seen.;Consolidate exception formatters in one place  ;streamline implementation and improve maintenance;Similar;0.6250820159912109
Migrate forced suspension mechanism from yield to <iden>;Since its possible for certain dispatchers to completely avoid yielding, and currently the immediate dispatchers exhibit this behavior, we need an alternate mechanism of forcing suspension or UndeclaredThrowableExceptions will still be seen.;Pull out <file_name> base class <enter>;This will allow us to support multiple forms of invocation beyond <iden> calls.;Similar;0.6449405550956726
Migrate forced suspension mechanism from yield to <iden>;Since its possible for certain dispatchers to completely avoid yielding, and currently the immediate dispatchers exhibit this behavior, we need an alternate mechanism of forcing suspension or UndeclaredThrowableExceptions will still be seen.;Remove old <iden> nonsense;As of API 26 the android.jar contains the classes checked by <iden> and used by <iden>.Java8. And we dont encourage throwing checked exceptions from the service method but instead routing them through your call adapter.;Similar;0.6959325075149536
Migrate forced suspension mechanism from yield to <iden>;Since its possible for certain dispatchers to completely avoid yielding, and currently the immediate dispatchers exhibit this behavior, we need an alternate mechanism of forcing suspension or UndeclaredThrowableExceptions will still be seen.;Combine <file_name> and <iden> into <method_name> <enter>  ;This is one class that handles all of the annotations and binding for a service method;Similar;0.7227446436882019
Migrate forced suspension mechanism from yield to <iden>;Since its possible for certain dispatchers to completely avoid yielding, and currently the immediate dispatchers exhibit this behavior, we need an alternate mechanism of forcing suspension or UndeclaredThrowableExceptions will still be seen.;Rename <method_name> to onSuccess(), and failure() to <iden>();to onSuccess(), and failure(), <iden>;Similar;0.8369461297988892
Migrate forced suspension mechanism from yield to <iden>;Since its possible for certain dispatchers to completely avoid yielding, and currently the immediate dispatchers exhibit this behavior, we need an alternate mechanism of forcing suspension or UndeclaredThrowableExceptions will still be seen.;Refer to the latest OkHttp version;latest;Similar;0.5451925992965698
Migrate forced suspension mechanism from yield to <iden>;Since its possible for certain dispatchers to completely avoid yielding, and currently the immediate dispatchers exhibit this behavior, we need an alternate mechanism of forcing suspension or UndeclaredThrowableExceptions will still be seen.;Add JSR 305 nullability annotations;nullability annotations;Similar;0.6176384687423706
Migrate forced suspension mechanism from yield to <iden>;Since its possible for certain dispatchers to completely avoid yielding, and currently the immediate dispatchers exhibit this behavior, we need an alternate mechanism of forcing suspension or UndeclaredThrowableExceptions will still be seen.;Update <file_name> to the latest version;the latest version;Similar;0.5044444799423218
Migrate forced suspension mechanism from yield to <iden>;Since its possible for certain dispatchers to completely avoid yielding, and currently the immediate dispatchers exhibit this behavior, we need an alternate mechanism of forcing suspension or UndeclaredThrowableExceptions will still be seen.;Remove unused interface  ;unused;Similar;0.6804602146148682
Migrate forced suspension mechanism from yield to <iden>;Since its possible for certain dispatchers to completely avoid yielding, and currently the immediate dispatchers exhibit this behavior, we need an alternate mechanism of forcing suspension or UndeclaredThrowableExceptions will still be seen.;Simplify observable creation and reduce runtime allocations;Simplify, reduce;Similar;0.6183697581291199
Migrate forced suspension mechanism from yield to <iden>;Since its possible for certain dispatchers to completely avoid yielding, and currently the immediate dispatchers exhibit this behavior, we need an alternate mechanism of forcing suspension or UndeclaredThrowableExceptions will still be seen.;Refactor <iden> tests to avoid the use of blocking operators  ;avoid the use of blocking operators;Similar;0.5161349773406982
Migrate forced suspension mechanism from yield to <iden>;Since its possible for certain dispatchers to completely avoid yielding, and currently the immediate dispatchers exhibit this behavior, we need an alternate mechanism of forcing suspension or UndeclaredThrowableExceptions will still be seen.;Remove duplicated test  ;It is the same as in this file;Similar;0.7186778783798218
Migrate forced suspension mechanism from yield to <iden>;Since its possible for certain dispatchers to completely avoid yielding, and currently the immediate dispatchers exhibit this behavior, we need an alternate mechanism of forcing suspension or UndeclaredThrowableExceptions will still be seen.;call it a <version>;Actually;Similar;0.6869233846664429
Migrate forced suspension mechanism from yield to <iden>;Since its possible for certain dispatchers to completely avoid yielding, and currently the immediate dispatchers exhibit this behavior, we need an alternate mechanism of forcing suspension or UndeclaredThrowableExceptions will still be seen.;Add missing import  ;missing;Similar;0.7393422722816467
Migrate forced suspension mechanism from yield to <iden>;Since its possible for certain dispatchers to completely avoid yielding, and currently the immediate dispatchers exhibit this behavior, we need an alternate mechanism of forcing suspension or UndeclaredThrowableExceptions will still be seen.;Remove the need for generated accessor methods  ;need for generated accessor methods;Similar;0.6919411420822144
Migrate forced suspension mechanism from yield to <iden>;Since its possible for certain dispatchers to completely avoid yielding, and currently the immediate dispatchers exhibit this behavior, we need an alternate mechanism of forcing suspension or UndeclaredThrowableExceptions will still be seen.;Propagate callback executor even when not explicitly specified  ;This lets custom <iden> implementations use the <file_name> default for their callbacks;Similar;0.5430090427398682
Migrate forced suspension mechanism from yield to <iden>;Since its possible for certain dispatchers to completely avoid yielding, and currently the immediate dispatchers exhibit this behavior, we need an alternate mechanism of forcing suspension or UndeclaredThrowableExceptions will still be seen.;Add example of using <iden> <file_name> as a <iden> <method_name>  ;This also adds the <file_name> instance as a param to the string <file_name> to allow it to delegate to others directly. This brings it into parity with the method signatures of the other <file_name> methods anyway.;Similar;0.6737502217292786
Migrate forced suspension mechanism from yield to <iden>;Since its possible for certain dispatchers to completely avoid yielding, and currently the immediate dispatchers exhibit this behavior, we need an alternate mechanism of forcing suspension or UndeclaredThrowableExceptions will still be seen.;Use new <iden>s non-throwing close and a simpler body copy;non-throwing close and a simpler body			      ;Similar;0.5294269323348999
Migrate forced suspension mechanism from yield to <iden>;Since its possible for certain dispatchers to completely avoid yielding, and currently the immediate dispatchers exhibit this behavior, we need an alternate mechanism of forcing suspension or UndeclaredThrowableExceptions will still be seen.;Remove incorrect generic parameter  ;incorrect;Similar;0.6700322031974792
Migrate forced suspension mechanism from yield to <iden>;Since its possible for certain dispatchers to completely avoid yielding, and currently the immediate dispatchers exhibit this behavior, we need an alternate mechanism of forcing suspension or UndeclaredThrowableExceptions will still be seen.;Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;Similar;0.6112653017044067
Migrate forced suspension mechanism from yield to <iden>;Since its possible for certain dispatchers to completely avoid yielding, and currently the immediate dispatchers exhibit this behavior, we need an alternate mechanism of forcing suspension or UndeclaredThrowableExceptions will still be seen.;Naming, API changes, and documentation around mock services.  ;mock services;Similar;0.5686711668968201
Migrate forced suspension mechanism from yield to <iden>;Since its possible for certain dispatchers to completely avoid yielding, and currently the immediate dispatchers exhibit this behavior, we need an alternate mechanism of forcing suspension or UndeclaredThrowableExceptions will still be seen.;Introduce factory for <file_name> concept;This is still highly-inefficient in its internal use and there are no tests proving that we now fail earlier in configuring a service method;Similar;0.5644651651382446
Migrate forced suspension mechanism from yield to <iden>;Since its possible for certain dispatchers to completely avoid yielding, and currently the immediate dispatchers exhibit this behavior, we need an alternate mechanism of forcing suspension or UndeclaredThrowableExceptions will still be seen.;Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;Similar;0.6942929029464722
Migrate forced suspension mechanism from yield to <iden>;Since its possible for certain dispatchers to completely avoid yielding, and currently the immediate dispatchers exhibit this behavior, we need an alternate mechanism of forcing suspension or UndeclaredThrowableExceptions will still be seen.;Remove unused classes from <otherCommit_link>;unused;Similar;0.7204062938690186
Migrate forced suspension mechanism from yield to <iden>;Since its possible for certain dispatchers to completely avoid yielding, and currently the immediate dispatchers exhibit this behavior, we need an alternate mechanism of forcing suspension or UndeclaredThrowableExceptions will still be seen.;Update to OkHttp <version>. Fix a tiny potential NPE;potential NPE;Similar;0.5607584118843079
Migrate forced suspension mechanism from yield to <iden>;Since its possible for certain dispatchers to completely avoid yielding, and currently the immediate dispatchers exhibit this behavior, we need an alternate mechanism of forcing suspension or UndeclaredThrowableExceptions will still be seen.;Fix annotation link;<iden> is gone;Similar;0.6991721391677856
Migrate forced suspension mechanism from yield to <iden>;Since its possible for certain dispatchers to completely avoid yielding, and currently the immediate dispatchers exhibit this behavior, we need an alternate mechanism of forcing suspension or UndeclaredThrowableExceptions will still be seen.;Use the annotations directly for parameter handling.;Before we attempted to normalize the parameter annotations into a name and type model. The introduction of multi-part transfer encodings required something more expressive so the annotation instances themselves were used. This change removes the name and type in favor of using the annotation for everything.;Similar;0.6329977512359619
Migrate forced suspension mechanism from yield to <iden>;Since its possible for certain dispatchers to completely avoid yielding, and currently the immediate dispatchers exhibit this behavior, we need an alternate mechanism of forcing suspension or UndeclaredThrowableExceptions will still be seen.;Expose success type on <method_name>;Theres a bit of a test gap going on for all the variants of successful and erroneous handling of sync, async, and rx. This new behavior is fully tested in all three but more general behavior testing for them will be needed in a follow-up.;Similar;0.6421065330505371
Migrate forced suspension mechanism from yield to <iden>;Since its possible for certain dispatchers to completely avoid yielding, and currently the immediate dispatchers exhibit this behavior, we need an alternate mechanism of forcing suspension or UndeclaredThrowableExceptions will still be seen.;Update <file_name> to latest. Add default constructor.;latest, Add default constructor;Similar;0.6043527126312256
Migrate forced suspension mechanism from yield to <iden>;Since its possible for certain dispatchers to completely avoid yielding, and currently the immediate dispatchers exhibit this behavior, we need an alternate mechanism of forcing suspension or UndeclaredThrowableExceptions will still be seen.;Properly name ignored exception in catch block  ;Properly naming;Similar;0.5169686079025269
Migrate forced suspension mechanism from yield to <iden>;Since its possible for certain dispatchers to completely avoid yielding, and currently the immediate dispatchers exhibit this behavior, we need an alternate mechanism of forcing suspension or UndeclaredThrowableExceptions will still be seen.;Fix IntelliJ auto-formatting  ;Improve the formatting;Similar;0.6707961559295654
Migrate forced suspension mechanism from yield to <iden>;Since its possible for certain dispatchers to completely avoid yielding, and currently the immediate dispatchers exhibit this behavior, we need an alternate mechanism of forcing suspension or UndeclaredThrowableExceptions will still be seen.;Add path and query tests for pre-encoded values;-;Similar;0.6108769178390503
Migrate forced suspension mechanism from yield to <iden>;Since its possible for certain dispatchers to completely avoid yielding, and currently the immediate dispatchers exhibit this behavior, we need an alternate mechanism of forcing suspension or UndeclaredThrowableExceptions will still be seen.;Add converters module and protobuf converter;to the sentence;Similar;0.6367710828781128
Migrate forced suspension mechanism from yield to <iden>;Since its possible for certain dispatchers to completely avoid yielding, and currently the immediate dispatchers exhibit this behavior, we need an alternate mechanism of forcing suspension or UndeclaredThrowableExceptions will still be seen.;Newline at end of file  ;Yes plz;Similar;0.5894355177879333
Migrate forced suspension mechanism from yield to <iden>;Since its possible for certain dispatchers to completely avoid yielding, and currently the immediate dispatchers exhibit this behavior, we need an alternate mechanism of forcing suspension or UndeclaredThrowableExceptions will still be seen.;Log network and unexpected exceptions if logging is enabled  ;if logging is enabled;Similar;0.5315343737602234
Migrate forced suspension mechanism from yield to <iden>;Since its possible for certain dispatchers to completely avoid yielding, and currently the immediate dispatchers exhibit this behavior, we need an alternate mechanism of forcing suspension or UndeclaredThrowableExceptions will still be seen.;Fix styling of <iden> download;styling;Similar;0.6854405999183655
Migrate forced suspension mechanism from yield to <iden>;Since its possible for certain dispatchers to completely avoid yielding, and currently the immediate dispatchers exhibit this behavior, we need an alternate mechanism of forcing suspension or UndeclaredThrowableExceptions will still be seen.;Rename pair to field to match annotation;match annotation;Similar;0.5557403564453125
Migrate forced suspension mechanism from yield to <iden>;Since its possible for certain dispatchers to completely avoid yielding, and currently the immediate dispatchers exhibit this behavior, we need an alternate mechanism of forcing suspension or UndeclaredThrowableExceptions will still be seen.;Provide a mutable <file_name> implementation. <iden> to conform.;to conform;Similar;0.6345994472503662
Migrate forced suspension mechanism from yield to <iden>;Since its possible for certain dispatchers to completely avoid yielding, and currently the immediate dispatchers exhibit this behavior, we need an alternate mechanism of forcing suspension or UndeclaredThrowableExceptions will still be seen.;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Similar;0.583280622959137
Migrate forced suspension mechanism from yield to <iden>;Since its possible for certain dispatchers to completely avoid yielding, and currently the immediate dispatchers exhibit this behavior, we need an alternate mechanism of forcing suspension or UndeclaredThrowableExceptions will still be seen.;Simplify test method fetching;-;Similar;0.5247846245765686
Migrate forced suspension mechanism from yield to <iden>;Since its possible for certain dispatchers to completely avoid yielding, and currently the immediate dispatchers exhibit this behavior, we need an alternate mechanism of forcing suspension or UndeclaredThrowableExceptions will still be seen.;Allow <file_name> instantiation  ;Hide some Apache implementation details;Similar;0.6500129699707031
Migrate forced suspension mechanism from yield to <iden>;Since its possible for certain dispatchers to completely avoid yielding, and currently the immediate dispatchers exhibit this behavior, we need an alternate mechanism of forcing suspension or UndeclaredThrowableExceptions will still be seen.;Hide more implementation details;more implementation details;Similar;0.647896409034729
Migrate forced suspension mechanism from yield to <iden>;Since its possible for certain dispatchers to completely avoid yielding, and currently the immediate dispatchers exhibit this behavior, we need an alternate mechanism of forcing suspension or UndeclaredThrowableExceptions will still be seen.;Remove unused <file_name> classes;unused;Similar;0.6572213172912598
Migrate forced suspension mechanism from yield to <iden>;Since its possible for certain dispatchers to completely avoid yielding, and currently the immediate dispatchers exhibit this behavior, we need an alternate mechanism of forcing suspension or UndeclaredThrowableExceptions will still be seen.;Introduce builder pattern to instantiate <method_name>;profiler are now optional. Convenience methods for specifying a <iden> or an <iden> directly are also provided.;Similar;0.6118128299713135
Migrate forced suspension mechanism from yield to <iden>;Since its possible for certain dispatchers to completely avoid yielding, and currently the immediate dispatchers exhibit this behavior, we need an alternate mechanism of forcing suspension or UndeclaredThrowableExceptions will still be seen.;Use no_aop Guice variant  ;no_aop;Similar;0.7134097814559937
Migrate forced suspension mechanism from yield to <iden>;Since its possible for certain dispatchers to completely avoid yielding, and currently the immediate dispatchers exhibit this behavior, we need an alternate mechanism of forcing suspension or UndeclaredThrowableExceptions will still be seen.;Added getTag() and logChunk() methods;for easier subclassing;Similar;0.6386654376983643
Migrate forced suspension mechanism from yield to <iden>;Since its possible for certain dispatchers to completely avoid yielding, and currently the immediate dispatchers exhibit this behavior, we need an alternate mechanism of forcing suspension or UndeclaredThrowableExceptions will still be seen.;Reintroduced deprecated <file_name> constructor;deprecated;Similar;0.7750142812728882
Migrate forced suspension mechanism from yield to <iden>;Since its possible for certain dispatchers to completely avoid yielding, and currently the immediate dispatchers exhibit this behavior, we need an alternate mechanism of forcing suspension or UndeclaredThrowableExceptions will still be seen.;Update custom conversion docs per feedback;Clarify that <iden> is just the default converter, Add section on other built-in converters, Add section on implementing your own custom converters;Similar;0.5958997011184692
Migrate forced suspension mechanism from yield to <iden>;Since its possible for certain dispatchers to completely avoid yielding, and currently the immediate dispatchers exhibit this behavior, we need an alternate mechanism of forcing suspension or UndeclaredThrowableExceptions will still be seen.;Fix style nits per review;per review;Similar;0.5825042724609375
Migrate forced suspension mechanism from yield to <iden>;Since its possible for certain dispatchers to completely avoid yielding, and currently the immediate dispatchers exhibit this behavior, we need an alternate mechanism of forcing suspension or UndeclaredThrowableExceptions will still be seen.;fix issue <issue_link> : permit use when servers or intermediaries mistakingly miss Content-<iden> header;mistakingly miss Content-<iden> header;Similar;0.5859981775283813
Migrate forced suspension mechanism from yield to <iden>;Since its possible for certain dispatchers to completely avoid yielding, and currently the immediate dispatchers exhibit this behavior, we need an alternate mechanism of forcing suspension or UndeclaredThrowableExceptions will still be seen.;rename <iden> ->  <file_name>  ;to harvest the names for new annotations;Similar;0.7542982697486877
Migrate forced suspension mechanism from yield to <iden>;Since its possible for certain dispatchers to completely avoid yielding, and currently the immediate dispatchers exhibit this behavior, we need an alternate mechanism of forcing suspension or UndeclaredThrowableExceptions will still be seen.;Move variable to where it is used;where it is used;Similar;0.7864612936973572
Migrate forced suspension mechanism from yield to <iden>;Since its possible for certain dispatchers to completely avoid yielding, and currently the immediate dispatchers exhibit this behavior, we need an alternate mechanism of forcing suspension or UndeclaredThrowableExceptions will still be seen.;Fix spelling;spelling;Similar;0.6324177980422974
Migrate forced suspension mechanism from yield to <iden>;Since its possible for certain dispatchers to completely avoid yielding, and currently the immediate dispatchers exhibit this behavior, we need an alternate mechanism of forcing suspension or UndeclaredThrowableExceptions will still be seen.;Add fixed query parameter support;support;Similar;0.6948271989822388
Migrate forced suspension mechanism from yield to <iden>;Since its possible for certain dispatchers to completely avoid yielding, and currently the immediate dispatchers exhibit this behavior, we need an alternate mechanism of forcing suspension or UndeclaredThrowableExceptions will still be seen.;Add <file_name>, <file_name> support to <file_name>  ;-;Similar;0.6047734022140503
Migrate forced suspension mechanism from yield to <iden>;Since its possible for certain dispatchers to completely avoid yielding, and currently the immediate dispatchers exhibit this behavior, we need an alternate mechanism of forcing suspension or UndeclaredThrowableExceptions will still be seen.;Allow <file_name> extensions;improved <file_name>;Similar;0.6558082103729248
Migrate forced suspension mechanism from yield to <iden>;Since its possible for certain dispatchers to completely avoid yielding, and currently the immediate dispatchers exhibit this behavior, we need an alternate mechanism of forcing suspension or UndeclaredThrowableExceptions will still be seen.;Repackage gson into retrofit.internal.gson  ;enhance integration;Similar;0.7285316586494446
Migrate forced suspension mechanism from yield to <iden>;Since its possible for certain dispatchers to completely avoid yielding, and currently the immediate dispatchers exhibit this behavior, we need an alternate mechanism of forcing suspension or UndeclaredThrowableExceptions will still be seen.;Ensure <file_name> and <file_name> use FileDescriptor.sync();Ensure <file_name> and <file_name> use FileDescriptor.sync();Similar;0.6134024858474731
Migrate forced suspension mechanism from yield to <iden>;Since its possible for certain dispatchers to completely avoid yielding, and currently the immediate dispatchers exhibit this behavior, we need an alternate mechanism of forcing suspension or UndeclaredThrowableExceptions will still be seen.;moved util to <file_name>, added <file_name>  ;Organize and enhance code files;Similar;0.7306710481643677
Migrate forced suspension mechanism from yield to <iden>;Since its possible for certain dispatchers to completely avoid yielding, and currently the immediate dispatchers exhibit this behavior, we need an alternate mechanism of forcing suspension or UndeclaredThrowableExceptions will still be seen.;Use <iden> <version>s JsonAdapter.serializeNulls();serializeNulls;Similar;0.7375237941741943
Migrate forced suspension mechanism from yield to <iden>;Since its possible for certain dispatchers to completely avoid yielding, and currently the immediate dispatchers exhibit this behavior, we need an alternate mechanism of forcing suspension or UndeclaredThrowableExceptions will still be seen.;Removal of Unnecessary Creation of <iden>;if <iden> has length 0 there is no point to create stringBuilder for that. that condition check needs to happen before stringBuilder creation.;Similar;0.7153519988059998
Migrate forced suspension mechanism from yield to <iden>;Since its possible for certain dispatchers to completely avoid yielding, and currently the immediate dispatchers exhibit this behavior, we need an alternate mechanism of forcing suspension or UndeclaredThrowableExceptions will still be seen.;Expose <iden> via the <file_name> injection-like framework;injection-like framework;Similar;0.656532347202301
Migrate forced suspension mechanism from yield to <iden>;Since its possible for certain dispatchers to completely avoid yielding, and currently the immediate dispatchers exhibit this behavior, we need an alternate mechanism of forcing suspension or UndeclaredThrowableExceptions will still be seen.;Changing `<file_name>` to implement `<file_name>` interface;interface;Similar;0.6913645267486572
Migrate forced suspension mechanism from yield to <iden>;Since its possible for certain dispatchers to completely avoid yielding, and currently the immediate dispatchers exhibit this behavior, we need an alternate mechanism of forcing suspension or UndeclaredThrowableExceptions will still be seen.;Fix support for protobuf <version>+;ExtensionRegistry cannot be null;Similar;0.6790266036987305
Migrate forced suspension mechanism from yield to <iden>;Since its possible for certain dispatchers to completely avoid yielding, and currently the immediate dispatchers exhibit this behavior, we need an alternate mechanism of forcing suspension or UndeclaredThrowableExceptions will still be seen.;Fix typo;typo;Similar;0.6867021322250366
Migrate forced suspension mechanism from yield to <iden>;Since its possible for certain dispatchers to completely avoid yielding, and currently the immediate dispatchers exhibit this behavior, we need an alternate mechanism of forcing suspension or UndeclaredThrowableExceptions will still be seen.;Remove redundant throws  ;redundant;Similar;0.6936787366867065
Allow service interfaces to extend other interfaces  ;With a higher minSdkVersion, the bug which prevented this on <iden> no longer exists;Add some missing Nullable annotations;missing;Similar;0.567531168460846
Allow service interfaces to extend other interfaces  ;With a higher minSdkVersion, the bug which prevented this on <iden> no longer exists;Add some missing Nullable annotations;missing;Similar;0.567531168460846
Allow service interfaces to extend other interfaces  ;With a higher minSdkVersion, the bug which prevented this on <iden> no longer exists;Use a dummy value to further validation optional delegation;This ensures the value can only come from only one place;Similar;0.6329107284545898
Allow service interfaces to extend other interfaces  ;With a higher minSdkVersion, the bug which prevented this on <iden> no longer exists;Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;Similar;0.6352435350418091
Allow service interfaces to extend other interfaces  ;With a higher minSdkVersion, the bug which prevented this on <iden> no longer exists;Consolidate exception formatters in one place  ;streamline implementation and improve maintenance;Similar;0.5175994634628296
Allow service interfaces to extend other interfaces  ;With a higher minSdkVersion, the bug which prevented this on <iden> no longer exists;Use HTTPS links in documentation where possible  ;where possible;Similar;0.5314476490020752
Allow service interfaces to extend other interfaces  ;With a higher minSdkVersion, the bug which prevented this on <iden> no longer exists;Combine <file_name> and <iden> into <method_name> <enter>  ;This is one class that handles all of the annotations and binding for a service method;Similar;0.587394654750824
Allow service interfaces to extend other interfaces  ;With a higher minSdkVersion, the bug which prevented this on <iden> no longer exists;Rename <method_name> to onSuccess(), and failure() to <iden>();to onSuccess(), and failure(), <iden>;Similar;0.515399694442749
Allow service interfaces to extend other interfaces  ;With a higher minSdkVersion, the bug which prevented this on <iden> no longer exists;Simplify observable creation and reduce runtime allocations;Simplify, reduce;Similar;0.5494534969329834
Allow service interfaces to extend other interfaces  ;With a higher minSdkVersion, the bug which prevented this on <iden> no longer exists;Remove duplicated test  ;It is the same as in this file;Similar;0.5056310892105103
Allow service interfaces to extend other interfaces  ;With a higher minSdkVersion, the bug which prevented this on <iden> no longer exists;call it a <version>;Actually;Similar;0.5514183640480042
Allow service interfaces to extend other interfaces  ;With a higher minSdkVersion, the bug which prevented this on <iden> no longer exists;Add missing import  ;missing;Similar;0.5023686289787292
Allow service interfaces to extend other interfaces  ;With a higher minSdkVersion, the bug which prevented this on <iden> no longer exists;Remove the need for generated accessor methods  ;need for generated accessor methods;Similar;0.5688748359680176
Allow service interfaces to extend other interfaces  ;With a higher minSdkVersion, the bug which prevented this on <iden> no longer exists;Propagate callback executor even when not explicitly specified  ;This lets custom <iden> implementations use the <file_name> default for their callbacks;Similar;0.5915727019309998
Allow service interfaces to extend other interfaces  ;With a higher minSdkVersion, the bug which prevented this on <iden> no longer exists;Add example of using <iden> <file_name> as a <iden> <method_name>  ;This also adds the <file_name> instance as a param to the string <file_name> to allow it to delegate to others directly. This brings it into parity with the method signatures of the other <file_name> methods anyway.;Similar;0.5864673852920532
Allow service interfaces to extend other interfaces  ;With a higher minSdkVersion, the bug which prevented this on <iden> no longer exists;Naming, API changes, and documentation around mock services.  ;mock services;Similar;0.6346247792243958
Allow service interfaces to extend other interfaces  ;With a higher minSdkVersion, the bug which prevented this on <iden> no longer exists;Remove unused classes from <otherCommit_link>;unused;Similar;0.5061722993850708
Allow service interfaces to extend other interfaces  ;With a higher minSdkVersion, the bug which prevented this on <iden> no longer exists;Fix annotation link;<iden> is gone;Similar;0.5851801633834839
Allow service interfaces to extend other interfaces  ;With a higher minSdkVersion, the bug which prevented this on <iden> no longer exists;Use the annotations directly for parameter handling.;Before we attempted to normalize the parameter annotations into a name and type model. The introduction of multi-part transfer encodings required something more expressive so the annotation instances themselves were used. This change removes the name and type in favor of using the annotation for everything.;Similar;0.5090715885162354
Allow service interfaces to extend other interfaces  ;With a higher minSdkVersion, the bug which prevented this on <iden> no longer exists;Expose success type on <method_name>;Theres a bit of a test gap going on for all the variants of successful and erroneous handling of sync, async, and rx. This new behavior is fully tested in all three but more general behavior testing for them will be needed in a follow-up.;Similar;0.5187321901321411
Allow service interfaces to extend other interfaces  ;With a higher minSdkVersion, the bug which prevented this on <iden> no longer exists;Add simple package info to root package  ;simple;Similar;0.5422313213348389
Allow service interfaces to extend other interfaces  ;With a higher minSdkVersion, the bug which prevented this on <iden> no longer exists;Correct header length checking logic. Improve exception message;Improve;Similar;0.531466007232666
Allow service interfaces to extend other interfaces  ;With a higher minSdkVersion, the bug which prevented this on <iden> no longer exists;Add path and query tests for pre-encoded values;-;Similar;0.6477451920509338
Allow service interfaces to extend other interfaces  ;With a higher minSdkVersion, the bug which prevented this on <iden> no longer exists;Add converters module and protobuf converter;to the sentence;Similar;0.6640329360961914
Allow service interfaces to extend other interfaces  ;With a higher minSdkVersion, the bug which prevented this on <iden> no longer exists;Log network and unexpected exceptions if logging is enabled  ;if logging is enabled;Similar;0.6047807335853577
Allow service interfaces to extend other interfaces  ;With a higher minSdkVersion, the bug which prevented this on <iden> no longer exists;Fix styling of <iden> download;styling;Similar;0.525627851486206
Allow service interfaces to extend other interfaces  ;With a higher minSdkVersion, the bug which prevented this on <iden> no longer exists;Rename pair to field to match annotation;match annotation;Similar;0.5205219984054565
Allow service interfaces to extend other interfaces  ;With a higher minSdkVersion, the bug which prevented this on <iden> no longer exists;" 
- Add <iden> <method_name>  
- Also update our sample to use <iden> contributors rather than the <iden>  
- Bump some dependencies to their latest versions  
";" 
- Use this on <iden> <version> and prior and when on the <iden>  
- because the latter is shutting down and subject to lame rate limiting when on common networks";Similar;0.6188622117042542
Allow service interfaces to extend other interfaces  ;With a higher minSdkVersion, the bug which prevented this on <iden> no longer exists;Provide a mutable <file_name> implementation. <iden> to conform.;to conform;Similar;0.5491433143615723
Allow service interfaces to extend other interfaces  ;With a higher minSdkVersion, the bug which prevented this on <iden> no longer exists;Simplify test method fetching;-;Similar;0.6079812049865723
Allow service interfaces to extend other interfaces  ;With a higher minSdkVersion, the bug which prevented this on <iden> no longer exists;Allow <file_name> instantiation  ;Hide some Apache implementation details;Similar;0.5582926273345947
Allow service interfaces to extend other interfaces  ;With a higher minSdkVersion, the bug which prevented this on <iden> no longer exists;Hide more implementation details;more implementation details;Similar;0.6500036716461182
Allow service interfaces to extend other interfaces  ;With a higher minSdkVersion, the bug which prevented this on <iden> no longer exists;Added getTag() and logChunk() methods;for easier subclassing;Similar;0.663934588432312
Allow service interfaces to extend other interfaces  ;With a higher minSdkVersion, the bug which prevented this on <iden> no longer exists;Update custom conversion docs per feedback;Clarify that <iden> is just the default converter, Add section on other built-in converters, Add section on implementing your own custom converters;Similar;0.5305816531181335
Allow service interfaces to extend other interfaces  ;With a higher minSdkVersion, the bug which prevented this on <iden> no longer exists;Fix style nits per review;per review;Similar;0.5311896204948425
Allow service interfaces to extend other interfaces  ;With a higher minSdkVersion, the bug which prevented this on <iden> no longer exists;fix issue <issue_link> : permit use when servers or intermediaries mistakingly miss Content-<iden> header;mistakingly miss Content-<iden> header;Similar;0.5125214457511902
Allow service interfaces to extend other interfaces  ;With a higher minSdkVersion, the bug which prevented this on <iden> no longer exists;rename <iden> ->  <file_name>  ;to harvest the names for new annotations;Similar;0.5118897557258606
Allow service interfaces to extend other interfaces  ;With a higher minSdkVersion, the bug which prevented this on <iden> no longer exists;Move variable to where it is used;where it is used;Similar;0.6053533554077148
Allow service interfaces to extend other interfaces  ;With a higher minSdkVersion, the bug which prevented this on <iden> no longer exists;Add fixed query parameter support;support;Similar;0.6716906428337097
Allow service interfaces to extend other interfaces  ;With a higher minSdkVersion, the bug which prevented this on <iden> no longer exists;Add <file_name>, <file_name> support to <file_name>  ;-;Similar;0.578546404838562
Allow service interfaces to extend other interfaces  ;With a higher minSdkVersion, the bug which prevented this on <iden> no longer exists;Allow <file_name> extensions;improved <file_name>;Similar;0.6542066335678101
Allow service interfaces to extend other interfaces  ;With a higher minSdkVersion, the bug which prevented this on <iden> no longer exists;Repackage gson into retrofit.internal.gson  ;enhance integration;Similar;0.5843255519866943
Allow service interfaces to extend other interfaces  ;With a higher minSdkVersion, the bug which prevented this on <iden> no longer exists;Ensure <file_name> and <file_name> use FileDescriptor.sync();Ensure <file_name> and <file_name> use FileDescriptor.sync();Similar;0.5042238235473633
Allow service interfaces to extend other interfaces  ;With a higher minSdkVersion, the bug which prevented this on <iden> no longer exists;moved util to <file_name>, added <file_name>  ;Organize and enhance code files;Similar;0.5827656984329224
Allow service interfaces to extend other interfaces  ;With a higher minSdkVersion, the bug which prevented this on <iden> no longer exists;Use <iden> <version>s JsonAdapter.serializeNulls();serializeNulls;Similar;0.5346125364303589
Allow service interfaces to extend other interfaces  ;With a higher minSdkVersion, the bug which prevented this on <iden> no longer exists;Expose <iden> via the <file_name> injection-like framework;injection-like framework;Similar;0.5185319781303406
Allow service interfaces to extend other interfaces  ;With a higher minSdkVersion, the bug which prevented this on <iden> no longer exists;Changing `<file_name>` to implement `<file_name>` interface;interface;Similar;0.5959491729736328
Allow service interfaces to extend other interfaces  ;With a higher minSdkVersion, the bug which prevented this on <iden> no longer exists;Fix support for protobuf <version>+;ExtensionRegistry cannot be null;Similar;0.6159169673919678
Allow service interfaces to extend other interfaces  ;With a higher minSdkVersion, the bug which prevented this on <iden> no longer exists;Fix typo;typo;Similar;0.5002473592758179
Allow service interfaces to extend other interfaces  ;With a higher minSdkVersion, the bug which prevented this on <iden> no longer exists;Remove redundant throws  ;redundant;Similar;0.5018734931945801
Add more obviously missing @nullable annotations;missing;Add some missing @nullable annotations to <file_name> ;missing;Similar;0.8108850121498108
Add more obviously missing @nullable annotations;missing;Fatal errors should crash the dispatcher thread;Fatal errors should be propagated by the async observer instead of attempting to make its way back downstream.;Similar;0.5964505672454834
Add more obviously missing @nullable annotations;missing;Add some missing Nullable annotations;missing;Similar;0.8654811382293701
Add more obviously missing @nullable annotations;missing;Add some missing Nullable annotations;missing;Similar;0.8654811382293701
Add more obviously missing @nullable annotations;missing;Use a dummy value to further validation optional delegation;This ensures the value can only come from only one place;Similar;0.6649323105812073
Add more obviously missing @nullable annotations;missing;Re-work unresolvable type detection in parameters  ;"In order to natively support Kotlins suspend modifier in the future, we need to allow wildcards to be used for the last parameter; As a result, we only validate the shape of a type once an annotation is detected.";Similar;0.751999020576477
Add more obviously missing @nullable annotations;missing;Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;Similar;0.5184279680252075
Add more obviously missing @nullable annotations;missing;Remove old <iden> nonsense;As of API 26 the android.jar contains the classes checked by <iden> and used by <iden>.Java8. And we dont encourage throwing checked exceptions from the service method but instead routing them through your call adapter.;Similar;0.8008115291595459
Add more obviously missing @nullable annotations;missing;Combine <file_name> and <iden> into <method_name> <enter>  ;This is one class that handles all of the annotations and binding for a service method;Similar;0.5060391426086426
Add more obviously missing @nullable annotations;missing;Rename <method_name> to onSuccess(), and failure() to <iden>();to onSuccess(), and failure(), <iden>;Similar;0.748950719833374
Add more obviously missing @nullable annotations;missing;Add JSR 305 nullability annotations;nullability annotations;Similar;0.643832802772522
Add more obviously missing @nullable annotations;missing;Remove unused interface  ;unused;Similar;0.754494845867157
Add more obviously missing @nullable annotations;missing;Simplify observable creation and reduce runtime allocations;Simplify, reduce;Similar;0.657128095626831
Add more obviously missing @nullable annotations;missing;Refactor <iden> tests to avoid the use of blocking operators  ;avoid the use of blocking operators;Similar;0.5366830825805664
Add more obviously missing @nullable annotations;missing;Remove duplicated test  ;It is the same as in this file;Similar;0.7767336368560791
Add more obviously missing @nullable annotations;missing;Add missing import  ;missing;Similar;0.8512544631958008
Add more obviously missing @nullable annotations;missing;Document maps dont allow null anywhere;null anywhere;Similar;0.5825112462043762
Add more obviously missing @nullable annotations;missing;Remove the need for generated accessor methods  ;need for generated accessor methods;Similar;0.7072189450263977
Add more obviously missing @nullable annotations;missing;Use new <iden>s non-throwing close and a simpler body copy;non-throwing close and a simpler body			      ;Similar;0.5750203132629395
Add more obviously missing @nullable annotations;missing;Remove incorrect generic parameter  ;incorrect;Similar;0.8024924993515015
Add more obviously missing @nullable annotations;missing;Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;Similar;0.5162081718444824
Add more obviously missing @nullable annotations;missing;Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;Similar;0.6423830389976501
Add more obviously missing @nullable annotations;missing;Remove unused classes from <otherCommit_link>;unused;Similar;0.7828953266143799
Add more obviously missing @nullable annotations;missing;Update to OkHttp <version>. Fix a tiny potential NPE;potential NPE;Similar;0.612887978553772
Add more obviously missing @nullable annotations;missing;Fix annotation link;<iden> is gone;Similar;0.6131197214126587
Add more obviously missing @nullable annotations;missing;Properly name ignored exception in catch block  ;Properly naming;Similar;0.5816229581832886
Add more obviously missing @nullable annotations;missing;Fix IntelliJ auto-formatting  ;Improve the formatting;Similar;0.5592141151428223
Add more obviously missing @nullable annotations;missing;Newline at end of file  ;Yes plz;Similar;0.537164568901062
Add more obviously missing @nullable annotations;missing;Fix styling of <iden> download;styling;Similar;0.5272366404533386
Add more obviously missing @nullable annotations;missing;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Similar;0.5413543581962585
Add more obviously missing @nullable annotations;missing;Allow <file_name> instantiation  ;Hide some Apache implementation details;Similar;0.5010907053947449
Add more obviously missing @nullable annotations;missing;Hide more implementation details;more implementation details;Similar;0.643602728843689
Add more obviously missing @nullable annotations;missing;Remove unused <file_name> classes;unused;Similar;0.751471757888794
Add more obviously missing @nullable annotations;missing;Use no_aop Guice variant  ;no_aop;Similar;0.6605257391929626
Add more obviously missing @nullable annotations;missing;Reintroduced deprecated <file_name> constructor;deprecated;Similar;0.7590848803520203
Add more obviously missing @nullable annotations;missing;Fix style nits per review;per review;Similar;0.5235723257064819
Add more obviously missing @nullable annotations;missing;fix issue <issue_link> : permit use when servers or intermediaries mistakingly miss Content-<iden> header;mistakingly miss Content-<iden> header;Similar;0.5835483074188232
Add more obviously missing @nullable annotations;missing;rename <iden> ->  <file_name>  ;to harvest the names for new annotations;Similar;0.562339186668396
Add more obviously missing @nullable annotations;missing;Move variable to where it is used;where it is used;Similar;0.5696545243263245
Add more obviously missing @nullable annotations;missing;Fix spelling;spelling;Similar;0.59022456407547
Add more obviously missing @nullable annotations;missing;Add fixed query parameter support;support;Similar;0.5574135780334473
Add more obviously missing @nullable annotations;missing;Repackage gson into retrofit.internal.gson  ;enhance integration;Similar;0.5594956874847412
Add more obviously missing @nullable annotations;missing;moved util to <file_name>, added <file_name>  ;Organize and enhance code files;Similar;0.522801399230957
Add more obviously missing @nullable annotations;missing;Use <iden> <version>s JsonAdapter.serializeNulls();serializeNulls;Similar;0.5112582445144653
Add more obviously missing @nullable annotations;missing;Removal of Unnecessary Creation of <iden>;if <iden> has length 0 there is no point to create stringBuilder for that. that condition check needs to happen before stringBuilder creation.;Similar;0.7861810922622681
Add more obviously missing @nullable annotations;missing;Fix support for protobuf <version>+;ExtensionRegistry cannot be null;Similar;0.5640696287155151
Add more obviously missing @nullable annotations;missing;Fix typo;typo;Similar;0.5781431198120117
Add more obviously missing @nullable annotations;missing;Remove redundant throws  ;redundant;Similar;0.7646608352661133
Add some missing @nullable annotations to <file_name> ;missing;Fatal errors should crash the dispatcher thread;Fatal errors should be propagated by the async observer instead of attempting to make its way back downstream.;Similar;0.594188928604126
Add some missing @nullable annotations to <file_name> ;missing;Add some missing Nullable annotations;missing;Similar;0.8602589964866638
Add some missing @nullable annotations to <file_name> ;missing;Add some missing Nullable annotations;missing;Similar;0.8602589964866638
Add some missing @nullable annotations to <file_name> ;missing;Use a dummy value to further validation optional delegation;This ensures the value can only come from only one place;Similar;0.661339521408081
Add some missing @nullable annotations to <file_name> ;missing;Expose static factory for <file_name> <enter> Also rework the internals of how an <file_name> gets instantiated and set as a tag on the <iden>;This will make a future change easier to land;Similar;0.6149965524673462
Add some missing @nullable annotations to <file_name> ;missing;Re-work unresolvable type detection in parameters  ;"In order to natively support Kotlins suspend modifier in the future, we need to allow wildcards to be used for the last parameter; As a result, we only validate the shape of a type once an annotation is detected.";Similar;0.718532145023346
Add some missing @nullable annotations to <file_name> ;missing;Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;Similar;0.5909610986709595
Add some missing @nullable annotations to <file_name> ;missing;Consolidate exception formatters in one place  ;streamline implementation and improve maintenance;Similar;0.5143696665763855
Add some missing @nullable annotations to <file_name> ;missing;Pull out <file_name> base class <enter>;This will allow us to support multiple forms of invocation beyond <iden> calls.;Similar;0.6324905157089233
Add some missing @nullable annotations to <file_name> ;missing;Remove old <iden> nonsense;As of API 26 the android.jar contains the classes checked by <iden> and used by <iden>.Java8. And we dont encourage throwing checked exceptions from the service method but instead routing them through your call adapter.;Similar;0.6470744609832764
Add some missing @nullable annotations to <file_name> ;missing;Use HTTPS links in documentation where possible  ;where possible;Similar;0.5731411576271057
Add some missing @nullable annotations to <file_name> ;missing;Combine <file_name> and <iden> into <method_name> <enter>  ;This is one class that handles all of the annotations and binding for a service method;Similar;0.6776859760284424
Add some missing @nullable annotations to <file_name> ;missing;Rename <method_name> to onSuccess(), and failure() to <iden>();to onSuccess(), and failure(), <iden>;Similar;0.7476072311401367
Add some missing @nullable annotations to <file_name> ;missing;Add JSR 305 nullability annotations;nullability annotations;Similar;0.6705029606819153
Add some missing @nullable annotations to <file_name> ;missing;Update <file_name> to the latest version;the latest version;Similar;0.522666335105896
Add some missing @nullable annotations to <file_name> ;missing;Remove unused interface  ;unused;Similar;0.661798357963562
Add some missing @nullable annotations to <file_name> ;missing;Simplify observable creation and reduce runtime allocations;Simplify, reduce;Similar;0.5925867557525635
Add some missing @nullable annotations to <file_name> ;missing;Refactor <iden> tests to avoid the use of blocking operators  ;avoid the use of blocking operators;Similar;0.591029167175293
Add some missing @nullable annotations to <file_name> ;missing;Remove duplicated test  ;It is the same as in this file;Similar;0.7193067669868469
Add some missing @nullable annotations to <file_name> ;missing;call it a <version>;Actually;Similar;0.506000280380249
Add some missing @nullable annotations to <file_name> ;missing;Add missing import  ;missing;Similar;0.7136057019233704
Add some missing @nullable annotations to <file_name> ;missing;Document maps dont allow null anywhere;null anywhere;Similar;0.5052714347839355
Add some missing @nullable annotations to <file_name> ;missing;Remove the need for generated accessor methods  ;need for generated accessor methods;Similar;0.6054356098175049
Add some missing @nullable annotations to <file_name> ;missing;Add example of using <iden> <file_name> as a <iden> <method_name>  ;This also adds the <file_name> instance as a param to the string <file_name> to allow it to delegate to others directly. This brings it into parity with the method signatures of the other <file_name> methods anyway.;Similar;0.6947060823440552
Add some missing @nullable annotations to <file_name> ;missing;Use new <iden>s non-throwing close and a simpler body copy;non-throwing close and a simpler body			      ;Similar;0.5193496942520142
Add some missing @nullable annotations to <file_name> ;missing;Remove incorrect generic parameter  ;incorrect;Similar;0.6619996428489685
Add some missing @nullable annotations to <file_name> ;missing;Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;Similar;0.5991461873054504
Add some missing @nullable annotations to <file_name> ;missing;Naming, API changes, and documentation around mock services.  ;mock services;Similar;0.6083154678344727
Add some missing @nullable annotations to <file_name> ;missing;Introduce factory for <file_name> concept;This is still highly-inefficient in its internal use and there are no tests proving that we now fail earlier in configuring a service method;Similar;0.5853697061538696
Add some missing @nullable annotations to <file_name> ;missing;Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;Similar;0.720850944519043
Add some missing @nullable annotations to <file_name> ;missing;Remove unused classes from <otherCommit_link>;unused;Similar;0.7658530473709106
Add some missing @nullable annotations to <file_name> ;missing;Update to OkHttp <version>. Fix a tiny potential NPE;potential NPE;Similar;0.7028357982635498
Add some missing @nullable annotations to <file_name> ;missing;Fix annotation link;<iden> is gone;Similar;0.6566158533096313
Add some missing @nullable annotations to <file_name> ;missing;Use the annotations directly for parameter handling.;Before we attempted to normalize the parameter annotations into a name and type model. The introduction of multi-part transfer encodings required something more expressive so the annotation instances themselves were used. This change removes the name and type in favor of using the annotation for everything.;Similar;0.5292855501174927
Add some missing @nullable annotations to <file_name> ;missing;Expose success type on <method_name>;Theres a bit of a test gap going on for all the variants of successful and erroneous handling of sync, async, and rx. This new behavior is fully tested in all three but more general behavior testing for them will be needed in a follow-up.;Similar;0.6018686890602112
Add some missing @nullable annotations to <file_name> ;missing;Update <file_name> to latest. Add default constructor.;latest, Add default constructor;Similar;0.6064971685409546
Add some missing @nullable annotations to <file_name> ;missing;Add simple package info to root package  ;simple;Similar;0.5340573787689209
Add some missing @nullable annotations to <file_name> ;missing;Properly name ignored exception in catch block  ;Properly naming;Similar;0.5077059268951416
Add some missing @nullable annotations to <file_name> ;missing;Correct header length checking logic. Improve exception message;Improve;Similar;0.5189639329910278
Add some missing @nullable annotations to <file_name> ;missing;Promote <iden> logging to a class which knows about chunking  ;This is an <iden>-specific implementation detail which is now only performed when needed;Similar;0.5425158739089966
Add some missing @nullable annotations to <file_name> ;missing;Fix IntelliJ auto-formatting  ;Improve the formatting;Similar;0.6587366461753845
Add some missing @nullable annotations to <file_name> ;missing;Add path and query tests for pre-encoded values;-;Similar;0.5896758437156677
Add some missing @nullable annotations to <file_name> ;missing;Newline at end of file  ;Yes plz;Similar;0.5843992829322815
Add some missing @nullable annotations to <file_name> ;missing;Log network and unexpected exceptions if logging is enabled  ;if logging is enabled;Similar;0.5493845343589783
Add some missing @nullable annotations to <file_name> ;missing;Fix styling of <iden> download;styling;Similar;0.6702401638031006
Add some missing @nullable annotations to <file_name> ;missing;" 
- Add <iden> <method_name>  
- Also update our sample to use <iden> contributors rather than the <iden>  
- Bump some dependencies to their latest versions  
";" 
- Use this on <iden> <version> and prior and when on the <iden>  
- because the latter is shutting down and subject to lame rate limiting when on common networks";Similar;0.6143802404403687
Add some missing @nullable annotations to <file_name> ;missing;Provide a mutable <file_name> implementation. <iden> to conform.;to conform;Similar;0.5888427495956421
Add some missing @nullable annotations to <file_name> ;missing;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Similar;0.743369996547699
Add some missing @nullable annotations to <file_name> ;missing;Allow <file_name> instantiation  ;Hide some Apache implementation details;Similar;0.6467229723930359
Add some missing @nullable annotations to <file_name> ;missing;Hide more implementation details;more implementation details;Similar;0.5495256185531616
Add some missing @nullable annotations to <file_name> ;missing;Remove unused <file_name> classes;unused;Similar;0.8050763607025146
Add some missing @nullable annotations to <file_name> ;missing;Introduce builder pattern to instantiate <method_name>;profiler are now optional. Convenience methods for specifying a <iden> or an <iden> directly are also provided.;Similar;0.6108814477920532
Add some missing @nullable annotations to <file_name> ;missing;Use no_aop Guice variant  ;no_aop;Similar;0.5952596664428711
Add some missing @nullable annotations to <file_name> ;missing;Adding a human-readable name to the  <file_name>  interface;human-readable;Similar;0.6249129772186279
Add some missing @nullable annotations to <file_name> ;missing;Added getTag() and logChunk() methods;for easier subclassing;Similar;0.6149060726165771
Add some missing @nullable annotations to <file_name> ;missing;Reintroduced deprecated <file_name> constructor;deprecated;Similar;0.7933461666107178
Add some missing @nullable annotations to <file_name> ;missing;Fix small wording issues in custom converter docs;small wording issues;Similar;0.6423320174217224
Add some missing @nullable annotations to <file_name> ;missing;Update custom conversion docs per feedback;Clarify that <iden> is just the default converter, Add section on other built-in converters, Add section on implementing your own custom converters;Similar;0.5569052696228027
Add some missing @nullable annotations to <file_name> ;missing;Fix style nits per review;per review;Similar;0.6118350028991699
Add some missing @nullable annotations to <file_name> ;missing;fix issue <issue_link> : permit use when servers or intermediaries mistakingly miss Content-<iden> header;mistakingly miss Content-<iden> header;Similar;0.7383354902267456
Add some missing @nullable annotations to <file_name> ;missing;rename <iden> ->  <file_name>  ;to harvest the names for new annotations;Similar;0.6879714131355286
Add some missing @nullable annotations to <file_name> ;missing;Move variable to where it is used;where it is used;Similar;0.5168081521987915
Add some missing @nullable annotations to <file_name> ;missing;Fix spelling;spelling;Similar;0.6105372905731201
Add some missing @nullable annotations to <file_name> ;missing;Add fixed query parameter support;support;Similar;0.6412038803100586
Add some missing @nullable annotations to <file_name> ;missing;Add <file_name>, <file_name> support to <file_name>  ;-;Similar;0.6061360836029053
Add some missing @nullable annotations to <file_name> ;missing;Allow <file_name> extensions;improved <file_name>;Similar;0.6494795083999634
Add some missing @nullable annotations to <file_name> ;missing;Repackage gson into retrofit.internal.gson  ;enhance integration;Similar;0.5628884434700012
Add some missing @nullable annotations to <file_name> ;missing;Ensure <file_name> and <file_name> use FileDescriptor.sync();Ensure <file_name> and <file_name> use FileDescriptor.sync();Similar;0.5746420621871948
Add some missing @nullable annotations to <file_name> ;missing;moved util to <file_name>, added <file_name>  ;Organize and enhance code files;Similar;0.662138819694519
Add some missing @nullable annotations to <file_name> ;missing;Use <iden> <version>s JsonAdapter.serializeNulls();serializeNulls;Similar;0.6172012090682983
Add some missing @nullable annotations to <file_name> ;missing;Removal of Unnecessary Creation of <iden>;if <iden> has length 0 there is no point to create stringBuilder for that. that condition check needs to happen before stringBuilder creation.;Similar;0.6911370158195496
Add some missing @nullable annotations to <file_name> ;missing;Expose <iden> via the <file_name> injection-like framework;injection-like framework;Similar;0.6396693587303162
Add some missing @nullable annotations to <file_name> ;missing;Changing `<file_name>` to implement `<file_name>` interface;interface;Similar;0.6632604598999023
Add some missing @nullable annotations to <file_name> ;missing;Fix support for protobuf <version>+;ExtensionRegistry cannot be null;Similar;0.6544142961502075
Add some missing @nullable annotations to <file_name> ;missing;Fix typo;typo;Similar;0.5687381029129028
Add some missing @nullable annotations to <file_name> ;missing;Remove redundant throws  ;redundant;Similar;0.6029050350189209
Fatal errors should crash the dispatcher thread;Fatal errors should be propagated by the async observer instead of attempting to make its way back downstream.;Add some missing Nullable annotations;missing;Similar;0.5580910444259644
Fatal errors should crash the dispatcher thread;Fatal errors should be propagated by the async observer instead of attempting to make its way back downstream.;Add some missing Nullable annotations;missing;Similar;0.5580910444259644
Fatal errors should crash the dispatcher thread;Fatal errors should be propagated by the async observer instead of attempting to make its way back downstream.;Use a dummy value to further validation optional delegation;This ensures the value can only come from only one place;Similar;0.5048643946647644
Fatal errors should crash the dispatcher thread;Fatal errors should be propagated by the async observer instead of attempting to make its way back downstream.;Re-work unresolvable type detection in parameters  ;"In order to natively support Kotlins suspend modifier in the future, we need to allow wildcards to be used for the last parameter; As a result, we only validate the shape of a type once an annotation is detected.";Similar;0.6058199405670166
Fatal errors should crash the dispatcher thread;Fatal errors should be propagated by the async observer instead of attempting to make its way back downstream.;Remove old <iden> nonsense;As of API 26 the android.jar contains the classes checked by <iden> and used by <iden>.Java8. And we dont encourage throwing checked exceptions from the service method but instead routing them through your call adapter.;Similar;0.5489901304244995
Fatal errors should crash the dispatcher thread;Fatal errors should be propagated by the async observer instead of attempting to make its way back downstream.;Rename <method_name> to onSuccess(), and failure() to <iden>();to onSuccess(), and failure(), <iden>;Similar;0.5826719999313354
Fatal errors should crash the dispatcher thread;Fatal errors should be propagated by the async observer instead of attempting to make its way back downstream.;Simplify observable creation and reduce runtime allocations;Simplify, reduce;Similar;0.5785680413246155
Fatal errors should crash the dispatcher thread;Fatal errors should be propagated by the async observer instead of attempting to make its way back downstream.;Refactor <iden> tests to avoid the use of blocking operators  ;avoid the use of blocking operators;Similar;0.5470080375671387
Fatal errors should crash the dispatcher thread;Fatal errors should be propagated by the async observer instead of attempting to make its way back downstream.;Remove duplicated test  ;It is the same as in this file;Similar;0.5856359004974365
Fatal errors should crash the dispatcher thread;Fatal errors should be propagated by the async observer instead of attempting to make its way back downstream.;Remove incorrect generic parameter  ;incorrect;Similar;0.602714478969574
Fatal errors should crash the dispatcher thread;Fatal errors should be propagated by the async observer instead of attempting to make its way back downstream.;Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;Similar;0.553766667842865
Fatal errors should crash the dispatcher thread;Fatal errors should be propagated by the async observer instead of attempting to make its way back downstream.;Update to OkHttp <version>. Fix a tiny potential NPE;potential NPE;Similar;0.5336268544197083
Fatal errors should crash the dispatcher thread;Fatal errors should be propagated by the async observer instead of attempting to make its way back downstream.;Fix annotation link;<iden> is gone;Similar;0.510884702205658
Fatal errors should crash the dispatcher thread;Fatal errors should be propagated by the async observer instead of attempting to make its way back downstream.;Correct header length checking logic. Improve exception message;Improve;Similar;0.5594480633735657
Fatal errors should crash the dispatcher thread;Fatal errors should be propagated by the async observer instead of attempting to make its way back downstream.;Fix IntelliJ auto-formatting  ;Improve the formatting;Similar;0.5511846542358398
Fatal errors should crash the dispatcher thread;Fatal errors should be propagated by the async observer instead of attempting to make its way back downstream.;Log network and unexpected exceptions if logging is enabled  ;if logging is enabled;Similar;0.5296630859375
Fatal errors should crash the dispatcher thread;Fatal errors should be propagated by the async observer instead of attempting to make its way back downstream.;Fix styling of <iden> download;styling;Similar;0.5508108735084534
Fatal errors should crash the dispatcher thread;Fatal errors should be propagated by the async observer instead of attempting to make its way back downstream.;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Similar;0.5017354488372803
Fatal errors should crash the dispatcher thread;Fatal errors should be propagated by the async observer instead of attempting to make its way back downstream.;Reintroduced deprecated <file_name> constructor;deprecated;Similar;0.5720590353012085
Fatal errors should crash the dispatcher thread;Fatal errors should be propagated by the async observer instead of attempting to make its way back downstream.;Fix small wording issues in custom converter docs;small wording issues;Similar;0.5491464138031006
Fatal errors should crash the dispatcher thread;Fatal errors should be propagated by the async observer instead of attempting to make its way back downstream.;fix issue <issue_link> : permit use when servers or intermediaries mistakingly miss Content-<iden> header;mistakingly miss Content-<iden> header;Similar;0.708707332611084
Fatal errors should crash the dispatcher thread;Fatal errors should be propagated by the async observer instead of attempting to make its way back downstream.;Fix spelling;spelling;Similar;0.5294739007949829
Fatal errors should crash the dispatcher thread;Fatal errors should be propagated by the async observer instead of attempting to make its way back downstream.;Removal of Unnecessary Creation of <iden>;if <iden> has length 0 there is no point to create stringBuilder for that. that condition check needs to happen before stringBuilder creation.;Similar;0.5841580033302307
Fatal errors should crash the dispatcher thread;Fatal errors should be propagated by the async observer instead of attempting to make its way back downstream.;Fix typo;typo;Similar;0.5101175904273987
Fatal errors should crash the dispatcher thread;Fatal errors should be propagated by the async observer instead of attempting to make its way back downstream.;Remove redundant throws  ;redundant;Similar;0.5175179243087769
Add some missing Nullable annotations;missing;Add some missing Nullable annotations;missing;Similar;0.9999998807907104
Add some missing Nullable annotations;missing;Use a dummy value to further validation optional delegation;This ensures the value can only come from only one place;Similar;0.6964049935340881
Add some missing Nullable annotations;missing;Re-work unresolvable type detection in parameters  ;"In order to natively support Kotlins suspend modifier in the future, we need to allow wildcards to be used for the last parameter; As a result, we only validate the shape of a type once an annotation is detected.";Similar;0.769905686378479
Add some missing Nullable annotations;missing;Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;Similar;0.5579701662063599
Add some missing Nullable annotations;missing;Consolidate exception formatters in one place  ;streamline implementation and improve maintenance;Similar;0.5841559171676636
Add some missing Nullable annotations;missing;Remove old <iden> nonsense;As of API 26 the android.jar contains the classes checked by <iden> and used by <iden>.Java8. And we dont encourage throwing checked exceptions from the service method but instead routing them through your call adapter.;Similar;0.6905465126037598
Add some missing Nullable annotations;missing;Combine <file_name> and <iden> into <method_name> <enter>  ;This is one class that handles all of the annotations and binding for a service method;Similar;0.5342684388160706
Add some missing Nullable annotations;missing;Rename <method_name> to onSuccess(), and failure() to <iden>();to onSuccess(), and failure(), <iden>;Similar;0.6531431674957275
Add some missing Nullable annotations;missing;Add JSR 305 nullability annotations;nullability annotations;Similar;0.6305843591690063
Add some missing Nullable annotations;missing;Remove unused interface  ;unused;Similar;0.7326960563659668
Add some missing Nullable annotations;missing;Simplify observable creation and reduce runtime allocations;Simplify, reduce;Similar;0.6712504625320435
Add some missing Nullable annotations;missing;Refactor <iden> tests to avoid the use of blocking operators  ;avoid the use of blocking operators;Similar;0.5879991054534912
Add some missing Nullable annotations;missing;Remove duplicated test  ;It is the same as in this file;Similar;0.7582987546920776
Add some missing Nullable annotations;missing;call it a <version>;Actually;Similar;0.5283137559890747
Add some missing Nullable annotations;missing;Add missing import  ;missing;Similar;0.8047688007354736
Add some missing Nullable annotations;missing;Document maps dont allow null anywhere;null anywhere;Similar;0.5350335836410522
Add some missing Nullable annotations;missing;Remove the need for generated accessor methods  ;need for generated accessor methods;Similar;0.675132691860199
Add some missing Nullable annotations;missing;Propagate callback executor even when not explicitly specified  ;This lets custom <iden> implementations use the <file_name> default for their callbacks;Similar;0.513404905796051
Add some missing Nullable annotations;missing;Add example of using <iden> <file_name> as a <iden> <method_name>  ;This also adds the <file_name> instance as a param to the string <file_name> to allow it to delegate to others directly. This brings it into parity with the method signatures of the other <file_name> methods anyway.;Similar;0.5275462865829468
Add some missing Nullable annotations;missing;Use new <iden>s non-throwing close and a simpler body copy;non-throwing close and a simpler body			      ;Similar;0.5401946306228638
Add some missing Nullable annotations;missing;Remove incorrect generic parameter  ;incorrect;Similar;0.7430534958839417
Add some missing Nullable annotations;missing;Naming, API changes, and documentation around mock services.  ;mock services;Similar;0.5683512091636658
Add some missing Nullable annotations;missing;Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;Similar;0.5382871031761169
Add some missing Nullable annotations;missing;Remove unused classes from <otherCommit_link>;unused;Similar;0.730644702911377
Add some missing Nullable annotations;missing;Update to OkHttp <version>. Fix a tiny potential NPE;potential NPE;Similar;0.678875207901001
Add some missing Nullable annotations;missing;Fix annotation link;<iden> is gone;Similar;0.6462060213088989
Add some missing Nullable annotations;missing;Add simple package info to root package  ;simple;Similar;0.5329259037971497
Add some missing Nullable annotations;missing;Properly name ignored exception in catch block  ;Properly naming;Similar;0.5418546199798584
Add some missing Nullable annotations;missing;Fix IntelliJ auto-formatting  ;Improve the formatting;Similar;0.5750781297683716
Add some missing Nullable annotations;missing;Add path and query tests for pre-encoded values;-;Similar;0.5606632232666016
Add some missing Nullable annotations;missing;Newline at end of file  ;Yes plz;Similar;0.5727168321609497
Add some missing Nullable annotations;missing;Log network and unexpected exceptions if logging is enabled  ;if logging is enabled;Similar;0.5268309116363525
Add some missing Nullable annotations;missing;Fix styling of <iden> download;styling;Similar;0.5446925759315491
Add some missing Nullable annotations;missing;" 
- Add <iden> <method_name>  
- Also update our sample to use <iden> contributors rather than the <iden>  
- Bump some dependencies to their latest versions  
";" 
- Use this on <iden> <version> and prior and when on the <iden>  
- because the latter is shutting down and subject to lame rate limiting when on common networks";Similar;0.5168924927711487
Add some missing Nullable annotations;missing;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Similar;0.5609813928604126
Add some missing Nullable annotations;missing;Simplify test method fetching;-;Similar;0.5270652770996094
Add some missing Nullable annotations;missing;Allow <file_name> instantiation  ;Hide some Apache implementation details;Similar;0.5037478804588318
Add some missing Nullable annotations;missing;Hide more implementation details;more implementation details;Similar;0.6581268310546875
Add some missing Nullable annotations;missing;Remove unused <file_name> classes;unused;Similar;0.691480815410614
Add some missing Nullable annotations;missing;Use no_aop Guice variant  ;no_aop;Similar;0.6203621625900269
Add some missing Nullable annotations;missing;Added getTag() and logChunk() methods;for easier subclassing;Similar;0.5022823810577393
Add some missing Nullable annotations;missing;Reintroduced deprecated <file_name> constructor;deprecated;Similar;0.6771348714828491
Add some missing Nullable annotations;missing;Fix small wording issues in custom converter docs;small wording issues;Similar;0.5692540407180786
Add some missing Nullable annotations;missing;Fix style nits per review;per review;Similar;0.5889890193939209
Add some missing Nullable annotations;missing;fix issue <issue_link> : permit use when servers or intermediaries mistakingly miss Content-<iden> header;mistakingly miss Content-<iden> header;Similar;0.6124926805496216
Add some missing Nullable annotations;missing;rename <iden> ->  <file_name>  ;to harvest the names for new annotations;Similar;0.5163815021514893
Add some missing Nullable annotations;missing;Move variable to where it is used;where it is used;Similar;0.5870707035064697
Add some missing Nullable annotations;missing;Fix spelling;spelling;Similar;0.6264097094535828
Add some missing Nullable annotations;missing;Add fixed query parameter support;support;Similar;0.6024487018585205
Add some missing Nullable annotations;missing;Allow <file_name> extensions;improved <file_name>;Similar;0.5274772644042969
Add some missing Nullable annotations;missing;Repackage gson into retrofit.internal.gson  ;enhance integration;Similar;0.5502191185951233
Add some missing Nullable annotations;missing;moved util to <file_name>, added <file_name>  ;Organize and enhance code files;Similar;0.5225986242294312
Add some missing Nullable annotations;missing;Use <iden> <version>s JsonAdapter.serializeNulls();serializeNulls;Similar;0.5044224262237549
Add some missing Nullable annotations;missing;Removal of Unnecessary Creation of <iden>;if <iden> has length 0 there is no point to create stringBuilder for that. that condition check needs to happen before stringBuilder creation.;Similar;0.7508087754249573
Add some missing Nullable annotations;missing;Fix support for protobuf <version>+;ExtensionRegistry cannot be null;Similar;0.6040241122245789
Add some missing Nullable annotations;missing;Fix typo;typo;Similar;0.6018698811531067
Add some missing Nullable annotations;missing;Remove redundant throws  ;redundant;Similar;0.711967408657074
Add some missing Nullable annotations;missing;Use a dummy value to further validation optional delegation;This ensures the value can only come from only one place;Similar;0.6964049935340881
Add some missing Nullable annotations;missing;Re-work unresolvable type detection in parameters  ;"In order to natively support Kotlins suspend modifier in the future, we need to allow wildcards to be used for the last parameter; As a result, we only validate the shape of a type once an annotation is detected.";Similar;0.769905686378479
Add some missing Nullable annotations;missing;Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;Similar;0.5579701662063599
Add some missing Nullable annotations;missing;Consolidate exception formatters in one place  ;streamline implementation and improve maintenance;Similar;0.5841559171676636
Add some missing Nullable annotations;missing;Remove old <iden> nonsense;As of API 26 the android.jar contains the classes checked by <iden> and used by <iden>.Java8. And we dont encourage throwing checked exceptions from the service method but instead routing them through your call adapter.;Similar;0.6905465126037598
Add some missing Nullable annotations;missing;Combine <file_name> and <iden> into <method_name> <enter>  ;This is one class that handles all of the annotations and binding for a service method;Similar;0.5342684388160706
Add some missing Nullable annotations;missing;Rename <method_name> to onSuccess(), and failure() to <iden>();to onSuccess(), and failure(), <iden>;Similar;0.6531431674957275
Add some missing Nullable annotations;missing;Add JSR 305 nullability annotations;nullability annotations;Similar;0.6305843591690063
Add some missing Nullable annotations;missing;Remove unused interface  ;unused;Similar;0.7326960563659668
Add some missing Nullable annotations;missing;Simplify observable creation and reduce runtime allocations;Simplify, reduce;Similar;0.6712504625320435
Add some missing Nullable annotations;missing;Refactor <iden> tests to avoid the use of blocking operators  ;avoid the use of blocking operators;Similar;0.5879991054534912
Add some missing Nullable annotations;missing;Remove duplicated test  ;It is the same as in this file;Similar;0.7582987546920776
Add some missing Nullable annotations;missing;call it a <version>;Actually;Similar;0.5283137559890747
Add some missing Nullable annotations;missing;Add missing import  ;missing;Similar;0.8047688007354736
Add some missing Nullable annotations;missing;Document maps dont allow null anywhere;null anywhere;Similar;0.5350335836410522
Add some missing Nullable annotations;missing;Remove the need for generated accessor methods  ;need for generated accessor methods;Similar;0.675132691860199
Add some missing Nullable annotations;missing;Propagate callback executor even when not explicitly specified  ;This lets custom <iden> implementations use the <file_name> default for their callbacks;Similar;0.513404905796051
Add some missing Nullable annotations;missing;Add example of using <iden> <file_name> as a <iden> <method_name>  ;This also adds the <file_name> instance as a param to the string <file_name> to allow it to delegate to others directly. This brings it into parity with the method signatures of the other <file_name> methods anyway.;Similar;0.5275462865829468
Add some missing Nullable annotations;missing;Use new <iden>s non-throwing close and a simpler body copy;non-throwing close and a simpler body			      ;Similar;0.5401946306228638
Add some missing Nullable annotations;missing;Remove incorrect generic parameter  ;incorrect;Similar;0.7430534958839417
Add some missing Nullable annotations;missing;Naming, API changes, and documentation around mock services.  ;mock services;Similar;0.5683512091636658
Add some missing Nullable annotations;missing;Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;Similar;0.5382871031761169
Add some missing Nullable annotations;missing;Remove unused classes from <otherCommit_link>;unused;Similar;0.730644702911377
Add some missing Nullable annotations;missing;Update to OkHttp <version>. Fix a tiny potential NPE;potential NPE;Similar;0.678875207901001
Add some missing Nullable annotations;missing;Fix annotation link;<iden> is gone;Similar;0.6462060213088989
Add some missing Nullable annotations;missing;Add simple package info to root package  ;simple;Similar;0.5329259037971497
Add some missing Nullable annotations;missing;Properly name ignored exception in catch block  ;Properly naming;Similar;0.5418546199798584
Add some missing Nullable annotations;missing;Fix IntelliJ auto-formatting  ;Improve the formatting;Similar;0.5750781297683716
Add some missing Nullable annotations;missing;Add path and query tests for pre-encoded values;-;Similar;0.5606632232666016
Add some missing Nullable annotations;missing;Newline at end of file  ;Yes plz;Similar;0.5727168321609497
Add some missing Nullable annotations;missing;Log network and unexpected exceptions if logging is enabled  ;if logging is enabled;Similar;0.5268309116363525
Add some missing Nullable annotations;missing;Fix styling of <iden> download;styling;Similar;0.5446925759315491
Add some missing Nullable annotations;missing;" 
- Add <iden> <method_name>  
- Also update our sample to use <iden> contributors rather than the <iden>  
- Bump some dependencies to their latest versions  
";" 
- Use this on <iden> <version> and prior and when on the <iden>  
- because the latter is shutting down and subject to lame rate limiting when on common networks";Similar;0.5168924927711487
Add some missing Nullable annotations;missing;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Similar;0.5609813928604126
Add some missing Nullable annotations;missing;Simplify test method fetching;-;Similar;0.5270652770996094
Add some missing Nullable annotations;missing;Allow <file_name> instantiation  ;Hide some Apache implementation details;Similar;0.5037478804588318
Add some missing Nullable annotations;missing;Hide more implementation details;more implementation details;Similar;0.6581268310546875
Add some missing Nullable annotations;missing;Remove unused <file_name> classes;unused;Similar;0.691480815410614
Add some missing Nullable annotations;missing;Use no_aop Guice variant  ;no_aop;Similar;0.6203621625900269
Add some missing Nullable annotations;missing;Added getTag() and logChunk() methods;for easier subclassing;Similar;0.5022823810577393
Add some missing Nullable annotations;missing;Reintroduced deprecated <file_name> constructor;deprecated;Similar;0.6771348714828491
Add some missing Nullable annotations;missing;Fix small wording issues in custom converter docs;small wording issues;Similar;0.5692540407180786
Add some missing Nullable annotations;missing;Fix style nits per review;per review;Similar;0.5889890193939209
Add some missing Nullable annotations;missing;fix issue <issue_link> : permit use when servers or intermediaries mistakingly miss Content-<iden> header;mistakingly miss Content-<iden> header;Similar;0.6124926805496216
Add some missing Nullable annotations;missing;rename <iden> ->  <file_name>  ;to harvest the names for new annotations;Similar;0.5163815021514893
Add some missing Nullable annotations;missing;Move variable to where it is used;where it is used;Similar;0.5870707035064697
Add some missing Nullable annotations;missing;Fix spelling;spelling;Similar;0.6264097094535828
Add some missing Nullable annotations;missing;Add fixed query parameter support;support;Similar;0.6024487018585205
Add some missing Nullable annotations;missing;Allow <file_name> extensions;improved <file_name>;Similar;0.5274772644042969
Add some missing Nullable annotations;missing;Repackage gson into retrofit.internal.gson  ;enhance integration;Similar;0.5502191185951233
Add some missing Nullable annotations;missing;moved util to <file_name>, added <file_name>  ;Organize and enhance code files;Similar;0.5225986242294312
Add some missing Nullable annotations;missing;Use <iden> <version>s JsonAdapter.serializeNulls();serializeNulls;Similar;0.5044224262237549
Add some missing Nullable annotations;missing;Removal of Unnecessary Creation of <iden>;if <iden> has length 0 there is no point to create stringBuilder for that. that condition check needs to happen before stringBuilder creation.;Similar;0.7508087754249573
Add some missing Nullable annotations;missing;Fix support for protobuf <version>+;ExtensionRegistry cannot be null;Similar;0.6040241122245789
Add some missing Nullable annotations;missing;Fix typo;typo;Similar;0.6018698811531067
Add some missing Nullable annotations;missing;Remove redundant throws  ;redundant;Similar;0.711967408657074
Use a dummy value to further validation optional delegation;This ensures the value can only come from only one place;Re-work unresolvable type detection in parameters  ;"In order to natively support Kotlins suspend modifier in the future, we need to allow wildcards to be used for the last parameter; As a result, we only validate the shape of a type once an annotation is detected.";Similar;0.7019733190536499
Use a dummy value to further validation optional delegation;This ensures the value can only come from only one place;Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;Similar;0.6258925795555115
Use a dummy value to further validation optional delegation;This ensures the value can only come from only one place;Consolidate exception formatters in one place  ;streamline implementation and improve maintenance;Similar;0.5952403545379639
Use a dummy value to further validation optional delegation;This ensures the value can only come from only one place;Pull out <file_name> base class <enter>;This will allow us to support multiple forms of invocation beyond <iden> calls.;Similar;0.5211455821990967
Use a dummy value to further validation optional delegation;This ensures the value can only come from only one place;Remove old <iden> nonsense;As of API 26 the android.jar contains the classes checked by <iden> and used by <iden>.Java8. And we dont encourage throwing checked exceptions from the service method but instead routing them through your call adapter.;Similar;0.527344822883606
Use a dummy value to further validation optional delegation;This ensures the value can only come from only one place;Use HTTPS links in documentation where possible  ;where possible;Similar;0.5113775730133057
Use a dummy value to further validation optional delegation;This ensures the value can only come from only one place;Combine <file_name> and <iden> into <method_name> <enter>  ;This is one class that handles all of the annotations and binding for a service method;Similar;0.5743616223335266
Use a dummy value to further validation optional delegation;This ensures the value can only come from only one place;Rename <method_name> to onSuccess(), and failure() to <iden>();to onSuccess(), and failure(), <iden>;Similar;0.6557211875915527
Use a dummy value to further validation optional delegation;This ensures the value can only come from only one place;Add JSR 305 nullability annotations;nullability annotations;Similar;0.5056321620941162
Use a dummy value to further validation optional delegation;This ensures the value can only come from only one place;Remove unused interface  ;unused;Similar;0.6068353652954102
Use a dummy value to further validation optional delegation;This ensures the value can only come from only one place;Simplify observable creation and reduce runtime allocations;Simplify, reduce;Similar;0.5820800065994263
Use a dummy value to further validation optional delegation;This ensures the value can only come from only one place;Refactor <iden> tests to avoid the use of blocking operators  ;avoid the use of blocking operators;Similar;0.5753955841064453
Use a dummy value to further validation optional delegation;This ensures the value can only come from only one place;Remove duplicated test  ;It is the same as in this file;Similar;0.6861600875854492
Use a dummy value to further validation optional delegation;This ensures the value can only come from only one place;call it a <version>;Actually;Similar;0.5943949222564697
Use a dummy value to further validation optional delegation;This ensures the value can only come from only one place;Add missing import  ;missing;Similar;0.6914936900138855
Use a dummy value to further validation optional delegation;This ensures the value can only come from only one place;Remove the need for generated accessor methods  ;need for generated accessor methods;Similar;0.6622834205627441
Use a dummy value to further validation optional delegation;This ensures the value can only come from only one place;Propagate callback executor even when not explicitly specified  ;This lets custom <iden> implementations use the <file_name> default for their callbacks;Similar;0.5306329727172852
Use a dummy value to further validation optional delegation;This ensures the value can only come from only one place;Add example of using <iden> <file_name> as a <iden> <method_name>  ;This also adds the <file_name> instance as a param to the string <file_name> to allow it to delegate to others directly. This brings it into parity with the method signatures of the other <file_name> methods anyway.;Similar;0.589362621307373
Use a dummy value to further validation optional delegation;This ensures the value can only come from only one place;Remove incorrect generic parameter  ;incorrect;Similar;0.6478877067565918
Use a dummy value to further validation optional delegation;This ensures the value can only come from only one place;Naming, API changes, and documentation around mock services.  ;mock services;Similar;0.659233570098877
Use a dummy value to further validation optional delegation;This ensures the value can only come from only one place;Introduce factory for <file_name> concept;This is still highly-inefficient in its internal use and there are no tests proving that we now fail earlier in configuring a service method;Similar;0.5328466296195984
Use a dummy value to further validation optional delegation;This ensures the value can only come from only one place;Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;Similar;0.5443596243858337
Use a dummy value to further validation optional delegation;This ensures the value can only come from only one place;Remove unused classes from <otherCommit_link>;unused;Similar;0.6350032091140747
Use a dummy value to further validation optional delegation;This ensures the value can only come from only one place;Update to OkHttp <version>. Fix a tiny potential NPE;potential NPE;Similar;0.6518005132675171
Use a dummy value to further validation optional delegation;This ensures the value can only come from only one place;Fix annotation link;<iden> is gone;Similar;0.6354610919952393
Use a dummy value to further validation optional delegation;This ensures the value can only come from only one place;Use the annotations directly for parameter handling.;Before we attempted to normalize the parameter annotations into a name and type model. The introduction of multi-part transfer encodings required something more expressive so the annotation instances themselves were used. This change removes the name and type in favor of using the annotation for everything.;Similar;0.5875815153121948
Use a dummy value to further validation optional delegation;This ensures the value can only come from only one place;Expose success type on <method_name>;Theres a bit of a test gap going on for all the variants of successful and erroneous handling of sync, async, and rx. This new behavior is fully tested in all three but more general behavior testing for them will be needed in a follow-up.;Similar;0.6006370782852173
Use a dummy value to further validation optional delegation;This ensures the value can only come from only one place;Add simple package info to root package  ;simple;Similar;0.6004679799079895
Use a dummy value to further validation optional delegation;This ensures the value can only come from only one place;Properly name ignored exception in catch block  ;Properly naming;Similar;0.5083479881286621
Use a dummy value to further validation optional delegation;This ensures the value can only come from only one place;Correct header length checking logic. Improve exception message;Improve;Similar;0.5383801460266113
Use a dummy value to further validation optional delegation;This ensures the value can only come from only one place;Promote <iden> logging to a class which knows about chunking  ;This is an <iden>-specific implementation detail which is now only performed when needed;Similar;0.5046176910400391
Use a dummy value to further validation optional delegation;This ensures the value can only come from only one place;Fix IntelliJ auto-formatting  ;Improve the formatting;Similar;0.540509819984436
Use a dummy value to further validation optional delegation;This ensures the value can only come from only one place;Add path and query tests for pre-encoded values;-;Similar;0.6429227590560913
Use a dummy value to further validation optional delegation;This ensures the value can only come from only one place;Add converters module and protobuf converter;to the sentence;Similar;0.547809362411499
Use a dummy value to further validation optional delegation;This ensures the value can only come from only one place;Log network and unexpected exceptions if logging is enabled  ;if logging is enabled;Similar;0.5936253070831299
Use a dummy value to further validation optional delegation;This ensures the value can only come from only one place;Fix styling of <iden> download;styling;Similar;0.6302434206008911
Use a dummy value to further validation optional delegation;This ensures the value can only come from only one place;" 
- Add <iden> <method_name>  
- Also update our sample to use <iden> contributors rather than the <iden>  
- Bump some dependencies to their latest versions  
";" 
- Use this on <iden> <version> and prior and when on the <iden>  
- because the latter is shutting down and subject to lame rate limiting when on common networks";Similar;0.5350708365440369
Use a dummy value to further validation optional delegation;This ensures the value can only come from only one place;Provide a mutable <file_name> implementation. <iden> to conform.;to conform;Similar;0.5557467341423035
Use a dummy value to further validation optional delegation;This ensures the value can only come from only one place;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Similar;0.5710693597793579
Use a dummy value to further validation optional delegation;This ensures the value can only come from only one place;Simplify test method fetching;-;Similar;0.60072922706604
Use a dummy value to further validation optional delegation;This ensures the value can only come from only one place;Allow <file_name> instantiation  ;Hide some Apache implementation details;Similar;0.5345799326896667
Use a dummy value to further validation optional delegation;This ensures the value can only come from only one place;Hide more implementation details;more implementation details;Similar;0.6917463541030884
Use a dummy value to further validation optional delegation;This ensures the value can only come from only one place;Remove unused <file_name> classes;unused;Similar;0.5521918535232544
Use a dummy value to further validation optional delegation;This ensures the value can only come from only one place;Introduce builder pattern to instantiate <method_name>;profiler are now optional. Convenience methods for specifying a <iden> or an <iden> directly are also provided.;Similar;0.5348867774009705
Use a dummy value to further validation optional delegation;This ensures the value can only come from only one place;Use no_aop Guice variant  ;no_aop;Similar;0.6272270679473877
Use a dummy value to further validation optional delegation;This ensures the value can only come from only one place;Added getTag() and logChunk() methods;for easier subclassing;Similar;0.5828129053115845
Use a dummy value to further validation optional delegation;This ensures the value can only come from only one place;Reintroduced deprecated <file_name> constructor;deprecated;Similar;0.68001389503479
Use a dummy value to further validation optional delegation;This ensures the value can only come from only one place;Update custom conversion docs per feedback;Clarify that <iden> is just the default converter, Add section on other built-in converters, Add section on implementing your own custom converters;Similar;0.51479572057724
Use a dummy value to further validation optional delegation;This ensures the value can only come from only one place;Fix style nits per review;per review;Similar;0.5971726775169373
Use a dummy value to further validation optional delegation;This ensures the value can only come from only one place;fix issue <issue_link> : permit use when servers or intermediaries mistakingly miss Content-<iden> header;mistakingly miss Content-<iden> header;Similar;0.6621767282485962
Use a dummy value to further validation optional delegation;This ensures the value can only come from only one place;rename <iden> ->  <file_name>  ;to harvest the names for new annotations;Similar;0.5180390477180481
Use a dummy value to further validation optional delegation;This ensures the value can only come from only one place;Move variable to where it is used;where it is used;Similar;0.6426973938941956
Use a dummy value to further validation optional delegation;This ensures the value can only come from only one place;Fix spelling;spelling;Similar;0.5961536765098572
Use a dummy value to further validation optional delegation;This ensures the value can only come from only one place;Add fixed query parameter support;support;Similar;0.6486854553222656
Use a dummy value to further validation optional delegation;This ensures the value can only come from only one place;Allow <file_name> extensions;improved <file_name>;Similar;0.5608224868774414
Use a dummy value to further validation optional delegation;This ensures the value can only come from only one place;Repackage gson into retrofit.internal.gson  ;enhance integration;Similar;0.5820434093475342
Use a dummy value to further validation optional delegation;This ensures the value can only come from only one place;moved util to <file_name>, added <file_name>  ;Organize and enhance code files;Similar;0.5236817598342896
Use a dummy value to further validation optional delegation;This ensures the value can only come from only one place;Use <iden> <version>s JsonAdapter.serializeNulls();serializeNulls;Similar;0.6166940927505493
Use a dummy value to further validation optional delegation;This ensures the value can only come from only one place;Removal of Unnecessary Creation of <iden>;if <iden> has length 0 there is no point to create stringBuilder for that. that condition check needs to happen before stringBuilder creation.;Similar;0.631163477897644
Use a dummy value to further validation optional delegation;This ensures the value can only come from only one place;Expose <iden> via the <file_name> injection-like framework;injection-like framework;Similar;0.5473651885986328
Use a dummy value to further validation optional delegation;This ensures the value can only come from only one place;Changing `<file_name>` to implement `<file_name>` interface;interface;Similar;0.5577725172042847
Use a dummy value to further validation optional delegation;This ensures the value can only come from only one place;Fix support for protobuf <version>+;ExtensionRegistry cannot be null;Similar;0.6439334154129028
Use a dummy value to further validation optional delegation;This ensures the value can only come from only one place;Fix typo;typo;Similar;0.6288372874259949
Use a dummy value to further validation optional delegation;This ensures the value can only come from only one place;Remove redundant throws  ;redundant;Similar;0.6119799613952637
Expose static factory for <file_name> <enter> Also rework the internals of how an <file_name> gets instantiated and set as a tag on the <iden>;This will make a future change easier to land;Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;Similar;0.5041084289550781
Expose static factory for <file_name> <enter> Also rework the internals of how an <file_name> gets instantiated and set as a tag on the <iden>;This will make a future change easier to land;Pull out <file_name> base class <enter>;This will allow us to support multiple forms of invocation beyond <iden> calls.;Similar;0.6602384448051453
Expose static factory for <file_name> <enter> Also rework the internals of how an <file_name> gets instantiated and set as a tag on the <iden>;This will make a future change easier to land;Use HTTPS links in documentation where possible  ;where possible;Similar;0.5776132941246033
Expose static factory for <file_name> <enter> Also rework the internals of how an <file_name> gets instantiated and set as a tag on the <iden>;This will make a future change easier to land;Combine <file_name> and <iden> into <method_name> <enter>  ;This is one class that handles all of the annotations and binding for a service method;Similar;0.6657063364982605
Expose static factory for <file_name> <enter> Also rework the internals of how an <file_name> gets instantiated and set as a tag on the <iden>;This will make a future change easier to land;Rename <method_name> to onSuccess(), and failure() to <iden>();to onSuccess(), and failure(), <iden>;Similar;0.5405948758125305
Expose static factory for <file_name> <enter> Also rework the internals of how an <file_name> gets instantiated and set as a tag on the <iden>;This will make a future change easier to land;Update <file_name> to the latest version;the latest version;Similar;0.5361224412918091
Expose static factory for <file_name> <enter> Also rework the internals of how an <file_name> gets instantiated and set as a tag on the <iden>;This will make a future change easier to land;Add example of using <iden> <file_name> as a <iden> <method_name>  ;This also adds the <file_name> instance as a param to the string <file_name> to allow it to delegate to others directly. This brings it into parity with the method signatures of the other <file_name> methods anyway.;Similar;0.6825606822967529
Expose static factory for <file_name> <enter> Also rework the internals of how an <file_name> gets instantiated and set as a tag on the <iden>;This will make a future change easier to land;Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;Similar;0.7579959630966187
Expose static factory for <file_name> <enter> Also rework the internals of how an <file_name> gets instantiated and set as a tag on the <iden>;This will make a future change easier to land;Update RxJava to the specified version with an important Android fix  ;In case someone is relying on the transitive dependency;Similar;0.5486558675765991
Expose static factory for <file_name> <enter> Also rework the internals of how an <file_name> gets instantiated and set as a tag on the <iden>;This will make a future change easier to land;Naming, API changes, and documentation around mock services.  ;mock services;Similar;0.5854889750480652
Expose static factory for <file_name> <enter> Also rework the internals of how an <file_name> gets instantiated and set as a tag on the <iden>;This will make a future change easier to land;Introduce factory for <file_name> concept;This is still highly-inefficient in its internal use and there are no tests proving that we now fail earlier in configuring a service method;Similar;0.7566779851913452
Expose static factory for <file_name> <enter> Also rework the internals of how an <file_name> gets instantiated and set as a tag on the <iden>;This will make a future change easier to land;Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;Similar;0.6959904432296753
Expose static factory for <file_name> <enter> Also rework the internals of how an <file_name> gets instantiated and set as a tag on the <iden>;This will make a future change easier to land;Update to OkHttp <version>. Fix a tiny potential NPE;potential NPE;Similar;0.5162602663040161
Expose static factory for <file_name> <enter> Also rework the internals of how an <file_name> gets instantiated and set as a tag on the <iden>;This will make a future change easier to land;Use the annotations directly for parameter handling.;Before we attempted to normalize the parameter annotations into a name and type model. The introduction of multi-part transfer encodings required something more expressive so the annotation instances themselves were used. This change removes the name and type in favor of using the annotation for everything.;Similar;0.5977057218551636
Expose static factory for <file_name> <enter> Also rework the internals of how an <file_name> gets instantiated and set as a tag on the <iden>;This will make a future change easier to land;Expose success type on <method_name>;Theres a bit of a test gap going on for all the variants of successful and erroneous handling of sync, async, and rx. This new behavior is fully tested in all three but more general behavior testing for them will be needed in a follow-up.;Similar;0.6287876963615417
Expose static factory for <file_name> <enter> Also rework the internals of how an <file_name> gets instantiated and set as a tag on the <iden>;This will make a future change easier to land;Correct map parameter type detection for query and field  ;-;Similar;0.5359514355659485
Expose static factory for <file_name> <enter> Also rework the internals of how an <file_name> gets instantiated and set as a tag on the <iden>;This will make a future change easier to land;Update <file_name> to latest. Add default constructor.;latest, Add default constructor;Similar;0.7164580821990967
Expose static factory for <file_name> <enter> Also rework the internals of how an <file_name> gets instantiated and set as a tag on the <iden>;This will make a future change easier to land;Correct header length checking logic. Improve exception message;Improve;Similar;0.5601006746292114
Expose static factory for <file_name> <enter> Also rework the internals of how an <file_name> gets instantiated and set as a tag on the <iden>;This will make a future change easier to land;Promote <iden> logging to a class which knows about chunking  ;This is an <iden>-specific implementation detail which is now only performed when needed;Similar;0.7384322881698608
Expose static factory for <file_name> <enter> Also rework the internals of how an <file_name> gets instantiated and set as a tag on the <iden>;This will make a future change easier to land;Fix IntelliJ auto-formatting  ;Improve the formatting;Similar;0.6159360408782959
Expose static factory for <file_name> <enter> Also rework the internals of how an <file_name> gets instantiated and set as a tag on the <iden>;This will make a future change easier to land;Add path and query tests for pre-encoded values;-;Similar;0.6446762681007385
Expose static factory for <file_name> <enter> Also rework the internals of how an <file_name> gets instantiated and set as a tag on the <iden>;This will make a future change easier to land;Add converters module and protobuf converter;to the sentence;Similar;0.5378043055534363
Expose static factory for <file_name> <enter> Also rework the internals of how an <file_name> gets instantiated and set as a tag on the <iden>;This will make a future change easier to land;Log network and unexpected exceptions if logging is enabled  ;if logging is enabled;Similar;0.5624223947525024
Expose static factory for <file_name> <enter> Also rework the internals of how an <file_name> gets instantiated and set as a tag on the <iden>;This will make a future change easier to land;Fix styling of <iden> download;styling;Similar;0.6168339252471924
Expose static factory for <file_name> <enter> Also rework the internals of how an <file_name> gets instantiated and set as a tag on the <iden>;This will make a future change easier to land;Rename pair to field to match annotation;match annotation;Similar;0.5313457250595093
Expose static factory for <file_name> <enter> Also rework the internals of how an <file_name> gets instantiated and set as a tag on the <iden>;This will make a future change easier to land;" 
- Add <iden> <method_name>  
- Also update our sample to use <iden> contributors rather than the <iden>  
- Bump some dependencies to their latest versions  
";" 
- Use this on <iden> <version> and prior and when on the <iden>  
- because the latter is shutting down and subject to lame rate limiting when on common networks";Similar;0.6445098519325256
Expose static factory for <file_name> <enter> Also rework the internals of how an <file_name> gets instantiated and set as a tag on the <iden>;This will make a future change easier to land;Provide a mutable <file_name> implementation. <iden> to conform.;to conform;Similar;0.6655604839324951
Expose static factory for <file_name> <enter> Also rework the internals of how an <file_name> gets instantiated and set as a tag on the <iden>;This will make a future change easier to land;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Similar;0.7395386695861816
Expose static factory for <file_name> <enter> Also rework the internals of how an <file_name> gets instantiated and set as a tag on the <iden>;This will make a future change easier to land;Simplify test method fetching;-;Similar;0.5156852006912231
Expose static factory for <file_name> <enter> Also rework the internals of how an <file_name> gets instantiated and set as a tag on the <iden>;This will make a future change easier to land;Allow <file_name> instantiation  ;Hide some Apache implementation details;Similar;0.6448150277137756
Expose static factory for <file_name> <enter> Also rework the internals of how an <file_name> gets instantiated and set as a tag on the <iden>;This will make a future change easier to land;Introduce builder pattern to instantiate <method_name>;profiler are now optional. Convenience methods for specifying a <iden> or an <iden> directly are also provided.;Similar;0.8140550851821899
Expose static factory for <file_name> <enter> Also rework the internals of how an <file_name> gets instantiated and set as a tag on the <iden>;This will make a future change easier to land;Adding a human-readable name to the  <file_name>  interface;human-readable;Similar;0.7445154190063477
Expose static factory for <file_name> <enter> Also rework the internals of how an <file_name> gets instantiated and set as a tag on the <iden>;This will make a future change easier to land;Added getTag() and logChunk() methods;for easier subclassing;Similar;0.6707291603088379
Expose static factory for <file_name> <enter> Also rework the internals of how an <file_name> gets instantiated and set as a tag on the <iden>;This will make a future change easier to land;Reintroduced deprecated <file_name> constructor;deprecated;Similar;0.578508734703064
Expose static factory for <file_name> <enter> Also rework the internals of how an <file_name> gets instantiated and set as a tag on the <iden>;This will make a future change easier to land;Fix small wording issues in custom converter docs;small wording issues;Similar;0.5730891227722168
Expose static factory for <file_name> <enter> Also rework the internals of how an <file_name> gets instantiated and set as a tag on the <iden>;This will make a future change easier to land;Update custom conversion docs per feedback;Clarify that <iden> is just the default converter, Add section on other built-in converters, Add section on implementing your own custom converters;Similar;0.6370869874954224
Expose static factory for <file_name> <enter> Also rework the internals of how an <file_name> gets instantiated and set as a tag on the <iden>;This will make a future change easier to land;fix issue <issue_link> : permit use when servers or intermediaries mistakingly miss Content-<iden> header;mistakingly miss Content-<iden> header;Similar;0.5919537544250488
Expose static factory for <file_name> <enter> Also rework the internals of how an <file_name> gets instantiated and set as a tag on the <iden>;This will make a future change easier to land;rename <iden> ->  <file_name>  ;to harvest the names for new annotations;Similar;0.6102396249771118
Expose static factory for <file_name> <enter> Also rework the internals of how an <file_name> gets instantiated and set as a tag on the <iden>;This will make a future change easier to land;Add fixed query parameter support;support;Similar;0.581243634223938
Expose static factory for <file_name> <enter> Also rework the internals of how an <file_name> gets instantiated and set as a tag on the <iden>;This will make a future change easier to land;Add <file_name>, <file_name> support to <file_name>  ;-;Similar;0.630742073059082
Expose static factory for <file_name> <enter> Also rework the internals of how an <file_name> gets instantiated and set as a tag on the <iden>;This will make a future change easier to land;Allow <file_name> extensions;improved <file_name>;Similar;0.5678826570510864
Expose static factory for <file_name> <enter> Also rework the internals of how an <file_name> gets instantiated and set as a tag on the <iden>;This will make a future change easier to land;Repackage gson into retrofit.internal.gson  ;enhance integration;Similar;0.5541791915893555
Expose static factory for <file_name> <enter> Also rework the internals of how an <file_name> gets instantiated and set as a tag on the <iden>;This will make a future change easier to land;Ensure <file_name> and <file_name> use FileDescriptor.sync();Ensure <file_name> and <file_name> use FileDescriptor.sync();Similar;0.607230544090271
Expose static factory for <file_name> <enter> Also rework the internals of how an <file_name> gets instantiated and set as a tag on the <iden>;This will make a future change easier to land;moved util to <file_name>, added <file_name>  ;Organize and enhance code files;Similar;0.6425021290779114
Expose static factory for <file_name> <enter> Also rework the internals of how an <file_name> gets instantiated and set as a tag on the <iden>;This will make a future change easier to land;Use <iden> <version>s JsonAdapter.serializeNulls();serializeNulls;Similar;0.5297703742980957
Expose static factory for <file_name> <enter> Also rework the internals of how an <file_name> gets instantiated and set as a tag on the <iden>;This will make a future change easier to land;Expose <iden> via the <file_name> injection-like framework;injection-like framework;Similar;0.7493908405303955
Expose static factory for <file_name> <enter> Also rework the internals of how an <file_name> gets instantiated and set as a tag on the <iden>;This will make a future change easier to land;Changing `<file_name>` to implement `<file_name>` interface;interface;Similar;0.7254858016967773
Expose static factory for <file_name> <enter> Also rework the internals of how an <file_name> gets instantiated and set as a tag on the <iden>;This will make a future change easier to land;Fix support for protobuf <version>+;ExtensionRegistry cannot be null;Similar;0.5681764483451843
Re-work unresolvable type detection in parameters  ;"In order to natively support Kotlins suspend modifier in the future, we need to allow wildcards to be used for the last parameter; As a result, we only validate the shape of a type once an annotation is detected.";Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;Similar;0.5832682847976685
Re-work unresolvable type detection in parameters  ;"In order to natively support Kotlins suspend modifier in the future, we need to allow wildcards to be used for the last parameter; As a result, we only validate the shape of a type once an annotation is detected.";Consolidate exception formatters in one place  ;streamline implementation and improve maintenance;Similar;0.6371053457260132
Re-work unresolvable type detection in parameters  ;"In order to natively support Kotlins suspend modifier in the future, we need to allow wildcards to be used for the last parameter; As a result, we only validate the shape of a type once an annotation is detected.";Pull out <file_name> base class <enter>;This will allow us to support multiple forms of invocation beyond <iden> calls.;Similar;0.5058367252349854
Re-work unresolvable type detection in parameters  ;"In order to natively support Kotlins suspend modifier in the future, we need to allow wildcards to be used for the last parameter; As a result, we only validate the shape of a type once an annotation is detected.";Remove old <iden> nonsense;As of API 26 the android.jar contains the classes checked by <iden> and used by <iden>.Java8. And we dont encourage throwing checked exceptions from the service method but instead routing them through your call adapter.;Similar;0.7058329582214355
Re-work unresolvable type detection in parameters  ;"In order to natively support Kotlins suspend modifier in the future, we need to allow wildcards to be used for the last parameter; As a result, we only validate the shape of a type once an annotation is detected.";Combine <file_name> and <iden> into <method_name> <enter>  ;This is one class that handles all of the annotations and binding for a service method;Similar;0.53206866979599
Re-work unresolvable type detection in parameters  ;"In order to natively support Kotlins suspend modifier in the future, we need to allow wildcards to be used for the last parameter; As a result, we only validate the shape of a type once an annotation is detected.";Rename <method_name> to onSuccess(), and failure() to <iden>();to onSuccess(), and failure(), <iden>;Similar;0.6420943737030029
Re-work unresolvable type detection in parameters  ;"In order to natively support Kotlins suspend modifier in the future, we need to allow wildcards to be used for the last parameter; As a result, we only validate the shape of a type once an annotation is detected.";Add JSR 305 nullability annotations;nullability annotations;Similar;0.5749590396881104
Re-work unresolvable type detection in parameters  ;"In order to natively support Kotlins suspend modifier in the future, we need to allow wildcards to be used for the last parameter; As a result, we only validate the shape of a type once an annotation is detected.";Remove unused interface  ;unused;Similar;0.7635006904602051
Re-work unresolvable type detection in parameters  ;"In order to natively support Kotlins suspend modifier in the future, we need to allow wildcards to be used for the last parameter; As a result, we only validate the shape of a type once an annotation is detected.";Simplify observable creation and reduce runtime allocations;Simplify, reduce;Similar;0.7237999439239502
Re-work unresolvable type detection in parameters  ;"In order to natively support Kotlins suspend modifier in the future, we need to allow wildcards to be used for the last parameter; As a result, we only validate the shape of a type once an annotation is detected.";Refactor <iden> tests to avoid the use of blocking operators  ;avoid the use of blocking operators;Similar;0.7325523495674133
Re-work unresolvable type detection in parameters  ;"In order to natively support Kotlins suspend modifier in the future, we need to allow wildcards to be used for the last parameter; As a result, we only validate the shape of a type once an annotation is detected.";Remove duplicated test  ;It is the same as in this file;Similar;0.7969282865524292
Re-work unresolvable type detection in parameters  ;"In order to natively support Kotlins suspend modifier in the future, we need to allow wildcards to be used for the last parameter; As a result, we only validate the shape of a type once an annotation is detected.";call it a <version>;Actually;Similar;0.534571647644043
Re-work unresolvable type detection in parameters  ;"In order to natively support Kotlins suspend modifier in the future, we need to allow wildcards to be used for the last parameter; As a result, we only validate the shape of a type once an annotation is detected.";Add missing import  ;missing;Similar;0.6991380453109741
Re-work unresolvable type detection in parameters  ;"In order to natively support Kotlins suspend modifier in the future, we need to allow wildcards to be used for the last parameter; As a result, we only validate the shape of a type once an annotation is detected.";Document maps dont allow null anywhere;null anywhere;Similar;0.5732312202453613
Re-work unresolvable type detection in parameters  ;"In order to natively support Kotlins suspend modifier in the future, we need to allow wildcards to be used for the last parameter; As a result, we only validate the shape of a type once an annotation is detected.";Remove the need for generated accessor methods  ;need for generated accessor methods;Similar;0.7761639356613159
Re-work unresolvable type detection in parameters  ;"In order to natively support Kotlins suspend modifier in the future, we need to allow wildcards to be used for the last parameter; As a result, we only validate the shape of a type once an annotation is detected.";Propagate callback executor even when not explicitly specified  ;This lets custom <iden> implementations use the <file_name> default for their callbacks;Similar;0.5632210969924927
Re-work unresolvable type detection in parameters  ;"In order to natively support Kotlins suspend modifier in the future, we need to allow wildcards to be used for the last parameter; As a result, we only validate the shape of a type once an annotation is detected.";Add example of using <iden> <file_name> as a <iden> <method_name>  ;This also adds the <file_name> instance as a param to the string <file_name> to allow it to delegate to others directly. This brings it into parity with the method signatures of the other <file_name> methods anyway.;Similar;0.522030770778656
Re-work unresolvable type detection in parameters  ;"In order to natively support Kotlins suspend modifier in the future, we need to allow wildcards to be used for the last parameter; As a result, we only validate the shape of a type once an annotation is detected.";Use new <iden>s non-throwing close and a simpler body copy;non-throwing close and a simpler body			      ;Similar;0.5771865844726562
Re-work unresolvable type detection in parameters  ;"In order to natively support Kotlins suspend modifier in the future, we need to allow wildcards to be used for the last parameter; As a result, we only validate the shape of a type once an annotation is detected.";Remove incorrect generic parameter  ;incorrect;Similar;0.7752310037612915
Re-work unresolvable type detection in parameters  ;"In order to natively support Kotlins suspend modifier in the future, we need to allow wildcards to be used for the last parameter; As a result, we only validate the shape of a type once an annotation is detected.";Use a correct implementation of path encoding;correct;Similar;0.5056959986686707
Re-work unresolvable type detection in parameters  ;"In order to natively support Kotlins suspend modifier in the future, we need to allow wildcards to be used for the last parameter; As a result, we only validate the shape of a type once an annotation is detected.";Naming, API changes, and documentation around mock services.  ;mock services;Similar;0.576930582523346
Re-work unresolvable type detection in parameters  ;"In order to natively support Kotlins suspend modifier in the future, we need to allow wildcards to be used for the last parameter; As a result, we only validate the shape of a type once an annotation is detected.";Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;Similar;0.6139736175537109
Re-work unresolvable type detection in parameters  ;"In order to natively support Kotlins suspend modifier in the future, we need to allow wildcards to be used for the last parameter; As a result, we only validate the shape of a type once an annotation is detected.";Remove unused classes from <otherCommit_link>;unused;Similar;0.7477719783782959
Re-work unresolvable type detection in parameters  ;"In order to natively support Kotlins suspend modifier in the future, we need to allow wildcards to be used for the last parameter; As a result, we only validate the shape of a type once an annotation is detected.";Update to OkHttp <version>. Fix a tiny potential NPE;potential NPE;Similar;0.6743807792663574
Re-work unresolvable type detection in parameters  ;"In order to natively support Kotlins suspend modifier in the future, we need to allow wildcards to be used for the last parameter; As a result, we only validate the shape of a type once an annotation is detected.";Fix annotation link;<iden> is gone;Similar;0.658430814743042
Re-work unresolvable type detection in parameters  ;"In order to natively support Kotlins suspend modifier in the future, we need to allow wildcards to be used for the last parameter; As a result, we only validate the shape of a type once an annotation is detected.";Use the annotations directly for parameter handling.;Before we attempted to normalize the parameter annotations into a name and type model. The introduction of multi-part transfer encodings required something more expressive so the annotation instances themselves were used. This change removes the name and type in favor of using the annotation for everything.;Similar;0.6016203165054321
Re-work unresolvable type detection in parameters  ;"In order to natively support Kotlins suspend modifier in the future, we need to allow wildcards to be used for the last parameter; As a result, we only validate the shape of a type once an annotation is detected.";Expose success type on <method_name>;Theres a bit of a test gap going on for all the variants of successful and erroneous handling of sync, async, and rx. This new behavior is fully tested in all three but more general behavior testing for them will be needed in a follow-up.;Similar;0.5391730070114136
Re-work unresolvable type detection in parameters  ;"In order to natively support Kotlins suspend modifier in the future, we need to allow wildcards to be used for the last parameter; As a result, we only validate the shape of a type once an annotation is detected.";Correct map parameter type detection for query and field  ;-;Similar;0.5123541951179504
Re-work unresolvable type detection in parameters  ;"In order to natively support Kotlins suspend modifier in the future, we need to allow wildcards to be used for the last parameter; As a result, we only validate the shape of a type once an annotation is detected.";Add simple package info to root package  ;simple;Similar;0.5223090648651123
Re-work unresolvable type detection in parameters  ;"In order to natively support Kotlins suspend modifier in the future, we need to allow wildcards to be used for the last parameter; As a result, we only validate the shape of a type once an annotation is detected.";Properly name ignored exception in catch block  ;Properly naming;Similar;0.6578655242919922
Re-work unresolvable type detection in parameters  ;"In order to natively support Kotlins suspend modifier in the future, we need to allow wildcards to be used for the last parameter; As a result, we only validate the shape of a type once an annotation is detected.";Correct header length checking logic. Improve exception message;Improve;Similar;0.5596621036529541
Re-work unresolvable type detection in parameters  ;"In order to natively support Kotlins suspend modifier in the future, we need to allow wildcards to be used for the last parameter; As a result, we only validate the shape of a type once an annotation is detected.";Fix IntelliJ auto-formatting  ;Improve the formatting;Similar;0.6605638265609741
Re-work unresolvable type detection in parameters  ;"In order to natively support Kotlins suspend modifier in the future, we need to allow wildcards to be used for the last parameter; As a result, we only validate the shape of a type once an annotation is detected.";Add path and query tests for pre-encoded values;-;Similar;0.5740523338317871
Re-work unresolvable type detection in parameters  ;"In order to natively support Kotlins suspend modifier in the future, we need to allow wildcards to be used for the last parameter; As a result, we only validate the shape of a type once an annotation is detected.";Newline at end of file  ;Yes plz;Similar;0.5863358974456787
Re-work unresolvable type detection in parameters  ;"In order to natively support Kotlins suspend modifier in the future, we need to allow wildcards to be used for the last parameter; As a result, we only validate the shape of a type once an annotation is detected.";Log network and unexpected exceptions if logging is enabled  ;if logging is enabled;Similar;0.5108215808868408
Re-work unresolvable type detection in parameters  ;"In order to natively support Kotlins suspend modifier in the future, we need to allow wildcards to be used for the last parameter; As a result, we only validate the shape of a type once an annotation is detected.";Fix styling of <iden> download;styling;Similar;0.5958055257797241
Re-work unresolvable type detection in parameters  ;"In order to natively support Kotlins suspend modifier in the future, we need to allow wildcards to be used for the last parameter; As a result, we only validate the shape of a type once an annotation is detected.";" 
- Add <iden> <method_name>  
- Also update our sample to use <iden> contributors rather than the <iden>  
- Bump some dependencies to their latest versions  
";" 
- Use this on <iden> <version> and prior and when on the <iden>  
- because the latter is shutting down and subject to lame rate limiting when on common networks";Similar;0.5097078084945679
Re-work unresolvable type detection in parameters  ;"In order to natively support Kotlins suspend modifier in the future, we need to allow wildcards to be used for the last parameter; As a result, we only validate the shape of a type once an annotation is detected.";Provide a mutable <file_name> implementation. <iden> to conform.;to conform;Similar;0.5517686605453491
Re-work unresolvable type detection in parameters  ;"In order to natively support Kotlins suspend modifier in the future, we need to allow wildcards to be used for the last parameter; As a result, we only validate the shape of a type once an annotation is detected.";Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Similar;0.5786107778549194
Re-work unresolvable type detection in parameters  ;"In order to natively support Kotlins suspend modifier in the future, we need to allow wildcards to be used for the last parameter; As a result, we only validate the shape of a type once an annotation is detected.";Simplify test method fetching;-;Similar;0.6316869258880615
Re-work unresolvable type detection in parameters  ;"In order to natively support Kotlins suspend modifier in the future, we need to allow wildcards to be used for the last parameter; As a result, we only validate the shape of a type once an annotation is detected.";Allow <file_name> instantiation  ;Hide some Apache implementation details;Similar;0.5361245274543762
Re-work unresolvable type detection in parameters  ;"In order to natively support Kotlins suspend modifier in the future, we need to allow wildcards to be used for the last parameter; As a result, we only validate the shape of a type once an annotation is detected.";Hide more implementation details;more implementation details;Similar;0.6201215982437134
Re-work unresolvable type detection in parameters  ;"In order to natively support Kotlins suspend modifier in the future, we need to allow wildcards to be used for the last parameter; As a result, we only validate the shape of a type once an annotation is detected.";Remove unused <file_name> classes;unused;Similar;0.7059688568115234
Re-work unresolvable type detection in parameters  ;"In order to natively support Kotlins suspend modifier in the future, we need to allow wildcards to be used for the last parameter; As a result, we only validate the shape of a type once an annotation is detected.";Introduce builder pattern to instantiate <method_name>;profiler are now optional. Convenience methods for specifying a <iden> or an <iden> directly are also provided.;Similar;0.5320271253585815
Re-work unresolvable type detection in parameters  ;"In order to natively support Kotlins suspend modifier in the future, we need to allow wildcards to be used for the last parameter; As a result, we only validate the shape of a type once an annotation is detected.";Use no_aop Guice variant  ;no_aop;Similar;0.6502581834793091
Re-work unresolvable type detection in parameters  ;"In order to natively support Kotlins suspend modifier in the future, we need to allow wildcards to be used for the last parameter; As a result, we only validate the shape of a type once an annotation is detected.";Reintroduced deprecated <file_name> constructor;deprecated;Similar;0.7544521689414978
Re-work unresolvable type detection in parameters  ;"In order to natively support Kotlins suspend modifier in the future, we need to allow wildcards to be used for the last parameter; As a result, we only validate the shape of a type once an annotation is detected.";Fix small wording issues in custom converter docs;small wording issues;Similar;0.5653737783432007
Re-work unresolvable type detection in parameters  ;"In order to natively support Kotlins suspend modifier in the future, we need to allow wildcards to be used for the last parameter; As a result, we only validate the shape of a type once an annotation is detected.";Update custom conversion docs per feedback;Clarify that <iden> is just the default converter, Add section on other built-in converters, Add section on implementing your own custom converters;Similar;0.5463510751724243
Re-work unresolvable type detection in parameters  ;"In order to natively support Kotlins suspend modifier in the future, we need to allow wildcards to be used for the last parameter; As a result, we only validate the shape of a type once an annotation is detected.";Fix style nits per review;per review;Similar;0.6452911496162415
Re-work unresolvable type detection in parameters  ;"In order to natively support Kotlins suspend modifier in the future, we need to allow wildcards to be used for the last parameter; As a result, we only validate the shape of a type once an annotation is detected.";fix issue <issue_link> : permit use when servers or intermediaries mistakingly miss Content-<iden> header;mistakingly miss Content-<iden> header;Similar;0.6498898267745972
Re-work unresolvable type detection in parameters  ;"In order to natively support Kotlins suspend modifier in the future, we need to allow wildcards to be used for the last parameter; As a result, we only validate the shape of a type once an annotation is detected.";rename <iden> ->  <file_name>  ;to harvest the names for new annotations;Similar;0.5171624422073364
Re-work unresolvable type detection in parameters  ;"In order to natively support Kotlins suspend modifier in the future, we need to allow wildcards to be used for the last parameter; As a result, we only validate the shape of a type once an annotation is detected.";Move variable to where it is used;where it is used;Similar;0.605539083480835
Re-work unresolvable type detection in parameters  ;"In order to natively support Kotlins suspend modifier in the future, we need to allow wildcards to be used for the last parameter; As a result, we only validate the shape of a type once an annotation is detected.";Fix spelling;spelling;Similar;0.6574987173080444
Re-work unresolvable type detection in parameters  ;"In order to natively support Kotlins suspend modifier in the future, we need to allow wildcards to be used for the last parameter; As a result, we only validate the shape of a type once an annotation is detected.";Add fixed query parameter support;support;Similar;0.6182082891464233
Re-work unresolvable type detection in parameters  ;"In order to natively support Kotlins suspend modifier in the future, we need to allow wildcards to be used for the last parameter; As a result, we only validate the shape of a type once an annotation is detected.";Repackage gson into retrofit.internal.gson  ;enhance integration;Similar;0.6356374025344849
Re-work unresolvable type detection in parameters  ;"In order to natively support Kotlins suspend modifier in the future, we need to allow wildcards to be used for the last parameter; As a result, we only validate the shape of a type once an annotation is detected.";moved util to <file_name>, added <file_name>  ;Organize and enhance code files;Similar;0.5067275166511536
Re-work unresolvable type detection in parameters  ;"In order to natively support Kotlins suspend modifier in the future, we need to allow wildcards to be used for the last parameter; As a result, we only validate the shape of a type once an annotation is detected.";Use <iden> <version>s JsonAdapter.serializeNulls();serializeNulls;Similar;0.525371789932251
Re-work unresolvable type detection in parameters  ;"In order to natively support Kotlins suspend modifier in the future, we need to allow wildcards to be used for the last parameter; As a result, we only validate the shape of a type once an annotation is detected.";Removal of Unnecessary Creation of <iden>;if <iden> has length 0 there is no point to create stringBuilder for that. that condition check needs to happen before stringBuilder creation.;Similar;0.798791766166687
Re-work unresolvable type detection in parameters  ;"In order to natively support Kotlins suspend modifier in the future, we need to allow wildcards to be used for the last parameter; As a result, we only validate the shape of a type once an annotation is detected.";Changing `<file_name>` to implement `<file_name>` interface;interface;Similar;0.544017493724823
Re-work unresolvable type detection in parameters  ;"In order to natively support Kotlins suspend modifier in the future, we need to allow wildcards to be used for the last parameter; As a result, we only validate the shape of a type once an annotation is detected.";Fix support for protobuf <version>+;ExtensionRegistry cannot be null;Similar;0.6108583211898804
Re-work unresolvable type detection in parameters  ;"In order to natively support Kotlins suspend modifier in the future, we need to allow wildcards to be used for the last parameter; As a result, we only validate the shape of a type once an annotation is detected.";Fix typo;typo;Similar;0.652087926864624
Re-work unresolvable type detection in parameters  ;"In order to natively support Kotlins suspend modifier in the future, we need to allow wildcards to be used for the last parameter; As a result, we only validate the shape of a type once an annotation is detected.";Remove redundant throws  ;redundant;Similar;0.7112559676170349
Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;Consolidate exception formatters in one place  ;streamline implementation and improve maintenance;Similar;0.7226471900939941
Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;Pull out <file_name> base class <enter>;This will allow us to support multiple forms of invocation beyond <iden> calls.;Similar;0.7586277723312378
Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;Remove old <iden> nonsense;As of API 26 the android.jar contains the classes checked by <iden> and used by <iden>.Java8. And we dont encourage throwing checked exceptions from the service method but instead routing them through your call adapter.;Similar;0.5846718549728394
Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;Use HTTPS links in documentation where possible  ;where possible;Similar;0.621016263961792
Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;Combine <file_name> and <iden> into <method_name> <enter>  ;This is one class that handles all of the annotations and binding for a service method;Similar;0.8377743363380432
Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;Rename <method_name> to onSuccess(), and failure() to <iden>();to onSuccess(), and failure(), <iden>;Similar;0.7254848480224609
Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;Refer to the latest OkHttp version;latest;Similar;0.7440247535705566
Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;Add JSR 305 nullability annotations;nullability annotations;Similar;0.5606361627578735
Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;Update <file_name> to the latest version;the latest version;Similar;0.7191652059555054
Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;Remove unused interface  ;unused;Similar;0.6104370355606079
Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;Simplify observable creation and reduce runtime allocations;Simplify, reduce;Similar;0.6157122850418091
Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;Remove duplicated test  ;It is the same as in this file;Similar;0.6661144495010376
Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;call it a <version>;Actually;Similar;0.9079309701919556
Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;Add missing import  ;missing;Similar;0.5837016105651855
Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;Remove the need for generated accessor methods  ;need for generated accessor methods;Similar;0.6345340013504028
Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;Propagate callback executor even when not explicitly specified  ;This lets custom <iden> implementations use the <file_name> default for their callbacks;Similar;0.6084890365600586
Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;Add example of using <iden> <file_name> as a <iden> <method_name>  ;This also adds the <file_name> instance as a param to the string <file_name> to allow it to delegate to others directly. This brings it into parity with the method signatures of the other <file_name> methods anyway.;Similar;0.8396008610725403
Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;Use new <iden>s non-throwing close and a simpler body copy;non-throwing close and a simpler body			      ;Similar;0.5467018485069275
Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;Remove incorrect generic parameter  ;incorrect;Similar;0.5753222107887268
Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;Use a correct implementation of path encoding;correct;Similar;0.5514959096908569
Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;Similar;0.5967954397201538
Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;Naming, API changes, and documentation around mock services.  ;mock services;Similar;0.6464551687240601
Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;Introduce factory for <file_name> concept;This is still highly-inefficient in its internal use and there are no tests proving that we now fail earlier in configuring a service method;Similar;0.6467063426971436
Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;Similar;0.6417995095252991
Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;Remove unused classes from <otherCommit_link>;unused;Similar;0.610500156879425
Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;Update to OkHttp <version>. Fix a tiny potential NPE;potential NPE;Similar;0.6460387110710144
Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;Fix annotation link;<iden> is gone;Similar;0.8231416344642639
Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;Use the annotations directly for parameter handling.;Before we attempted to normalize the parameter annotations into a name and type model. The introduction of multi-part transfer encodings required something more expressive so the annotation instances themselves were used. This change removes the name and type in favor of using the annotation for everything.;Similar;0.7293844819068909
Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;Expose success type on <method_name>;Theres a bit of a test gap going on for all the variants of successful and erroneous handling of sync, async, and rx. This new behavior is fully tested in all three but more general behavior testing for them will be needed in a follow-up.;Similar;0.8024905323982239
Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;Correct map parameter type detection for query and field  ;-;Similar;0.5268381834030151
Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;Update <file_name> to latest. Add default constructor.;latest, Add default constructor;Similar;0.7423545122146606
Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;Add simple package info to root package  ;simple;Similar;0.625866174697876
Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;Correct header length checking logic. Improve exception message;Improve;Similar;0.5921880006790161
Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;Promote <iden> logging to a class which knows about chunking  ;This is an <iden>-specific implementation detail which is now only performed when needed;Similar;0.5464213490486145
Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;Fix IntelliJ auto-formatting  ;Improve the formatting;Similar;0.7385061383247375
Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;Add path and query tests for pre-encoded values;-;Similar;0.7540650963783264
Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;Add converters module and protobuf converter;to the sentence;Similar;0.7743613719940186
Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;Newline at end of file  ;Yes plz;Similar;0.7456274032592773
Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;Log network and unexpected exceptions if logging is enabled  ;if logging is enabled;Similar;0.5855470895767212
Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;Fix styling of <iden> download;styling;Similar;0.7484970092773438
Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;Rename pair to field to match annotation;match annotation;Similar;0.5364712476730347
Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;" 
- Add <iden> <method_name>  
- Also update our sample to use <iden> contributors rather than the <iden>  
- Bump some dependencies to their latest versions  
";" 
- Use this on <iden> <version> and prior and when on the <iden>  
- because the latter is shutting down and subject to lame rate limiting when on common networks";Similar;0.5555093288421631
Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;Provide a mutable <file_name> implementation. <iden> to conform.;to conform;Similar;0.8425923585891724
Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Similar;0.5821133852005005
Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;Simplify test method fetching;-;Similar;0.6677330732345581
Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;Allow <file_name> instantiation  ;Hide some Apache implementation details;Similar;0.8060716390609741
Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;Hide more implementation details;more implementation details;Similar;0.6628849506378174
Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;Remove unused <file_name> classes;unused;Similar;0.5745201110839844
Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;Introduce builder pattern to instantiate <method_name>;profiler are now optional. Convenience methods for specifying a <iden> or an <iden> directly are also provided.;Similar;0.7149228453636169
Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;Use no_aop Guice variant  ;no_aop;Similar;0.6801190376281738
Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;Adding a human-readable name to the  <file_name>  interface;human-readable;Similar;0.6667816638946533
Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;Added getTag() and logChunk() methods;for easier subclassing;Similar;0.7183616757392883
Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;Reintroduced deprecated <file_name> constructor;deprecated;Similar;0.6539354920387268
Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;Fix small wording issues in custom converter docs;small wording issues;Similar;0.5122831463813782
Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;Update custom conversion docs per feedback;Clarify that <iden> is just the default converter, Add section on other built-in converters, Add section on implementing your own custom converters;Similar;0.7060843110084534
Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;Fix style nits per review;per review;Similar;0.6842648983001709
Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;fix issue <issue_link> : permit use when servers or intermediaries mistakingly miss Content-<iden> header;mistakingly miss Content-<iden> header;Similar;0.5239838361740112
Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;rename <iden> ->  <file_name>  ;to harvest the names for new annotations;Similar;0.8275943994522095
Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;Move variable to where it is used;where it is used;Similar;0.7729478478431702
Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;Fix spelling;spelling;Similar;0.6941838264465332
Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;Add fixed query parameter support;support;Similar;0.8131542205810547
Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;Add <file_name>, <file_name> support to <file_name>  ;-;Similar;0.8125338554382324
Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;Allow <file_name> extensions;improved <file_name>;Similar;0.8277488946914673
Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;Repackage gson into retrofit.internal.gson  ;enhance integration;Similar;0.7711196541786194
Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;Ensure <file_name> and <file_name> use FileDescriptor.sync();Ensure <file_name> and <file_name> use FileDescriptor.sync();Similar;0.7791141271591187
Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;moved util to <file_name>, added <file_name>  ;Organize and enhance code files;Similar;0.8298568725585938
Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;Use <iden> <version>s JsonAdapter.serializeNulls();serializeNulls;Similar;0.8390623331069946
Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;Removal of Unnecessary Creation of <iden>;if <iden> has length 0 there is no point to create stringBuilder for that. that condition check needs to happen before stringBuilder creation.;Similar;0.6516194343566895
Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;Expose <iden> via the <file_name> injection-like framework;injection-like framework;Similar;0.7917603254318237
Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;Changing `<file_name>` to implement `<file_name>` interface;interface;Similar;0.7819697856903076
Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;Fix support for protobuf <version>+;ExtensionRegistry cannot be null;Similar;0.8610114455223083
Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;Fix typo;typo;Similar;0.7815412282943726
Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;Remove redundant throws  ;redundant;Similar;0.5946894884109497
Consolidate exception formatters in one place  ;streamline implementation and improve maintenance;Pull out <file_name> base class <enter>;This will allow us to support multiple forms of invocation beyond <iden> calls.;Similar;0.6163234114646912
Consolidate exception formatters in one place  ;streamline implementation and improve maintenance;Remove old <iden> nonsense;As of API 26 the android.jar contains the classes checked by <iden> and used by <iden>.Java8. And we dont encourage throwing checked exceptions from the service method but instead routing them through your call adapter.;Similar;0.533329963684082
Consolidate exception formatters in one place  ;streamline implementation and improve maintenance;Use HTTPS links in documentation where possible  ;where possible;Similar;0.5142250061035156
Consolidate exception formatters in one place  ;streamline implementation and improve maintenance;Combine <file_name> and <iden> into <method_name> <enter>  ;This is one class that handles all of the annotations and binding for a service method;Similar;0.6370385885238647
Consolidate exception formatters in one place  ;streamline implementation and improve maintenance;Rename <method_name> to onSuccess(), and failure() to <iden>();to onSuccess(), and failure(), <iden>;Similar;0.5611917972564697
Consolidate exception formatters in one place  ;streamline implementation and improve maintenance;Refer to the latest OkHttp version;latest;Similar;0.5940855741500854
Consolidate exception formatters in one place  ;streamline implementation and improve maintenance;Add JSR 305 nullability annotations;nullability annotations;Similar;0.5063673257827759
Consolidate exception formatters in one place  ;streamline implementation and improve maintenance;Update <file_name> to the latest version;the latest version;Similar;0.5229631066322327
Consolidate exception formatters in one place  ;streamline implementation and improve maintenance;Remove unused interface  ;unused;Similar;0.6170758008956909
Consolidate exception formatters in one place  ;streamline implementation and improve maintenance;Simplify observable creation and reduce runtime allocations;Simplify, reduce;Similar;0.6247869729995728
Consolidate exception formatters in one place  ;streamline implementation and improve maintenance;Remove duplicated test  ;It is the same as in this file;Similar;0.6460827589035034
Consolidate exception formatters in one place  ;streamline implementation and improve maintenance;call it a <version>;Actually;Similar;0.7163779735565186
Consolidate exception formatters in one place  ;streamline implementation and improve maintenance;Add missing import  ;missing;Similar;0.5743063688278198
Consolidate exception formatters in one place  ;streamline implementation and improve maintenance;Remove the need for generated accessor methods  ;need for generated accessor methods;Similar;0.6175516247749329
Consolidate exception formatters in one place  ;streamline implementation and improve maintenance;Propagate callback executor even when not explicitly specified  ;This lets custom <iden> implementations use the <file_name> default for their callbacks;Similar;0.6451192498207092
Consolidate exception formatters in one place  ;streamline implementation and improve maintenance;Add example of using <iden> <file_name> as a <iden> <method_name>  ;This also adds the <file_name> instance as a param to the string <file_name> to allow it to delegate to others directly. This brings it into parity with the method signatures of the other <file_name> methods anyway.;Similar;0.5930261611938477
Consolidate exception formatters in one place  ;streamline implementation and improve maintenance;Remove incorrect generic parameter  ;incorrect;Similar;0.5766767263412476
Consolidate exception formatters in one place  ;streamline implementation and improve maintenance;Use a correct implementation of path encoding;correct;Similar;0.5944337844848633
Consolidate exception formatters in one place  ;streamline implementation and improve maintenance;Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;Similar;0.5489060878753662
Consolidate exception formatters in one place  ;streamline implementation and improve maintenance;Naming, API changes, and documentation around mock services.  ;mock services;Similar;0.5608102679252625
Consolidate exception formatters in one place  ;streamline implementation and improve maintenance;Introduce factory for <file_name> concept;This is still highly-inefficient in its internal use and there are no tests proving that we now fail earlier in configuring a service method;Similar;0.5503503084182739
Consolidate exception formatters in one place  ;streamline implementation and improve maintenance;Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;Similar;0.6072047352790833
Consolidate exception formatters in one place  ;streamline implementation and improve maintenance;Remove unused classes from <otherCommit_link>;unused;Similar;0.539821207523346
Consolidate exception formatters in one place  ;streamline implementation and improve maintenance;Update to OkHttp <version>. Fix a tiny potential NPE;potential NPE;Similar;0.6031203269958496
Consolidate exception formatters in one place  ;streamline implementation and improve maintenance;Fix annotation link;<iden> is gone;Similar;0.7093746662139893
Consolidate exception formatters in one place  ;streamline implementation and improve maintenance;Use the annotations directly for parameter handling.;Before we attempted to normalize the parameter annotations into a name and type model. The introduction of multi-part transfer encodings required something more expressive so the annotation instances themselves were used. This change removes the name and type in favor of using the annotation for everything.;Similar;0.6552533507347107
Consolidate exception formatters in one place  ;streamline implementation and improve maintenance;Expose success type on <method_name>;Theres a bit of a test gap going on for all the variants of successful and erroneous handling of sync, async, and rx. This new behavior is fully tested in all three but more general behavior testing for them will be needed in a follow-up.;Similar;0.6447048187255859
Consolidate exception formatters in one place  ;streamline implementation and improve maintenance;Update <file_name> to latest. Add default constructor.;latest, Add default constructor;Similar;0.5583119988441467
Consolidate exception formatters in one place  ;streamline implementation and improve maintenance;Add simple package info to root package  ;simple;Similar;0.6369142532348633
Consolidate exception formatters in one place  ;streamline implementation and improve maintenance;Correct header length checking logic. Improve exception message;Improve;Similar;0.5670706033706665
Consolidate exception formatters in one place  ;streamline implementation and improve maintenance;Promote <iden> logging to a class which knows about chunking  ;This is an <iden>-specific implementation detail which is now only performed when needed;Similar;0.5176024436950684
Consolidate exception formatters in one place  ;streamline implementation and improve maintenance;Fix IntelliJ auto-formatting  ;Improve the formatting;Similar;0.6506791114807129
Consolidate exception formatters in one place  ;streamline implementation and improve maintenance;Add path and query tests for pre-encoded values;-;Similar;0.627720832824707
Consolidate exception formatters in one place  ;streamline implementation and improve maintenance;Add converters module and protobuf converter;to the sentence;Similar;0.6221581101417542
Consolidate exception formatters in one place  ;streamline implementation and improve maintenance;Newline at end of file  ;Yes plz;Similar;0.6242328882217407
Consolidate exception formatters in one place  ;streamline implementation and improve maintenance;Log network and unexpected exceptions if logging is enabled  ;if logging is enabled;Similar;0.5694887638092041
Consolidate exception formatters in one place  ;streamline implementation and improve maintenance;Fix styling of <iden> download;styling;Similar;0.6254590749740601
Consolidate exception formatters in one place  ;streamline implementation and improve maintenance;Provide a mutable <file_name> implementation. <iden> to conform.;to conform;Similar;0.6715142726898193
Consolidate exception formatters in one place  ;streamline implementation and improve maintenance;Simplify test method fetching;-;Similar;0.6300850510597229
Consolidate exception formatters in one place  ;streamline implementation and improve maintenance;Allow <file_name> instantiation  ;Hide some Apache implementation details;Similar;0.6565825939178467
Consolidate exception formatters in one place  ;streamline implementation and improve maintenance;Hide more implementation details;more implementation details;Similar;0.5641745328903198
Consolidate exception formatters in one place  ;streamline implementation and improve maintenance;Remove unused <file_name> classes;unused;Similar;0.5147725343704224
Consolidate exception formatters in one place  ;streamline implementation and improve maintenance;Introduce builder pattern to instantiate <method_name>;profiler are now optional. Convenience methods for specifying a <iden> or an <iden> directly are also provided.;Similar;0.5981444716453552
Consolidate exception formatters in one place  ;streamline implementation and improve maintenance;Use no_aop Guice variant  ;no_aop;Similar;0.5849772691726685
Consolidate exception formatters in one place  ;streamline implementation and improve maintenance;Adding a human-readable name to the  <file_name>  interface;human-readable;Similar;0.5239808559417725
Consolidate exception formatters in one place  ;streamline implementation and improve maintenance;Added getTag() and logChunk() methods;for easier subclassing;Similar;0.5750330686569214
Consolidate exception formatters in one place  ;streamline implementation and improve maintenance;Reintroduced deprecated <file_name> constructor;deprecated;Similar;0.6301685571670532
Consolidate exception formatters in one place  ;streamline implementation and improve maintenance;Update custom conversion docs per feedback;Clarify that <iden> is just the default converter, Add section on other built-in converters, Add section on implementing your own custom converters;Similar;0.5830621123313904
Consolidate exception formatters in one place  ;streamline implementation and improve maintenance;Fix style nits per review;per review;Similar;0.6377105712890625
Consolidate exception formatters in one place  ;streamline implementation and improve maintenance;fix issue <issue_link> : permit use when servers or intermediaries mistakingly miss Content-<iden> header;mistakingly miss Content-<iden> header;Similar;0.5158608555793762
Consolidate exception formatters in one place  ;streamline implementation and improve maintenance;rename <iden> ->  <file_name>  ;to harvest the names for new annotations;Similar;0.5860939025878906
Consolidate exception formatters in one place  ;streamline implementation and improve maintenance;Move variable to where it is used;where it is used;Similar;0.6787573099136353
Consolidate exception formatters in one place  ;streamline implementation and improve maintenance;Fix spelling;spelling;Similar;0.643740177154541
Consolidate exception formatters in one place  ;streamline implementation and improve maintenance;Add fixed query parameter support;support;Similar;0.7051347494125366
Consolidate exception formatters in one place  ;streamline implementation and improve maintenance;Add <file_name>, <file_name> support to <file_name>  ;-;Similar;0.6091219782829285
Consolidate exception formatters in one place  ;streamline implementation and improve maintenance;Allow <file_name> extensions;improved <file_name>;Similar;0.611579179763794
Consolidate exception formatters in one place  ;streamline implementation and improve maintenance;Repackage gson into retrofit.internal.gson  ;enhance integration;Similar;0.6795941591262817
Consolidate exception formatters in one place  ;streamline implementation and improve maintenance;Ensure <file_name> and <file_name> use FileDescriptor.sync();Ensure <file_name> and <file_name> use FileDescriptor.sync();Similar;0.6283575296401978
Consolidate exception formatters in one place  ;streamline implementation and improve maintenance;moved util to <file_name>, added <file_name>  ;Organize and enhance code files;Similar;0.6431280374526978
Consolidate exception formatters in one place  ;streamline implementation and improve maintenance;Use <iden> <version>s JsonAdapter.serializeNulls();serializeNulls;Similar;0.6211696863174438
Consolidate exception formatters in one place  ;streamline implementation and improve maintenance;Removal of Unnecessary Creation of <iden>;if <iden> has length 0 there is no point to create stringBuilder for that. that condition check needs to happen before stringBuilder creation.;Similar;0.6008387804031372
Consolidate exception formatters in one place  ;streamline implementation and improve maintenance;Expose <iden> via the <file_name> injection-like framework;injection-like framework;Similar;0.5746782422065735
Consolidate exception formatters in one place  ;streamline implementation and improve maintenance;Changing `<file_name>` to implement `<file_name>` interface;interface;Similar;0.5769503712654114
Consolidate exception formatters in one place  ;streamline implementation and improve maintenance;Fix support for protobuf <version>+;ExtensionRegistry cannot be null;Similar;0.6692667007446289
Consolidate exception formatters in one place  ;streamline implementation and improve maintenance;Fix typo;typo;Similar;0.7246031761169434
Consolidate exception formatters in one place  ;streamline implementation and improve maintenance;Remove redundant throws  ;redundant;Similar;0.6303073167800903
Pull out <file_name> base class <enter>;This will allow us to support multiple forms of invocation beyond <iden> calls.;Use HTTPS links in documentation where possible  ;where possible;Similar;0.5901234149932861
Pull out <file_name> base class <enter>;This will allow us to support multiple forms of invocation beyond <iden> calls.;Combine <file_name> and <iden> into <method_name> <enter>  ;This is one class that handles all of the annotations and binding for a service method;Similar;0.8715475797653198
Pull out <file_name> base class <enter>;This will allow us to support multiple forms of invocation beyond <iden> calls.;Rename <method_name> to onSuccess(), and failure() to <iden>();to onSuccess(), and failure(), <iden>;Similar;0.6594332456588745
Pull out <file_name> base class <enter>;This will allow us to support multiple forms of invocation beyond <iden> calls.;Refer to the latest OkHttp version;latest;Similar;0.573081910610199
Pull out <file_name> base class <enter>;This will allow us to support multiple forms of invocation beyond <iden> calls.;Add JSR 305 nullability annotations;nullability annotations;Similar;0.5482937097549438
Pull out <file_name> base class <enter>;This will allow us to support multiple forms of invocation beyond <iden> calls.;Update <file_name> to the latest version;the latest version;Similar;0.5882672071456909
Pull out <file_name> base class <enter>;This will allow us to support multiple forms of invocation beyond <iden> calls.;Remove duplicated test  ;It is the same as in this file;Similar;0.5392240285873413
Pull out <file_name> base class <enter>;This will allow us to support multiple forms of invocation beyond <iden> calls.;call it a <version>;Actually;Similar;0.6955181956291199
Pull out <file_name> base class <enter>;This will allow us to support multiple forms of invocation beyond <iden> calls.;Add missing import  ;missing;Similar;0.5096389055252075
Pull out <file_name> base class <enter>;This will allow us to support multiple forms of invocation beyond <iden> calls.;Remove the need for generated accessor methods  ;need for generated accessor methods;Similar;0.5057207345962524
Pull out <file_name> base class <enter>;This will allow us to support multiple forms of invocation beyond <iden> calls.;Add example of using <iden> <file_name> as a <iden> <method_name>  ;This also adds the <file_name> instance as a param to the string <file_name> to allow it to delegate to others directly. This brings it into parity with the method signatures of the other <file_name> methods anyway.;Similar;0.850075364112854
Pull out <file_name> base class <enter>;This will allow us to support multiple forms of invocation beyond <iden> calls.;Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;Similar;0.7664944529533386
Pull out <file_name> base class <enter>;This will allow us to support multiple forms of invocation beyond <iden> calls.;Naming, API changes, and documentation around mock services.  ;mock services;Similar;0.6453160047531128
Pull out <file_name> base class <enter>;This will allow us to support multiple forms of invocation beyond <iden> calls.;Introduce factory for <file_name> concept;This is still highly-inefficient in its internal use and there are no tests proving that we now fail earlier in configuring a service method;Similar;0.805705189704895
Pull out <file_name> base class <enter>;This will allow us to support multiple forms of invocation beyond <iden> calls.;Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;Similar;0.7530968189239502
Pull out <file_name> base class <enter>;This will allow us to support multiple forms of invocation beyond <iden> calls.;Remove unused classes from <otherCommit_link>;unused;Similar;0.5893707275390625
Pull out <file_name> base class <enter>;This will allow us to support multiple forms of invocation beyond <iden> calls.;Update to OkHttp <version>. Fix a tiny potential NPE;potential NPE;Similar;0.5385186076164246
Pull out <file_name> base class <enter>;This will allow us to support multiple forms of invocation beyond <iden> calls.;Fix annotation link;<iden> is gone;Similar;0.6560384035110474
Pull out <file_name> base class <enter>;This will allow us to support multiple forms of invocation beyond <iden> calls.;Use the annotations directly for parameter handling.;Before we attempted to normalize the parameter annotations into a name and type model. The introduction of multi-part transfer encodings required something more expressive so the annotation instances themselves were used. This change removes the name and type in favor of using the annotation for everything.;Similar;0.7336753606796265
Pull out <file_name> base class <enter>;This will allow us to support multiple forms of invocation beyond <iden> calls.;Expose success type on <method_name>;Theres a bit of a test gap going on for all the variants of successful and erroneous handling of sync, async, and rx. This new behavior is fully tested in all three but more general behavior testing for them will be needed in a follow-up.;Similar;0.8324688673019409
Pull out <file_name> base class <enter>;This will allow us to support multiple forms of invocation beyond <iden> calls.;Correct map parameter type detection for query and field  ;-;Similar;0.5081676244735718
Pull out <file_name> base class <enter>;This will allow us to support multiple forms of invocation beyond <iden> calls.;Update <file_name> to latest. Add default constructor.;latest, Add default constructor;Similar;0.749620795249939
Pull out <file_name> base class <enter>;This will allow us to support multiple forms of invocation beyond <iden> calls.;Add simple package info to root package  ;simple;Similar;0.5773191452026367
Pull out <file_name> base class <enter>;This will allow us to support multiple forms of invocation beyond <iden> calls.;Promote <iden> logging to a class which knows about chunking  ;This is an <iden>-specific implementation detail which is now only performed when needed;Similar;0.6569874286651611
Pull out <file_name> base class <enter>;This will allow us to support multiple forms of invocation beyond <iden> calls.;Fix IntelliJ auto-formatting  ;Improve the formatting;Similar;0.6624866127967834
Pull out <file_name> base class <enter>;This will allow us to support multiple forms of invocation beyond <iden> calls.;Add path and query tests for pre-encoded values;-;Similar;0.6711939573287964
Pull out <file_name> base class <enter>;This will allow us to support multiple forms of invocation beyond <iden> calls.;Add converters module and protobuf converter;to the sentence;Similar;0.7006756067276001
Pull out <file_name> base class <enter>;This will allow us to support multiple forms of invocation beyond <iden> calls.;Newline at end of file  ;Yes plz;Similar;0.6213152408599854
Pull out <file_name> base class <enter>;This will allow us to support multiple forms of invocation beyond <iden> calls.;Log network and unexpected exceptions if logging is enabled  ;if logging is enabled;Similar;0.5184850692749023
Pull out <file_name> base class <enter>;This will allow us to support multiple forms of invocation beyond <iden> calls.;Fix styling of <iden> download;styling;Similar;0.6666839122772217
Pull out <file_name> base class <enter>;This will allow us to support multiple forms of invocation beyond <iden> calls.;Rename pair to field to match annotation;match annotation;Similar;0.5329312086105347
Pull out <file_name> base class <enter>;This will allow us to support multiple forms of invocation beyond <iden> calls.;Provide a mutable <file_name> implementation. <iden> to conform.;to conform;Similar;0.7949690818786621
Pull out <file_name> base class <enter>;This will allow us to support multiple forms of invocation beyond <iden> calls.;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Similar;0.6379475593566895
Pull out <file_name> base class <enter>;This will allow us to support multiple forms of invocation beyond <iden> calls.;Simplify test method fetching;-;Similar;0.5008513927459717
Pull out <file_name> base class <enter>;This will allow us to support multiple forms of invocation beyond <iden> calls.;Allow <file_name> instantiation  ;Hide some Apache implementation details;Similar;0.7943493723869324
Pull out <file_name> base class <enter>;This will allow us to support multiple forms of invocation beyond <iden> calls.;Remove unused <file_name> classes;unused;Similar;0.6474065780639648
Pull out <file_name> base class <enter>;This will allow us to support multiple forms of invocation beyond <iden> calls.;Introduce builder pattern to instantiate <method_name>;profiler are now optional. Convenience methods for specifying a <iden> or an <iden> directly are also provided.;Similar;0.8014546632766724
Pull out <file_name> base class <enter>;This will allow us to support multiple forms of invocation beyond <iden> calls.;Use no_aop Guice variant  ;no_aop;Similar;0.5778118371963501
Pull out <file_name> base class <enter>;This will allow us to support multiple forms of invocation beyond <iden> calls.;Adding a human-readable name to the  <file_name>  interface;human-readable;Similar;0.7738749980926514
Pull out <file_name> base class <enter>;This will allow us to support multiple forms of invocation beyond <iden> calls.;Added getTag() and logChunk() methods;for easier subclassing;Similar;0.7144308090209961
Pull out <file_name> base class <enter>;This will allow us to support multiple forms of invocation beyond <iden> calls.;Reintroduced deprecated <file_name> constructor;deprecated;Similar;0.7046712636947632
Pull out <file_name> base class <enter>;This will allow us to support multiple forms of invocation beyond <iden> calls.;Update custom conversion docs per feedback;Clarify that <iden> is just the default converter, Add section on other built-in converters, Add section on implementing your own custom converters;Similar;0.616565465927124
Pull out <file_name> base class <enter>;This will allow us to support multiple forms of invocation beyond <iden> calls.;Fix style nits per review;per review;Similar;0.5246396064758301
Pull out <file_name> base class <enter>;This will allow us to support multiple forms of invocation beyond <iden> calls.;rename <iden> ->  <file_name>  ;to harvest the names for new annotations;Similar;0.8169373273849487
Pull out <file_name> base class <enter>;This will allow us to support multiple forms of invocation beyond <iden> calls.;Move variable to where it is used;where it is used;Similar;0.631090521812439
Pull out <file_name> base class <enter>;This will allow us to support multiple forms of invocation beyond <iden> calls.;Fix spelling;spelling;Similar;0.522538423538208
Pull out <file_name> base class <enter>;This will allow us to support multiple forms of invocation beyond <iden> calls.;Add fixed query parameter support;support;Similar;0.7125177383422852
Pull out <file_name> base class <enter>;This will allow us to support multiple forms of invocation beyond <iden> calls.;Add <file_name>, <file_name> support to <file_name>  ;-;Similar;0.8197053074836731
Pull out <file_name> base class <enter>;This will allow us to support multiple forms of invocation beyond <iden> calls.;Allow <file_name> extensions;improved <file_name>;Similar;0.8372663259506226
Pull out <file_name> base class <enter>;This will allow us to support multiple forms of invocation beyond <iden> calls.;Repackage gson into retrofit.internal.gson  ;enhance integration;Similar;0.6516233682632446
Pull out <file_name> base class <enter>;This will allow us to support multiple forms of invocation beyond <iden> calls.;Ensure <file_name> and <file_name> use FileDescriptor.sync();Ensure <file_name> and <file_name> use FileDescriptor.sync();Similar;0.7492249011993408
Pull out <file_name> base class <enter>;This will allow us to support multiple forms of invocation beyond <iden> calls.;moved util to <file_name>, added <file_name>  ;Organize and enhance code files;Similar;0.8140462040901184
Pull out <file_name> base class <enter>;This will allow us to support multiple forms of invocation beyond <iden> calls.;Use <iden> <version>s JsonAdapter.serializeNulls();serializeNulls;Similar;0.7836034297943115
Pull out <file_name> base class <enter>;This will allow us to support multiple forms of invocation beyond <iden> calls.;Expose <iden> via the <file_name> injection-like framework;injection-like framework;Similar;0.862533450126648
Pull out <file_name> base class <enter>;This will allow us to support multiple forms of invocation beyond <iden> calls.;Changing `<file_name>` to implement `<file_name>` interface;interface;Similar;0.7859640121459961
Pull out <file_name> base class <enter>;This will allow us to support multiple forms of invocation beyond <iden> calls.;Fix support for protobuf <version>+;ExtensionRegistry cannot be null;Similar;0.7496293783187866
Pull out <file_name> base class <enter>;This will allow us to support multiple forms of invocation beyond <iden> calls.;Fix typo;typo;Similar;0.6241471171379089
Remove old <iden> nonsense;As of API 26 the android.jar contains the classes checked by <iden> and used by <iden>.Java8. And we dont encourage throwing checked exceptions from the service method but instead routing them through your call adapter.;Combine <file_name> and <iden> into <method_name> <enter>  ;This is one class that handles all of the annotations and binding for a service method;Similar;0.511627197265625
Remove old <iden> nonsense;As of API 26 the android.jar contains the classes checked by <iden> and used by <iden>.Java8. And we dont encourage throwing checked exceptions from the service method but instead routing them through your call adapter.;Rename <method_name> to onSuccess(), and failure() to <iden>();to onSuccess(), and failure(), <iden>;Similar;0.7488150596618652
Remove old <iden> nonsense;As of API 26 the android.jar contains the classes checked by <iden> and used by <iden>.Java8. And we dont encourage throwing checked exceptions from the service method but instead routing them through your call adapter.;Add JSR 305 nullability annotations;nullability annotations;Similar;0.605349063873291
Remove old <iden> nonsense;As of API 26 the android.jar contains the classes checked by <iden> and used by <iden>.Java8. And we dont encourage throwing checked exceptions from the service method but instead routing them through your call adapter.;Remove unused interface  ;unused;Similar;0.840207576751709
Remove old <iden> nonsense;As of API 26 the android.jar contains the classes checked by <iden> and used by <iden>.Java8. And we dont encourage throwing checked exceptions from the service method but instead routing them through your call adapter.;Simplify observable creation and reduce runtime allocations;Simplify, reduce;Similar;0.6700308918952942
Remove old <iden> nonsense;As of API 26 the android.jar contains the classes checked by <iden> and used by <iden>.Java8. And we dont encourage throwing checked exceptions from the service method but instead routing them through your call adapter.;Refactor <iden> tests to avoid the use of blocking operators  ;avoid the use of blocking operators;Similar;0.5709428191184998
Remove old <iden> nonsense;As of API 26 the android.jar contains the classes checked by <iden> and used by <iden>.Java8. And we dont encourage throwing checked exceptions from the service method but instead routing them through your call adapter.;Remove duplicated test  ;It is the same as in this file;Similar;0.7777864933013916
Remove old <iden> nonsense;As of API 26 the android.jar contains the classes checked by <iden> and used by <iden>.Java8. And we dont encourage throwing checked exceptions from the service method but instead routing them through your call adapter.;call it a <version>;Actually;Similar;0.5985994935035706
Remove old <iden> nonsense;As of API 26 the android.jar contains the classes checked by <iden> and used by <iden>.Java8. And we dont encourage throwing checked exceptions from the service method but instead routing them through your call adapter.;Add missing import  ;missing;Similar;0.7988003492355347
Remove old <iden> nonsense;As of API 26 the android.jar contains the classes checked by <iden> and used by <iden>.Java8. And we dont encourage throwing checked exceptions from the service method but instead routing them through your call adapter.;Document maps dont allow null anywhere;null anywhere;Similar;0.5889317989349365
Remove old <iden> nonsense;As of API 26 the android.jar contains the classes checked by <iden> and used by <iden>.Java8. And we dont encourage throwing checked exceptions from the service method but instead routing them through your call adapter.;Remove the need for generated accessor methods  ;need for generated accessor methods;Similar;0.7530221343040466
Remove old <iden> nonsense;As of API 26 the android.jar contains the classes checked by <iden> and used by <iden>.Java8. And we dont encourage throwing checked exceptions from the service method but instead routing them through your call adapter.;Use new <iden>s non-throwing close and a simpler body copy;non-throwing close and a simpler body			      ;Similar;0.5341358184814453
Remove old <iden> nonsense;As of API 26 the android.jar contains the classes checked by <iden> and used by <iden>.Java8. And we dont encourage throwing checked exceptions from the service method but instead routing them through your call adapter.;Remove incorrect generic parameter  ;incorrect;Similar;0.8577327728271484
Remove old <iden> nonsense;As of API 26 the android.jar contains the classes checked by <iden> and used by <iden>.Java8. And we dont encourage throwing checked exceptions from the service method but instead routing them through your call adapter.;Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;Similar;0.5242592692375183
Remove old <iden> nonsense;As of API 26 the android.jar contains the classes checked by <iden> and used by <iden>.Java8. And we dont encourage throwing checked exceptions from the service method but instead routing them through your call adapter.;Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;Similar;0.6187052726745605
Remove old <iden> nonsense;As of API 26 the android.jar contains the classes checked by <iden> and used by <iden>.Java8. And we dont encourage throwing checked exceptions from the service method but instead routing them through your call adapter.;Remove unused classes from <otherCommit_link>;unused;Similar;0.8029720783233643
Remove old <iden> nonsense;As of API 26 the android.jar contains the classes checked by <iden> and used by <iden>.Java8. And we dont encourage throwing checked exceptions from the service method but instead routing them through your call adapter.;Update to OkHttp <version>. Fix a tiny potential NPE;potential NPE;Similar;0.5365777015686035
Remove old <iden> nonsense;As of API 26 the android.jar contains the classes checked by <iden> and used by <iden>.Java8. And we dont encourage throwing checked exceptions from the service method but instead routing them through your call adapter.;Fix annotation link;<iden> is gone;Similar;0.5937243700027466
Remove old <iden> nonsense;As of API 26 the android.jar contains the classes checked by <iden> and used by <iden>.Java8. And we dont encourage throwing checked exceptions from the service method but instead routing them through your call adapter.;Properly name ignored exception in catch block  ;Properly naming;Similar;0.6777967214584351
Remove old <iden> nonsense;As of API 26 the android.jar contains the classes checked by <iden> and used by <iden>.Java8. And we dont encourage throwing checked exceptions from the service method but instead routing them through your call adapter.;Fix IntelliJ auto-formatting  ;Improve the formatting;Similar;0.5804611444473267
Remove old <iden> nonsense;As of API 26 the android.jar contains the classes checked by <iden> and used by <iden>.Java8. And we dont encourage throwing checked exceptions from the service method but instead routing them through your call adapter.;Newline at end of file  ;Yes plz;Similar;0.5308566093444824
Remove old <iden> nonsense;As of API 26 the android.jar contains the classes checked by <iden> and used by <iden>.Java8. And we dont encourage throwing checked exceptions from the service method but instead routing them through your call adapter.;Allow <file_name> instantiation  ;Hide some Apache implementation details;Similar;0.5157336592674255
Remove old <iden> nonsense;As of API 26 the android.jar contains the classes checked by <iden> and used by <iden>.Java8. And we dont encourage throwing checked exceptions from the service method but instead routing them through your call adapter.;Hide more implementation details;more implementation details;Similar;0.54212486743927
Remove old <iden> nonsense;As of API 26 the android.jar contains the classes checked by <iden> and used by <iden>.Java8. And we dont encourage throwing checked exceptions from the service method but instead routing them through your call adapter.;Remove unused <file_name> classes;unused;Similar;0.7752472758293152
Remove old <iden> nonsense;As of API 26 the android.jar contains the classes checked by <iden> and used by <iden>.Java8. And we dont encourage throwing checked exceptions from the service method but instead routing them through your call adapter.;Use no_aop Guice variant  ;no_aop;Similar;0.7122154831886292
Remove old <iden> nonsense;As of API 26 the android.jar contains the classes checked by <iden> and used by <iden>.Java8. And we dont encourage throwing checked exceptions from the service method but instead routing them through your call adapter.;Reintroduced deprecated <file_name> constructor;deprecated;Similar;0.763644278049469
Remove old <iden> nonsense;As of API 26 the android.jar contains the classes checked by <iden> and used by <iden>.Java8. And we dont encourage throwing checked exceptions from the service method but instead routing them through your call adapter.;rename <iden> ->  <file_name>  ;to harvest the names for new annotations;Similar;0.6094145774841309
Remove old <iden> nonsense;As of API 26 the android.jar contains the classes checked by <iden> and used by <iden>.Java8. And we dont encourage throwing checked exceptions from the service method but instead routing them through your call adapter.;Move variable to where it is used;where it is used;Similar;0.5831409096717834
Remove old <iden> nonsense;As of API 26 the android.jar contains the classes checked by <iden> and used by <iden>.Java8. And we dont encourage throwing checked exceptions from the service method but instead routing them through your call adapter.;Fix spelling;spelling;Similar;0.6367173194885254
Remove old <iden> nonsense;As of API 26 the android.jar contains the classes checked by <iden> and used by <iden>.Java8. And we dont encourage throwing checked exceptions from the service method but instead routing them through your call adapter.;Add fixed query parameter support;support;Similar;0.5431380271911621
Remove old <iden> nonsense;As of API 26 the android.jar contains the classes checked by <iden> and used by <iden>.Java8. And we dont encourage throwing checked exceptions from the service method but instead routing them through your call adapter.;Allow <file_name> extensions;improved <file_name>;Similar;0.5044901371002197
Remove old <iden> nonsense;As of API 26 the android.jar contains the classes checked by <iden> and used by <iden>.Java8. And we dont encourage throwing checked exceptions from the service method but instead routing them through your call adapter.;Repackage gson into retrofit.internal.gson  ;enhance integration;Similar;0.6254869699478149
Remove old <iden> nonsense;As of API 26 the android.jar contains the classes checked by <iden> and used by <iden>.Java8. And we dont encourage throwing checked exceptions from the service method but instead routing them through your call adapter.;moved util to <file_name>, added <file_name>  ;Organize and enhance code files;Similar;0.5268620252609253
Remove old <iden> nonsense;As of API 26 the android.jar contains the classes checked by <iden> and used by <iden>.Java8. And we dont encourage throwing checked exceptions from the service method but instead routing them through your call adapter.;Use <iden> <version>s JsonAdapter.serializeNulls();serializeNulls;Similar;0.5052667856216431
Remove old <iden> nonsense;As of API 26 the android.jar contains the classes checked by <iden> and used by <iden>.Java8. And we dont encourage throwing checked exceptions from the service method but instead routing them through your call adapter.;Removal of Unnecessary Creation of <iden>;if <iden> has length 0 there is no point to create stringBuilder for that. that condition check needs to happen before stringBuilder creation.;Similar;0.8649892807006836
Remove old <iden> nonsense;As of API 26 the android.jar contains the classes checked by <iden> and used by <iden>.Java8. And we dont encourage throwing checked exceptions from the service method but instead routing them through your call adapter.;Fix support for protobuf <version>+;ExtensionRegistry cannot be null;Similar;0.5647817850112915
Remove old <iden> nonsense;As of API 26 the android.jar contains the classes checked by <iden> and used by <iden>.Java8. And we dont encourage throwing checked exceptions from the service method but instead routing them through your call adapter.;Fix typo;typo;Similar;0.6122088432312012
Remove old <iden> nonsense;As of API 26 the android.jar contains the classes checked by <iden> and used by <iden>.Java8. And we dont encourage throwing checked exceptions from the service method but instead routing them through your call adapter.;Remove redundant throws  ;redundant;Similar;0.8248981237411499
Use HTTPS links in documentation where possible  ;where possible;Combine <file_name> and <iden> into <method_name> <enter>  ;This is one class that handles all of the annotations and binding for a service method;Similar;0.6200660467147827
Use HTTPS links in documentation where possible  ;where possible;call it a <version>;Actually;Similar;0.551769495010376
Use HTTPS links in documentation where possible  ;where possible;Add example of using <iden> <file_name> as a <iden> <method_name>  ;This also adds the <file_name> instance as a param to the string <file_name> to allow it to delegate to others directly. This brings it into parity with the method signatures of the other <file_name> methods anyway.;Similar;0.6960172057151794
Use HTTPS links in documentation where possible  ;where possible;Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;Similar;0.5234216451644897
Use HTTPS links in documentation where possible  ;where possible;Naming, API changes, and documentation around mock services.  ;mock services;Similar;0.5689713954925537
Use HTTPS links in documentation where possible  ;where possible;Introduce factory for <file_name> concept;This is still highly-inefficient in its internal use and there are no tests proving that we now fail earlier in configuring a service method;Similar;0.5779803991317749
Use HTTPS links in documentation where possible  ;where possible;Update to OkHttp <version>. Fix a tiny potential NPE;potential NPE;Similar;0.5560218095779419
Use HTTPS links in documentation where possible  ;where possible;Fix annotation link;<iden> is gone;Similar;0.5929708480834961
Use HTTPS links in documentation where possible  ;where possible;Use the annotations directly for parameter handling.;Before we attempted to normalize the parameter annotations into a name and type model. The introduction of multi-part transfer encodings required something more expressive so the annotation instances themselves were used. This change removes the name and type in favor of using the annotation for everything.;Similar;0.5840084552764893
Use HTTPS links in documentation where possible  ;where possible;Expose success type on <method_name>;Theres a bit of a test gap going on for all the variants of successful and erroneous handling of sync, async, and rx. This new behavior is fully tested in all three but more general behavior testing for them will be needed in a follow-up.;Similar;0.6742191314697266
Use HTTPS links in documentation where possible  ;where possible;Correct map parameter type detection for query and field  ;-;Similar;0.5737602710723877
Use HTTPS links in documentation where possible  ;where possible;Update <file_name> to latest. Add default constructor.;latest, Add default constructor;Similar;0.5556008815765381
Use HTTPS links in documentation where possible  ;where possible;Add simple package info to root package  ;simple;Similar;0.6033841967582703
Use HTTPS links in documentation where possible  ;where possible;Correct header length checking logic. Improve exception message;Improve;Similar;0.5525401830673218
Use HTTPS links in documentation where possible  ;where possible;Promote <iden> logging to a class which knows about chunking  ;This is an <iden>-specific implementation detail which is now only performed when needed;Similar;0.6510628461837769
Use HTTPS links in documentation where possible  ;where possible;Fix IntelliJ auto-formatting  ;Improve the formatting;Similar;0.5351428985595703
Use HTTPS links in documentation where possible  ;where possible;Add path and query tests for pre-encoded values;-;Similar;0.5905100107192993
Use HTTPS links in documentation where possible  ;where possible;Log network and unexpected exceptions if logging is enabled  ;if logging is enabled;Similar;0.6913720965385437
Use HTTPS links in documentation where possible  ;where possible;Fix styling of <iden> download;styling;Similar;0.6472877264022827
Use HTTPS links in documentation where possible  ;where possible;Provide a mutable <file_name> implementation. <iden> to conform.;to conform;Similar;0.6767094135284424
Use HTTPS links in documentation where possible  ;where possible;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Similar;0.634882926940918
Use HTTPS links in documentation where possible  ;where possible;Simplify test method fetching;-;Similar;0.5199022889137268
Use HTTPS links in documentation where possible  ;where possible;Allow <file_name> instantiation  ;Hide some Apache implementation details;Similar;0.6983456611633301
Use HTTPS links in documentation where possible  ;where possible;Hide more implementation details;more implementation details;Similar;0.5330499410629272
Use HTTPS links in documentation where possible  ;where possible;Introduce builder pattern to instantiate <method_name>;profiler are now optional. Convenience methods for specifying a <iden> or an <iden> directly are also provided.;Similar;0.6193732023239136
Use HTTPS links in documentation where possible  ;where possible;Adding a human-readable name to the  <file_name>  interface;human-readable;Similar;0.6562513113021851
Use HTTPS links in documentation where possible  ;where possible;Added getTag() and logChunk() methods;for easier subclassing;Similar;0.6574379205703735
Use HTTPS links in documentation where possible  ;where possible;Fix small wording issues in custom converter docs;small wording issues;Similar;0.549038827419281
Use HTTPS links in documentation where possible  ;where possible;Update custom conversion docs per feedback;Clarify that <iden> is just the default converter, Add section on other built-in converters, Add section on implementing your own custom converters;Similar;0.5686043500900269
Use HTTPS links in documentation where possible  ;where possible;Fix style nits per review;per review;Similar;0.502735435962677
Use HTTPS links in documentation where possible  ;where possible;fix issue <issue_link> : permit use when servers or intermediaries mistakingly miss Content-<iden> header;mistakingly miss Content-<iden> header;Similar;0.6387310028076172
Use HTTPS links in documentation where possible  ;where possible;rename <iden> ->  <file_name>  ;to harvest the names for new annotations;Similar;0.5546398162841797
Use HTTPS links in documentation where possible  ;where possible;Add fixed query parameter support;support;Similar;0.6554427146911621
Use HTTPS links in documentation where possible  ;where possible;Add <file_name>, <file_name> support to <file_name>  ;-;Similar;0.6782969236373901
Use HTTPS links in documentation where possible  ;where possible;Allow <file_name> extensions;improved <file_name>;Similar;0.701637327671051
Use HTTPS links in documentation where possible  ;where possible;Ensure <file_name> and <file_name> use FileDescriptor.sync();Ensure <file_name> and <file_name> use FileDescriptor.sync();Similar;0.6691000461578369
Use HTTPS links in documentation where possible  ;where possible;moved util to <file_name>, added <file_name>  ;Organize and enhance code files;Similar;0.6086581945419312
Use HTTPS links in documentation where possible  ;where possible;Use <iden> <version>s JsonAdapter.serializeNulls();serializeNulls;Similar;0.6150379180908203
Use HTTPS links in documentation where possible  ;where possible;Expose <iden> via the <file_name> injection-like framework;injection-like framework;Similar;0.7117632627487183
Use HTTPS links in documentation where possible  ;where possible;Changing `<file_name>` to implement `<file_name>` interface;interface;Similar;0.6173533201217651
Use HTTPS links in documentation where possible  ;where possible;Fix support for protobuf <version>+;ExtensionRegistry cannot be null;Similar;0.5699167251586914
Use HTTPS links in documentation where possible  ;where possible;Fix typo;typo;Similar;0.5026793479919434
Combine <file_name> and <iden> into <method_name> <enter>  ;This is one class that handles all of the annotations and binding for a service method;Rename <method_name> to onSuccess(), and failure() to <iden>();to onSuccess(), and failure(), <iden>;Similar;0.7734286785125732
Combine <file_name> and <iden> into <method_name> <enter>  ;This is one class that handles all of the annotations and binding for a service method;Refer to the latest OkHttp version;latest;Similar;0.6298078298568726
Combine <file_name> and <iden> into <method_name> <enter>  ;This is one class that handles all of the annotations and binding for a service method;Add JSR 305 nullability annotations;nullability annotations;Similar;0.5680974721908569
Combine <file_name> and <iden> into <method_name> <enter>  ;This is one class that handles all of the annotations and binding for a service method;Update <file_name> to the latest version;the latest version;Similar;0.6457201838493347
Combine <file_name> and <iden> into <method_name> <enter>  ;This is one class that handles all of the annotations and binding for a service method;Remove unused interface  ;unused;Similar;0.5078275203704834
Combine <file_name> and <iden> into <method_name> <enter>  ;This is one class that handles all of the annotations and binding for a service method;Remove duplicated test  ;It is the same as in this file;Similar;0.5965150594711304
Combine <file_name> and <iden> into <method_name> <enter>  ;This is one class that handles all of the annotations and binding for a service method;call it a <version>;Actually;Similar;0.7335389852523804
Combine <file_name> and <iden> into <method_name> <enter>  ;This is one class that handles all of the annotations and binding for a service method;Add missing import  ;missing;Similar;0.5348167419433594
Combine <file_name> and <iden> into <method_name> <enter>  ;This is one class that handles all of the annotations and binding for a service method;Remove the need for generated accessor methods  ;need for generated accessor methods;Similar;0.5468795299530029
Combine <file_name> and <iden> into <method_name> <enter>  ;This is one class that handles all of the annotations and binding for a service method;Propagate callback executor even when not explicitly specified  ;This lets custom <iden> implementations use the <file_name> default for their callbacks;Similar;0.5290429592132568
Combine <file_name> and <iden> into <method_name> <enter>  ;This is one class that handles all of the annotations and binding for a service method;Add example of using <iden> <file_name> as a <iden> <method_name>  ;This also adds the <file_name> instance as a param to the string <file_name> to allow it to delegate to others directly. This brings it into parity with the method signatures of the other <file_name> methods anyway.;Similar;0.9429036378860474
Combine <file_name> and <iden> into <method_name> <enter>  ;This is one class that handles all of the annotations and binding for a service method;Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;Similar;0.7054949998855591
Combine <file_name> and <iden> into <method_name> <enter>  ;This is one class that handles all of the annotations and binding for a service method;Naming, API changes, and documentation around mock services.  ;mock services;Similar;0.6622262597084045
Combine <file_name> and <iden> into <method_name> <enter>  ;This is one class that handles all of the annotations and binding for a service method;Introduce factory for <file_name> concept;This is still highly-inefficient in its internal use and there are no tests proving that we now fail earlier in configuring a service method;Similar;0.7332934141159058
Combine <file_name> and <iden> into <method_name> <enter>  ;This is one class that handles all of the annotations and binding for a service method;Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;Similar;0.7282582521438599
Combine <file_name> and <iden> into <method_name> <enter>  ;This is one class that handles all of the annotations and binding for a service method;Remove unused classes from <otherCommit_link>;unused;Similar;0.589479923248291
Combine <file_name> and <iden> into <method_name> <enter>  ;This is one class that handles all of the annotations and binding for a service method;Update to OkHttp <version>. Fix a tiny potential NPE;potential NPE;Similar;0.5314232110977173
Combine <file_name> and <iden> into <method_name> <enter>  ;This is one class that handles all of the annotations and binding for a service method;Fix annotation link;<iden> is gone;Similar;0.7006022334098816
Combine <file_name> and <iden> into <method_name> <enter>  ;This is one class that handles all of the annotations and binding for a service method;Use the annotations directly for parameter handling.;Before we attempted to normalize the parameter annotations into a name and type model. The introduction of multi-part transfer encodings required something more expressive so the annotation instances themselves were used. This change removes the name and type in favor of using the annotation for everything.;Similar;0.7606495022773743
Combine <file_name> and <iden> into <method_name> <enter>  ;This is one class that handles all of the annotations and binding for a service method;Expose success type on <method_name>;Theres a bit of a test gap going on for all the variants of successful and erroneous handling of sync, async, and rx. This new behavior is fully tested in all three but more general behavior testing for them will be needed in a follow-up.;Similar;0.8291360139846802
Combine <file_name> and <iden> into <method_name> <enter>  ;This is one class that handles all of the annotations and binding for a service method;Correct map parameter type detection for query and field  ;-;Similar;0.5307307243347168
Combine <file_name> and <iden> into <method_name> <enter>  ;This is one class that handles all of the annotations and binding for a service method;Update <file_name> to latest. Add default constructor.;latest, Add default constructor;Similar;0.7692053318023682
Combine <file_name> and <iden> into <method_name> <enter>  ;This is one class that handles all of the annotations and binding for a service method;Add simple package info to root package  ;simple;Similar;0.5530601739883423
Combine <file_name> and <iden> into <method_name> <enter>  ;This is one class that handles all of the annotations and binding for a service method;Correct header length checking logic. Improve exception message;Improve;Similar;0.5703232288360596
Combine <file_name> and <iden> into <method_name> <enter>  ;This is one class that handles all of the annotations and binding for a service method;Promote <iden> logging to a class which knows about chunking  ;This is an <iden>-specific implementation detail which is now only performed when needed;Similar;0.5798064470291138
Combine <file_name> and <iden> into <method_name> <enter>  ;This is one class that handles all of the annotations and binding for a service method;Fix IntelliJ auto-formatting  ;Improve the formatting;Similar;0.6783716678619385
Combine <file_name> and <iden> into <method_name> <enter>  ;This is one class that handles all of the annotations and binding for a service method;Add path and query tests for pre-encoded values;-;Similar;0.7841293811798096
Combine <file_name> and <iden> into <method_name> <enter>  ;This is one class that handles all of the annotations and binding for a service method;Add converters module and protobuf converter;to the sentence;Similar;0.7455148696899414
Combine <file_name> and <iden> into <method_name> <enter>  ;This is one class that handles all of the annotations and binding for a service method;Newline at end of file  ;Yes plz;Similar;0.6258429884910583
Combine <file_name> and <iden> into <method_name> <enter>  ;This is one class that handles all of the annotations and binding for a service method;Log network and unexpected exceptions if logging is enabled  ;if logging is enabled;Similar;0.5948542952537537
Combine <file_name> and <iden> into <method_name> <enter>  ;This is one class that handles all of the annotations and binding for a service method;Fix styling of <iden> download;styling;Similar;0.6791634559631348
Combine <file_name> and <iden> into <method_name> <enter>  ;This is one class that handles all of the annotations and binding for a service method;Rename pair to field to match annotation;match annotation;Similar;0.5568304657936096
Combine <file_name> and <iden> into <method_name> <enter>  ;This is one class that handles all of the annotations and binding for a service method;" 
- Add <iden> <method_name>  
- Also update our sample to use <iden> contributors rather than the <iden>  
- Bump some dependencies to their latest versions  
";" 
- Use this on <iden> <version> and prior and when on the <iden>  
- because the latter is shutting down and subject to lame rate limiting when on common networks";Similar;0.58153235912323
Combine <file_name> and <iden> into <method_name> <enter>  ;This is one class that handles all of the annotations and binding for a service method;Provide a mutable <file_name> implementation. <iden> to conform.;to conform;Similar;0.841789186000824
Combine <file_name> and <iden> into <method_name> <enter>  ;This is one class that handles all of the annotations and binding for a service method;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Similar;0.6618230938911438
Combine <file_name> and <iden> into <method_name> <enter>  ;This is one class that handles all of the annotations and binding for a service method;Simplify test method fetching;-;Similar;0.5747807621955872
Combine <file_name> and <iden> into <method_name> <enter>  ;This is one class that handles all of the annotations and binding for a service method;Allow <file_name> instantiation  ;Hide some Apache implementation details;Similar;0.8337457776069641
Combine <file_name> and <iden> into <method_name> <enter>  ;This is one class that handles all of the annotations and binding for a service method;Hide more implementation details;more implementation details;Similar;0.5513780117034912
Combine <file_name> and <iden> into <method_name> <enter>  ;This is one class that handles all of the annotations and binding for a service method;Remove unused <file_name> classes;unused;Similar;0.6073958873748779
Combine <file_name> and <iden> into <method_name> <enter>  ;This is one class that handles all of the annotations and binding for a service method;Introduce builder pattern to instantiate <method_name>;profiler are now optional. Convenience methods for specifying a <iden> or an <iden> directly are also provided.;Similar;0.792646050453186
Combine <file_name> and <iden> into <method_name> <enter>  ;This is one class that handles all of the annotations and binding for a service method;Use no_aop Guice variant  ;no_aop;Similar;0.587283194065094
Combine <file_name> and <iden> into <method_name> <enter>  ;This is one class that handles all of the annotations and binding for a service method;Adding a human-readable name to the  <file_name>  interface;human-readable;Similar;0.7751972675323486
Combine <file_name> and <iden> into <method_name> <enter>  ;This is one class that handles all of the annotations and binding for a service method;Added getTag() and logChunk() methods;for easier subclassing;Similar;0.7980716228485107
Combine <file_name> and <iden> into <method_name> <enter>  ;This is one class that handles all of the annotations and binding for a service method;Reintroduced deprecated <file_name> constructor;deprecated;Similar;0.694975733757019
Combine <file_name> and <iden> into <method_name> <enter>  ;This is one class that handles all of the annotations and binding for a service method;Update custom conversion docs per feedback;Clarify that <iden> is just the default converter, Add section on other built-in converters, Add section on implementing your own custom converters;Similar;0.67164146900177
Combine <file_name> and <iden> into <method_name> <enter>  ;This is one class that handles all of the annotations and binding for a service method;Fix style nits per review;per review;Similar;0.5691316723823547
Combine <file_name> and <iden> into <method_name> <enter>  ;This is one class that handles all of the annotations and binding for a service method;fix issue <issue_link> : permit use when servers or intermediaries mistakingly miss Content-<iden> header;mistakingly miss Content-<iden> header;Similar;0.5589890480041504
Combine <file_name> and <iden> into <method_name> <enter>  ;This is one class that handles all of the annotations and binding for a service method;rename <iden> ->  <file_name>  ;to harvest the names for new annotations;Similar;0.8913522362709045
Combine <file_name> and <iden> into <method_name> <enter>  ;This is one class that handles all of the annotations and binding for a service method;Move variable to where it is used;where it is used;Similar;0.6835031509399414
Combine <file_name> and <iden> into <method_name> <enter>  ;This is one class that handles all of the annotations and binding for a service method;Fix spelling;spelling;Similar;0.5656225681304932
Combine <file_name> and <iden> into <method_name> <enter>  ;This is one class that handles all of the annotations and binding for a service method;Add fixed query parameter support;support;Similar;0.7648056745529175
Combine <file_name> and <iden> into <method_name> <enter>  ;This is one class that handles all of the annotations and binding for a service method;Add <file_name>, <file_name> support to <file_name>  ;-;Similar;0.8734908103942871
Combine <file_name> and <iden> into <method_name> <enter>  ;This is one class that handles all of the annotations and binding for a service method;Allow <file_name> extensions;improved <file_name>;Similar;0.8564161062240601
Combine <file_name> and <iden> into <method_name> <enter>  ;This is one class that handles all of the annotations and binding for a service method;Repackage gson into retrofit.internal.gson  ;enhance integration;Similar;0.7518525123596191
Combine <file_name> and <iden> into <method_name> <enter>  ;This is one class that handles all of the annotations and binding for a service method;Ensure <file_name> and <file_name> use FileDescriptor.sync();Ensure <file_name> and <file_name> use FileDescriptor.sync();Similar;0.833451509475708
Combine <file_name> and <iden> into <method_name> <enter>  ;This is one class that handles all of the annotations and binding for a service method;moved util to <file_name>, added <file_name>  ;Organize and enhance code files;Similar;0.9039793014526367
Combine <file_name> and <iden> into <method_name> <enter>  ;This is one class that handles all of the annotations and binding for a service method;Use <iden> <version>s JsonAdapter.serializeNulls();serializeNulls;Similar;0.8293322324752808
Combine <file_name> and <iden> into <method_name> <enter>  ;This is one class that handles all of the annotations and binding for a service method;Removal of Unnecessary Creation of <iden>;if <iden> has length 0 there is no point to create stringBuilder for that. that condition check needs to happen before stringBuilder creation.;Similar;0.5497763156890869
Combine <file_name> and <iden> into <method_name> <enter>  ;This is one class that handles all of the annotations and binding for a service method;Expose <iden> via the <file_name> injection-like framework;injection-like framework;Similar;0.8831297159194946
Combine <file_name> and <iden> into <method_name> <enter>  ;This is one class that handles all of the annotations and binding for a service method;Changing `<file_name>` to implement `<file_name>` interface;interface;Similar;0.8456987738609314
Combine <file_name> and <iden> into <method_name> <enter>  ;This is one class that handles all of the annotations and binding for a service method;Fix support for protobuf <version>+;ExtensionRegistry cannot be null;Similar;0.7532092332839966
Combine <file_name> and <iden> into <method_name> <enter>  ;This is one class that handles all of the annotations and binding for a service method;Fix typo;typo;Similar;0.6497238874435425
Combine <file_name> and <iden> into <method_name> <enter>  ;This is one class that handles all of the annotations and binding for a service method;Remove redundant throws  ;redundant;Similar;0.5126824975013733
Rename <method_name> to onSuccess(), and failure() to <iden>();to onSuccess(), and failure(), <iden>;Refer to the latest OkHttp version;latest;Similar;0.5618982315063477
Rename <method_name> to onSuccess(), and failure() to <iden>();to onSuccess(), and failure(), <iden>;Add JSR 305 nullability annotations;nullability annotations;Similar;0.6647372841835022
Rename <method_name> to onSuccess(), and failure() to <iden>();to onSuccess(), and failure(), <iden>;Update <file_name> to the latest version;the latest version;Similar;0.5668197274208069
Rename <method_name> to onSuccess(), and failure() to <iden>();to onSuccess(), and failure(), <iden>;Remove unused interface  ;unused;Similar;0.6975023746490479
Rename <method_name> to onSuccess(), and failure() to <iden>();to onSuccess(), and failure(), <iden>;Simplify observable creation and reduce runtime allocations;Simplify, reduce;Similar;0.6223504543304443
Rename <method_name> to onSuccess(), and failure() to <iden>();to onSuccess(), and failure(), <iden>;Refactor <iden> tests to avoid the use of blocking operators  ;avoid the use of blocking operators;Similar;0.5008490681648254
Rename <method_name> to onSuccess(), and failure() to <iden>();to onSuccess(), and failure(), <iden>;Remove duplicated test  ;It is the same as in this file;Similar;0.7665954828262329
Rename <method_name> to onSuccess(), and failure() to <iden>();to onSuccess(), and failure(), <iden>;call it a <version>;Actually;Similar;0.659172773361206
Rename <method_name> to onSuccess(), and failure() to <iden>();to onSuccess(), and failure(), <iden>;Add missing import  ;missing;Similar;0.7273291349411011
Rename <method_name> to onSuccess(), and failure() to <iden>();to onSuccess(), and failure(), <iden>;Remove the need for generated accessor methods  ;need for generated accessor methods;Similar;0.6795896887779236
Rename <method_name> to onSuccess(), and failure() to <iden>();to onSuccess(), and failure(), <iden>;Add example of using <iden> <file_name> as a <iden> <method_name>  ;This also adds the <file_name> instance as a param to the string <file_name> to allow it to delegate to others directly. This brings it into parity with the method signatures of the other <file_name> methods anyway.;Similar;0.7228686809539795
Rename <method_name> to onSuccess(), and failure() to <iden>();to onSuccess(), and failure(), <iden>;Use new <iden>s non-throwing close and a simpler body copy;non-throwing close and a simpler body			      ;Similar;0.5395916104316711
Rename <method_name> to onSuccess(), and failure() to <iden>();to onSuccess(), and failure(), <iden>;Remove incorrect generic parameter  ;incorrect;Similar;0.7423969507217407
Rename <method_name> to onSuccess(), and failure() to <iden>();to onSuccess(), and failure(), <iden>;Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;Similar;0.6945836544036865
Rename <method_name> to onSuccess(), and failure() to <iden>();to onSuccess(), and failure(), <iden>;Naming, API changes, and documentation around mock services.  ;mock services;Similar;0.6080040335655212
Rename <method_name> to onSuccess(), and failure() to <iden>();to onSuccess(), and failure(), <iden>;Introduce factory for <file_name> concept;This is still highly-inefficient in its internal use and there are no tests proving that we now fail earlier in configuring a service method;Similar;0.6275596618652344
Rename <method_name> to onSuccess(), and failure() to <iden>();to onSuccess(), and failure(), <iden>;Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;Similar;0.7716790437698364
Rename <method_name> to onSuccess(), and failure() to <iden>();to onSuccess(), and failure(), <iden>;Remove unused classes from <otherCommit_link>;unused;Similar;0.7419048547744751
Rename <method_name> to onSuccess(), and failure() to <iden>();to onSuccess(), and failure(), <iden>;Update to OkHttp <version>. Fix a tiny potential NPE;potential NPE;Similar;0.5967137813568115
Rename <method_name> to onSuccess(), and failure() to <iden>();to onSuccess(), and failure(), <iden>;Fix annotation link;<iden> is gone;Similar;0.6815437078475952
Rename <method_name> to onSuccess(), and failure() to <iden>();to onSuccess(), and failure(), <iden>;Use the annotations directly for parameter handling.;Before we attempted to normalize the parameter annotations into a name and type model. The introduction of multi-part transfer encodings required something more expressive so the annotation instances themselves were used. This change removes the name and type in favor of using the annotation for everything.;Similar;0.5838766098022461
Rename <method_name> to onSuccess(), and failure() to <iden>();to onSuccess(), and failure(), <iden>;Expose success type on <method_name>;Theres a bit of a test gap going on for all the variants of successful and erroneous handling of sync, async, and rx. This new behavior is fully tested in all three but more general behavior testing for them will be needed in a follow-up.;Similar;0.675024151802063
Rename <method_name> to onSuccess(), and failure() to <iden>();to onSuccess(), and failure(), <iden>;Update <file_name> to latest. Add default constructor.;latest, Add default constructor;Similar;0.6696617603302002
Rename <method_name> to onSuccess(), and failure() to <iden>();to onSuccess(), and failure(), <iden>;Fix IntelliJ auto-formatting  ;Improve the formatting;Similar;0.6766670346260071
Rename <method_name> to onSuccess(), and failure() to <iden>();to onSuccess(), and failure(), <iden>;Add path and query tests for pre-encoded values;-;Similar;0.6246927976608276
Rename <method_name> to onSuccess(), and failure() to <iden>();to onSuccess(), and failure(), <iden>;Add converters module and protobuf converter;to the sentence;Similar;0.6409858465194702
Rename <method_name> to onSuccess(), and failure() to <iden>();to onSuccess(), and failure(), <iden>;Newline at end of file  ;Yes plz;Similar;0.5734027028083801
Rename <method_name> to onSuccess(), and failure() to <iden>();to onSuccess(), and failure(), <iden>;Fix styling of <iden> download;styling;Similar;0.6830928325653076
Rename <method_name> to onSuccess(), and failure() to <iden>();to onSuccess(), and failure(), <iden>;Rename pair to field to match annotation;match annotation;Similar;0.5826518535614014
Rename <method_name> to onSuccess(), and failure() to <iden>();to onSuccess(), and failure(), <iden>;" 
- Add <iden> <method_name>  
- Also update our sample to use <iden> contributors rather than the <iden>  
- Bump some dependencies to their latest versions  
";" 
- Use this on <iden> <version> and prior and when on the <iden>  
- because the latter is shutting down and subject to lame rate limiting when on common networks";Similar;0.5372565984725952
Rename <method_name> to onSuccess(), and failure() to <iden>();to onSuccess(), and failure(), <iden>;Provide a mutable <file_name> implementation. <iden> to conform.;to conform;Similar;0.6450105905532837
Rename <method_name> to onSuccess(), and failure() to <iden>();to onSuccess(), and failure(), <iden>;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Similar;0.6660723686218262
Rename <method_name> to onSuccess(), and failure() to <iden>();to onSuccess(), and failure(), <iden>;Allow <file_name> instantiation  ;Hide some Apache implementation details;Similar;0.6708238124847412
Rename <method_name> to onSuccess(), and failure() to <iden>();to onSuccess(), and failure(), <iden>;Hide more implementation details;more implementation details;Similar;0.5901321172714233
Rename <method_name> to onSuccess(), and failure() to <iden>();to onSuccess(), and failure(), <iden>;Remove unused <file_name> classes;unused;Similar;0.7477458715438843
Rename <method_name> to onSuccess(), and failure() to <iden>();to onSuccess(), and failure(), <iden>;Introduce builder pattern to instantiate <method_name>;profiler are now optional. Convenience methods for specifying a <iden> or an <iden> directly are also provided.;Similar;0.6670131683349609
Rename <method_name> to onSuccess(), and failure() to <iden>();to onSuccess(), and failure(), <iden>;Use no_aop Guice variant  ;no_aop;Similar;0.7111949324607849
Rename <method_name> to onSuccess(), and failure() to <iden>();to onSuccess(), and failure(), <iden>;Adding a human-readable name to the  <file_name>  interface;human-readable;Similar;0.5629228949546814
Rename <method_name> to onSuccess(), and failure() to <iden>();to onSuccess(), and failure(), <iden>;Added getTag() and logChunk() methods;for easier subclassing;Similar;0.6861046552658081
Rename <method_name> to onSuccess(), and failure() to <iden>();to onSuccess(), and failure(), <iden>;Reintroduced deprecated <file_name> constructor;deprecated;Similar;0.8241708874702454
Rename <method_name> to onSuccess(), and failure() to <iden>();to onSuccess(), and failure(), <iden>;Update custom conversion docs per feedback;Clarify that <iden> is just the default converter, Add section on other built-in converters, Add section on implementing your own custom converters;Similar;0.5833988189697266
Rename <method_name> to onSuccess(), and failure() to <iden>();to onSuccess(), and failure(), <iden>;Fix style nits per review;per review;Similar;0.5937086939811707
Rename <method_name> to onSuccess(), and failure() to <iden>();to onSuccess(), and failure(), <iden>;fix issue <issue_link> : permit use when servers or intermediaries mistakingly miss Content-<iden> header;mistakingly miss Content-<iden> header;Similar;0.6293300986289978
Rename <method_name> to onSuccess(), and failure() to <iden>();to onSuccess(), and failure(), <iden>;rename <iden> ->  <file_name>  ;to harvest the names for new annotations;Similar;0.8473066091537476
Rename <method_name> to onSuccess(), and failure() to <iden>();to onSuccess(), and failure(), <iden>;Move variable to where it is used;where it is used;Similar;0.6740167140960693
Rename <method_name> to onSuccess(), and failure() to <iden>();to onSuccess(), and failure(), <iden>;Fix spelling;spelling;Similar;0.6602646112442017
Rename <method_name> to onSuccess(), and failure() to <iden>();to onSuccess(), and failure(), <iden>;Add fixed query parameter support;support;Similar;0.6685402393341064
Rename <method_name> to onSuccess(), and failure() to <iden>();to onSuccess(), and failure(), <iden>;Add <file_name>, <file_name> support to <file_name>  ;-;Similar;0.6221199631690979
Rename <method_name> to onSuccess(), and failure() to <iden>();to onSuccess(), and failure(), <iden>;Allow <file_name> extensions;improved <file_name>;Similar;0.6742483377456665
Rename <method_name> to onSuccess(), and failure() to <iden>();to onSuccess(), and failure(), <iden>;Repackage gson into retrofit.internal.gson  ;enhance integration;Similar;0.7391213178634644
Rename <method_name> to onSuccess(), and failure() to <iden>();to onSuccess(), and failure(), <iden>;Ensure <file_name> and <file_name> use FileDescriptor.sync();Ensure <file_name> and <file_name> use FileDescriptor.sync();Similar;0.6135052442550659
Rename <method_name> to onSuccess(), and failure() to <iden>();to onSuccess(), and failure(), <iden>;moved util to <file_name>, added <file_name>  ;Organize and enhance code files;Similar;0.7519987225532532
Rename <method_name> to onSuccess(), and failure() to <iden>();to onSuccess(), and failure(), <iden>;Use <iden> <version>s JsonAdapter.serializeNulls();serializeNulls;Similar;0.7258604764938354
Rename <method_name> to onSuccess(), and failure() to <iden>();to onSuccess(), and failure(), <iden>;Removal of Unnecessary Creation of <iden>;if <iden> has length 0 there is no point to create stringBuilder for that. that condition check needs to happen before stringBuilder creation.;Similar;0.7310492396354675
Rename <method_name> to onSuccess(), and failure() to <iden>();to onSuccess(), and failure(), <iden>;Expose <iden> via the <file_name> injection-like framework;injection-like framework;Similar;0.6817718148231506
Rename <method_name> to onSuccess(), and failure() to <iden>();to onSuccess(), and failure(), <iden>;Changing `<file_name>` to implement `<file_name>` interface;interface;Similar;0.745282769203186
Rename <method_name> to onSuccess(), and failure() to <iden>();to onSuccess(), and failure(), <iden>;Fix support for protobuf <version>+;ExtensionRegistry cannot be null;Similar;0.7023305892944336
Rename <method_name> to onSuccess(), and failure() to <iden>();to onSuccess(), and failure(), <iden>;Fix typo;typo;Similar;0.6668548583984375
Rename <method_name> to onSuccess(), and failure() to <iden>();to onSuccess(), and failure(), <iden>;Remove redundant throws  ;redundant;Similar;0.7197831869125366
Refer to the latest OkHttp version;latest;Add JSR 305 nullability annotations;nullability annotations;Similar;0.5100336074829102
Refer to the latest OkHttp version;latest;Update <file_name> to the latest version;the latest version;Similar;0.8793382048606873
Refer to the latest OkHttp version;latest;Remove duplicated test  ;It is the same as in this file;Similar;0.5320682525634766
Refer to the latest OkHttp version;latest;call it a <version>;Actually;Similar;0.7062101364135742
Refer to the latest OkHttp version;latest;Propagate callback executor even when not explicitly specified  ;This lets custom <iden> implementations use the <file_name> default for their callbacks;Similar;0.5474036931991577
Refer to the latest OkHttp version;latest;Add example of using <iden> <file_name> as a <iden> <method_name>  ;This also adds the <file_name> instance as a param to the string <file_name> to allow it to delegate to others directly. This brings it into parity with the method signatures of the other <file_name> methods anyway.;Similar;0.5974838733673096
Refer to the latest OkHttp version;latest;Use new <iden>s non-throwing close and a simpler body copy;non-throwing close and a simpler body			      ;Similar;0.5231733322143555
Refer to the latest OkHttp version;latest;Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;Similar;0.5493901371955872
Refer to the latest OkHttp version;latest;Introduce factory for <file_name> concept;This is still highly-inefficient in its internal use and there are no tests proving that we now fail earlier in configuring a service method;Similar;0.5849590301513672
Refer to the latest OkHttp version;latest;Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;Similar;0.5509709119796753
Refer to the latest OkHttp version;latest;Update to OkHttp <version>. Fix a tiny potential NPE;potential NPE;Similar;0.5998833179473877
Refer to the latest OkHttp version;latest;Fix annotation link;<iden> is gone;Similar;0.6065081357955933
Refer to the latest OkHttp version;latest;Use the annotations directly for parameter handling.;Before we attempted to normalize the parameter annotations into a name and type model. The introduction of multi-part transfer encodings required something more expressive so the annotation instances themselves were used. This change removes the name and type in favor of using the annotation for everything.;Similar;0.5113147497177124
Refer to the latest OkHttp version;latest;Expose success type on <method_name>;Theres a bit of a test gap going on for all the variants of successful and erroneous handling of sync, async, and rx. This new behavior is fully tested in all three but more general behavior testing for them will be needed in a follow-up.;Similar;0.6073051691055298
Refer to the latest OkHttp version;latest;Update <file_name> to latest. Add default constructor.;latest, Add default constructor;Similar;0.7883518934249878
Refer to the latest OkHttp version;latest;Fix IntelliJ auto-formatting  ;Improve the formatting;Similar;0.5777180194854736
Refer to the latest OkHttp version;latest;Add path and query tests for pre-encoded values;-;Similar;0.6450179219245911
Refer to the latest OkHttp version;latest;Add converters module and protobuf converter;to the sentence;Similar;0.6727341413497925
Refer to the latest OkHttp version;latest;Newline at end of file  ;Yes plz;Similar;0.7776670455932617
Refer to the latest OkHttp version;latest;Fix styling of <iden> download;styling;Similar;0.5350911617279053
Refer to the latest OkHttp version;latest;" 
- Add <iden> <method_name>  
- Also update our sample to use <iden> contributors rather than the <iden>  
- Bump some dependencies to their latest versions  
";" 
- Use this on <iden> <version> and prior and when on the <iden>  
- because the latter is shutting down and subject to lame rate limiting when on common networks";Similar;0.5156132578849792
Refer to the latest OkHttp version;latest;Provide a mutable <file_name> implementation. <iden> to conform.;to conform;Similar;0.6514836549758911
Refer to the latest OkHttp version;latest;Simplify test method fetching;-;Similar;0.531022846698761
Refer to the latest OkHttp version;latest;Allow <file_name> instantiation  ;Hide some Apache implementation details;Similar;0.6121179461479187
Refer to the latest OkHttp version;latest;Hide more implementation details;more implementation details;Similar;0.5444419980049133
Refer to the latest OkHttp version;latest;Introduce builder pattern to instantiate <method_name>;profiler are now optional. Convenience methods for specifying a <iden> or an <iden> directly are also provided.;Similar;0.5917134284973145
Refer to the latest OkHttp version;latest;Use no_aop Guice variant  ;no_aop;Similar;0.5065689086914062
Refer to the latest OkHttp version;latest;Adding a human-readable name to the  <file_name>  interface;human-readable;Similar;0.5029298663139343
Refer to the latest OkHttp version;latest;Added getTag() and logChunk() methods;for easier subclassing;Similar;0.5823887586593628
Refer to the latest OkHttp version;latest;Reintroduced deprecated <file_name> constructor;deprecated;Similar;0.5454227328300476
Refer to the latest OkHttp version;latest;Update custom conversion docs per feedback;Clarify that <iden> is just the default converter, Add section on other built-in converters, Add section on implementing your own custom converters;Similar;0.5902896523475647
Refer to the latest OkHttp version;latest;Fix style nits per review;per review;Similar;0.5687043070793152
Refer to the latest OkHttp version;latest;rename <iden> ->  <file_name>  ;to harvest the names for new annotations;Similar;0.6205159425735474
Refer to the latest OkHttp version;latest;Move variable to where it is used;where it is used;Similar;0.5692696571350098
Refer to the latest OkHttp version;latest;Fix spelling;spelling;Similar;0.5317395329475403
Refer to the latest OkHttp version;latest;Add fixed query parameter support;support;Similar;0.5729967355728149
Refer to the latest OkHttp version;latest;Add <file_name>, <file_name> support to <file_name>  ;-;Similar;0.6136811971664429
Refer to the latest OkHttp version;latest;Allow <file_name> extensions;improved <file_name>;Similar;0.5881076455116272
Refer to the latest OkHttp version;latest;Repackage gson into retrofit.internal.gson  ;enhance integration;Similar;0.6577164530754089
Refer to the latest OkHttp version;latest;Ensure <file_name> and <file_name> use FileDescriptor.sync();Ensure <file_name> and <file_name> use FileDescriptor.sync();Similar;0.5882296562194824
Refer to the latest OkHttp version;latest;moved util to <file_name>, added <file_name>  ;Organize and enhance code files;Similar;0.6918177008628845
Refer to the latest OkHttp version;latest;Use <iden> <version>s JsonAdapter.serializeNulls();serializeNulls;Similar;0.6435636281967163
Refer to the latest OkHttp version;latest;Expose <iden> via the <file_name> injection-like framework;injection-like framework;Similar;0.5560586452484131
Refer to the latest OkHttp version;latest;Changing `<file_name>` to implement `<file_name>` interface;interface;Similar;0.5908185243606567
Refer to the latest OkHttp version;latest;Fix support for protobuf <version>+;ExtensionRegistry cannot be null;Similar;0.6843861937522888
Refer to the latest OkHttp version;latest;Fix typo;typo;Similar;0.6057306528091431
Add JSR 305 nullability annotations;nullability annotations;Remove unused interface  ;unused;Similar;0.6028189659118652
Add JSR 305 nullability annotations;nullability annotations;Simplify observable creation and reduce runtime allocations;Simplify, reduce;Similar;0.5250808596611023
Add JSR 305 nullability annotations;nullability annotations;Remove duplicated test  ;It is the same as in this file;Similar;0.6676775217056274
Add JSR 305 nullability annotations;nullability annotations;call it a <version>;Actually;Similar;0.5658335089683533
Add JSR 305 nullability annotations;nullability annotations;Add missing import  ;missing;Similar;0.6224873065948486
Add JSR 305 nullability annotations;nullability annotations;Remove the need for generated accessor methods  ;need for generated accessor methods;Similar;0.5504424571990967
Add JSR 305 nullability annotations;nullability annotations;Add example of using <iden> <file_name> as a <iden> <method_name>  ;This also adds the <file_name> instance as a param to the string <file_name> to allow it to delegate to others directly. This brings it into parity with the method signatures of the other <file_name> methods anyway.;Similar;0.5285494327545166
Add JSR 305 nullability annotations;nullability annotations;Remove incorrect generic parameter  ;incorrect;Similar;0.602797269821167
Add JSR 305 nullability annotations;nullability annotations;Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;Similar;0.502251386642456
Add JSR 305 nullability annotations;nullability annotations;Naming, API changes, and documentation around mock services.  ;mock services;Similar;0.5286211967468262
Add JSR 305 nullability annotations;nullability annotations;Introduce factory for <file_name> concept;This is still highly-inefficient in its internal use and there are no tests proving that we now fail earlier in configuring a service method;Similar;0.5082841515541077
Add JSR 305 nullability annotations;nullability annotations;Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;Similar;0.599257230758667
Add JSR 305 nullability annotations;nullability annotations;Remove unused classes from <otherCommit_link>;unused;Similar;0.6363285779953003
Add JSR 305 nullability annotations;nullability annotations;Update to OkHttp <version>. Fix a tiny potential NPE;potential NPE;Similar;0.5990316867828369
Add JSR 305 nullability annotations;nullability annotations;Fix annotation link;<iden> is gone;Similar;0.5777075290679932
Add JSR 305 nullability annotations;nullability annotations;Expose success type on <method_name>;Theres a bit of a test gap going on for all the variants of successful and erroneous handling of sync, async, and rx. This new behavior is fully tested in all three but more general behavior testing for them will be needed in a follow-up.;Similar;0.5326775312423706
Add JSR 305 nullability annotations;nullability annotations;Update <file_name> to latest. Add default constructor.;latest, Add default constructor;Similar;0.5165808200836182
Add JSR 305 nullability annotations;nullability annotations;Fix IntelliJ auto-formatting  ;Improve the formatting;Similar;0.6041038036346436
Add JSR 305 nullability annotations;nullability annotations;Add path and query tests for pre-encoded values;-;Similar;0.5042639374732971
Add JSR 305 nullability annotations;nullability annotations;Add converters module and protobuf converter;to the sentence;Similar;0.5211988687515259
Add JSR 305 nullability annotations;nullability annotations;Newline at end of file  ;Yes plz;Similar;0.5418897271156311
Add JSR 305 nullability annotations;nullability annotations;Fix styling of <iden> download;styling;Similar;0.5371890068054199
Add JSR 305 nullability annotations;nullability annotations;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Similar;0.5956122875213623
Add JSR 305 nullability annotations;nullability annotations;Allow <file_name> instantiation  ;Hide some Apache implementation details;Similar;0.5645716190338135
Add JSR 305 nullability annotations;nullability annotations;Remove unused <file_name> classes;unused;Similar;0.6539782881736755
Add JSR 305 nullability annotations;nullability annotations;Introduce builder pattern to instantiate <method_name>;profiler are now optional. Convenience methods for specifying a <iden> or an <iden> directly are also provided.;Similar;0.5060676336288452
Add JSR 305 nullability annotations;nullability annotations;Use no_aop Guice variant  ;no_aop;Similar;0.6236230134963989
Add JSR 305 nullability annotations;nullability annotations;Reintroduced deprecated <file_name> constructor;deprecated;Similar;0.6661522388458252
Add JSR 305 nullability annotations;nullability annotations;Fix style nits per review;per review;Similar;0.5336701273918152
Add JSR 305 nullability annotations;nullability annotations;rename <iden> ->  <file_name>  ;to harvest the names for new annotations;Similar;0.6029563546180725
Add JSR 305 nullability annotations;nullability annotations;Move variable to where it is used;where it is used;Similar;0.5243399739265442
Add JSR 305 nullability annotations;nullability annotations;Fix spelling;spelling;Similar;0.5684236288070679
Add JSR 305 nullability annotations;nullability annotations;Add fixed query parameter support;support;Similar;0.5233597159385681
Add JSR 305 nullability annotations;nullability annotations;Allow <file_name> extensions;improved <file_name>;Similar;0.545071005821228
Add JSR 305 nullability annotations;nullability annotations;Repackage gson into retrofit.internal.gson  ;enhance integration;Similar;0.5865493416786194
Add JSR 305 nullability annotations;nullability annotations;Ensure <file_name> and <file_name> use FileDescriptor.sync();Ensure <file_name> and <file_name> use FileDescriptor.sync();Similar;0.571867823600769
Add JSR 305 nullability annotations;nullability annotations;moved util to <file_name>, added <file_name>  ;Organize and enhance code files;Similar;0.5642988681793213
Add JSR 305 nullability annotations;nullability annotations;Use <iden> <version>s JsonAdapter.serializeNulls();serializeNulls;Similar;0.5893258452415466
Add JSR 305 nullability annotations;nullability annotations;Removal of Unnecessary Creation of <iden>;if <iden> has length 0 there is no point to create stringBuilder for that. that condition check needs to happen before stringBuilder creation.;Similar;0.5983824133872986
Add JSR 305 nullability annotations;nullability annotations;Expose <iden> via the <file_name> injection-like framework;injection-like framework;Similar;0.5405797958374023
Add JSR 305 nullability annotations;nullability annotations;Changing `<file_name>` to implement `<file_name>` interface;interface;Similar;0.5052044987678528
Add JSR 305 nullability annotations;nullability annotations;Fix support for protobuf <version>+;ExtensionRegistry cannot be null;Similar;0.6021242737770081
Add JSR 305 nullability annotations;nullability annotations;Fix typo;typo;Similar;0.5741161108016968
Add JSR 305 nullability annotations;nullability annotations;Remove redundant throws  ;redundant;Similar;0.6223982572555542
Update <file_name> to the latest version;the latest version;call it a <version>;Actually;Similar;0.6188373565673828
Update <file_name> to the latest version;the latest version;Add example of using <iden> <file_name> as a <iden> <method_name>  ;This also adds the <file_name> instance as a param to the string <file_name> to allow it to delegate to others directly. This brings it into parity with the method signatures of the other <file_name> methods anyway.;Similar;0.6541106700897217
Update <file_name> to the latest version;the latest version;Use new <iden>s non-throwing close and a simpler body copy;non-throwing close and a simpler body			      ;Similar;0.5531473159790039
Update <file_name> to the latest version;the latest version;Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;Similar;0.5638942718505859
Update <file_name> to the latest version;the latest version;Update RxJava to the specified version with an important Android fix  ;In case someone is relying on the transitive dependency;Similar;0.5929231643676758
Update <file_name> to the latest version;the latest version;Introduce factory for <file_name> concept;This is still highly-inefficient in its internal use and there are no tests proving that we now fail earlier in configuring a service method;Similar;0.6234017610549927
Update <file_name> to the latest version;the latest version;Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;Similar;0.592786431312561
Update <file_name> to the latest version;the latest version;Update to OkHttp <version>. Fix a tiny potential NPE;potential NPE;Similar;0.5979499816894531
Update <file_name> to the latest version;the latest version;Fix annotation link;<iden> is gone;Similar;0.6055115461349487
Update <file_name> to the latest version;the latest version;Expose success type on <method_name>;Theres a bit of a test gap going on for all the variants of successful and erroneous handling of sync, async, and rx. This new behavior is fully tested in all three but more general behavior testing for them will be needed in a follow-up.;Similar;0.6418204307556152
Update <file_name> to the latest version;the latest version;Update <file_name> to latest. Add default constructor.;latest, Add default constructor;Similar;0.8998827338218689
Update <file_name> to the latest version;the latest version;Promote <iden> logging to a class which knows about chunking  ;This is an <iden>-specific implementation detail which is now only performed when needed;Similar;0.519464373588562
Update <file_name> to the latest version;the latest version;Fix IntelliJ auto-formatting  ;Improve the formatting;Similar;0.6117397546768188
Update <file_name> to the latest version;the latest version;Add path and query tests for pre-encoded values;-;Similar;0.6706722974777222
Update <file_name> to the latest version;the latest version;Add converters module and protobuf converter;to the sentence;Similar;0.6179280281066895
Update <file_name> to the latest version;the latest version;Newline at end of file  ;Yes plz;Similar;0.8061124086380005
Update <file_name> to the latest version;the latest version;Log network and unexpected exceptions if logging is enabled  ;if logging is enabled;Similar;0.5158918499946594
Update <file_name> to the latest version;the latest version;Fix styling of <iden> download;styling;Similar;0.6241464614868164
Update <file_name> to the latest version;the latest version;" 
- Add <iden> <method_name>  
- Also update our sample to use <iden> contributors rather than the <iden>  
- Bump some dependencies to their latest versions  
";" 
- Use this on <iden> <version> and prior and when on the <iden>  
- because the latter is shutting down and subject to lame rate limiting when on common networks";Similar;0.6866289377212524
Update <file_name> to the latest version;the latest version;Provide a mutable <file_name> implementation. <iden> to conform.;to conform;Similar;0.6771723628044128
Update <file_name> to the latest version;the latest version;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Similar;0.5868187546730042
Update <file_name> to the latest version;the latest version;Simplify test method fetching;-;Similar;0.5060082077980042
Update <file_name> to the latest version;the latest version;Allow <file_name> instantiation  ;Hide some Apache implementation details;Similar;0.6563509702682495
Update <file_name> to the latest version;the latest version;Introduce builder pattern to instantiate <method_name>;profiler are now optional. Convenience methods for specifying a <iden> or an <iden> directly are also provided.;Similar;0.65160071849823
Update <file_name> to the latest version;the latest version;Adding a human-readable name to the  <file_name>  interface;human-readable;Similar;0.6097540259361267
Update <file_name> to the latest version;the latest version;Added getTag() and logChunk() methods;for easier subclassing;Similar;0.621617317199707
Update <file_name> to the latest version;the latest version;Reintroduced deprecated <file_name> constructor;deprecated;Similar;0.5772379040718079
Update <file_name> to the latest version;the latest version;Update custom conversion docs per feedback;Clarify that <iden> is just the default converter, Add section on other built-in converters, Add section on implementing your own custom converters;Similar;0.6920719146728516
Update <file_name> to the latest version;the latest version;Fix style nits per review;per review;Similar;0.6351236701011658
Update <file_name> to the latest version;the latest version;rename <iden> ->  <file_name>  ;to harvest the names for new annotations;Similar;0.6697243452072144
Update <file_name> to the latest version;the latest version;Move variable to where it is used;where it is used;Similar;0.5254110097885132
Update <file_name> to the latest version;the latest version;Fix spelling;spelling;Similar;0.534970760345459
Update <file_name> to the latest version;the latest version;Add fixed query parameter support;support;Similar;0.5983127355575562
Update <file_name> to the latest version;the latest version;Add <file_name>, <file_name> support to <file_name>  ;-;Similar;0.6764926910400391
Update <file_name> to the latest version;the latest version;Allow <file_name> extensions;improved <file_name>;Similar;0.6320722103118896
Update <file_name> to the latest version;the latest version;Repackage gson into retrofit.internal.gson  ;enhance integration;Similar;0.6277042031288147
Update <file_name> to the latest version;the latest version;Ensure <file_name> and <file_name> use FileDescriptor.sync();Ensure <file_name> and <file_name> use FileDescriptor.sync();Similar;0.6285119652748108
Update <file_name> to the latest version;the latest version;moved util to <file_name>, added <file_name>  ;Organize and enhance code files;Similar;0.7479605674743652
Update <file_name> to the latest version;the latest version;Use <iden> <version>s JsonAdapter.serializeNulls();serializeNulls;Similar;0.613715648651123
Update <file_name> to the latest version;the latest version;Expose <iden> via the <file_name> injection-like framework;injection-like framework;Similar;0.5937553644180298
Update <file_name> to the latest version;the latest version;Changing `<file_name>` to implement `<file_name>` interface;interface;Similar;0.6954380869865417
Update <file_name> to the latest version;the latest version;Fix support for protobuf <version>+;ExtensionRegistry cannot be null;Similar;0.7021845579147339
Update <file_name> to the latest version;the latest version;Fix typo;typo;Similar;0.54435133934021
Remove unused interface  ;unused;Simplify observable creation and reduce runtime allocations;Simplify, reduce;Similar;0.7397506237030029
Remove unused interface  ;unused;Refactor <iden> tests to avoid the use of blocking operators  ;avoid the use of blocking operators;Similar;0.6139757633209229
Remove unused interface  ;unused;Remove duplicated test  ;It is the same as in this file;Similar;0.8555238842964172
Remove unused interface  ;unused;call it a <version>;Actually;Similar;0.6182817816734314
Remove unused interface  ;unused;Add missing import  ;missing;Similar;0.8161227703094482
Remove unused interface  ;unused;Document maps dont allow null anywhere;null anywhere;Similar;0.6214094758033752
Remove unused interface  ;unused;Remove the need for generated accessor methods  ;need for generated accessor methods;Similar;0.8618029356002808
Remove unused interface  ;unused;Use new <iden>s non-throwing close and a simpler body copy;non-throwing close and a simpler body			      ;Similar;0.5130007863044739
Remove unused interface  ;unused;Remove incorrect generic parameter  ;incorrect;Similar;0.8797789216041565
Remove unused interface  ;unused;Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;Similar;0.5028222799301147
Remove unused interface  ;unused;Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;Similar;0.6653111577033997
Remove unused interface  ;unused;Remove unused classes from <otherCommit_link>;unused;Similar;0.8846280574798584
Remove unused interface  ;unused;Update to OkHttp <version>. Fix a tiny potential NPE;potential NPE;Similar;0.5911778211593628
Remove unused interface  ;unused;Fix annotation link;<iden> is gone;Similar;0.6390189528465271
Remove unused interface  ;unused;Use the annotations directly for parameter handling.;Before we attempted to normalize the parameter annotations into a name and type model. The introduction of multi-part transfer encodings required something more expressive so the annotation instances themselves were used. This change removes the name and type in favor of using the annotation for everything.;Similar;0.5163453817367554
Remove unused interface  ;unused;Properly name ignored exception in catch block  ;Properly naming;Similar;0.7054004669189453
Remove unused interface  ;unused;Fix IntelliJ auto-formatting  ;Improve the formatting;Similar;0.6134253740310669
Remove unused interface  ;unused;Newline at end of file  ;Yes plz;Similar;0.5966709852218628
Remove unused interface  ;unused;Fix styling of <iden> download;styling;Similar;0.5536007881164551
Remove unused interface  ;unused;Simplify test method fetching;-;Similar;0.5035784840583801
Remove unused interface  ;unused;Allow <file_name> instantiation  ;Hide some Apache implementation details;Similar;0.5314339995384216
Remove unused interface  ;unused;Hide more implementation details;more implementation details;Similar;0.5822601914405823
Remove unused interface  ;unused;Remove unused <file_name> classes;unused;Similar;0.8528571724891663
Remove unused interface  ;unused;Use no_aop Guice variant  ;no_aop;Similar;0.785387396812439
Remove unused interface  ;unused;Reintroduced deprecated <file_name> constructor;deprecated;Similar;0.7741526365280151
Remove unused interface  ;unused;Fix style nits per review;per review;Similar;0.5535166263580322
Remove unused interface  ;unused;rename <iden> ->  <file_name>  ;to harvest the names for new annotations;Similar;0.5880798101425171
Remove unused interface  ;unused;Move variable to where it is used;where it is used;Similar;0.6633709669113159
Remove unused interface  ;unused;Fix spelling;spelling;Similar;0.6574419736862183
Remove unused interface  ;unused;Add fixed query parameter support;support;Similar;0.5916346311569214
Remove unused interface  ;unused;Allow <file_name> extensions;improved <file_name>;Similar;0.5161123871803284
Remove unused interface  ;unused;Repackage gson into retrofit.internal.gson  ;enhance integration;Similar;0.6209798455238342
Remove unused interface  ;unused;moved util to <file_name>, added <file_name>  ;Organize and enhance code files;Similar;0.5218780040740967
Remove unused interface  ;unused;Removal of Unnecessary Creation of <iden>;if <iden> has length 0 there is no point to create stringBuilder for that. that condition check needs to happen before stringBuilder creation.;Similar;0.8921753168106079
Remove unused interface  ;unused;Changing `<file_name>` to implement `<file_name>` interface;interface;Similar;0.5442931652069092
Remove unused interface  ;unused;Fix support for protobuf <version>+;ExtensionRegistry cannot be null;Similar;0.5899838805198669
Remove unused interface  ;unused;Fix typo;typo;Similar;0.6410312652587891
Remove unused interface  ;unused;Remove redundant throws  ;redundant;Similar;0.8561611175537109
Simplify observable creation and reduce runtime allocations;Simplify, reduce;Refactor <iden> tests to avoid the use of blocking operators  ;avoid the use of blocking operators;Similar;0.6649051904678345
Simplify observable creation and reduce runtime allocations;Simplify, reduce;Remove duplicated test  ;It is the same as in this file;Similar;0.7418357729911804
Simplify observable creation and reduce runtime allocations;Simplify, reduce;call it a <version>;Actually;Similar;0.5818166136741638
Simplify observable creation and reduce runtime allocations;Simplify, reduce;Add missing import  ;missing;Similar;0.6278207898139954
Simplify observable creation and reduce runtime allocations;Simplify, reduce;Remove the need for generated accessor methods  ;need for generated accessor methods;Similar;0.7926003932952881
Simplify observable creation and reduce runtime allocations;Simplify, reduce;Use new <iden>s non-throwing close and a simpler body copy;non-throwing close and a simpler body			      ;Similar;0.5808396339416504
Simplify observable creation and reduce runtime allocations;Simplify, reduce;Remove incorrect generic parameter  ;incorrect;Similar;0.7393102645874023
Simplify observable creation and reduce runtime allocations;Simplify, reduce;Use a correct implementation of path encoding;correct;Similar;0.5527649521827698
Simplify observable creation and reduce runtime allocations;Simplify, reduce;Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;Similar;0.5534650087356567
Simplify observable creation and reduce runtime allocations;Simplify, reduce;Remove unused classes from <otherCommit_link>;unused;Similar;0.6520538330078125
Simplify observable creation and reduce runtime allocations;Simplify, reduce;Update to OkHttp <version>. Fix a tiny potential NPE;potential NPE;Similar;0.6949127912521362
Simplify observable creation and reduce runtime allocations;Simplify, reduce;Fix annotation link;<iden> is gone;Similar;0.7099689841270447
Simplify observable creation and reduce runtime allocations;Simplify, reduce;Correct map parameter type detection for query and field  ;-;Similar;0.5171165466308594
Simplify observable creation and reduce runtime allocations;Simplify, reduce;Add simple package info to root package  ;simple;Similar;0.5978258848190308
Simplify observable creation and reduce runtime allocations;Simplify, reduce;Correct header length checking logic. Improve exception message;Improve;Similar;0.6368610262870789
Simplify observable creation and reduce runtime allocations;Simplify, reduce;Fix IntelliJ auto-formatting  ;Improve the formatting;Similar;0.6751399040222168
Simplify observable creation and reduce runtime allocations;Simplify, reduce;Newline at end of file  ;Yes plz;Similar;0.5159304141998291
Simplify observable creation and reduce runtime allocations;Simplify, reduce;Log network and unexpected exceptions if logging is enabled  ;if logging is enabled;Similar;0.513303279876709
Simplify observable creation and reduce runtime allocations;Simplify, reduce;Fix styling of <iden> download;styling;Similar;0.619717001914978
Simplify observable creation and reduce runtime allocations;Simplify, reduce;Provide a mutable <file_name> implementation. <iden> to conform.;to conform;Similar;0.5041370987892151
Simplify observable creation and reduce runtime allocations;Simplify, reduce;Simplify test method fetching;-;Similar;0.7185966968536377
Simplify observable creation and reduce runtime allocations;Simplify, reduce;Allow <file_name> instantiation  ;Hide some Apache implementation details;Similar;0.5648330450057983
Simplify observable creation and reduce runtime allocations;Simplify, reduce;Hide more implementation details;more implementation details;Similar;0.6124122142791748
Simplify observable creation and reduce runtime allocations;Simplify, reduce;Remove unused <file_name> classes;unused;Similar;0.6168422698974609
Simplify observable creation and reduce runtime allocations;Simplify, reduce;Use no_aop Guice variant  ;no_aop;Similar;0.5875968337059021
Simplify observable creation and reduce runtime allocations;Simplify, reduce;Reintroduced deprecated <file_name> constructor;deprecated;Similar;0.6473460793495178
Simplify observable creation and reduce runtime allocations;Simplify, reduce;Fix small wording issues in custom converter docs;small wording issues;Similar;0.6230980157852173
Simplify observable creation and reduce runtime allocations;Simplify, reduce;Fix style nits per review;per review;Similar;0.6185271739959717
Simplify observable creation and reduce runtime allocations;Simplify, reduce;fix issue <issue_link> : permit use when servers or intermediaries mistakingly miss Content-<iden> header;mistakingly miss Content-<iden> header;Similar;0.6118523478507996
Simplify observable creation and reduce runtime allocations;Simplify, reduce;rename <iden> ->  <file_name>  ;to harvest the names for new annotations;Similar;0.5155805349349976
Simplify observable creation and reduce runtime allocations;Simplify, reduce;Move variable to where it is used;where it is used;Similar;0.5979970693588257
Simplify observable creation and reduce runtime allocations;Simplify, reduce;Fix spelling;spelling;Similar;0.718514084815979
Simplify observable creation and reduce runtime allocations;Simplify, reduce;Add fixed query parameter support;support;Similar;0.6698671579360962
Simplify observable creation and reduce runtime allocations;Simplify, reduce;Allow <file_name> extensions;improved <file_name>;Similar;0.519991397857666
Simplify observable creation and reduce runtime allocations;Simplify, reduce;Repackage gson into retrofit.internal.gson  ;enhance integration;Similar;0.5870732069015503
Simplify observable creation and reduce runtime allocations;Simplify, reduce;Removal of Unnecessary Creation of <iden>;if <iden> has length 0 there is no point to create stringBuilder for that. that condition check needs to happen before stringBuilder creation.;Similar;0.8033736944198608
Simplify observable creation and reduce runtime allocations;Simplify, reduce;Changing `<file_name>` to implement `<file_name>` interface;interface;Similar;0.528754472732544
Simplify observable creation and reduce runtime allocations;Simplify, reduce;Fix support for protobuf <version>+;ExtensionRegistry cannot be null;Similar;0.6497483253479004
Simplify observable creation and reduce runtime allocations;Simplify, reduce;Fix typo;typo;Similar;0.6786623597145081
Simplify observable creation and reduce runtime allocations;Simplify, reduce;Remove redundant throws  ;redundant;Similar;0.7202222347259521
Refactor <iden> tests to avoid the use of blocking operators  ;avoid the use of blocking operators;Remove duplicated test  ;It is the same as in this file;Similar;0.6341456174850464
Refactor <iden> tests to avoid the use of blocking operators  ;avoid the use of blocking operators;Add missing import  ;missing;Similar;0.5145865678787231
Refactor <iden> tests to avoid the use of blocking operators  ;avoid the use of blocking operators;Document maps dont allow null anywhere;null anywhere;Similar;0.5688594579696655
Refactor <iden> tests to avoid the use of blocking operators  ;avoid the use of blocking operators;Remove the need for generated accessor methods  ;need for generated accessor methods;Similar;0.7073356509208679
Refactor <iden> tests to avoid the use of blocking operators  ;avoid the use of blocking operators;Use new <iden>s non-throwing close and a simpler body copy;non-throwing close and a simpler body			      ;Similar;0.5029121041297913
Refactor <iden> tests to avoid the use of blocking operators  ;avoid the use of blocking operators;Remove incorrect generic parameter  ;incorrect;Similar;0.585918128490448
Refactor <iden> tests to avoid the use of blocking operators  ;avoid the use of blocking operators;Remove unused classes from <otherCommit_link>;unused;Similar;0.6596649885177612
Refactor <iden> tests to avoid the use of blocking operators  ;avoid the use of blocking operators;Update to OkHttp <version>. Fix a tiny potential NPE;potential NPE;Similar;0.5698980093002319
Refactor <iden> tests to avoid the use of blocking operators  ;avoid the use of blocking operators;Properly name ignored exception in catch block  ;Properly naming;Similar;0.5956025123596191
Refactor <iden> tests to avoid the use of blocking operators  ;avoid the use of blocking operators;Correct header length checking logic. Improve exception message;Improve;Similar;0.5320744514465332
Refactor <iden> tests to avoid the use of blocking operators  ;avoid the use of blocking operators;Fix IntelliJ auto-formatting  ;Improve the formatting;Similar;0.5003359317779541
Refactor <iden> tests to avoid the use of blocking operators  ;avoid the use of blocking operators;" 
- Add <iden> <method_name>  
- Also update our sample to use <iden> contributors rather than the <iden>  
- Bump some dependencies to their latest versions  
";" 
- Use this on <iden> <version> and prior and when on the <iden>  
- because the latter is shutting down and subject to lame rate limiting when on common networks";Similar;0.5414794683456421
Refactor <iden> tests to avoid the use of blocking operators  ;avoid the use of blocking operators;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Similar;0.5532680749893188
Refactor <iden> tests to avoid the use of blocking operators  ;avoid the use of blocking operators;Simplify test method fetching;-;Similar;0.5542435646057129
Refactor <iden> tests to avoid the use of blocking operators  ;avoid the use of blocking operators;Hide more implementation details;more implementation details;Similar;0.5296646356582642
Refactor <iden> tests to avoid the use of blocking operators  ;avoid the use of blocking operators;Remove unused <file_name> classes;unused;Similar;0.59017014503479
Refactor <iden> tests to avoid the use of blocking operators  ;avoid the use of blocking operators;Use no_aop Guice variant  ;no_aop;Similar;0.5051326751708984
Refactor <iden> tests to avoid the use of blocking operators  ;avoid the use of blocking operators;Reintroduced deprecated <file_name> constructor;deprecated;Similar;0.5601905584335327
Refactor <iden> tests to avoid the use of blocking operators  ;avoid the use of blocking operators;Fix small wording issues in custom converter docs;small wording issues;Similar;0.5676226615905762
Refactor <iden> tests to avoid the use of blocking operators  ;avoid the use of blocking operators;Fix style nits per review;per review;Similar;0.5279805660247803
Refactor <iden> tests to avoid the use of blocking operators  ;avoid the use of blocking operators;fix issue <issue_link> : permit use when servers or intermediaries mistakingly miss Content-<iden> header;mistakingly miss Content-<iden> header;Similar;0.6882622241973877
Refactor <iden> tests to avoid the use of blocking operators  ;avoid the use of blocking operators;Fix spelling;spelling;Similar;0.5319898724555969
Refactor <iden> tests to avoid the use of blocking operators  ;avoid the use of blocking operators;Add fixed query parameter support;support;Similar;0.5027180910110474
Refactor <iden> tests to avoid the use of blocking operators  ;avoid the use of blocking operators;Removal of Unnecessary Creation of <iden>;if <iden> has length 0 there is no point to create stringBuilder for that. that condition check needs to happen before stringBuilder creation.;Similar;0.7356770634651184
Refactor <iden> tests to avoid the use of blocking operators  ;avoid the use of blocking operators;Remove redundant throws  ;redundant;Similar;0.559894323348999
Remove duplicated test  ;It is the same as in this file;call it a <version>;Actually;Similar;0.6224757432937622
Remove duplicated test  ;It is the same as in this file;Add missing import  ;missing;Similar;0.7569321393966675
Remove duplicated test  ;It is the same as in this file;Document maps dont allow null anywhere;null anywhere;Similar;0.510697603225708
Remove duplicated test  ;It is the same as in this file;Remove the need for generated accessor methods  ;need for generated accessor methods;Similar;0.8090959191322327
Remove duplicated test  ;It is the same as in this file;Add example of using <iden> <file_name> as a <iden> <method_name>  ;This also adds the <file_name> instance as a param to the string <file_name> to allow it to delegate to others directly. This brings it into parity with the method signatures of the other <file_name> methods anyway.;Similar;0.5616253614425659
Remove duplicated test  ;It is the same as in this file;Use new <iden>s non-throwing close and a simpler body copy;non-throwing close and a simpler body			      ;Similar;0.5518546104431152
Remove duplicated test  ;It is the same as in this file;Remove incorrect generic parameter  ;incorrect;Similar;0.8338133096694946
Remove duplicated test  ;It is the same as in this file;Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;Similar;0.5470081567764282
Remove duplicated test  ;It is the same as in this file;Naming, API changes, and documentation around mock services.  ;mock services;Similar;0.543860912322998
Remove duplicated test  ;It is the same as in this file;Introduce factory for <file_name> concept;This is still highly-inefficient in its internal use and there are no tests proving that we now fail earlier in configuring a service method;Similar;0.5152753591537476
Remove duplicated test  ;It is the same as in this file;Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;Similar;0.7142949104309082
Remove duplicated test  ;It is the same as in this file;Remove unused classes from <otherCommit_link>;unused;Similar;0.7889848947525024
Remove duplicated test  ;It is the same as in this file;Update to OkHttp <version>. Fix a tiny potential NPE;potential NPE;Similar;0.6718920469284058
Remove duplicated test  ;It is the same as in this file;Fix annotation link;<iden> is gone;Similar;0.7375634908676147
Remove duplicated test  ;It is the same as in this file;Use the annotations directly for parameter handling.;Before we attempted to normalize the parameter annotations into a name and type model. The introduction of multi-part transfer encodings required something more expressive so the annotation instances themselves were used. This change removes the name and type in favor of using the annotation for everything.;Similar;0.5517706871032715
Remove duplicated test  ;It is the same as in this file;Expose success type on <method_name>;Theres a bit of a test gap going on for all the variants of successful and erroneous handling of sync, async, and rx. This new behavior is fully tested in all three but more general behavior testing for them will be needed in a follow-up.;Similar;0.5559931993484497
Remove duplicated test  ;It is the same as in this file;Update <file_name> to latest. Add default constructor.;latest, Add default constructor;Similar;0.5188976526260376
Remove duplicated test  ;It is the same as in this file;Properly name ignored exception in catch block  ;Properly naming;Similar;0.5914071798324585
Remove duplicated test  ;It is the same as in this file;Fix IntelliJ auto-formatting  ;Improve the formatting;Similar;0.7255674600601196
Remove duplicated test  ;It is the same as in this file;Add path and query tests for pre-encoded values;-;Similar;0.6093577742576599
Remove duplicated test  ;It is the same as in this file;Add converters module and protobuf converter;to the sentence;Similar;0.5835482478141785
Remove duplicated test  ;It is the same as in this file;Newline at end of file  ;Yes plz;Similar;0.6179313659667969
Remove duplicated test  ;It is the same as in this file;Fix styling of <iden> download;styling;Similar;0.6325000524520874
Remove duplicated test  ;It is the same as in this file;Rename pair to field to match annotation;match annotation;Similar;0.5334422588348389
Remove duplicated test  ;It is the same as in this file;Provide a mutable <file_name> implementation. <iden> to conform.;to conform;Similar;0.555734395980835
Remove duplicated test  ;It is the same as in this file;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Similar;0.5835016965866089
Remove duplicated test  ;It is the same as in this file;Simplify test method fetching;-;Similar;0.6526729464530945
Remove duplicated test  ;It is the same as in this file;Allow <file_name> instantiation  ;Hide some Apache implementation details;Similar;0.5801286697387695
Remove duplicated test  ;It is the same as in this file;Hide more implementation details;more implementation details;Similar;0.6466758847236633
Remove duplicated test  ;It is the same as in this file;Remove unused <file_name> classes;unused;Similar;0.7752400636672974
Remove duplicated test  ;It is the same as in this file;Introduce builder pattern to instantiate <method_name>;profiler are now optional. Convenience methods for specifying a <iden> or an <iden> directly are also provided.;Similar;0.5461798906326294
Remove duplicated test  ;It is the same as in this file;Use no_aop Guice variant  ;no_aop;Similar;0.6854710578918457
Remove duplicated test  ;It is the same as in this file;Added getTag() and logChunk() methods;for easier subclassing;Similar;0.5239495635032654
Remove duplicated test  ;It is the same as in this file;Reintroduced deprecated <file_name> constructor;deprecated;Similar;0.8019630908966064
Remove duplicated test  ;It is the same as in this file;Fix small wording issues in custom converter docs;small wording issues;Similar;0.5168190002441406
Remove duplicated test  ;It is the same as in this file;Update custom conversion docs per feedback;Clarify that <iden> is just the default converter, Add section on other built-in converters, Add section on implementing your own custom converters;Similar;0.556728720664978
Remove duplicated test  ;It is the same as in this file;Fix style nits per review;per review;Similar;0.6459556818008423
Remove duplicated test  ;It is the same as in this file;fix issue <issue_link> : permit use when servers or intermediaries mistakingly miss Content-<iden> header;mistakingly miss Content-<iden> header;Similar;0.5939545631408691
Remove duplicated test  ;It is the same as in this file;rename <iden> ->  <file_name>  ;to harvest the names for new annotations;Similar;0.6470600962638855
Remove duplicated test  ;It is the same as in this file;Move variable to where it is used;where it is used;Similar;0.6571799516677856
Remove duplicated test  ;It is the same as in this file;Fix spelling;spelling;Similar;0.7473726272583008
Remove duplicated test  ;It is the same as in this file;Add fixed query parameter support;support;Similar;0.6568137407302856
Remove duplicated test  ;It is the same as in this file;Allow <file_name> extensions;improved <file_name>;Similar;0.543766975402832
Remove duplicated test  ;It is the same as in this file;Repackage gson into retrofit.internal.gson  ;enhance integration;Similar;0.6991673111915588
Remove duplicated test  ;It is the same as in this file;Ensure <file_name> and <file_name> use FileDescriptor.sync();Ensure <file_name> and <file_name> use FileDescriptor.sync();Similar;0.5120359659194946
Remove duplicated test  ;It is the same as in this file;moved util to <file_name>, added <file_name>  ;Organize and enhance code files;Similar;0.5943183302879333
Remove duplicated test  ;It is the same as in this file;Use <iden> <version>s JsonAdapter.serializeNulls();serializeNulls;Similar;0.5510340929031372
Remove duplicated test  ;It is the same as in this file;Removal of Unnecessary Creation of <iden>;if <iden> has length 0 there is no point to create stringBuilder for that. that condition check needs to happen before stringBuilder creation.;Similar;0.8313262462615967
Remove duplicated test  ;It is the same as in this file;Expose <iden> via the <file_name> injection-like framework;injection-like framework;Similar;0.5059297680854797
Remove duplicated test  ;It is the same as in this file;Changing `<file_name>` to implement `<file_name>` interface;interface;Similar;0.6133579015731812
Remove duplicated test  ;It is the same as in this file;Fix support for protobuf <version>+;ExtensionRegistry cannot be null;Similar;0.6808260679244995
Remove duplicated test  ;It is the same as in this file;Fix typo;typo;Similar;0.7374716997146606
Remove duplicated test  ;It is the same as in this file;Remove redundant throws  ;redundant;Similar;0.8376491069793701
call it a <version>;Actually;Add missing import  ;missing;Similar;0.6034814119338989
call it a <version>;Actually;Remove the need for generated accessor methods  ;need for generated accessor methods;Similar;0.6210472583770752
call it a <version>;Actually;Propagate callback executor even when not explicitly specified  ;This lets custom <iden> implementations use the <file_name> default for their callbacks;Similar;0.6315060257911682
call it a <version>;Actually;Add example of using <iden> <file_name> as a <iden> <method_name>  ;This also adds the <file_name> instance as a param to the string <file_name> to allow it to delegate to others directly. This brings it into parity with the method signatures of the other <file_name> methods anyway.;Similar;0.7329477071762085
call it a <version>;Actually;Remove incorrect generic parameter  ;incorrect;Similar;0.5974248647689819
call it a <version>;Actually;Use a correct implementation of path encoding;correct;Similar;0.5401287078857422
call it a <version>;Actually;Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;Similar;0.5355371236801147
call it a <version>;Actually;Naming, API changes, and documentation around mock services.  ;mock services;Similar;0.5765012502670288
call it a <version>;Actually;Introduce factory for <file_name> concept;This is still highly-inefficient in its internal use and there are no tests proving that we now fail earlier in configuring a service method;Similar;0.5726893544197083
call it a <version>;Actually;Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;Similar;0.5366655588150024
call it a <version>;Actually;Remove unused classes from <otherCommit_link>;unused;Similar;0.5839024782180786
call it a <version>;Actually;Update to OkHttp <version>. Fix a tiny potential NPE;potential NPE;Similar;0.5862755179405212
call it a <version>;Actually;Fix annotation link;<iden> is gone;Similar;0.7754343152046204
call it a <version>;Actually;Use the annotations directly for parameter handling.;Before we attempted to normalize the parameter annotations into a name and type model. The introduction of multi-part transfer encodings required something more expressive so the annotation instances themselves were used. This change removes the name and type in favor of using the annotation for everything.;Similar;0.6748180985450745
call it a <version>;Actually;Expose success type on <method_name>;Theres a bit of a test gap going on for all the variants of successful and erroneous handling of sync, async, and rx. This new behavior is fully tested in all three but more general behavior testing for them will be needed in a follow-up.;Similar;0.7623759508132935
call it a <version>;Actually;Update <file_name> to latest. Add default constructor.;latest, Add default constructor;Similar;0.6062731146812439
call it a <version>;Actually;Add simple package info to root package  ;simple;Similar;0.6170156002044678
call it a <version>;Actually;Fix IntelliJ auto-formatting  ;Improve the formatting;Similar;0.6462050676345825
call it a <version>;Actually;Add path and query tests for pre-encoded values;-;Similar;0.6426436901092529
call it a <version>;Actually;Add converters module and protobuf converter;to the sentence;Similar;0.6860302686691284
call it a <version>;Actually;Newline at end of file  ;Yes plz;Similar;0.6871675252914429
call it a <version>;Actually;Log network and unexpected exceptions if logging is enabled  ;if logging is enabled;Similar;0.5037837028503418
call it a <version>;Actually;Fix styling of <iden> download;styling;Similar;0.6586180329322815
call it a <version>;Actually;Provide a mutable <file_name> implementation. <iden> to conform.;to conform;Similar;0.7424614429473877
call it a <version>;Actually;Simplify test method fetching;-;Similar;0.6055967211723328
call it a <version>;Actually;Allow <file_name> instantiation  ;Hide some Apache implementation details;Similar;0.7716034650802612
call it a <version>;Actually;Hide more implementation details;more implementation details;Similar;0.6292182207107544
call it a <version>;Actually;Remove unused <file_name> classes;unused;Similar;0.5459175109863281
call it a <version>;Actually;Introduce builder pattern to instantiate <method_name>;profiler are now optional. Convenience methods for specifying a <iden> or an <iden> directly are also provided.;Similar;0.6049435138702393
call it a <version>;Actually;Use no_aop Guice variant  ;no_aop;Similar;0.7396366596221924
call it a <version>;Actually;Adding a human-readable name to the  <file_name>  interface;human-readable;Similar;0.5685567855834961
call it a <version>;Actually;Added getTag() and logChunk() methods;for easier subclassing;Similar;0.6105998754501343
call it a <version>;Actually;Reintroduced deprecated <file_name> constructor;deprecated;Similar;0.6068062782287598
call it a <version>;Actually;Update custom conversion docs per feedback;Clarify that <iden> is just the default converter, Add section on other built-in converters, Add section on implementing your own custom converters;Similar;0.5756919384002686
call it a <version>;Actually;Fix style nits per review;per review;Similar;0.6391969919204712
call it a <version>;Actually;rename <iden> ->  <file_name>  ;to harvest the names for new annotations;Similar;0.7489385604858398
call it a <version>;Actually;Move variable to where it is used;where it is used;Similar;0.7536354064941406
call it a <version>;Actually;Fix spelling;spelling;Similar;0.7037171125411987
call it a <version>;Actually;Add fixed query parameter support;support;Similar;0.7359139919281006
call it a <version>;Actually;Add <file_name>, <file_name> support to <file_name>  ;-;Similar;0.7539884448051453
call it a <version>;Actually;Allow <file_name> extensions;improved <file_name>;Similar;0.7937602996826172
call it a <version>;Actually;Repackage gson into retrofit.internal.gson  ;enhance integration;Similar;0.7058178186416626
call it a <version>;Actually;Ensure <file_name> and <file_name> use FileDescriptor.sync();Ensure <file_name> and <file_name> use FileDescriptor.sync();Similar;0.6971287727355957
call it a <version>;Actually;moved util to <file_name>, added <file_name>  ;Organize and enhance code files;Similar;0.7589336037635803
call it a <version>;Actually;Use <iden> <version>s JsonAdapter.serializeNulls();serializeNulls;Similar;0.7697939872741699
call it a <version>;Actually;Removal of Unnecessary Creation of <iden>;if <iden> has length 0 there is no point to create stringBuilder for that. that condition check needs to happen before stringBuilder creation.;Similar;0.6315184235572815
call it a <version>;Actually;Expose <iden> via the <file_name> injection-like framework;injection-like framework;Similar;0.6728781461715698
call it a <version>;Actually;Changing `<file_name>` to implement `<file_name>` interface;interface;Similar;0.6585610508918762
call it a <version>;Actually;Fix support for protobuf <version>+;ExtensionRegistry cannot be null;Similar;0.8249066472053528
call it a <version>;Actually;Fix typo;typo;Similar;0.7716493010520935
call it a <version>;Actually;Remove redundant throws  ;redundant;Similar;0.5950031876564026
Add missing import  ;missing;Document maps dont allow null anywhere;null anywhere;Similar;0.5835430026054382
Add missing import  ;missing;Remove the need for generated accessor methods  ;need for generated accessor methods;Similar;0.7349280118942261
Add missing import  ;missing;Propagate callback executor even when not explicitly specified  ;This lets custom <iden> implementations use the <file_name> default for their callbacks;Similar;0.5091531276702881
Add missing import  ;missing;Use new <iden>s non-throwing close and a simpler body copy;non-throwing close and a simpler body			      ;Similar;0.5191008448600769
Add missing import  ;missing;Remove incorrect generic parameter  ;incorrect;Similar;0.8218715190887451
Add missing import  ;missing;Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;Similar;0.6016851663589478
Add missing import  ;missing;Remove unused classes from <otherCommit_link>;unused;Similar;0.8000166416168213
Add missing import  ;missing;Update to OkHttp <version>. Fix a tiny potential NPE;potential NPE;Similar;0.5799123048782349
Add missing import  ;missing;Fix annotation link;<iden> is gone;Similar;0.6347967386245728
Add missing import  ;missing;Properly name ignored exception in catch block  ;Properly naming;Similar;0.6848258972167969
Add missing import  ;missing;Fix IntelliJ auto-formatting  ;Improve the formatting;Similar;0.5835675001144409
Add missing import  ;missing;Newline at end of file  ;Yes plz;Similar;0.5695812106132507
Add missing import  ;missing;Fix styling of <iden> download;styling;Similar;0.5720717906951904
Add missing import  ;missing;Allow <file_name> instantiation  ;Hide some Apache implementation details;Similar;0.5269004702568054
Add missing import  ;missing;Hide more implementation details;more implementation details;Similar;0.6358463764190674
Add missing import  ;missing;Remove unused <file_name> classes;unused;Similar;0.738960862159729
Add missing import  ;missing;Use no_aop Guice variant  ;no_aop;Similar;0.7629945278167725
Add missing import  ;missing;Reintroduced deprecated <file_name> constructor;deprecated;Similar;0.7542552947998047
Add missing import  ;missing;Fix style nits per review;per review;Similar;0.5493749380111694
Add missing import  ;missing;fix issue <issue_link> : permit use when servers or intermediaries mistakingly miss Content-<iden> header;mistakingly miss Content-<iden> header;Similar;0.5341891050338745
Add missing import  ;missing;rename <iden> ->  <file_name>  ;to harvest the names for new annotations;Similar;0.572116494178772
Add missing import  ;missing;Move variable to where it is used;where it is used;Similar;0.6820369362831116
Add missing import  ;missing;Fix spelling;spelling;Similar;0.6183499097824097
Add missing import  ;missing;Add fixed query parameter support;support;Similar;0.6017934083938599
Add missing import  ;missing;Allow <file_name> extensions;improved <file_name>;Similar;0.5443153381347656
Add missing import  ;missing;Repackage gson into retrofit.internal.gson  ;enhance integration;Similar;0.6071207523345947
Add missing import  ;missing;moved util to <file_name>, added <file_name>  ;Organize and enhance code files;Similar;0.5406218767166138
Add missing import  ;missing;Use <iden> <version>s JsonAdapter.serializeNulls();serializeNulls;Similar;0.5534977316856384
Add missing import  ;missing;Removal of Unnecessary Creation of <iden>;if <iden> has length 0 there is no point to create stringBuilder for that. that condition check needs to happen before stringBuilder creation.;Similar;0.7958621978759766
Add missing import  ;missing;Fix support for protobuf <version>+;ExtensionRegistry cannot be null;Similar;0.6000213027000427
Add missing import  ;missing;Fix typo;typo;Similar;0.6462461948394775
Add missing import  ;missing;Remove redundant throws  ;redundant;Similar;0.7848460674285889
Document maps dont allow null anywhere;null anywhere;Remove the need for generated accessor methods  ;need for generated accessor methods;Similar;0.5715261697769165
Document maps dont allow null anywhere;null anywhere;Remove incorrect generic parameter  ;incorrect;Similar;0.5904784798622131
Document maps dont allow null anywhere;null anywhere;Remove unused classes from <otherCommit_link>;unused;Similar;0.6673405170440674
Document maps dont allow null anywhere;null anywhere;Properly name ignored exception in catch block  ;Properly naming;Similar;0.702473521232605
Document maps dont allow null anywhere;null anywhere;Remove unused <file_name> classes;unused;Similar;0.6258034706115723
Document maps dont allow null anywhere;null anywhere;Use no_aop Guice variant  ;no_aop;Similar;0.6171676516532898
Document maps dont allow null anywhere;null anywhere;Removal of Unnecessary Creation of <iden>;if <iden> has length 0 there is no point to create stringBuilder for that. that condition check needs to happen before stringBuilder creation.;Similar;0.6322184801101685
Document maps dont allow null anywhere;null anywhere;Remove redundant throws  ;redundant;Similar;0.5029556751251221
Remove the need for generated accessor methods  ;need for generated accessor methods;Propagate callback executor even when not explicitly specified  ;This lets custom <iden> implementations use the <file_name> default for their callbacks;Similar;0.5220675468444824
Remove the need for generated accessor methods  ;need for generated accessor methods;Add example of using <iden> <file_name> as a <iden> <method_name>  ;This also adds the <file_name> instance as a param to the string <file_name> to allow it to delegate to others directly. This brings it into parity with the method signatures of the other <file_name> methods anyway.;Similar;0.5399434566497803
Remove the need for generated accessor methods  ;need for generated accessor methods;Use new <iden>s non-throwing close and a simpler body copy;non-throwing close and a simpler body			      ;Similar;0.5837284326553345
Remove the need for generated accessor methods  ;need for generated accessor methods;Remove incorrect generic parameter  ;incorrect;Similar;0.8319804072380066
Remove the need for generated accessor methods  ;need for generated accessor methods;Naming, API changes, and documentation around mock services.  ;mock services;Similar;0.5058804154396057
Remove the need for generated accessor methods  ;need for generated accessor methods;Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;Similar;0.6448111534118652
Remove the need for generated accessor methods  ;need for generated accessor methods;Remove unused classes from <otherCommit_link>;unused;Similar;0.8361296653747559
Remove the need for generated accessor methods  ;need for generated accessor methods;Update to OkHttp <version>. Fix a tiny potential NPE;potential NPE;Similar;0.6037774085998535
Remove the need for generated accessor methods  ;need for generated accessor methods;Fix annotation link;<iden> is gone;Similar;0.6613903045654297
Remove the need for generated accessor methods  ;need for generated accessor methods;Use the annotations directly for parameter handling.;Before we attempted to normalize the parameter annotations into a name and type model. The introduction of multi-part transfer encodings required something more expressive so the annotation instances themselves were used. This change removes the name and type in favor of using the annotation for everything.;Similar;0.5769617557525635
Remove the need for generated accessor methods  ;need for generated accessor methods;Expose success type on <method_name>;Theres a bit of a test gap going on for all the variants of successful and erroneous handling of sync, async, and rx. This new behavior is fully tested in all three but more general behavior testing for them will be needed in a follow-up.;Similar;0.5493040084838867
Remove the need for generated accessor methods  ;need for generated accessor methods;Add simple package info to root package  ;simple;Similar;0.5301880836486816
Remove the need for generated accessor methods  ;need for generated accessor methods;Properly name ignored exception in catch block  ;Properly naming;Similar;0.6774972677230835
Remove the need for generated accessor methods  ;need for generated accessor methods;Fix IntelliJ auto-formatting  ;Improve the formatting;Similar;0.6060476899147034
Remove the need for generated accessor methods  ;need for generated accessor methods;Add path and query tests for pre-encoded values;-;Similar;0.50888592004776
Remove the need for generated accessor methods  ;need for generated accessor methods;Add converters module and protobuf converter;to the sentence;Similar;0.5133652687072754
Remove the need for generated accessor methods  ;need for generated accessor methods;Newline at end of file  ;Yes plz;Similar;0.5389387607574463
Remove the need for generated accessor methods  ;need for generated accessor methods;Fix styling of <iden> download;styling;Similar;0.594273567199707
Remove the need for generated accessor methods  ;need for generated accessor methods;Provide a mutable <file_name> implementation. <iden> to conform.;to conform;Similar;0.5070991516113281
Remove the need for generated accessor methods  ;need for generated accessor methods;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Similar;0.5179111957550049
Remove the need for generated accessor methods  ;need for generated accessor methods;Simplify test method fetching;-;Similar;0.6031078696250916
Remove the need for generated accessor methods  ;need for generated accessor methods;Allow <file_name> instantiation  ;Hide some Apache implementation details;Similar;0.588679850101471
Remove the need for generated accessor methods  ;need for generated accessor methods;Hide more implementation details;more implementation details;Similar;0.6590001583099365
Remove the need for generated accessor methods  ;need for generated accessor methods;Remove unused <file_name> classes;unused;Similar;0.7610005140304565
Remove the need for generated accessor methods  ;need for generated accessor methods;Use no_aop Guice variant  ;no_aop;Similar;0.7765295505523682
Remove the need for generated accessor methods  ;need for generated accessor methods;Added getTag() and logChunk() methods;for easier subclassing;Similar;0.5444931387901306
Remove the need for generated accessor methods  ;need for generated accessor methods;Reintroduced deprecated <file_name> constructor;deprecated;Similar;0.7404947280883789
Remove the need for generated accessor methods  ;need for generated accessor methods;Fix style nits per review;per review;Similar;0.5810549259185791
Remove the need for generated accessor methods  ;need for generated accessor methods;fix issue <issue_link> : permit use when servers or intermediaries mistakingly miss Content-<iden> header;mistakingly miss Content-<iden> header;Similar;0.5689378380775452
Remove the need for generated accessor methods  ;need for generated accessor methods;rename <iden> ->  <file_name>  ;to harvest the names for new annotations;Similar;0.5918003916740417
Remove the need for generated accessor methods  ;need for generated accessor methods;Move variable to where it is used;where it is used;Similar;0.6682738065719604
Remove the need for generated accessor methods  ;need for generated accessor methods;Fix spelling;spelling;Similar;0.6354162693023682
Remove the need for generated accessor methods  ;need for generated accessor methods;Add fixed query parameter support;support;Similar;0.656190037727356
Remove the need for generated accessor methods  ;need for generated accessor methods;Allow <file_name> extensions;improved <file_name>;Similar;0.5636570453643799
Remove the need for generated accessor methods  ;need for generated accessor methods;Repackage gson into retrofit.internal.gson  ;enhance integration;Similar;0.6327359676361084
Remove the need for generated accessor methods  ;need for generated accessor methods;moved util to <file_name>, added <file_name>  ;Organize and enhance code files;Similar;0.5291887521743774
Remove the need for generated accessor methods  ;need for generated accessor methods;Use <iden> <version>s JsonAdapter.serializeNulls();serializeNulls;Similar;0.5388907790184021
Remove the need for generated accessor methods  ;need for generated accessor methods;Removal of Unnecessary Creation of <iden>;if <iden> has length 0 there is no point to create stringBuilder for that. that condition check needs to happen before stringBuilder creation.;Similar;0.8939496278762817
Remove the need for generated accessor methods  ;need for generated accessor methods;Changing `<file_name>` to implement `<file_name>` interface;interface;Similar;0.5595860481262207
Remove the need for generated accessor methods  ;need for generated accessor methods;Fix support for protobuf <version>+;ExtensionRegistry cannot be null;Similar;0.6095567941665649
Remove the need for generated accessor methods  ;need for generated accessor methods;Fix typo;typo;Similar;0.634962797164917
Remove the need for generated accessor methods  ;need for generated accessor methods;Remove redundant throws  ;redundant;Similar;0.831771731376648
Propagate callback executor even when not explicitly specified  ;This lets custom <iden> implementations use the <file_name> default for their callbacks;Add example of using <iden> <file_name> as a <iden> <method_name>  ;This also adds the <file_name> instance as a param to the string <file_name> to allow it to delegate to others directly. This brings it into parity with the method signatures of the other <file_name> methods anyway.;Similar;0.5256655812263489
Propagate callback executor even when not explicitly specified  ;This lets custom <iden> implementations use the <file_name> default for their callbacks;Use a correct implementation of path encoding;correct;Similar;0.5447145700454712
Propagate callback executor even when not explicitly specified  ;This lets custom <iden> implementations use the <file_name> default for their callbacks;Naming, API changes, and documentation around mock services.  ;mock services;Similar;0.5456826686859131
Propagate callback executor even when not explicitly specified  ;This lets custom <iden> implementations use the <file_name> default for their callbacks;Fix annotation link;<iden> is gone;Similar;0.5764262676239014
Propagate callback executor even when not explicitly specified  ;This lets custom <iden> implementations use the <file_name> default for their callbacks;Use the annotations directly for parameter handling.;Before we attempted to normalize the parameter annotations into a name and type model. The introduction of multi-part transfer encodings required something more expressive so the annotation instances themselves were used. This change removes the name and type in favor of using the annotation for everything.;Similar;0.5720628499984741
Propagate callback executor even when not explicitly specified  ;This lets custom <iden> implementations use the <file_name> default for their callbacks;Expose success type on <method_name>;Theres a bit of a test gap going on for all the variants of successful and erroneous handling of sync, async, and rx. This new behavior is fully tested in all three but more general behavior testing for them will be needed in a follow-up.;Similar;0.5662750005722046
Propagate callback executor even when not explicitly specified  ;This lets custom <iden> implementations use the <file_name> default for their callbacks;Add simple package info to root package  ;simple;Similar;0.5085041522979736
Propagate callback executor even when not explicitly specified  ;This lets custom <iden> implementations use the <file_name> default for their callbacks;Add path and query tests for pre-encoded values;-;Similar;0.5564553141593933
Propagate callback executor even when not explicitly specified  ;This lets custom <iden> implementations use the <file_name> default for their callbacks;Add converters module and protobuf converter;to the sentence;Similar;0.518916666507721
Propagate callback executor even when not explicitly specified  ;This lets custom <iden> implementations use the <file_name> default for their callbacks;Newline at end of file  ;Yes plz;Similar;0.5000569820404053
Propagate callback executor even when not explicitly specified  ;This lets custom <iden> implementations use the <file_name> default for their callbacks;Log network and unexpected exceptions if logging is enabled  ;if logging is enabled;Similar;0.5827738046646118
Propagate callback executor even when not explicitly specified  ;This lets custom <iden> implementations use the <file_name> default for their callbacks;Provide a mutable <file_name> implementation. <iden> to conform.;to conform;Similar;0.5773310661315918
Propagate callback executor even when not explicitly specified  ;This lets custom <iden> implementations use the <file_name> default for their callbacks;Simplify test method fetching;-;Similar;0.5208319425582886
Propagate callback executor even when not explicitly specified  ;This lets custom <iden> implementations use the <file_name> default for their callbacks;Allow <file_name> instantiation  ;Hide some Apache implementation details;Similar;0.5685242414474487
Propagate callback executor even when not explicitly specified  ;This lets custom <iden> implementations use the <file_name> default for their callbacks;Hide more implementation details;more implementation details;Similar;0.6381053924560547
Propagate callback executor even when not explicitly specified  ;This lets custom <iden> implementations use the <file_name> default for their callbacks;Use no_aop Guice variant  ;no_aop;Similar;0.5457419753074646
Propagate callback executor even when not explicitly specified  ;This lets custom <iden> implementations use the <file_name> default for their callbacks;Fix style nits per review;per review;Similar;0.5570163726806641
Propagate callback executor even when not explicitly specified  ;This lets custom <iden> implementations use the <file_name> default for their callbacks;Move variable to where it is used;where it is used;Similar;0.626620888710022
Propagate callback executor even when not explicitly specified  ;This lets custom <iden> implementations use the <file_name> default for their callbacks;Add fixed query parameter support;support;Similar;0.6281366348266602
Propagate callback executor even when not explicitly specified  ;This lets custom <iden> implementations use the <file_name> default for their callbacks;Add <file_name>, <file_name> support to <file_name>  ;-;Similar;0.5639285445213318
Propagate callback executor even when not explicitly specified  ;This lets custom <iden> implementations use the <file_name> default for their callbacks;Allow <file_name> extensions;improved <file_name>;Similar;0.5838692784309387
Propagate callback executor even when not explicitly specified  ;This lets custom <iden> implementations use the <file_name> default for their callbacks;Repackage gson into retrofit.internal.gson  ;enhance integration;Similar;0.5634797811508179
Propagate callback executor even when not explicitly specified  ;This lets custom <iden> implementations use the <file_name> default for their callbacks;Ensure <file_name> and <file_name> use FileDescriptor.sync();Ensure <file_name> and <file_name> use FileDescriptor.sync();Similar;0.592158317565918
Propagate callback executor even when not explicitly specified  ;This lets custom <iden> implementations use the <file_name> default for their callbacks;moved util to <file_name>, added <file_name>  ;Organize and enhance code files;Similar;0.5564848184585571
Propagate callback executor even when not explicitly specified  ;This lets custom <iden> implementations use the <file_name> default for their callbacks;Use <iden> <version>s JsonAdapter.serializeNulls();serializeNulls;Similar;0.5836275815963745
Propagate callback executor even when not explicitly specified  ;This lets custom <iden> implementations use the <file_name> default for their callbacks;Removal of Unnecessary Creation of <iden>;if <iden> has length 0 there is no point to create stringBuilder for that. that condition check needs to happen before stringBuilder creation.;Similar;0.5006788969039917
Propagate callback executor even when not explicitly specified  ;This lets custom <iden> implementations use the <file_name> default for their callbacks;Fix support for protobuf <version>+;ExtensionRegistry cannot be null;Similar;0.5622165203094482
Propagate callback executor even when not explicitly specified  ;This lets custom <iden> implementations use the <file_name> default for their callbacks;Fix typo;typo;Similar;0.5703309178352356
Add example of using <iden> <file_name> as a <iden> <method_name>  ;This also adds the <file_name> instance as a param to the string <file_name> to allow it to delegate to others directly. This brings it into parity with the method signatures of the other <file_name> methods anyway.;Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;Similar;0.692715048789978
Add example of using <iden> <file_name> as a <iden> <method_name>  ;This also adds the <file_name> instance as a param to the string <file_name> to allow it to delegate to others directly. This brings it into parity with the method signatures of the other <file_name> methods anyway.;Naming, API changes, and documentation around mock services.  ;mock services;Similar;0.6720216870307922
Add example of using <iden> <file_name> as a <iden> <method_name>  ;This also adds the <file_name> instance as a param to the string <file_name> to allow it to delegate to others directly. This brings it into parity with the method signatures of the other <file_name> methods anyway.;Introduce factory for <file_name> concept;This is still highly-inefficient in its internal use and there are no tests proving that we now fail earlier in configuring a service method;Similar;0.7420129776000977
Add example of using <iden> <file_name> as a <iden> <method_name>  ;This also adds the <file_name> instance as a param to the string <file_name> to allow it to delegate to others directly. This brings it into parity with the method signatures of the other <file_name> methods anyway.;Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;Similar;0.6901530027389526
Add example of using <iden> <file_name> as a <iden> <method_name>  ;This also adds the <file_name> instance as a param to the string <file_name> to allow it to delegate to others directly. This brings it into parity with the method signatures of the other <file_name> methods anyway.;Remove unused classes from <otherCommit_link>;unused;Similar;0.5780476331710815
Add example of using <iden> <file_name> as a <iden> <method_name>  ;This also adds the <file_name> instance as a param to the string <file_name> to allow it to delegate to others directly. This brings it into parity with the method signatures of the other <file_name> methods anyway.;Update to OkHttp <version>. Fix a tiny potential NPE;potential NPE;Similar;0.5511481761932373
Add example of using <iden> <file_name> as a <iden> <method_name>  ;This also adds the <file_name> instance as a param to the string <file_name> to allow it to delegate to others directly. This brings it into parity with the method signatures of the other <file_name> methods anyway.;Fix annotation link;<iden> is gone;Similar;0.705142080783844
Add example of using <iden> <file_name> as a <iden> <method_name>  ;This also adds the <file_name> instance as a param to the string <file_name> to allow it to delegate to others directly. This brings it into parity with the method signatures of the other <file_name> methods anyway.;Use the annotations directly for parameter handling.;Before we attempted to normalize the parameter annotations into a name and type model. The introduction of multi-part transfer encodings required something more expressive so the annotation instances themselves were used. This change removes the name and type in favor of using the annotation for everything.;Similar;0.7780567407608032
Add example of using <iden> <file_name> as a <iden> <method_name>  ;This also adds the <file_name> instance as a param to the string <file_name> to allow it to delegate to others directly. This brings it into parity with the method signatures of the other <file_name> methods anyway.;Expose success type on <method_name>;Theres a bit of a test gap going on for all the variants of successful and erroneous handling of sync, async, and rx. This new behavior is fully tested in all three but more general behavior testing for them will be needed in a follow-up.;Similar;0.8617689609527588
Add example of using <iden> <file_name> as a <iden> <method_name>  ;This also adds the <file_name> instance as a param to the string <file_name> to allow it to delegate to others directly. This brings it into parity with the method signatures of the other <file_name> methods anyway.;Correct map parameter type detection for query and field  ;-;Similar;0.586729884147644
Add example of using <iden> <file_name> as a <iden> <method_name>  ;This also adds the <file_name> instance as a param to the string <file_name> to allow it to delegate to others directly. This brings it into parity with the method signatures of the other <file_name> methods anyway.;Update <file_name> to latest. Add default constructor.;latest, Add default constructor;Similar;0.7652944326400757
Add example of using <iden> <file_name> as a <iden> <method_name>  ;This also adds the <file_name> instance as a param to the string <file_name> to allow it to delegate to others directly. This brings it into parity with the method signatures of the other <file_name> methods anyway.;Add simple package info to root package  ;simple;Similar;0.5968456268310547
Add example of using <iden> <file_name> as a <iden> <method_name>  ;This also adds the <file_name> instance as a param to the string <file_name> to allow it to delegate to others directly. This brings it into parity with the method signatures of the other <file_name> methods anyway.;Correct header length checking logic. Improve exception message;Improve;Similar;0.5998997688293457
Add example of using <iden> <file_name> as a <iden> <method_name>  ;This also adds the <file_name> instance as a param to the string <file_name> to allow it to delegate to others directly. This brings it into parity with the method signatures of the other <file_name> methods anyway.;Promote <iden> logging to a class which knows about chunking  ;This is an <iden>-specific implementation detail which is now only performed when needed;Similar;0.6381417512893677
Add example of using <iden> <file_name> as a <iden> <method_name>  ;This also adds the <file_name> instance as a param to the string <file_name> to allow it to delegate to others directly. This brings it into parity with the method signatures of the other <file_name> methods anyway.;Fix IntelliJ auto-formatting  ;Improve the formatting;Similar;0.6709071397781372
Add example of using <iden> <file_name> as a <iden> <method_name>  ;This also adds the <file_name> instance as a param to the string <file_name> to allow it to delegate to others directly. This brings it into parity with the method signatures of the other <file_name> methods anyway.;Add path and query tests for pre-encoded values;-;Similar;0.7802505493164062
Add example of using <iden> <file_name> as a <iden> <method_name>  ;This also adds the <file_name> instance as a param to the string <file_name> to allow it to delegate to others directly. This brings it into parity with the method signatures of the other <file_name> methods anyway.;Add converters module and protobuf converter;to the sentence;Similar;0.7079982757568359
Add example of using <iden> <file_name> as a <iden> <method_name>  ;This also adds the <file_name> instance as a param to the string <file_name> to allow it to delegate to others directly. This brings it into parity with the method signatures of the other <file_name> methods anyway.;Newline at end of file  ;Yes plz;Similar;0.6175674200057983
Add example of using <iden> <file_name> as a <iden> <method_name>  ;This also adds the <file_name> instance as a param to the string <file_name> to allow it to delegate to others directly. This brings it into parity with the method signatures of the other <file_name> methods anyway.;Log network and unexpected exceptions if logging is enabled  ;if logging is enabled;Similar;0.6118941307067871
Add example of using <iden> <file_name> as a <iden> <method_name>  ;This also adds the <file_name> instance as a param to the string <file_name> to allow it to delegate to others directly. This brings it into parity with the method signatures of the other <file_name> methods anyway.;Fix styling of <iden> download;styling;Similar;0.7120753526687622
Add example of using <iden> <file_name> as a <iden> <method_name>  ;This also adds the <file_name> instance as a param to the string <file_name> to allow it to delegate to others directly. This brings it into parity with the method signatures of the other <file_name> methods anyway.;Rename pair to field to match annotation;match annotation;Similar;0.5463284254074097
Add example of using <iden> <file_name> as a <iden> <method_name>  ;This also adds the <file_name> instance as a param to the string <file_name> to allow it to delegate to others directly. This brings it into parity with the method signatures of the other <file_name> methods anyway.;" 
- Add <iden> <method_name>  
- Also update our sample to use <iden> contributors rather than the <iden>  
- Bump some dependencies to their latest versions  
";" 
- Use this on <iden> <version> and prior and when on the <iden>  
- because the latter is shutting down and subject to lame rate limiting when on common networks";Similar;0.5966345071792603
Add example of using <iden> <file_name> as a <iden> <method_name>  ;This also adds the <file_name> instance as a param to the string <file_name> to allow it to delegate to others directly. This brings it into parity with the method signatures of the other <file_name> methods anyway.;Provide a mutable <file_name> implementation. <iden> to conform.;to conform;Similar;0.8766804933547974
Add example of using <iden> <file_name> as a <iden> <method_name>  ;This also adds the <file_name> instance as a param to the string <file_name> to allow it to delegate to others directly. This brings it into parity with the method signatures of the other <file_name> methods anyway.;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Similar;0.6727796792984009
Add example of using <iden> <file_name> as a <iden> <method_name>  ;This also adds the <file_name> instance as a param to the string <file_name> to allow it to delegate to others directly. This brings it into parity with the method signatures of the other <file_name> methods anyway.;Simplify test method fetching;-;Similar;0.5932028889656067
Add example of using <iden> <file_name> as a <iden> <method_name>  ;This also adds the <file_name> instance as a param to the string <file_name> to allow it to delegate to others directly. This brings it into parity with the method signatures of the other <file_name> methods anyway.;Allow <file_name> instantiation  ;Hide some Apache implementation details;Similar;0.8550029397010803
Add example of using <iden> <file_name> as a <iden> <method_name>  ;This also adds the <file_name> instance as a param to the string <file_name> to allow it to delegate to others directly. This brings it into parity with the method signatures of the other <file_name> methods anyway.;Hide more implementation details;more implementation details;Similar;0.5527000427246094
Add example of using <iden> <file_name> as a <iden> <method_name>  ;This also adds the <file_name> instance as a param to the string <file_name> to allow it to delegate to others directly. This brings it into parity with the method signatures of the other <file_name> methods anyway.;Remove unused <file_name> classes;unused;Similar;0.6070249080657959
Add example of using <iden> <file_name> as a <iden> <method_name>  ;This also adds the <file_name> instance as a param to the string <file_name> to allow it to delegate to others directly. This brings it into parity with the method signatures of the other <file_name> methods anyway.;Introduce builder pattern to instantiate <method_name>;profiler are now optional. Convenience methods for specifying a <iden> or an <iden> directly are also provided.;Similar;0.7980755567550659
Add example of using <iden> <file_name> as a <iden> <method_name>  ;This also adds the <file_name> instance as a param to the string <file_name> to allow it to delegate to others directly. This brings it into parity with the method signatures of the other <file_name> methods anyway.;Use no_aop Guice variant  ;no_aop;Similar;0.5873498916625977
Add example of using <iden> <file_name> as a <iden> <method_name>  ;This also adds the <file_name> instance as a param to the string <file_name> to allow it to delegate to others directly. This brings it into parity with the method signatures of the other <file_name> methods anyway.;Adding a human-readable name to the  <file_name>  interface;human-readable;Similar;0.823516845703125
Add example of using <iden> <file_name> as a <iden> <method_name>  ;This also adds the <file_name> instance as a param to the string <file_name> to allow it to delegate to others directly. This brings it into parity with the method signatures of the other <file_name> methods anyway.;Added getTag() and logChunk() methods;for easier subclassing;Similar;0.7688974738121033
Add example of using <iden> <file_name> as a <iden> <method_name>  ;This also adds the <file_name> instance as a param to the string <file_name> to allow it to delegate to others directly. This brings it into parity with the method signatures of the other <file_name> methods anyway.;Reintroduced deprecated <file_name> constructor;deprecated;Similar;0.6541742086410522
Add example of using <iden> <file_name> as a <iden> <method_name>  ;This also adds the <file_name> instance as a param to the string <file_name> to allow it to delegate to others directly. This brings it into parity with the method signatures of the other <file_name> methods anyway.;Fix small wording issues in custom converter docs;small wording issues;Similar;0.5226963758468628
Add example of using <iden> <file_name> as a <iden> <method_name>  ;This also adds the <file_name> instance as a param to the string <file_name> to allow it to delegate to others directly. This brings it into parity with the method signatures of the other <file_name> methods anyway.;Update custom conversion docs per feedback;Clarify that <iden> is just the default converter, Add section on other built-in converters, Add section on implementing your own custom converters;Similar;0.6855912208557129
Add example of using <iden> <file_name> as a <iden> <method_name>  ;This also adds the <file_name> instance as a param to the string <file_name> to allow it to delegate to others directly. This brings it into parity with the method signatures of the other <file_name> methods anyway.;Fix style nits per review;per review;Similar;0.5845106244087219
Add example of using <iden> <file_name> as a <iden> <method_name>  ;This also adds the <file_name> instance as a param to the string <file_name> to allow it to delegate to others directly. This brings it into parity with the method signatures of the other <file_name> methods anyway.;fix issue <issue_link> : permit use when servers or intermediaries mistakingly miss Content-<iden> header;mistakingly miss Content-<iden> header;Similar;0.5920063853263855
Add example of using <iden> <file_name> as a <iden> <method_name>  ;This also adds the <file_name> instance as a param to the string <file_name> to allow it to delegate to others directly. This brings it into parity with the method signatures of the other <file_name> methods anyway.;rename <iden> ->  <file_name>  ;to harvest the names for new annotations;Similar;0.8833016157150269
Add example of using <iden> <file_name> as a <iden> <method_name>  ;This also adds the <file_name> instance as a param to the string <file_name> to allow it to delegate to others directly. This brings it into parity with the method signatures of the other <file_name> methods anyway.;Move variable to where it is used;where it is used;Similar;0.6773437261581421
Add example of using <iden> <file_name> as a <iden> <method_name>  ;This also adds the <file_name> instance as a param to the string <file_name> to allow it to delegate to others directly. This brings it into parity with the method signatures of the other <file_name> methods anyway.;Fix spelling;spelling;Similar;0.5731946229934692
Add example of using <iden> <file_name> as a <iden> <method_name>  ;This also adds the <file_name> instance as a param to the string <file_name> to allow it to delegate to others directly. This brings it into parity with the method signatures of the other <file_name> methods anyway.;Add fixed query parameter support;support;Similar;0.7942763566970825
Add example of using <iden> <file_name> as a <iden> <method_name>  ;This also adds the <file_name> instance as a param to the string <file_name> to allow it to delegate to others directly. This brings it into parity with the method signatures of the other <file_name> methods anyway.;Add <file_name>, <file_name> support to <file_name>  ;-;Similar;0.9047186374664307
Add example of using <iden> <file_name> as a <iden> <method_name>  ;This also adds the <file_name> instance as a param to the string <file_name> to allow it to delegate to others directly. This brings it into parity with the method signatures of the other <file_name> methods anyway.;Allow <file_name> extensions;improved <file_name>;Similar;0.8923995494842529
Add example of using <iden> <file_name> as a <iden> <method_name>  ;This also adds the <file_name> instance as a param to the string <file_name> to allow it to delegate to others directly. This brings it into parity with the method signatures of the other <file_name> methods anyway.;Repackage gson into retrofit.internal.gson  ;enhance integration;Similar;0.6744382381439209
Add example of using <iden> <file_name> as a <iden> <method_name>  ;This also adds the <file_name> instance as a param to the string <file_name> to allow it to delegate to others directly. This brings it into parity with the method signatures of the other <file_name> methods anyway.;Ensure <file_name> and <file_name> use FileDescriptor.sync();Ensure <file_name> and <file_name> use FileDescriptor.sync();Similar;0.8338294625282288
Add example of using <iden> <file_name> as a <iden> <method_name>  ;This also adds the <file_name> instance as a param to the string <file_name> to allow it to delegate to others directly. This brings it into parity with the method signatures of the other <file_name> methods anyway.;moved util to <file_name>, added <file_name>  ;Organize and enhance code files;Similar;0.8829120397567749
Add example of using <iden> <file_name> as a <iden> <method_name>  ;This also adds the <file_name> instance as a param to the string <file_name> to allow it to delegate to others directly. This brings it into parity with the method signatures of the other <file_name> methods anyway.;Use <iden> <version>s JsonAdapter.serializeNulls();serializeNulls;Similar;0.8239469528198242
Add example of using <iden> <file_name> as a <iden> <method_name>  ;This also adds the <file_name> instance as a param to the string <file_name> to allow it to delegate to others directly. This brings it into parity with the method signatures of the other <file_name> methods anyway.;Removal of Unnecessary Creation of <iden>;if <iden> has length 0 there is no point to create stringBuilder for that. that condition check needs to happen before stringBuilder creation.;Similar;0.5507289171218872
Add example of using <iden> <file_name> as a <iden> <method_name>  ;This also adds the <file_name> instance as a param to the string <file_name> to allow it to delegate to others directly. This brings it into parity with the method signatures of the other <file_name> methods anyway.;Expose <iden> via the <file_name> injection-like framework;injection-like framework;Similar;0.9063787460327148
Add example of using <iden> <file_name> as a <iden> <method_name>  ;This also adds the <file_name> instance as a param to the string <file_name> to allow it to delegate to others directly. This brings it into parity with the method signatures of the other <file_name> methods anyway.;Changing `<file_name>` to implement `<file_name>` interface;interface;Similar;0.8584415912628174
Add example of using <iden> <file_name> as a <iden> <method_name>  ;This also adds the <file_name> instance as a param to the string <file_name> to allow it to delegate to others directly. This brings it into parity with the method signatures of the other <file_name> methods anyway.;Fix support for protobuf <version>+;ExtensionRegistry cannot be null;Similar;0.7728450298309326
Add example of using <iden> <file_name> as a <iden> <method_name>  ;This also adds the <file_name> instance as a param to the string <file_name> to allow it to delegate to others directly. This brings it into parity with the method signatures of the other <file_name> methods anyway.;Fix typo;typo;Similar;0.6421571969985962
Use new <iden>s non-throwing close and a simpler body copy;non-throwing close and a simpler body			      ;Remove incorrect generic parameter  ;incorrect;Similar;0.525687575340271
Use new <iden>s non-throwing close and a simpler body copy;non-throwing close and a simpler body			      ;Remove unused classes from <otherCommit_link>;unused;Similar;0.5042504072189331
Use new <iden>s non-throwing close and a simpler body copy;non-throwing close and a simpler body			      ;Update to OkHttp <version>. Fix a tiny potential NPE;potential NPE;Similar;0.6275273561477661
Use new <iden>s non-throwing close and a simpler body copy;non-throwing close and a simpler body			      ;Update <file_name> to latest. Add default constructor.;latest, Add default constructor;Similar;0.5489822626113892
Use new <iden>s non-throwing close and a simpler body copy;non-throwing close and a simpler body			      ;Add simple package info to root package  ;simple;Similar;0.5881444811820984
Use new <iden>s non-throwing close and a simpler body copy;non-throwing close and a simpler body			      ;Fix IntelliJ auto-formatting  ;Improve the formatting;Similar;0.5295079946517944
Use new <iden>s non-throwing close and a simpler body copy;non-throwing close and a simpler body			      ;Newline at end of file  ;Yes plz;Similar;0.5844823122024536
Use new <iden>s non-throwing close and a simpler body copy;non-throwing close and a simpler body			      ;Fix styling of <iden> download;styling;Similar;0.5229302644729614
Use new <iden>s non-throwing close and a simpler body copy;non-throwing close and a simpler body			      ;" 
- Add <iden> <method_name>  
- Also update our sample to use <iden> contributors rather than the <iden>  
- Bump some dependencies to their latest versions  
";" 
- Use this on <iden> <version> and prior and when on the <iden>  
- because the latter is shutting down and subject to lame rate limiting when on common networks";Similar;0.6265538334846497
Use new <iden>s non-throwing close and a simpler body copy;non-throwing close and a simpler body			      ;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Similar;0.5041057467460632
Use new <iden>s non-throwing close and a simpler body copy;non-throwing close and a simpler body			      ;Simplify test method fetching;-;Similar;0.5398488640785217
Use new <iden>s non-throwing close and a simpler body copy;non-throwing close and a simpler body			      ;Allow <file_name> instantiation  ;Hide some Apache implementation details;Similar;0.5061062574386597
Use new <iden>s non-throwing close and a simpler body copy;non-throwing close and a simpler body			      ;Hide more implementation details;more implementation details;Similar;0.5695422887802124
Use new <iden>s non-throwing close and a simpler body copy;non-throwing close and a simpler body			      ;Use no_aop Guice variant  ;no_aop;Similar;0.5346645712852478
Use new <iden>s non-throwing close and a simpler body copy;non-throwing close and a simpler body			      ;Reintroduced deprecated <file_name> constructor;deprecated;Similar;0.524471640586853
Use new <iden>s non-throwing close and a simpler body copy;non-throwing close and a simpler body			      ;Fix small wording issues in custom converter docs;small wording issues;Similar;0.5513643026351929
Use new <iden>s non-throwing close and a simpler body copy;non-throwing close and a simpler body			      ;Update custom conversion docs per feedback;Clarify that <iden> is just the default converter, Add section on other built-in converters, Add section on implementing your own custom converters;Similar;0.521593451499939
Use new <iden>s non-throwing close and a simpler body copy;non-throwing close and a simpler body			      ;Fix style nits per review;per review;Similar;0.565272867679596
Use new <iden>s non-throwing close and a simpler body copy;non-throwing close and a simpler body			      ;rename <iden> ->  <file_name>  ;to harvest the names for new annotations;Similar;0.5424102544784546
Use new <iden>s non-throwing close and a simpler body copy;non-throwing close and a simpler body			      ;Fix spelling;spelling;Similar;0.5368951559066772
Use new <iden>s non-throwing close and a simpler body copy;non-throwing close and a simpler body			      ;Add fixed query parameter support;support;Similar;0.5357304811477661
Use new <iden>s non-throwing close and a simpler body copy;non-throwing close and a simpler body			      ;Allow <file_name> extensions;improved <file_name>;Similar;0.500029981136322
Use new <iden>s non-throwing close and a simpler body copy;non-throwing close and a simpler body			      ;Repackage gson into retrofit.internal.gson  ;enhance integration;Similar;0.5113073587417603
Use new <iden>s non-throwing close and a simpler body copy;non-throwing close and a simpler body			      ;moved util to <file_name>, added <file_name>  ;Organize and enhance code files;Similar;0.500235915184021
Use new <iden>s non-throwing close and a simpler body copy;non-throwing close and a simpler body			      ;Removal of Unnecessary Creation of <iden>;if <iden> has length 0 there is no point to create stringBuilder for that. that condition check needs to happen before stringBuilder creation.;Similar;0.6213604807853699
Use new <iden>s non-throwing close and a simpler body copy;non-throwing close and a simpler body			      ;Fix support for protobuf <version>+;ExtensionRegistry cannot be null;Similar;0.5861197710037231
Use new <iden>s non-throwing close and a simpler body copy;non-throwing close and a simpler body			      ;Fix typo;typo;Similar;0.5016300082206726
Use new <iden>s non-throwing close and a simpler body copy;non-throwing close and a simpler body			      ;Remove redundant throws  ;redundant;Similar;0.602817177772522
Remove incorrect generic parameter  ;incorrect;Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;Similar;0.5267273783683777
Remove incorrect generic parameter  ;incorrect;Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;Similar;0.6230630874633789
Remove incorrect generic parameter  ;incorrect;Remove unused classes from <otherCommit_link>;unused;Similar;0.8019514083862305
Remove incorrect generic parameter  ;incorrect;Update to OkHttp <version>. Fix a tiny potential NPE;potential NPE;Similar;0.6096136569976807
Remove incorrect generic parameter  ;incorrect;Fix annotation link;<iden> is gone;Similar;0.6579785346984863
Remove incorrect generic parameter  ;incorrect;Use the annotations directly for parameter handling.;Before we attempted to normalize the parameter annotations into a name and type model. The introduction of multi-part transfer encodings required something more expressive so the annotation instances themselves were used. This change removes the name and type in favor of using the annotation for everything.;Similar;0.5119403600692749
Remove incorrect generic parameter  ;incorrect;Expose success type on <method_name>;Theres a bit of a test gap going on for all the variants of successful and erroneous handling of sync, async, and rx. This new behavior is fully tested in all three but more general behavior testing for them will be needed in a follow-up.;Similar;0.5179651379585266
Remove incorrect generic parameter  ;incorrect;Add simple package info to root package  ;simple;Similar;0.5124015808105469
Remove incorrect generic parameter  ;incorrect;Properly name ignored exception in catch block  ;Properly naming;Similar;0.6915801763534546
Remove incorrect generic parameter  ;incorrect;Fix IntelliJ auto-formatting  ;Improve the formatting;Similar;0.6214638948440552
Remove incorrect generic parameter  ;incorrect;Newline at end of file  ;Yes plz;Similar;0.5376366376876831
Remove incorrect generic parameter  ;incorrect;Fix styling of <iden> download;styling;Similar;0.5712088346481323
Remove incorrect generic parameter  ;incorrect;Simplify test method fetching;-;Similar;0.535454273223877
Remove incorrect generic parameter  ;incorrect;Allow <file_name> instantiation  ;Hide some Apache implementation details;Similar;0.5212124586105347
Remove incorrect generic parameter  ;incorrect;Hide more implementation details;more implementation details;Similar;0.5910052061080933
Remove incorrect generic parameter  ;incorrect;Remove unused <file_name> classes;unused;Similar;0.7808908224105835
Remove incorrect generic parameter  ;incorrect;Use no_aop Guice variant  ;no_aop;Similar;0.7481191158294678
Remove incorrect generic parameter  ;incorrect;Reintroduced deprecated <file_name> constructor;deprecated;Similar;0.7555997371673584
Remove incorrect generic parameter  ;incorrect;Fix style nits per review;per review;Similar;0.5464102029800415
Remove incorrect generic parameter  ;incorrect;fix issue <issue_link> : permit use when servers or intermediaries mistakingly miss Content-<iden> header;mistakingly miss Content-<iden> header;Similar;0.5428060293197632
Remove incorrect generic parameter  ;incorrect;rename <iden> ->  <file_name>  ;to harvest the names for new annotations;Similar;0.5728538036346436
Remove incorrect generic parameter  ;incorrect;Move variable to where it is used;where it is used;Similar;0.6262778043746948
Remove incorrect generic parameter  ;incorrect;Fix spelling;spelling;Similar;0.6866326928138733
Remove incorrect generic parameter  ;incorrect;Add fixed query parameter support;support;Similar;0.6282733678817749
Remove incorrect generic parameter  ;incorrect;Allow <file_name> extensions;improved <file_name>;Similar;0.5171622633934021
Remove incorrect generic parameter  ;incorrect;Repackage gson into retrofit.internal.gson  ;enhance integration;Similar;0.5824808478355408
Remove incorrect generic parameter  ;incorrect;Removal of Unnecessary Creation of <iden>;if <iden> has length 0 there is no point to create stringBuilder for that. that condition check needs to happen before stringBuilder creation.;Similar;0.8902180194854736
Remove incorrect generic parameter  ;incorrect;Changing `<file_name>` to implement `<file_name>` interface;interface;Similar;0.5113250017166138
Remove incorrect generic parameter  ;incorrect;Fix support for protobuf <version>+;ExtensionRegistry cannot be null;Similar;0.6194429397583008
Remove incorrect generic parameter  ;incorrect;Fix typo;typo;Similar;0.6795148849487305
Remove incorrect generic parameter  ;incorrect;Remove redundant throws  ;redundant;Similar;0.8423252105712891
Use a correct implementation of path encoding;correct;Fix annotation link;<iden> is gone;Similar;0.6055278778076172
Use a correct implementation of path encoding;correct;Use the annotations directly for parameter handling.;Before we attempted to normalize the parameter annotations into a name and type model. The introduction of multi-part transfer encodings required something more expressive so the annotation instances themselves were used. This change removes the name and type in favor of using the annotation for everything.;Similar;0.5246255397796631
Use a correct implementation of path encoding;correct;Expose success type on <method_name>;Theres a bit of a test gap going on for all the variants of successful and erroneous handling of sync, async, and rx. This new behavior is fully tested in all three but more general behavior testing for them will be needed in a follow-up.;Similar;0.5586836934089661
Use a correct implementation of path encoding;correct;Correct map parameter type detection for query and field  ;-;Similar;0.7405156493186951
Use a correct implementation of path encoding;correct;Add simple package info to root package  ;simple;Similar;0.55717933177948
Use a correct implementation of path encoding;correct;Correct header length checking logic. Improve exception message;Improve;Similar;0.7763233184814453
Use a correct implementation of path encoding;correct;Fix IntelliJ auto-formatting  ;Improve the formatting;Similar;0.5756444931030273
Use a correct implementation of path encoding;correct;Add path and query tests for pre-encoded values;-;Similar;0.5634665489196777
Use a correct implementation of path encoding;correct;Add converters module and protobuf converter;to the sentence;Similar;0.5037795305252075
Use a correct implementation of path encoding;correct;Log network and unexpected exceptions if logging is enabled  ;if logging is enabled;Similar;0.5342438220977783
Use a correct implementation of path encoding;correct;Fix styling of <iden> download;styling;Similar;0.5055293440818787
Use a correct implementation of path encoding;correct;Provide a mutable <file_name> implementation. <iden> to conform.;to conform;Similar;0.6319080591201782
Use a correct implementation of path encoding;correct;Simplify test method fetching;-;Similar;0.7523825168609619
Use a correct implementation of path encoding;correct;Allow <file_name> instantiation  ;Hide some Apache implementation details;Similar;0.5547938942909241
Use a correct implementation of path encoding;correct;Fix spelling;spelling;Similar;0.551192581653595
Use a correct implementation of path encoding;correct;Add fixed query parameter support;support;Similar;0.6245750188827515
Use a correct implementation of path encoding;correct;Add <file_name>, <file_name> support to <file_name>  ;-;Similar;0.5254641771316528
Use a correct implementation of path encoding;correct;Allow <file_name> extensions;improved <file_name>;Similar;0.510485053062439
Use a correct implementation of path encoding;correct;Repackage gson into retrofit.internal.gson  ;enhance integration;Similar;0.5109943151473999
Use a correct implementation of path encoding;correct;Ensure <file_name> and <file_name> use FileDescriptor.sync();Ensure <file_name> and <file_name> use FileDescriptor.sync();Similar;0.5760365724563599
Use a correct implementation of path encoding;correct;Fix support for protobuf <version>+;ExtensionRegistry cannot be null;Similar;0.5492548942565918
Use a correct implementation of path encoding;correct;Fix typo;typo;Similar;0.5983202457427979
Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;Naming, API changes, and documentation around mock services.  ;mock services;Similar;0.616740882396698
Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;Introduce factory for <file_name> concept;This is still highly-inefficient in its internal use and there are no tests proving that we now fail earlier in configuring a service method;Similar;0.8950556516647339
Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;Similar;0.8090865612030029
Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;Remove unused classes from <otherCommit_link>;unused;Similar;0.5335735082626343
Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;Update to OkHttp <version>. Fix a tiny potential NPE;potential NPE;Similar;0.5100840926170349
Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;Fix annotation link;<iden> is gone;Similar;0.5639519095420837
Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;Use the annotations directly for parameter handling.;Before we attempted to normalize the parameter annotations into a name and type model. The introduction of multi-part transfer encodings required something more expressive so the annotation instances themselves were used. This change removes the name and type in favor of using the annotation for everything.;Similar;0.6380064487457275
Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;Expose success type on <method_name>;Theres a bit of a test gap going on for all the variants of successful and erroneous handling of sync, async, and rx. This new behavior is fully tested in all three but more general behavior testing for them will be needed in a follow-up.;Similar;0.7047845125198364
Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;Update <file_name> to latest. Add default constructor.;latest, Add default constructor;Similar;0.7422339916229248
Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;Promote <iden> logging to a class which knows about chunking  ;This is an <iden>-specific implementation detail which is now only performed when needed;Similar;0.6387763619422913
Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;Fix IntelliJ auto-formatting  ;Improve the formatting;Similar;0.6432819366455078
Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;Add path and query tests for pre-encoded values;-;Similar;0.5518022179603577
Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;Add converters module and protobuf converter;to the sentence;Similar;0.602382481098175
Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;Newline at end of file  ;Yes plz;Similar;0.5217758417129517
Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;Fix styling of <iden> download;styling;Similar;0.6612949371337891
Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;Provide a mutable <file_name> implementation. <iden> to conform.;to conform;Similar;0.69962477684021
Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Similar;0.6593504548072815
Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;Allow <file_name> instantiation  ;Hide some Apache implementation details;Similar;0.7060383558273315
Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;Remove unused <file_name> classes;unused;Similar;0.6120879650115967
Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;Introduce builder pattern to instantiate <method_name>;profiler are now optional. Convenience methods for specifying a <iden> or an <iden> directly are also provided.;Similar;0.8231918811798096
Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;Use no_aop Guice variant  ;no_aop;Similar;0.5190756320953369
Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;Adding a human-readable name to the  <file_name>  interface;human-readable;Similar;0.7091116905212402
Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;Added getTag() and logChunk() methods;for easier subclassing;Similar;0.6508492231369019
Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;Reintroduced deprecated <file_name> constructor;deprecated;Similar;0.7451684474945068
Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;Update custom conversion docs per feedback;Clarify that <iden> is just the default converter, Add section on other built-in converters, Add section on implementing your own custom converters;Similar;0.6114321947097778
Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;fix issue <issue_link> : permit use when servers or intermediaries mistakingly miss Content-<iden> header;mistakingly miss Content-<iden> header;Similar;0.5224228501319885
Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;rename <iden> ->  <file_name>  ;to harvest the names for new annotations;Similar;0.7601334452629089
Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;Move variable to where it is used;where it is used;Similar;0.5138441920280457
Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;Fix spelling;spelling;Similar;0.5001845359802246
Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;Add fixed query parameter support;support;Similar;0.6128408312797546
Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;Add <file_name>, <file_name> support to <file_name>  ;-;Similar;0.6764775514602661
Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;Allow <file_name> extensions;improved <file_name>;Similar;0.6681439876556396
Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;Repackage gson into retrofit.internal.gson  ;enhance integration;Similar;0.6239395141601562
Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;Ensure <file_name> and <file_name> use FileDescriptor.sync();Ensure <file_name> and <file_name> use FileDescriptor.sync();Similar;0.6062666177749634
Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;moved util to <file_name>, added <file_name>  ;Organize and enhance code files;Similar;0.7309814095497131
Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;Use <iden> <version>s JsonAdapter.serializeNulls();serializeNulls;Similar;0.6911250352859497
Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;Expose <iden> via the <file_name> injection-like framework;injection-like framework;Similar;0.777359127998352
Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;Changing `<file_name>` to implement `<file_name>` interface;interface;Similar;0.7487319707870483
Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;Fix support for protobuf <version>+;ExtensionRegistry cannot be null;Similar;0.6284608244895935
Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;Fix typo;typo;Similar;0.5841459035873413
Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;Remove redundant throws  ;redundant;Similar;0.5068891048431396
Update RxJava to the specified version with an important Android fix  ;In case someone is relying on the transitive dependency;Update to OkHttp <version>. Fix a tiny potential NPE;potential NPE;Similar;0.5340049266815186
Update RxJava to the specified version with an important Android fix  ;In case someone is relying on the transitive dependency;Update <file_name> to latest. Add default constructor.;latest, Add default constructor;Similar;0.5935247540473938
Update RxJava to the specified version with an important Android fix  ;In case someone is relying on the transitive dependency;Fix IntelliJ auto-formatting  ;Improve the formatting;Similar;0.5544621348381042
Update RxJava to the specified version with an important Android fix  ;In case someone is relying on the transitive dependency;Fix styling of <iden> download;styling;Similar;0.596420168876648
Update RxJava to the specified version with an important Android fix  ;In case someone is relying on the transitive dependency;" 
- Add <iden> <method_name>  
- Also update our sample to use <iden> contributors rather than the <iden>  
- Bump some dependencies to their latest versions  
";" 
- Use this on <iden> <version> and prior and when on the <iden>  
- because the latter is shutting down and subject to lame rate limiting when on common networks";Similar;0.5767459869384766
Update RxJava to the specified version with an important Android fix  ;In case someone is relying on the transitive dependency;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Similar;0.561852216720581
Update RxJava to the specified version with an important Android fix  ;In case someone is relying on the transitive dependency;Fix small wording issues in custom converter docs;small wording issues;Similar;0.5977665185928345
Update RxJava to the specified version with an important Android fix  ;In case someone is relying on the transitive dependency;Update custom conversion docs per feedback;Clarify that <iden> is just the default converter, Add section on other built-in converters, Add section on implementing your own custom converters;Similar;0.5699281096458435
Update RxJava to the specified version with an important Android fix  ;In case someone is relying on the transitive dependency;Fix style nits per review;per review;Similar;0.5066080093383789
Update RxJava to the specified version with an important Android fix  ;In case someone is relying on the transitive dependency;fix issue <issue_link> : permit use when servers or intermediaries mistakingly miss Content-<iden> header;mistakingly miss Content-<iden> header;Similar;0.5346588492393494
Update RxJava to the specified version with an important Android fix  ;In case someone is relying on the transitive dependency;Fix support for protobuf <version>+;ExtensionRegistry cannot be null;Similar;0.5338269472122192
Naming, API changes, and documentation around mock services.  ;mock services;Introduce factory for <file_name> concept;This is still highly-inefficient in its internal use and there are no tests proving that we now fail earlier in configuring a service method;Similar;0.6784865856170654
Naming, API changes, and documentation around mock services.  ;mock services;Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;Similar;0.5434810519218445
Naming, API changes, and documentation around mock services.  ;mock services;Update to OkHttp <version>. Fix a tiny potential NPE;potential NPE;Similar;0.5998391509056091
Naming, API changes, and documentation around mock services.  ;mock services;Fix annotation link;<iden> is gone;Similar;0.6224479079246521
Naming, API changes, and documentation around mock services.  ;mock services;Use the annotations directly for parameter handling.;Before we attempted to normalize the parameter annotations into a name and type model. The introduction of multi-part transfer encodings required something more expressive so the annotation instances themselves were used. This change removes the name and type in favor of using the annotation for everything.;Similar;0.6396635174751282
Naming, API changes, and documentation around mock services.  ;mock services;Expose success type on <method_name>;Theres a bit of a test gap going on for all the variants of successful and erroneous handling of sync, async, and rx. This new behavior is fully tested in all three but more general behavior testing for them will be needed in a follow-up.;Similar;0.6257362365722656
Naming, API changes, and documentation around mock services.  ;mock services;Update <file_name> to latest. Add default constructor.;latest, Add default constructor;Similar;0.5746306777000427
Naming, API changes, and documentation around mock services.  ;mock services;Add simple package info to root package  ;simple;Similar;0.6466754674911499
Naming, API changes, and documentation around mock services.  ;mock services;Promote <iden> logging to a class which knows about chunking  ;This is an <iden>-specific implementation detail which is now only performed when needed;Similar;0.5725388526916504
Naming, API changes, and documentation around mock services.  ;mock services;Fix IntelliJ auto-formatting  ;Improve the formatting;Similar;0.5494676232337952
Naming, API changes, and documentation around mock services.  ;mock services;Add path and query tests for pre-encoded values;-;Similar;0.6997255682945251
Naming, API changes, and documentation around mock services.  ;mock services;Add converters module and protobuf converter;to the sentence;Similar;0.6968210339546204
Naming, API changes, and documentation around mock services.  ;mock services;Newline at end of file  ;Yes plz;Similar;0.5086984038352966
Naming, API changes, and documentation around mock services.  ;mock services;Log network and unexpected exceptions if logging is enabled  ;if logging is enabled;Similar;0.5374239683151245
Naming, API changes, and documentation around mock services.  ;mock services;Fix styling of <iden> download;styling;Similar;0.6789917349815369
Naming, API changes, and documentation around mock services.  ;mock services;Rename pair to field to match annotation;match annotation;Similar;0.5117924213409424
Naming, API changes, and documentation around mock services.  ;mock services;" 
- Add <iden> <method_name>  
- Also update our sample to use <iden> contributors rather than the <iden>  
- Bump some dependencies to their latest versions  
";" 
- Use this on <iden> <version> and prior and when on the <iden>  
- because the latter is shutting down and subject to lame rate limiting when on common networks";Similar;0.5734427571296692
Naming, API changes, and documentation around mock services.  ;mock services;Provide a mutable <file_name> implementation. <iden> to conform.;to conform;Similar;0.6974490880966187
Naming, API changes, and documentation around mock services.  ;mock services;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Similar;0.6507896184921265
Naming, API changes, and documentation around mock services.  ;mock services;Simplify test method fetching;-;Similar;0.5604926347732544
Naming, API changes, and documentation around mock services.  ;mock services;Allow <file_name> instantiation  ;Hide some Apache implementation details;Similar;0.5494216680526733
Naming, API changes, and documentation around mock services.  ;mock services;Hide more implementation details;more implementation details;Similar;0.5958322286605835
Naming, API changes, and documentation around mock services.  ;mock services;Introduce builder pattern to instantiate <method_name>;profiler are now optional. Convenience methods for specifying a <iden> or an <iden> directly are also provided.;Similar;0.6440221071243286
Naming, API changes, and documentation around mock services.  ;mock services;Use no_aop Guice variant  ;no_aop;Similar;0.503061056137085
Naming, API changes, and documentation around mock services.  ;mock services;Adding a human-readable name to the  <file_name>  interface;human-readable;Similar;0.6268404722213745
Naming, API changes, and documentation around mock services.  ;mock services;Added getTag() and logChunk() methods;for easier subclassing;Similar;0.7183245420455933
Naming, API changes, and documentation around mock services.  ;mock services;Reintroduced deprecated <file_name> constructor;deprecated;Similar;0.5949139595031738
Naming, API changes, and documentation around mock services.  ;mock services;Fix small wording issues in custom converter docs;small wording issues;Similar;0.5735341906547546
Naming, API changes, and documentation around mock services.  ;mock services;Update custom conversion docs per feedback;Clarify that <iden> is just the default converter, Add section on other built-in converters, Add section on implementing your own custom converters;Similar;0.6291263699531555
Naming, API changes, and documentation around mock services.  ;mock services;Fix style nits per review;per review;Similar;0.6341973543167114
Naming, API changes, and documentation around mock services.  ;mock services;fix issue <issue_link> : permit use when servers or intermediaries mistakingly miss Content-<iden> header;mistakingly miss Content-<iden> header;Similar;0.5347801446914673
Naming, API changes, and documentation around mock services.  ;mock services;rename <iden> ->  <file_name>  ;to harvest the names for new annotations;Similar;0.6141564249992371
Naming, API changes, and documentation around mock services.  ;mock services;Move variable to where it is used;where it is used;Similar;0.5492189526557922
Naming, API changes, and documentation around mock services.  ;mock services;Fix spelling;spelling;Similar;0.5372484922409058
Naming, API changes, and documentation around mock services.  ;mock services;Add fixed query parameter support;support;Similar;0.6582235097885132
Naming, API changes, and documentation around mock services.  ;mock services;Add <file_name>, <file_name> support to <file_name>  ;-;Similar;0.5924534797668457
Naming, API changes, and documentation around mock services.  ;mock services;Allow <file_name> extensions;improved <file_name>;Similar;0.6396529674530029
Naming, API changes, and documentation around mock services.  ;mock services;Repackage gson into retrofit.internal.gson  ;enhance integration;Similar;0.617689847946167
Naming, API changes, and documentation around mock services.  ;mock services;Ensure <file_name> and <file_name> use FileDescriptor.sync();Ensure <file_name> and <file_name> use FileDescriptor.sync();Similar;0.5945852398872375
Naming, API changes, and documentation around mock services.  ;mock services;moved util to <file_name>, added <file_name>  ;Organize and enhance code files;Similar;0.6201754808425903
Naming, API changes, and documentation around mock services.  ;mock services;Use <iden> <version>s JsonAdapter.serializeNulls();serializeNulls;Similar;0.6594048142433167
Naming, API changes, and documentation around mock services.  ;mock services;Expose <iden> via the <file_name> injection-like framework;injection-like framework;Similar;0.6810476779937744
Naming, API changes, and documentation around mock services.  ;mock services;Changing `<file_name>` to implement `<file_name>` interface;interface;Similar;0.6790343523025513
Naming, API changes, and documentation around mock services.  ;mock services;Fix support for protobuf <version>+;ExtensionRegistry cannot be null;Similar;0.6649231314659119
Naming, API changes, and documentation around mock services.  ;mock services;Fix typo;typo;Similar;0.6054943203926086
Introduce factory for <file_name> concept;This is still highly-inefficient in its internal use and there are no tests proving that we now fail earlier in configuring a service method;Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;Similar;0.7585055828094482
Introduce factory for <file_name> concept;This is still highly-inefficient in its internal use and there are no tests proving that we now fail earlier in configuring a service method;Update to OkHttp <version>. Fix a tiny potential NPE;potential NPE;Similar;0.5509637594223022
Introduce factory for <file_name> concept;This is still highly-inefficient in its internal use and there are no tests proving that we now fail earlier in configuring a service method;Fix annotation link;<iden> is gone;Similar;0.5843761563301086
Introduce factory for <file_name> concept;This is still highly-inefficient in its internal use and there are no tests proving that we now fail earlier in configuring a service method;Use the annotations directly for parameter handling.;Before we attempted to normalize the parameter annotations into a name and type model. The introduction of multi-part transfer encodings required something more expressive so the annotation instances themselves were used. This change removes the name and type in favor of using the annotation for everything.;Similar;0.643726110458374
Introduce factory for <file_name> concept;This is still highly-inefficient in its internal use and there are no tests proving that we now fail earlier in configuring a service method;Expose success type on <method_name>;Theres a bit of a test gap going on for all the variants of successful and erroneous handling of sync, async, and rx. This new behavior is fully tested in all three but more general behavior testing for them will be needed in a follow-up.;Similar;0.7422281503677368
Introduce factory for <file_name> concept;This is still highly-inefficient in its internal use and there are no tests proving that we now fail earlier in configuring a service method;Update <file_name> to latest. Add default constructor.;latest, Add default constructor;Similar;0.7755473852157593
Introduce factory for <file_name> concept;This is still highly-inefficient in its internal use and there are no tests proving that we now fail earlier in configuring a service method;Add simple package info to root package  ;simple;Similar;0.5332097411155701
Introduce factory for <file_name> concept;This is still highly-inefficient in its internal use and there are no tests proving that we now fail earlier in configuring a service method;Promote <iden> logging to a class which knows about chunking  ;This is an <iden>-specific implementation detail which is now only performed when needed;Similar;0.6958569884300232
Introduce factory for <file_name> concept;This is still highly-inefficient in its internal use and there are no tests proving that we now fail earlier in configuring a service method;Fix IntelliJ auto-formatting  ;Improve the formatting;Similar;0.6207753419876099
Introduce factory for <file_name> concept;This is still highly-inefficient in its internal use and there are no tests proving that we now fail earlier in configuring a service method;Add path and query tests for pre-encoded values;-;Similar;0.6218189001083374
Introduce factory for <file_name> concept;This is still highly-inefficient in its internal use and there are no tests proving that we now fail earlier in configuring a service method;Add converters module and protobuf converter;to the sentence;Similar;0.6825718879699707
Introduce factory for <file_name> concept;This is still highly-inefficient in its internal use and there are no tests proving that we now fail earlier in configuring a service method;Newline at end of file  ;Yes plz;Similar;0.5848562717437744
Introduce factory for <file_name> concept;This is still highly-inefficient in its internal use and there are no tests proving that we now fail earlier in configuring a service method;Fix styling of <iden> download;styling;Similar;0.6711989641189575
Introduce factory for <file_name> concept;This is still highly-inefficient in its internal use and there are no tests proving that we now fail earlier in configuring a service method;Rename pair to field to match annotation;match annotation;Similar;0.518427312374115
Introduce factory for <file_name> concept;This is still highly-inefficient in its internal use and there are no tests proving that we now fail earlier in configuring a service method;Provide a mutable <file_name> implementation. <iden> to conform.;to conform;Similar;0.75748211145401
Introduce factory for <file_name> concept;This is still highly-inefficient in its internal use and there are no tests proving that we now fail earlier in configuring a service method;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Similar;0.6615053415298462
Introduce factory for <file_name> concept;This is still highly-inefficient in its internal use and there are no tests proving that we now fail earlier in configuring a service method;Allow <file_name> instantiation  ;Hide some Apache implementation details;Similar;0.7009984850883484
Introduce factory for <file_name> concept;This is still highly-inefficient in its internal use and there are no tests proving that we now fail earlier in configuring a service method;Remove unused <file_name> classes;unused;Similar;0.5702534914016724
Introduce factory for <file_name> concept;This is still highly-inefficient in its internal use and there are no tests proving that we now fail earlier in configuring a service method;Introduce builder pattern to instantiate <method_name>;profiler are now optional. Convenience methods for specifying a <iden> or an <iden> directly are also provided.;Similar;0.8484541177749634
Introduce factory for <file_name> concept;This is still highly-inefficient in its internal use and there are no tests proving that we now fail earlier in configuring a service method;Adding a human-readable name to the  <file_name>  interface;human-readable;Similar;0.7556455135345459
Introduce factory for <file_name> concept;This is still highly-inefficient in its internal use and there are no tests proving that we now fail earlier in configuring a service method;Added getTag() and logChunk() methods;for easier subclassing;Similar;0.6829079985618591
Introduce factory for <file_name> concept;This is still highly-inefficient in its internal use and there are no tests proving that we now fail earlier in configuring a service method;Reintroduced deprecated <file_name> constructor;deprecated;Similar;0.7011746764183044
Introduce factory for <file_name> concept;This is still highly-inefficient in its internal use and there are no tests proving that we now fail earlier in configuring a service method;Update custom conversion docs per feedback;Clarify that <iden> is just the default converter, Add section on other built-in converters, Add section on implementing your own custom converters;Similar;0.6621334552764893
Introduce factory for <file_name> concept;This is still highly-inefficient in its internal use and there are no tests proving that we now fail earlier in configuring a service method;Fix style nits per review;per review;Similar;0.5050930976867676
Introduce factory for <file_name> concept;This is still highly-inefficient in its internal use and there are no tests proving that we now fail earlier in configuring a service method;rename <iden> ->  <file_name>  ;to harvest the names for new annotations;Similar;0.754370927810669
Introduce factory for <file_name> concept;This is still highly-inefficient in its internal use and there are no tests proving that we now fail earlier in configuring a service method;Move variable to where it is used;where it is used;Similar;0.5103405714035034
Introduce factory for <file_name> concept;This is still highly-inefficient in its internal use and there are no tests proving that we now fail earlier in configuring a service method;Add fixed query parameter support;support;Similar;0.6195155382156372
Introduce factory for <file_name> concept;This is still highly-inefficient in its internal use and there are no tests proving that we now fail earlier in configuring a service method;Add <file_name>, <file_name> support to <file_name>  ;-;Similar;0.7133183479309082
Introduce factory for <file_name> concept;This is still highly-inefficient in its internal use and there are no tests proving that we now fail earlier in configuring a service method;Allow <file_name> extensions;improved <file_name>;Similar;0.718536376953125
Introduce factory for <file_name> concept;This is still highly-inefficient in its internal use and there are no tests proving that we now fail earlier in configuring a service method;Repackage gson into retrofit.internal.gson  ;enhance integration;Similar;0.6380530595779419
Introduce factory for <file_name> concept;This is still highly-inefficient in its internal use and there are no tests proving that we now fail earlier in configuring a service method;Ensure <file_name> and <file_name> use FileDescriptor.sync();Ensure <file_name> and <file_name> use FileDescriptor.sync();Similar;0.647760808467865
Introduce factory for <file_name> concept;This is still highly-inefficient in its internal use and there are no tests proving that we now fail earlier in configuring a service method;moved util to <file_name>, added <file_name>  ;Organize and enhance code files;Similar;0.7386994361877441
Introduce factory for <file_name> concept;This is still highly-inefficient in its internal use and there are no tests proving that we now fail earlier in configuring a service method;Use <iden> <version>s JsonAdapter.serializeNulls();serializeNulls;Similar;0.7089856863021851
Introduce factory for <file_name> concept;This is still highly-inefficient in its internal use and there are no tests proving that we now fail earlier in configuring a service method;Expose <iden> via the <file_name> injection-like framework;injection-like framework;Similar;0.8076765537261963
Introduce factory for <file_name> concept;This is still highly-inefficient in its internal use and there are no tests proving that we now fail earlier in configuring a service method;Changing `<file_name>` to implement `<file_name>` interface;interface;Similar;0.7698201537132263
Introduce factory for <file_name> concept;This is still highly-inefficient in its internal use and there are no tests proving that we now fail earlier in configuring a service method;Fix support for protobuf <version>+;ExtensionRegistry cannot be null;Similar;0.6635971665382385
Introduce factory for <file_name> concept;This is still highly-inefficient in its internal use and there are no tests proving that we now fail earlier in configuring a service method;Fix typo;typo;Similar;0.5854966640472412
Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;Remove unused classes from <otherCommit_link>;unused;Similar;0.7274312973022461
Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;Update to OkHttp <version>. Fix a tiny potential NPE;potential NPE;Similar;0.6087222099304199
Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;Fix annotation link;<iden> is gone;Similar;0.6331871747970581
Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;Use the annotations directly for parameter handling.;Before we attempted to normalize the parameter annotations into a name and type model. The introduction of multi-part transfer encodings required something more expressive so the annotation instances themselves were used. This change removes the name and type in favor of using the annotation for everything.;Similar;0.6260451078414917
Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;Expose success type on <method_name>;Theres a bit of a test gap going on for all the variants of successful and erroneous handling of sync, async, and rx. This new behavior is fully tested in all three but more general behavior testing for them will be needed in a follow-up.;Similar;0.6526219844818115
Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;Update <file_name> to latest. Add default constructor.;latest, Add default constructor;Similar;0.7279982566833496
Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;Promote <iden> logging to a class which knows about chunking  ;This is an <iden>-specific implementation detail which is now only performed when needed;Similar;0.5977619290351868
Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;Fix IntelliJ auto-formatting  ;Improve the formatting;Similar;0.7147743701934814
Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;Add path and query tests for pre-encoded values;-;Similar;0.5884642601013184
Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;Add converters module and protobuf converter;to the sentence;Similar;0.6057623624801636
Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;Newline at end of file  ;Yes plz;Similar;0.6395794153213501
Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;Fix styling of <iden> download;styling;Similar;0.6698827743530273
Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;Rename pair to field to match annotation;match annotation;Similar;0.5356044769287109
Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;" 
- Add <iden> <method_name>  
- Also update our sample to use <iden> contributors rather than the <iden>  
- Bump some dependencies to their latest versions  
";" 
- Use this on <iden> <version> and prior and when on the <iden>  
- because the latter is shutting down and subject to lame rate limiting when on common networks";Similar;0.5430962443351746
Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;Provide a mutable <file_name> implementation. <iden> to conform.;to conform;Similar;0.6685183048248291
Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Similar;0.7142524719238281
Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;Allow <file_name> instantiation  ;Hide some Apache implementation details;Similar;0.6814056634902954
Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;Remove unused <file_name> classes;unused;Similar;0.7911443710327148
Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;Introduce builder pattern to instantiate <method_name>;profiler are now optional. Convenience methods for specifying a <iden> or an <iden> directly are also provided.;Similar;0.7541060447692871
Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;Use no_aop Guice variant  ;no_aop;Similar;0.5744534134864807
Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;Adding a human-readable name to the  <file_name>  interface;human-readable;Similar;0.6600419282913208
Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;Added getTag() and logChunk() methods;for easier subclassing;Similar;0.6490459442138672
Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;Reintroduced deprecated <file_name> constructor;deprecated;Similar;0.8587321043014526
Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;Update custom conversion docs per feedback;Clarify that <iden> is just the default converter, Add section on other built-in converters, Add section on implementing your own custom converters;Similar;0.6070774793624878
Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;Fix style nits per review;per review;Similar;0.5187293291091919
Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;fix issue <issue_link> : permit use when servers or intermediaries mistakingly miss Content-<iden> header;mistakingly miss Content-<iden> header;Similar;0.60306316614151
Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;rename <iden> ->  <file_name>  ;to harvest the names for new annotations;Similar;0.778727650642395
Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;Move variable to where it is used;where it is used;Similar;0.5664160251617432
Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;Fix spelling;spelling;Similar;0.5503631234169006
Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;Add fixed query parameter support;support;Similar;0.6195851564407349
Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;Add <file_name>, <file_name> support to <file_name>  ;-;Similar;0.6216409802436829
Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;Allow <file_name> extensions;improved <file_name>;Similar;0.633637547492981
Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;Repackage gson into retrofit.internal.gson  ;enhance integration;Similar;0.7148212194442749
Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;Ensure <file_name> and <file_name> use FileDescriptor.sync();Ensure <file_name> and <file_name> use FileDescriptor.sync();Similar;0.6093325614929199
Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;moved util to <file_name>, added <file_name>  ;Organize and enhance code files;Similar;0.724395751953125
Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;Use <iden> <version>s JsonAdapter.serializeNulls();serializeNulls;Similar;0.6658050417900085
Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;Removal of Unnecessary Creation of <iden>;if <iden> has length 0 there is no point to create stringBuilder for that. that condition check needs to happen before stringBuilder creation.;Similar;0.633685290813446
Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;Expose <iden> via the <file_name> injection-like framework;injection-like framework;Similar;0.7291773557662964
Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;Changing `<file_name>` to implement `<file_name>` interface;interface;Similar;0.7704136967658997
Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;Fix support for protobuf <version>+;ExtensionRegistry cannot be null;Similar;0.6655198931694031
Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;Fix typo;typo;Similar;0.5894845724105835
Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;Remove redundant throws  ;redundant;Similar;0.6326007843017578
Remove unused classes from <otherCommit_link>;unused;Update to OkHttp <version>. Fix a tiny potential NPE;potential NPE;Similar;0.5816027522087097
Remove unused classes from <otherCommit_link>;unused;Fix annotation link;<iden> is gone;Similar;0.6164119243621826
Remove unused classes from <otherCommit_link>;unused;Use the annotations directly for parameter handling.;Before we attempted to normalize the parameter annotations into a name and type model. The introduction of multi-part transfer encodings required something more expressive so the annotation instances themselves were used. This change removes the name and type in favor of using the annotation for everything.;Similar;0.533271312713623
Remove unused classes from <otherCommit_link>;unused;Expose success type on <method_name>;Theres a bit of a test gap going on for all the variants of successful and erroneous handling of sync, async, and rx. This new behavior is fully tested in all three but more general behavior testing for them will be needed in a follow-up.;Similar;0.5574997067451477
Remove unused classes from <otherCommit_link>;unused;Properly name ignored exception in catch block  ;Properly naming;Similar;0.7111756801605225
Remove unused classes from <otherCommit_link>;unused;Fix IntelliJ auto-formatting  ;Improve the formatting;Similar;0.5806118845939636
Remove unused classes from <otherCommit_link>;unused;Newline at end of file  ;Yes plz;Similar;0.5760074853897095
Remove unused classes from <otherCommit_link>;unused;Fix styling of <iden> download;styling;Similar;0.5649240016937256
Remove unused classes from <otherCommit_link>;unused;Provide a mutable <file_name> implementation. <iden> to conform.;to conform;Similar;0.5118082761764526
Remove unused classes from <otherCommit_link>;unused;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Similar;0.5893898606300354
Remove unused classes from <otherCommit_link>;unused;Allow <file_name> instantiation  ;Hide some Apache implementation details;Similar;0.579097330570221
Remove unused classes from <otherCommit_link>;unused;Hide more implementation details;more implementation details;Similar;0.5681488513946533
Remove unused classes from <otherCommit_link>;unused;Remove unused <file_name> classes;unused;Similar;0.9447469711303711
Remove unused classes from <otherCommit_link>;unused;Introduce builder pattern to instantiate <method_name>;profiler are now optional. Convenience methods for specifying a <iden> or an <iden> directly are also provided.;Similar;0.5120455026626587
Remove unused classes from <otherCommit_link>;unused;Use no_aop Guice variant  ;no_aop;Similar;0.780166506767273
Remove unused classes from <otherCommit_link>;unused;Added getTag() and logChunk() methods;for easier subclassing;Similar;0.5268431901931763
Remove unused classes from <otherCommit_link>;unused;Reintroduced deprecated <file_name> constructor;deprecated;Similar;0.8177813291549683
Remove unused classes from <otherCommit_link>;unused;Fix style nits per review;per review;Similar;0.5510517358779907
Remove unused classes from <otherCommit_link>;unused;fix issue <issue_link> : permit use when servers or intermediaries mistakingly miss Content-<iden> header;mistakingly miss Content-<iden> header;Similar;0.5849655270576477
Remove unused classes from <otherCommit_link>;unused;rename <iden> ->  <file_name>  ;to harvest the names for new annotations;Similar;0.6430033445358276
Remove unused classes from <otherCommit_link>;unused;Move variable to where it is used;where it is used;Similar;0.6166393756866455
Remove unused classes from <otherCommit_link>;unused;Fix spelling;spelling;Similar;0.5837192535400391
Remove unused classes from <otherCommit_link>;unused;Add fixed query parameter support;support;Similar;0.5970863699913025
Remove unused classes from <otherCommit_link>;unused;Allow <file_name> extensions;improved <file_name>;Similar;0.5961392521858215
Remove unused classes from <otherCommit_link>;unused;Repackage gson into retrofit.internal.gson  ;enhance integration;Similar;0.6117976903915405
Remove unused classes from <otherCommit_link>;unused;Ensure <file_name> and <file_name> use FileDescriptor.sync();Ensure <file_name> and <file_name> use FileDescriptor.sync();Similar;0.5008614659309387
Remove unused classes from <otherCommit_link>;unused;moved util to <file_name>, added <file_name>  ;Organize and enhance code files;Similar;0.5761579275131226
Remove unused classes from <otherCommit_link>;unused;Use <iden> <version>s JsonAdapter.serializeNulls();serializeNulls;Similar;0.5865328311920166
Remove unused classes from <otherCommit_link>;unused;Removal of Unnecessary Creation of <iden>;if <iden> has length 0 there is no point to create stringBuilder for that. that condition check needs to happen before stringBuilder creation.;Similar;0.8493497967720032
Remove unused classes from <otherCommit_link>;unused;Expose <iden> via the <file_name> injection-like framework;injection-like framework;Similar;0.541161298751831
Remove unused classes from <otherCommit_link>;unused;Changing `<file_name>` to implement `<file_name>` interface;interface;Similar;0.5812510251998901
Remove unused classes from <otherCommit_link>;unused;Fix support for protobuf <version>+;ExtensionRegistry cannot be null;Similar;0.6154026985168457
Remove unused classes from <otherCommit_link>;unused;Fix typo;typo;Similar;0.5756713151931763
Remove unused classes from <otherCommit_link>;unused;Remove redundant throws  ;redundant;Similar;0.7650210857391357
Update to OkHttp <version>. Fix a tiny potential NPE;potential NPE;Fix annotation link;<iden> is gone;Similar;0.7050259113311768
Update to OkHttp <version>. Fix a tiny potential NPE;potential NPE;Expose success type on <method_name>;Theres a bit of a test gap going on for all the variants of successful and erroneous handling of sync, async, and rx. This new behavior is fully tested in all three but more general behavior testing for them will be needed in a follow-up.;Similar;0.5766218900680542
Update to OkHttp <version>. Fix a tiny potential NPE;potential NPE;Update <file_name> to latest. Add default constructor.;latest, Add default constructor;Similar;0.601374626159668
Update to OkHttp <version>. Fix a tiny potential NPE;potential NPE;Add simple package info to root package  ;simple;Similar;0.7168495655059814
Update to OkHttp <version>. Fix a tiny potential NPE;potential NPE;Correct header length checking logic. Improve exception message;Improve;Similar;0.5365976095199585
Update to OkHttp <version>. Fix a tiny potential NPE;potential NPE;Promote <iden> logging to a class which knows about chunking  ;This is an <iden>-specific implementation detail which is now only performed when needed;Similar;0.5847707986831665
Update to OkHttp <version>. Fix a tiny potential NPE;potential NPE;Fix IntelliJ auto-formatting  ;Improve the formatting;Similar;0.6819930076599121
Update to OkHttp <version>. Fix a tiny potential NPE;potential NPE;Add path and query tests for pre-encoded values;-;Similar;0.5788723230361938
Update to OkHttp <version>. Fix a tiny potential NPE;potential NPE;Add converters module and protobuf converter;to the sentence;Similar;0.5544646382331848
Update to OkHttp <version>. Fix a tiny potential NPE;potential NPE;Newline at end of file  ;Yes plz;Similar;0.6620559692382812
Update to OkHttp <version>. Fix a tiny potential NPE;potential NPE;Log network and unexpected exceptions if logging is enabled  ;if logging is enabled;Similar;0.5893237590789795
Update to OkHttp <version>. Fix a tiny potential NPE;potential NPE;Fix styling of <iden> download;styling;Similar;0.7185699939727783
Update to OkHttp <version>. Fix a tiny potential NPE;potential NPE;" 
- Add <iden> <method_name>  
- Also update our sample to use <iden> contributors rather than the <iden>  
- Bump some dependencies to their latest versions  
";" 
- Use this on <iden> <version> and prior and when on the <iden>  
- because the latter is shutting down and subject to lame rate limiting when on common networks";Similar;0.6027261018753052
Update to OkHttp <version>. Fix a tiny potential NPE;potential NPE;Provide a mutable <file_name> implementation. <iden> to conform.;to conform;Similar;0.6053744554519653
Update to OkHttp <version>. Fix a tiny potential NPE;potential NPE;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Similar;0.6713136434555054
Update to OkHttp <version>. Fix a tiny potential NPE;potential NPE;Simplify test method fetching;-;Similar;0.6457507610321045
Update to OkHttp <version>. Fix a tiny potential NPE;potential NPE;Allow <file_name> instantiation  ;Hide some Apache implementation details;Similar;0.5757819414138794
Update to OkHttp <version>. Fix a tiny potential NPE;potential NPE;Hide more implementation details;more implementation details;Similar;0.6200688481330872
Update to OkHttp <version>. Fix a tiny potential NPE;potential NPE;Remove unused <file_name> classes;unused;Similar;0.582656979560852
Update to OkHttp <version>. Fix a tiny potential NPE;potential NPE;Introduce builder pattern to instantiate <method_name>;profiler are now optional. Convenience methods for specifying a <iden> or an <iden> directly are also provided.;Similar;0.5776937007904053
Update to OkHttp <version>. Fix a tiny potential NPE;potential NPE;Use no_aop Guice variant  ;no_aop;Similar;0.5667932033538818
Update to OkHttp <version>. Fix a tiny potential NPE;potential NPE;Adding a human-readable name to the  <file_name>  interface;human-readable;Similar;0.5136248469352722
Update to OkHttp <version>. Fix a tiny potential NPE;potential NPE;Added getTag() and logChunk() methods;for easier subclassing;Similar;0.5578007698059082
Update to OkHttp <version>. Fix a tiny potential NPE;potential NPE;Reintroduced deprecated <file_name> constructor;deprecated;Similar;0.6519895792007446
Update to OkHttp <version>. Fix a tiny potential NPE;potential NPE;Fix small wording issues in custom converter docs;small wording issues;Similar;0.7568274140357971
Update to OkHttp <version>. Fix a tiny potential NPE;potential NPE;Update custom conversion docs per feedback;Clarify that <iden> is just the default converter, Add section on other built-in converters, Add section on implementing your own custom converters;Similar;0.6179695129394531
Update to OkHttp <version>. Fix a tiny potential NPE;potential NPE;Fix style nits per review;per review;Similar;0.7394647002220154
Update to OkHttp <version>. Fix a tiny potential NPE;potential NPE;fix issue <issue_link> : permit use when servers or intermediaries mistakingly miss Content-<iden> header;mistakingly miss Content-<iden> header;Similar;0.6599149703979492
Update to OkHttp <version>. Fix a tiny potential NPE;potential NPE;rename <iden> ->  <file_name>  ;to harvest the names for new annotations;Similar;0.5238026976585388
Update to OkHttp <version>. Fix a tiny potential NPE;potential NPE;Fix spelling;spelling;Similar;0.7130172848701477
Update to OkHttp <version>. Fix a tiny potential NPE;potential NPE;Add fixed query parameter support;support;Similar;0.6452909708023071
Update to OkHttp <version>. Fix a tiny potential NPE;potential NPE;Allow <file_name> extensions;improved <file_name>;Similar;0.5585346221923828
Update to OkHttp <version>. Fix a tiny potential NPE;potential NPE;Repackage gson into retrofit.internal.gson  ;enhance integration;Similar;0.5677863359451294
Update to OkHttp <version>. Fix a tiny potential NPE;potential NPE;Ensure <file_name> and <file_name> use FileDescriptor.sync();Ensure <file_name> and <file_name> use FileDescriptor.sync();Similar;0.5033195614814758
Update to OkHttp <version>. Fix a tiny potential NPE;potential NPE;moved util to <file_name>, added <file_name>  ;Organize and enhance code files;Similar;0.5218506455421448
Update to OkHttp <version>. Fix a tiny potential NPE;potential NPE;Use <iden> <version>s JsonAdapter.serializeNulls();serializeNulls;Similar;0.558946967124939
Update to OkHttp <version>. Fix a tiny potential NPE;potential NPE;Removal of Unnecessary Creation of <iden>;if <iden> has length 0 there is no point to create stringBuilder for that. that condition check needs to happen before stringBuilder creation.;Similar;0.6250721216201782
Update to OkHttp <version>. Fix a tiny potential NPE;potential NPE;Expose <iden> via the <file_name> injection-like framework;injection-like framework;Similar;0.5229390859603882
Update to OkHttp <version>. Fix a tiny potential NPE;potential NPE;Changing `<file_name>` to implement `<file_name>` interface;interface;Similar;0.5725943446159363
Update to OkHttp <version>. Fix a tiny potential NPE;potential NPE;Fix support for protobuf <version>+;ExtensionRegistry cannot be null;Similar;0.7493504285812378
Update to OkHttp <version>. Fix a tiny potential NPE;potential NPE;Fix typo;typo;Similar;0.6850414872169495
Update to OkHttp <version>. Fix a tiny potential NPE;potential NPE;Remove redundant throws  ;redundant;Similar;0.5615946054458618
Fix annotation link;<iden> is gone;Use the annotations directly for parameter handling.;Before we attempted to normalize the parameter annotations into a name and type model. The introduction of multi-part transfer encodings required something more expressive so the annotation instances themselves were used. This change removes the name and type in favor of using the annotation for everything.;Similar;0.7078740000724792
Fix annotation link;<iden> is gone;Expose success type on <method_name>;Theres a bit of a test gap going on for all the variants of successful and erroneous handling of sync, async, and rx. This new behavior is fully tested in all three but more general behavior testing for them will be needed in a follow-up.;Similar;0.6979022026062012
Fix annotation link;<iden> is gone;Correct map parameter type detection for query and field  ;-;Similar;0.5811550617218018
Fix annotation link;<iden> is gone;Update <file_name> to latest. Add default constructor.;latest, Add default constructor;Similar;0.6530053615570068
Fix annotation link;<iden> is gone;Add simple package info to root package  ;simple;Similar;0.649261474609375
Fix annotation link;<iden> is gone;Correct header length checking logic. Improve exception message;Improve;Similar;0.6550113558769226
Fix annotation link;<iden> is gone;Promote <iden> logging to a class which knows about chunking  ;This is an <iden>-specific implementation detail which is now only performed when needed;Similar;0.5623903870582581
Fix annotation link;<iden> is gone;Fix IntelliJ auto-formatting  ;Improve the formatting;Similar;0.8549141883850098
Fix annotation link;<iden> is gone;Add path and query tests for pre-encoded values;-;Similar;0.6919578313827515
Fix annotation link;<iden> is gone;Add converters module and protobuf converter;to the sentence;Similar;0.7014212012290955
Fix annotation link;<iden> is gone;Newline at end of file  ;Yes plz;Similar;0.6549887657165527
Fix annotation link;<iden> is gone;Log network and unexpected exceptions if logging is enabled  ;if logging is enabled;Similar;0.580777645111084
Fix annotation link;<iden> is gone;Fix styling of <iden> download;styling;Similar;0.8220888376235962
Fix annotation link;<iden> is gone;Rename pair to field to match annotation;match annotation;Similar;0.5625787973403931
Fix annotation link;<iden> is gone;" 
- Add <iden> <method_name>  
- Also update our sample to use <iden> contributors rather than the <iden>  
- Bump some dependencies to their latest versions  
";" 
- Use this on <iden> <version> and prior and when on the <iden>  
- because the latter is shutting down and subject to lame rate limiting when on common networks";Similar;0.5027836561203003
Fix annotation link;<iden> is gone;Provide a mutable <file_name> implementation. <iden> to conform.;to conform;Similar;0.7451163530349731
Fix annotation link;<iden> is gone;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Similar;0.5857359766960144
Fix annotation link;<iden> is gone;Simplify test method fetching;-;Similar;0.6975936889648438
Fix annotation link;<iden> is gone;Allow <file_name> instantiation  ;Hide some Apache implementation details;Similar;0.7202122211456299
Fix annotation link;<iden> is gone;Hide more implementation details;more implementation details;Similar;0.6757954359054565
Fix annotation link;<iden> is gone;Remove unused <file_name> classes;unused;Similar;0.5982627868652344
Fix annotation link;<iden> is gone;Introduce builder pattern to instantiate <method_name>;profiler are now optional. Convenience methods for specifying a <iden> or an <iden> directly are also provided.;Similar;0.6602927446365356
Fix annotation link;<iden> is gone;Use no_aop Guice variant  ;no_aop;Similar;0.6165658235549927
Fix annotation link;<iden> is gone;Adding a human-readable name to the  <file_name>  interface;human-readable;Similar;0.6188688278198242
Fix annotation link;<iden> is gone;Added getTag() and logChunk() methods;for easier subclassing;Similar;0.6282106041908264
Fix annotation link;<iden> is gone;Reintroduced deprecated <file_name> constructor;deprecated;Similar;0.6891713738441467
Fix annotation link;<iden> is gone;Fix small wording issues in custom converter docs;small wording issues;Similar;0.5907808542251587
Fix annotation link;<iden> is gone;Update custom conversion docs per feedback;Clarify that <iden> is just the default converter, Add section on other built-in converters, Add section on implementing your own custom converters;Similar;0.6493383646011353
Fix annotation link;<iden> is gone;Fix style nits per review;per review;Similar;0.760806679725647
Fix annotation link;<iden> is gone;fix issue <issue_link> : permit use when servers or intermediaries mistakingly miss Content-<iden> header;mistakingly miss Content-<iden> header;Similar;0.6422974467277527
Fix annotation link;<iden> is gone;rename <iden> ->  <file_name>  ;to harvest the names for new annotations;Similar;0.7025008797645569
Fix annotation link;<iden> is gone;Move variable to where it is used;where it is used;Similar;0.6898791790008545
Fix annotation link;<iden> is gone;Fix spelling;spelling;Similar;0.8247721195220947
Fix annotation link;<iden> is gone;Add fixed query parameter support;support;Similar;0.8516250848770142
Fix annotation link;<iden> is gone;Add <file_name>, <file_name> support to <file_name>  ;-;Similar;0.6961103677749634
Fix annotation link;<iden> is gone;Allow <file_name> extensions;improved <file_name>;Similar;0.7245063781738281
Fix annotation link;<iden> is gone;Repackage gson into retrofit.internal.gson  ;enhance integration;Similar;0.7387674450874329
Fix annotation link;<iden> is gone;Ensure <file_name> and <file_name> use FileDescriptor.sync();Ensure <file_name> and <file_name> use FileDescriptor.sync();Similar;0.7115513682365417
Fix annotation link;<iden> is gone;moved util to <file_name>, added <file_name>  ;Organize and enhance code files;Similar;0.7108832597732544
Fix annotation link;<iden> is gone;Use <iden> <version>s JsonAdapter.serializeNulls();serializeNulls;Similar;0.7120841145515442
Fix annotation link;<iden> is gone;Removal of Unnecessary Creation of <iden>;if <iden> has length 0 there is no point to create stringBuilder for that. that condition check needs to happen before stringBuilder creation.;Similar;0.6450833678245544
Fix annotation link;<iden> is gone;Expose <iden> via the <file_name> injection-like framework;injection-like framework;Similar;0.6465803980827332
Fix annotation link;<iden> is gone;Changing `<file_name>` to implement `<file_name>` interface;interface;Similar;0.7227985858917236
Fix annotation link;<iden> is gone;Fix support for protobuf <version>+;ExtensionRegistry cannot be null;Similar;0.8417033553123474
Fix annotation link;<iden> is gone;Fix typo;typo;Similar;0.8992551565170288
Fix annotation link;<iden> is gone;Remove redundant throws  ;redundant;Similar;0.6117316484451294
Use the annotations directly for parameter handling.;Before we attempted to normalize the parameter annotations into a name and type model. The introduction of multi-part transfer encodings required something more expressive so the annotation instances themselves were used. This change removes the name and type in favor of using the annotation for everything.;Expose success type on <method_name>;Theres a bit of a test gap going on for all the variants of successful and erroneous handling of sync, async, and rx. This new behavior is fully tested in all three but more general behavior testing for them will be needed in a follow-up.;Similar;0.7436317205429077
Use the annotations directly for parameter handling.;Before we attempted to normalize the parameter annotations into a name and type model. The introduction of multi-part transfer encodings required something more expressive so the annotation instances themselves were used. This change removes the name and type in favor of using the annotation for everything.;Correct map parameter type detection for query and field  ;-;Similar;0.5855050683021545
Use the annotations directly for parameter handling.;Before we attempted to normalize the parameter annotations into a name and type model. The introduction of multi-part transfer encodings required something more expressive so the annotation instances themselves were used. This change removes the name and type in favor of using the annotation for everything.;Update <file_name> to latest. Add default constructor.;latest, Add default constructor;Similar;0.6113589406013489
Use the annotations directly for parameter handling.;Before we attempted to normalize the parameter annotations into a name and type model. The introduction of multi-part transfer encodings required something more expressive so the annotation instances themselves were used. This change removes the name and type in favor of using the annotation for everything.;Add simple package info to root package  ;simple;Similar;0.5724039077758789
Use the annotations directly for parameter handling.;Before we attempted to normalize the parameter annotations into a name and type model. The introduction of multi-part transfer encodings required something more expressive so the annotation instances themselves were used. This change removes the name and type in favor of using the annotation for everything.;Correct header length checking logic. Improve exception message;Improve;Similar;0.5581552982330322
Use the annotations directly for parameter handling.;Before we attempted to normalize the parameter annotations into a name and type model. The introduction of multi-part transfer encodings required something more expressive so the annotation instances themselves were used. This change removes the name and type in favor of using the annotation for everything.;Promote <iden> logging to a class which knows about chunking  ;This is an <iden>-specific implementation detail which is now only performed when needed;Similar;0.5822516679763794
Use the annotations directly for parameter handling.;Before we attempted to normalize the parameter annotations into a name and type model. The introduction of multi-part transfer encodings required something more expressive so the annotation instances themselves were used. This change removes the name and type in favor of using the annotation for everything.;Fix IntelliJ auto-formatting  ;Improve the formatting;Similar;0.6566082239151001
Use the annotations directly for parameter handling.;Before we attempted to normalize the parameter annotations into a name and type model. The introduction of multi-part transfer encodings required something more expressive so the annotation instances themselves were used. This change removes the name and type in favor of using the annotation for everything.;Add path and query tests for pre-encoded values;-;Similar;0.7263306379318237
Use the annotations directly for parameter handling.;Before we attempted to normalize the parameter annotations into a name and type model. The introduction of multi-part transfer encodings required something more expressive so the annotation instances themselves were used. This change removes the name and type in favor of using the annotation for everything.;Add converters module and protobuf converter;to the sentence;Similar;0.6031324863433838
Use the annotations directly for parameter handling.;Before we attempted to normalize the parameter annotations into a name and type model. The introduction of multi-part transfer encodings required something more expressive so the annotation instances themselves were used. This change removes the name and type in favor of using the annotation for everything.;Newline at end of file  ;Yes plz;Similar;0.5246590375900269
Use the annotations directly for parameter handling.;Before we attempted to normalize the parameter annotations into a name and type model. The introduction of multi-part transfer encodings required something more expressive so the annotation instances themselves were used. This change removes the name and type in favor of using the annotation for everything.;Log network and unexpected exceptions if logging is enabled  ;if logging is enabled;Similar;0.5516771674156189
Use the annotations directly for parameter handling.;Before we attempted to normalize the parameter annotations into a name and type model. The introduction of multi-part transfer encodings required something more expressive so the annotation instances themselves were used. This change removes the name and type in favor of using the annotation for everything.;Fix styling of <iden> download;styling;Similar;0.6555047035217285
Use the annotations directly for parameter handling.;Before we attempted to normalize the parameter annotations into a name and type model. The introduction of multi-part transfer encodings required something more expressive so the annotation instances themselves were used. This change removes the name and type in favor of using the annotation for everything.;Rename pair to field to match annotation;match annotation;Similar;0.5255698561668396
Use the annotations directly for parameter handling.;Before we attempted to normalize the parameter annotations into a name and type model. The introduction of multi-part transfer encodings required something more expressive so the annotation instances themselves were used. This change removes the name and type in favor of using the annotation for everything.;Provide a mutable <file_name> implementation. <iden> to conform.;to conform;Similar;0.7478311061859131
Use the annotations directly for parameter handling.;Before we attempted to normalize the parameter annotations into a name and type model. The introduction of multi-part transfer encodings required something more expressive so the annotation instances themselves were used. This change removes the name and type in favor of using the annotation for everything.;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Similar;0.5012834668159485
Use the annotations directly for parameter handling.;Before we attempted to normalize the parameter annotations into a name and type model. The introduction of multi-part transfer encodings required something more expressive so the annotation instances themselves were used. This change removes the name and type in favor of using the annotation for everything.;Simplify test method fetching;-;Similar;0.5947442054748535
Use the annotations directly for parameter handling.;Before we attempted to normalize the parameter annotations into a name and type model. The introduction of multi-part transfer encodings required something more expressive so the annotation instances themselves were used. This change removes the name and type in favor of using the annotation for everything.;Allow <file_name> instantiation  ;Hide some Apache implementation details;Similar;0.730698823928833
Use the annotations directly for parameter handling.;Before we attempted to normalize the parameter annotations into a name and type model. The introduction of multi-part transfer encodings required something more expressive so the annotation instances themselves were used. This change removes the name and type in favor of using the annotation for everything.;Hide more implementation details;more implementation details;Similar;0.508762001991272
Use the annotations directly for parameter handling.;Before we attempted to normalize the parameter annotations into a name and type model. The introduction of multi-part transfer encodings required something more expressive so the annotation instances themselves were used. This change removes the name and type in favor of using the annotation for everything.;Remove unused <file_name> classes;unused;Similar;0.5136051177978516
Use the annotations directly for parameter handling.;Before we attempted to normalize the parameter annotations into a name and type model. The introduction of multi-part transfer encodings required something more expressive so the annotation instances themselves were used. This change removes the name and type in favor of using the annotation for everything.;Introduce builder pattern to instantiate <method_name>;profiler are now optional. Convenience methods for specifying a <iden> or an <iden> directly are also provided.;Similar;0.7294827103614807
Use the annotations directly for parameter handling.;Before we attempted to normalize the parameter annotations into a name and type model. The introduction of multi-part transfer encodings required something more expressive so the annotation instances themselves were used. This change removes the name and type in favor of using the annotation for everything.;Use no_aop Guice variant  ;no_aop;Similar;0.5621049404144287
Use the annotations directly for parameter handling.;Before we attempted to normalize the parameter annotations into a name and type model. The introduction of multi-part transfer encodings required something more expressive so the annotation instances themselves were used. This change removes the name and type in favor of using the annotation for everything.;Adding a human-readable name to the  <file_name>  interface;human-readable;Similar;0.7149036526679993
Use the annotations directly for parameter handling.;Before we attempted to normalize the parameter annotations into a name and type model. The introduction of multi-part transfer encodings required something more expressive so the annotation instances themselves were used. This change removes the name and type in favor of using the annotation for everything.;Added getTag() and logChunk() methods;for easier subclassing;Similar;0.6412482261657715
Use the annotations directly for parameter handling.;Before we attempted to normalize the parameter annotations into a name and type model. The introduction of multi-part transfer encodings required something more expressive so the annotation instances themselves were used. This change removes the name and type in favor of using the annotation for everything.;Reintroduced deprecated <file_name> constructor;deprecated;Similar;0.5966772437095642
Use the annotations directly for parameter handling.;Before we attempted to normalize the parameter annotations into a name and type model. The introduction of multi-part transfer encodings required something more expressive so the annotation instances themselves were used. This change removes the name and type in favor of using the annotation for everything.;Update custom conversion docs per feedback;Clarify that <iden> is just the default converter, Add section on other built-in converters, Add section on implementing your own custom converters;Similar;0.633551836013794
Use the annotations directly for parameter handling.;Before we attempted to normalize the parameter annotations into a name and type model. The introduction of multi-part transfer encodings required something more expressive so the annotation instances themselves were used. This change removes the name and type in favor of using the annotation for everything.;Fix style nits per review;per review;Similar;0.5466254949569702
Use the annotations directly for parameter handling.;Before we attempted to normalize the parameter annotations into a name and type model. The introduction of multi-part transfer encodings required something more expressive so the annotation instances themselves were used. This change removes the name and type in favor of using the annotation for everything.;fix issue <issue_link> : permit use when servers or intermediaries mistakingly miss Content-<iden> header;mistakingly miss Content-<iden> header;Similar;0.5090782046318054
Use the annotations directly for parameter handling.;Before we attempted to normalize the parameter annotations into a name and type model. The introduction of multi-part transfer encodings required something more expressive so the annotation instances themselves were used. This change removes the name and type in favor of using the annotation for everything.;rename <iden> ->  <file_name>  ;to harvest the names for new annotations;Similar;0.6886551976203918
Use the annotations directly for parameter handling.;Before we attempted to normalize the parameter annotations into a name and type model. The introduction of multi-part transfer encodings required something more expressive so the annotation instances themselves were used. This change removes the name and type in favor of using the annotation for everything.;Move variable to where it is used;where it is used;Similar;0.6951898336410522
Use the annotations directly for parameter handling.;Before we attempted to normalize the parameter annotations into a name and type model. The introduction of multi-part transfer encodings required something more expressive so the annotation instances themselves were used. This change removes the name and type in favor of using the annotation for everything.;Fix spelling;spelling;Similar;0.5597315430641174
Use the annotations directly for parameter handling.;Before we attempted to normalize the parameter annotations into a name and type model. The introduction of multi-part transfer encodings required something more expressive so the annotation instances themselves were used. This change removes the name and type in favor of using the annotation for everything.;Add fixed query parameter support;support;Similar;0.7362070083618164
Use the annotations directly for parameter handling.;Before we attempted to normalize the parameter annotations into a name and type model. The introduction of multi-part transfer encodings required something more expressive so the annotation instances themselves were used. This change removes the name and type in favor of using the annotation for everything.;Add <file_name>, <file_name> support to <file_name>  ;-;Similar;0.7136454582214355
Use the annotations directly for parameter handling.;Before we attempted to normalize the parameter annotations into a name and type model. The introduction of multi-part transfer encodings required something more expressive so the annotation instances themselves were used. This change removes the name and type in favor of using the annotation for everything.;Allow <file_name> extensions;improved <file_name>;Similar;0.6860305070877075
Use the annotations directly for parameter handling.;Before we attempted to normalize the parameter annotations into a name and type model. The introduction of multi-part transfer encodings required something more expressive so the annotation instances themselves were used. This change removes the name and type in favor of using the annotation for everything.;Repackage gson into retrofit.internal.gson  ;enhance integration;Similar;0.6649068593978882
Use the annotations directly for parameter handling.;Before we attempted to normalize the parameter annotations into a name and type model. The introduction of multi-part transfer encodings required something more expressive so the annotation instances themselves were used. This change removes the name and type in favor of using the annotation for everything.;Ensure <file_name> and <file_name> use FileDescriptor.sync();Ensure <file_name> and <file_name> use FileDescriptor.sync();Similar;0.6919128894805908
Use the annotations directly for parameter handling.;Before we attempted to normalize the parameter annotations into a name and type model. The introduction of multi-part transfer encodings required something more expressive so the annotation instances themselves were used. This change removes the name and type in favor of using the annotation for everything.;moved util to <file_name>, added <file_name>  ;Organize and enhance code files;Similar;0.7121580839157104
Use the annotations directly for parameter handling.;Before we attempted to normalize the parameter annotations into a name and type model. The introduction of multi-part transfer encodings required something more expressive so the annotation instances themselves were used. This change removes the name and type in favor of using the annotation for everything.;Use <iden> <version>s JsonAdapter.serializeNulls();serializeNulls;Similar;0.7120184898376465
Use the annotations directly for parameter handling.;Before we attempted to normalize the parameter annotations into a name and type model. The introduction of multi-part transfer encodings required something more expressive so the annotation instances themselves were used. This change removes the name and type in favor of using the annotation for everything.;Removal of Unnecessary Creation of <iden>;if <iden> has length 0 there is no point to create stringBuilder for that. that condition check needs to happen before stringBuilder creation.;Similar;0.5259509682655334
Use the annotations directly for parameter handling.;Before we attempted to normalize the parameter annotations into a name and type model. The introduction of multi-part transfer encodings required something more expressive so the annotation instances themselves were used. This change removes the name and type in favor of using the annotation for everything.;Expose <iden> via the <file_name> injection-like framework;injection-like framework;Similar;0.7806659936904907
Use the annotations directly for parameter handling.;Before we attempted to normalize the parameter annotations into a name and type model. The introduction of multi-part transfer encodings required something more expressive so the annotation instances themselves were used. This change removes the name and type in favor of using the annotation for everything.;Changing `<file_name>` to implement `<file_name>` interface;interface;Similar;0.7402034997940063
Use the annotations directly for parameter handling.;Before we attempted to normalize the parameter annotations into a name and type model. The introduction of multi-part transfer encodings required something more expressive so the annotation instances themselves were used. This change removes the name and type in favor of using the annotation for everything.;Fix support for protobuf <version>+;ExtensionRegistry cannot be null;Similar;0.6392290592193604
Use the annotations directly for parameter handling.;Before we attempted to normalize the parameter annotations into a name and type model. The introduction of multi-part transfer encodings required something more expressive so the annotation instances themselves were used. This change removes the name and type in favor of using the annotation for everything.;Fix typo;typo;Similar;0.6527005434036255
Expose success type on <method_name>;Theres a bit of a test gap going on for all the variants of successful and erroneous handling of sync, async, and rx. This new behavior is fully tested in all three but more general behavior testing for them will be needed in a follow-up.;Correct map parameter type detection for query and field  ;-;Similar;0.6101081371307373
Expose success type on <method_name>;Theres a bit of a test gap going on for all the variants of successful and erroneous handling of sync, async, and rx. This new behavior is fully tested in all three but more general behavior testing for them will be needed in a follow-up.;Update <file_name> to latest. Add default constructor.;latest, Add default constructor;Similar;0.7609158754348755
Expose success type on <method_name>;Theres a bit of a test gap going on for all the variants of successful and erroneous handling of sync, async, and rx. This new behavior is fully tested in all three but more general behavior testing for them will be needed in a follow-up.;Add simple package info to root package  ;simple;Similar;0.6391764283180237
Expose success type on <method_name>;Theres a bit of a test gap going on for all the variants of successful and erroneous handling of sync, async, and rx. This new behavior is fully tested in all three but more general behavior testing for them will be needed in a follow-up.;Correct header length checking logic. Improve exception message;Improve;Similar;0.6125681400299072
Expose success type on <method_name>;Theres a bit of a test gap going on for all the variants of successful and erroneous handling of sync, async, and rx. This new behavior is fully tested in all three but more general behavior testing for them will be needed in a follow-up.;Promote <iden> logging to a class which knows about chunking  ;This is an <iden>-specific implementation detail which is now only performed when needed;Similar;0.6623945236206055
Expose success type on <method_name>;Theres a bit of a test gap going on for all the variants of successful and erroneous handling of sync, async, and rx. This new behavior is fully tested in all three but more general behavior testing for them will be needed in a follow-up.;Fix IntelliJ auto-formatting  ;Improve the formatting;Similar;0.6938550472259521
Expose success type on <method_name>;Theres a bit of a test gap going on for all the variants of successful and erroneous handling of sync, async, and rx. This new behavior is fully tested in all three but more general behavior testing for them will be needed in a follow-up.;Add path and query tests for pre-encoded values;-;Similar;0.7198522090911865
Expose success type on <method_name>;Theres a bit of a test gap going on for all the variants of successful and erroneous handling of sync, async, and rx. This new behavior is fully tested in all three but more general behavior testing for them will be needed in a follow-up.;Add converters module and protobuf converter;to the sentence;Similar;0.6413867473602295
Expose success type on <method_name>;Theres a bit of a test gap going on for all the variants of successful and erroneous handling of sync, async, and rx. This new behavior is fully tested in all three but more general behavior testing for them will be needed in a follow-up.;Newline at end of file  ;Yes plz;Similar;0.5862783193588257
Expose success type on <method_name>;Theres a bit of a test gap going on for all the variants of successful and erroneous handling of sync, async, and rx. This new behavior is fully tested in all three but more general behavior testing for them will be needed in a follow-up.;Log network and unexpected exceptions if logging is enabled  ;if logging is enabled;Similar;0.6435160636901855
Expose success type on <method_name>;Theres a bit of a test gap going on for all the variants of successful and erroneous handling of sync, async, and rx. This new behavior is fully tested in all three but more general behavior testing for them will be needed in a follow-up.;Fix styling of <iden> download;styling;Similar;0.7132641673088074
Expose success type on <method_name>;Theres a bit of a test gap going on for all the variants of successful and erroneous handling of sync, async, and rx. This new behavior is fully tested in all three but more general behavior testing for them will be needed in a follow-up.;Rename pair to field to match annotation;match annotation;Similar;0.5044782757759094
Expose success type on <method_name>;Theres a bit of a test gap going on for all the variants of successful and erroneous handling of sync, async, and rx. This new behavior is fully tested in all three but more general behavior testing for them will be needed in a follow-up.;" 
- Add <iden> <method_name>  
- Also update our sample to use <iden> contributors rather than the <iden>  
- Bump some dependencies to their latest versions  
";" 
- Use this on <iden> <version> and prior and when on the <iden>  
- because the latter is shutting down and subject to lame rate limiting when on common networks";Similar;0.5320344567298889
Expose success type on <method_name>;Theres a bit of a test gap going on for all the variants of successful and erroneous handling of sync, async, and rx. This new behavior is fully tested in all three but more general behavior testing for them will be needed in a follow-up.;Provide a mutable <file_name> implementation. <iden> to conform.;to conform;Similar;0.8092195391654968
Expose success type on <method_name>;Theres a bit of a test gap going on for all the variants of successful and erroneous handling of sync, async, and rx. This new behavior is fully tested in all three but more general behavior testing for them will be needed in a follow-up.;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Similar;0.6439477801322937
Expose success type on <method_name>;Theres a bit of a test gap going on for all the variants of successful and erroneous handling of sync, async, and rx. This new behavior is fully tested in all three but more general behavior testing for them will be needed in a follow-up.;Simplify test method fetching;-;Similar;0.6261774897575378
Expose success type on <method_name>;Theres a bit of a test gap going on for all the variants of successful and erroneous handling of sync, async, and rx. This new behavior is fully tested in all three but more general behavior testing for them will be needed in a follow-up.;Allow <file_name> instantiation  ;Hide some Apache implementation details;Similar;0.8704698085784912
Expose success type on <method_name>;Theres a bit of a test gap going on for all the variants of successful and erroneous handling of sync, async, and rx. This new behavior is fully tested in all three but more general behavior testing for them will be needed in a follow-up.;Hide more implementation details;more implementation details;Similar;0.5554189682006836
Expose success type on <method_name>;Theres a bit of a test gap going on for all the variants of successful and erroneous handling of sync, async, and rx. This new behavior is fully tested in all three but more general behavior testing for them will be needed in a follow-up.;Remove unused <file_name> classes;unused;Similar;0.5896457433700562
Expose success type on <method_name>;Theres a bit of a test gap going on for all the variants of successful and erroneous handling of sync, async, and rx. This new behavior is fully tested in all three but more general behavior testing for them will be needed in a follow-up.;Introduce builder pattern to instantiate <method_name>;profiler are now optional. Convenience methods for specifying a <iden> or an <iden> directly are also provided.;Similar;0.8257386088371277
Expose success type on <method_name>;Theres a bit of a test gap going on for all the variants of successful and erroneous handling of sync, async, and rx. This new behavior is fully tested in all three but more general behavior testing for them will be needed in a follow-up.;Use no_aop Guice variant  ;no_aop;Similar;0.6257981657981873
Expose success type on <method_name>;Theres a bit of a test gap going on for all the variants of successful and erroneous handling of sync, async, and rx. This new behavior is fully tested in all three but more general behavior testing for them will be needed in a follow-up.;Adding a human-readable name to the  <file_name>  interface;human-readable;Similar;0.7413286566734314
Expose success type on <method_name>;Theres a bit of a test gap going on for all the variants of successful and erroneous handling of sync, async, and rx. This new behavior is fully tested in all three but more general behavior testing for them will be needed in a follow-up.;Added getTag() and logChunk() methods;for easier subclassing;Similar;0.7019085884094238
Expose success type on <method_name>;Theres a bit of a test gap going on for all the variants of successful and erroneous handling of sync, async, and rx. This new behavior is fully tested in all three but more general behavior testing for them will be needed in a follow-up.;Reintroduced deprecated <file_name> constructor;deprecated;Similar;0.6538816690444946
Expose success type on <method_name>;Theres a bit of a test gap going on for all the variants of successful and erroneous handling of sync, async, and rx. This new behavior is fully tested in all three but more general behavior testing for them will be needed in a follow-up.;Update custom conversion docs per feedback;Clarify that <iden> is just the default converter, Add section on other built-in converters, Add section on implementing your own custom converters;Similar;0.6675814390182495
Expose success type on <method_name>;Theres a bit of a test gap going on for all the variants of successful and erroneous handling of sync, async, and rx. This new behavior is fully tested in all three but more general behavior testing for them will be needed in a follow-up.;Fix style nits per review;per review;Similar;0.6108927130699158
Expose success type on <method_name>;Theres a bit of a test gap going on for all the variants of successful and erroneous handling of sync, async, and rx. This new behavior is fully tested in all three but more general behavior testing for them will be needed in a follow-up.;fix issue <issue_link> : permit use when servers or intermediaries mistakingly miss Content-<iden> header;mistakingly miss Content-<iden> header;Similar;0.5756471157073975
Expose success type on <method_name>;Theres a bit of a test gap going on for all the variants of successful and erroneous handling of sync, async, and rx. This new behavior is fully tested in all three but more general behavior testing for them will be needed in a follow-up.;rename <iden> ->  <file_name>  ;to harvest the names for new annotations;Similar;0.7874799966812134
Expose success type on <method_name>;Theres a bit of a test gap going on for all the variants of successful and erroneous handling of sync, async, and rx. This new behavior is fully tested in all three but more general behavior testing for them will be needed in a follow-up.;Move variable to where it is used;where it is used;Similar;0.6922680139541626
Expose success type on <method_name>;Theres a bit of a test gap going on for all the variants of successful and erroneous handling of sync, async, and rx. This new behavior is fully tested in all three but more general behavior testing for them will be needed in a follow-up.;Fix spelling;spelling;Similar;0.6135445833206177
Expose success type on <method_name>;Theres a bit of a test gap going on for all the variants of successful and erroneous handling of sync, async, and rx. This new behavior is fully tested in all three but more general behavior testing for them will be needed in a follow-up.;Add fixed query parameter support;support;Similar;0.780806303024292
Expose success type on <method_name>;Theres a bit of a test gap going on for all the variants of successful and erroneous handling of sync, async, and rx. This new behavior is fully tested in all three but more general behavior testing for them will be needed in a follow-up.;Add <file_name>, <file_name> support to <file_name>  ;-;Similar;0.8581393957138062
Expose success type on <method_name>;Theres a bit of a test gap going on for all the variants of successful and erroneous handling of sync, async, and rx. This new behavior is fully tested in all three but more general behavior testing for them will be needed in a follow-up.;Allow <file_name> extensions;improved <file_name>;Similar;0.8610180616378784
Expose success type on <method_name>;Theres a bit of a test gap going on for all the variants of successful and erroneous handling of sync, async, and rx. This new behavior is fully tested in all three but more general behavior testing for them will be needed in a follow-up.;Repackage gson into retrofit.internal.gson  ;enhance integration;Similar;0.6267843246459961
Expose success type on <method_name>;Theres a bit of a test gap going on for all the variants of successful and erroneous handling of sync, async, and rx. This new behavior is fully tested in all three but more general behavior testing for them will be needed in a follow-up.;Ensure <file_name> and <file_name> use FileDescriptor.sync();Ensure <file_name> and <file_name> use FileDescriptor.sync();Similar;0.7871359586715698
Expose success type on <method_name>;Theres a bit of a test gap going on for all the variants of successful and erroneous handling of sync, async, and rx. This new behavior is fully tested in all three but more general behavior testing for them will be needed in a follow-up.;moved util to <file_name>, added <file_name>  ;Organize and enhance code files;Similar;0.8112006187438965
Expose success type on <method_name>;Theres a bit of a test gap going on for all the variants of successful and erroneous handling of sync, async, and rx. This new behavior is fully tested in all three but more general behavior testing for them will be needed in a follow-up.;Use <iden> <version>s JsonAdapter.serializeNulls();serializeNulls;Similar;0.768904447555542
Expose success type on <method_name>;Theres a bit of a test gap going on for all the variants of successful and erroneous handling of sync, async, and rx. This new behavior is fully tested in all three but more general behavior testing for them will be needed in a follow-up.;Removal of Unnecessary Creation of <iden>;if <iden> has length 0 there is no point to create stringBuilder for that. that condition check needs to happen before stringBuilder creation.;Similar;0.5431245565414429
Expose success type on <method_name>;Theres a bit of a test gap going on for all the variants of successful and erroneous handling of sync, async, and rx. This new behavior is fully tested in all three but more general behavior testing for them will be needed in a follow-up.;Expose <iden> via the <file_name> injection-like framework;injection-like framework;Similar;0.8320127725601196
Expose success type on <method_name>;Theres a bit of a test gap going on for all the variants of successful and erroneous handling of sync, async, and rx. This new behavior is fully tested in all three but more general behavior testing for them will be needed in a follow-up.;Changing `<file_name>` to implement `<file_name>` interface;interface;Similar;0.7745944857597351
Expose success type on <method_name>;Theres a bit of a test gap going on for all the variants of successful and erroneous handling of sync, async, and rx. This new behavior is fully tested in all three but more general behavior testing for them will be needed in a follow-up.;Fix support for protobuf <version>+;ExtensionRegistry cannot be null;Similar;0.77964186668396
Expose success type on <method_name>;Theres a bit of a test gap going on for all the variants of successful and erroneous handling of sync, async, and rx. This new behavior is fully tested in all three but more general behavior testing for them will be needed in a follow-up.;Fix typo;typo;Similar;0.6737950444221497
Expose success type on <method_name>;Theres a bit of a test gap going on for all the variants of successful and erroneous handling of sync, async, and rx. This new behavior is fully tested in all three but more general behavior testing for them will be needed in a follow-up.;Remove redundant throws  ;redundant;Similar;0.5027986764907837
Correct map parameter type detection for query and field  ;-;Add simple package info to root package  ;simple;Similar;0.6171950101852417
Correct map parameter type detection for query and field  ;-;Correct header length checking logic. Improve exception message;Improve;Similar;0.7435986995697021
Correct map parameter type detection for query and field  ;-;Promote <iden> logging to a class which knows about chunking  ;This is an <iden>-specific implementation detail which is now only performed when needed;Similar;0.5331376791000366
Correct map parameter type detection for query and field  ;-;Fix IntelliJ auto-formatting  ;Improve the formatting;Similar;0.5738943815231323
Correct map parameter type detection for query and field  ;-;Add path and query tests for pre-encoded values;-;Similar;0.5953940749168396
Correct map parameter type detection for query and field  ;-;Log network and unexpected exceptions if logging is enabled  ;if logging is enabled;Similar;0.552539050579071
Correct map parameter type detection for query and field  ;-;Fix styling of <iden> download;styling;Similar;0.5113757252693176
Correct map parameter type detection for query and field  ;-;Rename pair to field to match annotation;match annotation;Similar;0.6003193855285645
Correct map parameter type detection for query and field  ;-;Provide a mutable <file_name> implementation. <iden> to conform.;to conform;Similar;0.638724684715271
Correct map parameter type detection for query and field  ;-;Simplify test method fetching;-;Similar;0.7214218378067017
Correct map parameter type detection for query and field  ;-;Allow <file_name> instantiation  ;Hide some Apache implementation details;Similar;0.5886744260787964
Correct map parameter type detection for query and field  ;-;Introduce builder pattern to instantiate <method_name>;profiler are now optional. Convenience methods for specifying a <iden> or an <iden> directly are also provided.;Similar;0.5629270076751709
Correct map parameter type detection for query and field  ;-;Adding a human-readable name to the  <file_name>  interface;human-readable;Similar;0.5282145738601685
Correct map parameter type detection for query and field  ;-;Fix small wording issues in custom converter docs;small wording issues;Similar;0.5391577482223511
Correct map parameter type detection for query and field  ;-;Add fixed query parameter support;support;Similar;0.7009600400924683
Correct map parameter type detection for query and field  ;-;Add <file_name>, <file_name> support to <file_name>  ;-;Similar;0.565575122833252
Correct map parameter type detection for query and field  ;-;Allow <file_name> extensions;improved <file_name>;Similar;0.5769404172897339
Correct map parameter type detection for query and field  ;-;Ensure <file_name> and <file_name> use FileDescriptor.sync();Ensure <file_name> and <file_name> use FileDescriptor.sync();Similar;0.5607454776763916
Correct map parameter type detection for query and field  ;-;Expose <iden> via the <file_name> injection-like framework;injection-like framework;Similar;0.546154260635376
Correct map parameter type detection for query and field  ;-;Fix support for protobuf <version>+;ExtensionRegistry cannot be null;Similar;0.5342174172401428
Correct map parameter type detection for query and field  ;-;Fix typo;typo;Similar;0.5464876294136047
Update <file_name> to latest. Add default constructor.;latest, Add default constructor;Add simple package info to root package  ;simple;Similar;0.5139694213867188
Update <file_name> to latest. Add default constructor.;latest, Add default constructor;Correct header length checking logic. Improve exception message;Improve;Similar;0.531917154788971
Update <file_name> to latest. Add default constructor.;latest, Add default constructor;Promote <iden> logging to a class which knows about chunking  ;This is an <iden>-specific implementation detail which is now only performed when needed;Similar;0.652216911315918
Update <file_name> to latest. Add default constructor.;latest, Add default constructor;Fix IntelliJ auto-formatting  ;Improve the formatting;Similar;0.6974598169326782
Update <file_name> to latest. Add default constructor.;latest, Add default constructor;Add path and query tests for pre-encoded values;-;Similar;0.7184852361679077
Update <file_name> to latest. Add default constructor.;latest, Add default constructor;Add converters module and protobuf converter;to the sentence;Similar;0.7060015201568604
Update <file_name> to latest. Add default constructor.;latest, Add default constructor;Newline at end of file  ;Yes plz;Similar;0.7244247794151306
Update <file_name> to latest. Add default constructor.;latest, Add default constructor;Log network and unexpected exceptions if logging is enabled  ;if logging is enabled;Similar;0.5814560651779175
Update <file_name> to latest. Add default constructor.;latest, Add default constructor;Fix styling of <iden> download;styling;Similar;0.7173116207122803
Update <file_name> to latest. Add default constructor.;latest, Add default constructor;Rename pair to field to match annotation;match annotation;Similar;0.5624196529388428
Update <file_name> to latest. Add default constructor.;latest, Add default constructor;" 
- Add <iden> <method_name>  
- Also update our sample to use <iden> contributors rather than the <iden>  
- Bump some dependencies to their latest versions  
";" 
- Use this on <iden> <version> and prior and when on the <iden>  
- because the latter is shutting down and subject to lame rate limiting when on common networks";Similar;0.7072817087173462
Update <file_name> to latest. Add default constructor.;latest, Add default constructor;Provide a mutable <file_name> implementation. <iden> to conform.;to conform;Similar;0.7642123699188232
Update <file_name> to latest. Add default constructor.;latest, Add default constructor;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Similar;0.7074037790298462
Update <file_name> to latest. Add default constructor.;latest, Add default constructor;Simplify test method fetching;-;Similar;0.5120456218719482
Update <file_name> to latest. Add default constructor.;latest, Add default constructor;Allow <file_name> instantiation  ;Hide some Apache implementation details;Similar;0.7473307847976685
Update <file_name> to latest. Add default constructor.;latest, Add default constructor;Remove unused <file_name> classes;unused;Similar;0.5201593041419983
Update <file_name> to latest. Add default constructor.;latest, Add default constructor;Introduce builder pattern to instantiate <method_name>;profiler are now optional. Convenience methods for specifying a <iden> or an <iden> directly are also provided.;Similar;0.8225990533828735
Update <file_name> to latest. Add default constructor.;latest, Add default constructor;Adding a human-readable name to the  <file_name>  interface;human-readable;Similar;0.7349311709403992
Update <file_name> to latest. Add default constructor.;latest, Add default constructor;Added getTag() and logChunk() methods;for easier subclassing;Similar;0.7432301044464111
Update <file_name> to latest. Add default constructor.;latest, Add default constructor;Reintroduced deprecated <file_name> constructor;deprecated;Similar;0.6846246719360352
Update <file_name> to latest. Add default constructor.;latest, Add default constructor;Fix small wording issues in custom converter docs;small wording issues;Similar;0.5147708654403687
Update <file_name> to latest. Add default constructor.;latest, Add default constructor;Update custom conversion docs per feedback;Clarify that <iden> is just the default converter, Add section on other built-in converters, Add section on implementing your own custom converters;Similar;0.7457643747329712
Update <file_name> to latest. Add default constructor.;latest, Add default constructor;Fix style nits per review;per review;Similar;0.6156444549560547
Update <file_name> to latest. Add default constructor.;latest, Add default constructor;fix issue <issue_link> : permit use when servers or intermediaries mistakingly miss Content-<iden> header;mistakingly miss Content-<iden> header;Similar;0.5609503388404846
Update <file_name> to latest. Add default constructor.;latest, Add default constructor;rename <iden> ->  <file_name>  ;to harvest the names for new annotations;Similar;0.7781191468238831
Update <file_name> to latest. Add default constructor.;latest, Add default constructor;Move variable to where it is used;where it is used;Similar;0.5612909197807312
Update <file_name> to latest. Add default constructor.;latest, Add default constructor;Fix spelling;spelling;Similar;0.5546078681945801
Update <file_name> to latest. Add default constructor.;latest, Add default constructor;Add fixed query parameter support;support;Similar;0.680946409702301
Update <file_name> to latest. Add default constructor.;latest, Add default constructor;Add <file_name>, <file_name> support to <file_name>  ;-;Similar;0.7680507898330688
Update <file_name> to latest. Add default constructor.;latest, Add default constructor;Allow <file_name> extensions;improved <file_name>;Similar;0.7331382036209106
Update <file_name> to latest. Add default constructor.;latest, Add default constructor;Repackage gson into retrofit.internal.gson  ;enhance integration;Similar;0.6881895065307617
Update <file_name> to latest. Add default constructor.;latest, Add default constructor;Ensure <file_name> and <file_name> use FileDescriptor.sync();Ensure <file_name> and <file_name> use FileDescriptor.sync();Similar;0.7193106412887573
Update <file_name> to latest. Add default constructor.;latest, Add default constructor;moved util to <file_name>, added <file_name>  ;Organize and enhance code files;Similar;0.8256851434707642
Update <file_name> to latest. Add default constructor.;latest, Add default constructor;Use <iden> <version>s JsonAdapter.serializeNulls();serializeNulls;Similar;0.7017576694488525
Update <file_name> to latest. Add default constructor.;latest, Add default constructor;Expose <iden> via the <file_name> injection-like framework;injection-like framework;Similar;0.7533605098724365
Update <file_name> to latest. Add default constructor.;latest, Add default constructor;Changing `<file_name>` to implement `<file_name>` interface;interface;Similar;0.813383936882019
Update <file_name> to latest. Add default constructor.;latest, Add default constructor;Fix support for protobuf <version>+;ExtensionRegistry cannot be null;Similar;0.7470746040344238
Update <file_name> to latest. Add default constructor.;latest, Add default constructor;Fix typo;typo;Similar;0.5960924625396729
Add simple package info to root package  ;simple;Correct header length checking logic. Improve exception message;Improve;Similar;0.6320177316665649
Add simple package info to root package  ;simple;Promote <iden> logging to a class which knows about chunking  ;This is an <iden>-specific implementation detail which is now only performed when needed;Similar;0.5113617181777954
Add simple package info to root package  ;simple;Fix IntelliJ auto-formatting  ;Improve the formatting;Similar;0.5956687331199646
Add simple package info to root package  ;simple;Add path and query tests for pre-encoded values;-;Similar;0.5929204821586609
Add simple package info to root package  ;simple;Add converters module and protobuf converter;to the sentence;Similar;0.5672529935836792
Add simple package info to root package  ;simple;Newline at end of file  ;Yes plz;Similar;0.5444291234016418
Add simple package info to root package  ;simple;Log network and unexpected exceptions if logging is enabled  ;if logging is enabled;Similar;0.5803496837615967
Add simple package info to root package  ;simple;Fix styling of <iden> download;styling;Similar;0.692346453666687
Add simple package info to root package  ;simple;" 
- Add <iden> <method_name>  
- Also update our sample to use <iden> contributors rather than the <iden>  
- Bump some dependencies to their latest versions  
";" 
- Use this on <iden> <version> and prior and when on the <iden>  
- because the latter is shutting down and subject to lame rate limiting when on common networks";Similar;0.538982093334198
Add simple package info to root package  ;simple;Provide a mutable <file_name> implementation. <iden> to conform.;to conform;Similar;0.6405367851257324
Add simple package info to root package  ;simple;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Similar;0.5133694410324097
Add simple package info to root package  ;simple;Simplify test method fetching;-;Similar;0.6708601117134094
Add simple package info to root package  ;simple;Allow <file_name> instantiation  ;Hide some Apache implementation details;Similar;0.6246174573898315
Add simple package info to root package  ;simple;Hide more implementation details;more implementation details;Similar;0.5657237768173218
Add simple package info to root package  ;simple;Introduce builder pattern to instantiate <method_name>;profiler are now optional. Convenience methods for specifying a <iden> or an <iden> directly are also provided.;Similar;0.5989093780517578
Add simple package info to root package  ;simple;Adding a human-readable name to the  <file_name>  interface;human-readable;Similar;0.5303881168365479
Add simple package info to root package  ;simple;Added getTag() and logChunk() methods;for easier subclassing;Similar;0.5573265552520752
Add simple package info to root package  ;simple;Fix small wording issues in custom converter docs;small wording issues;Similar;0.6831270456314087
Add simple package info to root package  ;simple;Update custom conversion docs per feedback;Clarify that <iden> is just the default converter, Add section on other built-in converters, Add section on implementing your own custom converters;Similar;0.5841971039772034
Add simple package info to root package  ;simple;Fix style nits per review;per review;Similar;0.6255263090133667
Add simple package info to root package  ;simple;fix issue <issue_link> : permit use when servers or intermediaries mistakingly miss Content-<iden> header;mistakingly miss Content-<iden> header;Similar;0.5267879962921143
Add simple package info to root package  ;simple;Move variable to where it is used;where it is used;Similar;0.5140180587768555
Add simple package info to root package  ;simple;Fix spelling;spelling;Similar;0.6204036474227905
Add simple package info to root package  ;simple;Add fixed query parameter support;support;Similar;0.7047046422958374
Add simple package info to root package  ;simple;Add <file_name>, <file_name> support to <file_name>  ;-;Similar;0.5751826763153076
Add simple package info to root package  ;simple;Allow <file_name> extensions;improved <file_name>;Similar;0.6515741348266602
Add simple package info to root package  ;simple;Ensure <file_name> and <file_name> use FileDescriptor.sync();Ensure <file_name> and <file_name> use FileDescriptor.sync();Similar;0.5188770294189453
Add simple package info to root package  ;simple;moved util to <file_name>, added <file_name>  ;Organize and enhance code files;Similar;0.5287669897079468
Add simple package info to root package  ;simple;Use <iden> <version>s JsonAdapter.serializeNulls();serializeNulls;Similar;0.5475833415985107
Add simple package info to root package  ;simple;Removal of Unnecessary Creation of <iden>;if <iden> has length 0 there is no point to create stringBuilder for that. that condition check needs to happen before stringBuilder creation.;Similar;0.5233147144317627
Add simple package info to root package  ;simple;Expose <iden> via the <file_name> injection-like framework;injection-like framework;Similar;0.60589599609375
Add simple package info to root package  ;simple;Changing `<file_name>` to implement `<file_name>` interface;interface;Similar;0.5481728315353394
Add simple package info to root package  ;simple;Fix support for protobuf <version>+;ExtensionRegistry cannot be null;Similar;0.6873253583908081
Add simple package info to root package  ;simple;Fix typo;typo;Similar;0.6047999858856201
Properly name ignored exception in catch block  ;Properly naming;Remove unused <file_name> classes;unused;Similar;0.6653705835342407
Properly name ignored exception in catch block  ;Properly naming;Use no_aop Guice variant  ;no_aop;Similar;0.7179865837097168
Properly name ignored exception in catch block  ;Properly naming;Reintroduced deprecated <file_name> constructor;deprecated;Similar;0.575066089630127
Properly name ignored exception in catch block  ;Properly naming;Move variable to where it is used;where it is used;Similar;0.503076434135437
Properly name ignored exception in catch block  ;Properly naming;Removal of Unnecessary Creation of <iden>;if <iden> has length 0 there is no point to create stringBuilder for that. that condition check needs to happen before stringBuilder creation.;Similar;0.7365961670875549
Properly name ignored exception in catch block  ;Properly naming;Remove redundant throws  ;redundant;Similar;0.6624717712402344
Correct header length checking logic. Improve exception message;Improve;Promote <iden> logging to a class which knows about chunking  ;This is an <iden>-specific implementation detail which is now only performed when needed;Similar;0.5439754724502563
Correct header length checking logic. Improve exception message;Improve;Fix IntelliJ auto-formatting  ;Improve the formatting;Similar;0.6594874262809753
Correct header length checking logic. Improve exception message;Improve;Add path and query tests for pre-encoded values;-;Similar;0.656754732131958
Correct header length checking logic. Improve exception message;Improve;Add converters module and protobuf converter;to the sentence;Similar;0.5349282622337341
Correct header length checking logic. Improve exception message;Improve;Log network and unexpected exceptions if logging is enabled  ;if logging is enabled;Similar;0.6482055187225342
Correct header length checking logic. Improve exception message;Improve;Fix styling of <iden> download;styling;Similar;0.6083317995071411
Correct header length checking logic. Improve exception message;Improve;" 
- Add <iden> <method_name>  
- Also update our sample to use <iden> contributors rather than the <iden>  
- Bump some dependencies to their latest versions  
";" 
- Use this on <iden> <version> and prior and when on the <iden>  
- because the latter is shutting down and subject to lame rate limiting when on common networks";Similar;0.5528210401535034
Correct header length checking logic. Improve exception message;Improve;Provide a mutable <file_name> implementation. <iden> to conform.;to conform;Similar;0.6444627642631531
Correct header length checking logic. Improve exception message;Improve;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Similar;0.5114729404449463
Correct header length checking logic. Improve exception message;Improve;Simplify test method fetching;-;Similar;0.7910701036453247
Correct header length checking logic. Improve exception message;Improve;Allow <file_name> instantiation  ;Hide some Apache implementation details;Similar;0.6270409822463989
Correct header length checking logic. Improve exception message;Improve;Hide more implementation details;more implementation details;Similar;0.5191875696182251
Correct header length checking logic. Improve exception message;Improve;Introduce builder pattern to instantiate <method_name>;profiler are now optional. Convenience methods for specifying a <iden> or an <iden> directly are also provided.;Similar;0.5793091058731079
Correct header length checking logic. Improve exception message;Improve;Adding a human-readable name to the  <file_name>  interface;human-readable;Similar;0.5431520938873291
Correct header length checking logic. Improve exception message;Improve;Added getTag() and logChunk() methods;for easier subclassing;Similar;0.5339158177375793
Correct header length checking logic. Improve exception message;Improve;Fix small wording issues in custom converter docs;small wording issues;Similar;0.5976499319076538
Correct header length checking logic. Improve exception message;Improve;Update custom conversion docs per feedback;Clarify that <iden> is just the default converter, Add section on other built-in converters, Add section on implementing your own custom converters;Similar;0.5434781312942505
Correct header length checking logic. Improve exception message;Improve;Fix style nits per review;per review;Similar;0.5413015484809875
Correct header length checking logic. Improve exception message;Improve;fix issue <issue_link> : permit use when servers or intermediaries mistakingly miss Content-<iden> header;mistakingly miss Content-<iden> header;Similar;0.6373974084854126
Correct header length checking logic. Improve exception message;Improve;rename <iden> ->  <file_name>  ;to harvest the names for new annotations;Similar;0.5041124820709229
Correct header length checking logic. Improve exception message;Improve;Fix spelling;spelling;Similar;0.6072397828102112
Correct header length checking logic. Improve exception message;Improve;Add fixed query parameter support;support;Similar;0.7259392738342285
Correct header length checking logic. Improve exception message;Improve;Add <file_name>, <file_name> support to <file_name>  ;-;Similar;0.5955289602279663
Correct header length checking logic. Improve exception message;Improve;Allow <file_name> extensions;improved <file_name>;Similar;0.607146143913269
Correct header length checking logic. Improve exception message;Improve;Repackage gson into retrofit.internal.gson  ;enhance integration;Similar;0.5574930310249329
Correct header length checking logic. Improve exception message;Improve;Ensure <file_name> and <file_name> use FileDescriptor.sync();Ensure <file_name> and <file_name> use FileDescriptor.sync();Similar;0.6239808797836304
Correct header length checking logic. Improve exception message;Improve;moved util to <file_name>, added <file_name>  ;Organize and enhance code files;Similar;0.5556872487068176
Correct header length checking logic. Improve exception message;Improve;Removal of Unnecessary Creation of <iden>;if <iden> has length 0 there is no point to create stringBuilder for that. that condition check needs to happen before stringBuilder creation.;Similar;0.5210947394371033
Correct header length checking logic. Improve exception message;Improve;Expose <iden> via the <file_name> injection-like framework;injection-like framework;Similar;0.5589473247528076
Correct header length checking logic. Improve exception message;Improve;Changing `<file_name>` to implement `<file_name>` interface;interface;Similar;0.5807139277458191
Correct header length checking logic. Improve exception message;Improve;Fix support for protobuf <version>+;ExtensionRegistry cannot be null;Similar;0.6356112957000732
Correct header length checking logic. Improve exception message;Improve;Fix typo;typo;Similar;0.5700961351394653
Promote <iden> logging to a class which knows about chunking  ;This is an <iden>-specific implementation detail which is now only performed when needed;Fix IntelliJ auto-formatting  ;Improve the formatting;Similar;0.6167682409286499
Promote <iden> logging to a class which knows about chunking  ;This is an <iden>-specific implementation detail which is now only performed when needed;Add path and query tests for pre-encoded values;-;Similar;0.5937042236328125
Promote <iden> logging to a class which knows about chunking  ;This is an <iden>-specific implementation detail which is now only performed when needed;Add converters module and protobuf converter;to the sentence;Similar;0.5377458333969116
Promote <iden> logging to a class which knows about chunking  ;This is an <iden>-specific implementation detail which is now only performed when needed;Log network and unexpected exceptions if logging is enabled  ;if logging is enabled;Similar;0.630115807056427
Promote <iden> logging to a class which knows about chunking  ;This is an <iden>-specific implementation detail which is now only performed when needed;Fix styling of <iden> download;styling;Similar;0.695033609867096
Promote <iden> logging to a class which knows about chunking  ;This is an <iden>-specific implementation detail which is now only performed when needed;" 
- Add <iden> <method_name>  
- Also update our sample to use <iden> contributors rather than the <iden>  
- Bump some dependencies to their latest versions  
";" 
- Use this on <iden> <version> and prior and when on the <iden>  
- because the latter is shutting down and subject to lame rate limiting when on common networks";Similar;0.5566396713256836
Promote <iden> logging to a class which knows about chunking  ;This is an <iden>-specific implementation detail which is now only performed when needed;Provide a mutable <file_name> implementation. <iden> to conform.;to conform;Similar;0.6803367733955383
Promote <iden> logging to a class which knows about chunking  ;This is an <iden>-specific implementation detail which is now only performed when needed;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Similar;0.6766332387924194
Promote <iden> logging to a class which knows about chunking  ;This is an <iden>-specific implementation detail which is now only performed when needed;Simplify test method fetching;-;Similar;0.5765401124954224
Promote <iden> logging to a class which knows about chunking  ;This is an <iden>-specific implementation detail which is now only performed when needed;Allow <file_name> instantiation  ;Hide some Apache implementation details;Similar;0.6104776859283447
Promote <iden> logging to a class which knows about chunking  ;This is an <iden>-specific implementation detail which is now only performed when needed;Introduce builder pattern to instantiate <method_name>;profiler are now optional. Convenience methods for specifying a <iden> or an <iden> directly are also provided.;Similar;0.7416852712631226
Promote <iden> logging to a class which knows about chunking  ;This is an <iden>-specific implementation detail which is now only performed when needed;Adding a human-readable name to the  <file_name>  interface;human-readable;Similar;0.7219898700714111
Promote <iden> logging to a class which knows about chunking  ;This is an <iden>-specific implementation detail which is now only performed when needed;Added getTag() and logChunk() methods;for easier subclassing;Similar;0.6530859470367432
Promote <iden> logging to a class which knows about chunking  ;This is an <iden>-specific implementation detail which is now only performed when needed;Reintroduced deprecated <file_name> constructor;deprecated;Similar;0.5786029100418091
Promote <iden> logging to a class which knows about chunking  ;This is an <iden>-specific implementation detail which is now only performed when needed;Fix small wording issues in custom converter docs;small wording issues;Similar;0.5636540651321411
Promote <iden> logging to a class which knows about chunking  ;This is an <iden>-specific implementation detail which is now only performed when needed;Update custom conversion docs per feedback;Clarify that <iden> is just the default converter, Add section on other built-in converters, Add section on implementing your own custom converters;Similar;0.6481519937515259
Promote <iden> logging to a class which knows about chunking  ;This is an <iden>-specific implementation detail which is now only performed when needed;Fix style nits per review;per review;Similar;0.5682824850082397
Promote <iden> logging to a class which knows about chunking  ;This is an <iden>-specific implementation detail which is now only performed when needed;fix issue <issue_link> : permit use when servers or intermediaries mistakingly miss Content-<iden> header;mistakingly miss Content-<iden> header;Similar;0.6071529388427734
Promote <iden> logging to a class which knows about chunking  ;This is an <iden>-specific implementation detail which is now only performed when needed;rename <iden> ->  <file_name>  ;to harvest the names for new annotations;Similar;0.534745454788208
Promote <iden> logging to a class which knows about chunking  ;This is an <iden>-specific implementation detail which is now only performed when needed;Add fixed query parameter support;support;Similar;0.5891777276992798
Promote <iden> logging to a class which knows about chunking  ;This is an <iden>-specific implementation detail which is now only performed when needed;Add <file_name>, <file_name> support to <file_name>  ;-;Similar;0.6279093623161316
Promote <iden> logging to a class which knows about chunking  ;This is an <iden>-specific implementation detail which is now only performed when needed;Allow <file_name> extensions;improved <file_name>;Similar;0.5763089656829834
Promote <iden> logging to a class which knows about chunking  ;This is an <iden>-specific implementation detail which is now only performed when needed;Ensure <file_name> and <file_name> use FileDescriptor.sync();Ensure <file_name> and <file_name> use FileDescriptor.sync();Similar;0.6160470843315125
Promote <iden> logging to a class which knows about chunking  ;This is an <iden>-specific implementation detail which is now only performed when needed;moved util to <file_name>, added <file_name>  ;Organize and enhance code files;Similar;0.5731384754180908
Promote <iden> logging to a class which knows about chunking  ;This is an <iden>-specific implementation detail which is now only performed when needed;Use <iden> <version>s JsonAdapter.serializeNulls();serializeNulls;Similar;0.5341854691505432
Promote <iden> logging to a class which knows about chunking  ;This is an <iden>-specific implementation detail which is now only performed when needed;Expose <iden> via the <file_name> injection-like framework;injection-like framework;Similar;0.6604089140892029
Promote <iden> logging to a class which knows about chunking  ;This is an <iden>-specific implementation detail which is now only performed when needed;Changing `<file_name>` to implement `<file_name>` interface;interface;Similar;0.6541786789894104
Promote <iden> logging to a class which knows about chunking  ;This is an <iden>-specific implementation detail which is now only performed when needed;Fix support for protobuf <version>+;ExtensionRegistry cannot be null;Similar;0.5959223508834839
Promote <iden> logging to a class which knows about chunking  ;This is an <iden>-specific implementation detail which is now only performed when needed;Fix typo;typo;Similar;0.5442477464675903
Fix IntelliJ auto-formatting  ;Improve the formatting;Add path and query tests for pre-encoded values;-;Similar;0.6474878787994385
Fix IntelliJ auto-formatting  ;Improve the formatting;Add converters module and protobuf converter;to the sentence;Similar;0.6422849297523499
Fix IntelliJ auto-formatting  ;Improve the formatting;Newline at end of file  ;Yes plz;Similar;0.6169607639312744
Fix IntelliJ auto-formatting  ;Improve the formatting;Log network and unexpected exceptions if logging is enabled  ;if logging is enabled;Similar;0.5499027967453003
Fix IntelliJ auto-formatting  ;Improve the formatting;Fix styling of <iden> download;styling;Similar;0.8185828924179077
Fix IntelliJ auto-formatting  ;Improve the formatting;Rename pair to field to match annotation;match annotation;Similar;0.5291787385940552
Fix IntelliJ auto-formatting  ;Improve the formatting;" 
- Add <iden> <method_name>  
- Also update our sample to use <iden> contributors rather than the <iden>  
- Bump some dependencies to their latest versions  
";" 
- Use this on <iden> <version> and prior and when on the <iden>  
- because the latter is shutting down and subject to lame rate limiting when on common networks";Similar;0.5448513627052307
Fix IntelliJ auto-formatting  ;Improve the formatting;Provide a mutable <file_name> implementation. <iden> to conform.;to conform;Similar;0.7165027856826782
Fix IntelliJ auto-formatting  ;Improve the formatting;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Similar;0.666816771030426
Fix IntelliJ auto-formatting  ;Improve the formatting;Simplify test method fetching;-;Similar;0.6659627556800842
Fix IntelliJ auto-formatting  ;Improve the formatting;Allow <file_name> instantiation  ;Hide some Apache implementation details;Similar;0.73728346824646
Fix IntelliJ auto-formatting  ;Improve the formatting;Hide more implementation details;more implementation details;Similar;0.5250805616378784
Fix IntelliJ auto-formatting  ;Improve the formatting;Remove unused <file_name> classes;unused;Similar;0.6082077622413635
Fix IntelliJ auto-formatting  ;Improve the formatting;Introduce builder pattern to instantiate <method_name>;profiler are now optional. Convenience methods for specifying a <iden> or an <iden> directly are also provided.;Similar;0.7145636081695557
Fix IntelliJ auto-formatting  ;Improve the formatting;Use no_aop Guice variant  ;no_aop;Similar;0.5677257776260376
Fix IntelliJ auto-formatting  ;Improve the formatting;Adding a human-readable name to the  <file_name>  interface;human-readable;Similar;0.6731137633323669
Fix IntelliJ auto-formatting  ;Improve the formatting;Added getTag() and logChunk() methods;for easier subclassing;Similar;0.5850728154182434
Fix IntelliJ auto-formatting  ;Improve the formatting;Reintroduced deprecated <file_name> constructor;deprecated;Similar;0.7044962048530579
Fix IntelliJ auto-formatting  ;Improve the formatting;Fix small wording issues in custom converter docs;small wording issues;Similar;0.6701927185058594
Fix IntelliJ auto-formatting  ;Improve the formatting;Update custom conversion docs per feedback;Clarify that <iden> is just the default converter, Add section on other built-in converters, Add section on implementing your own custom converters;Similar;0.6705386638641357
Fix IntelliJ auto-formatting  ;Improve the formatting;Fix style nits per review;per review;Similar;0.6844052076339722
Fix IntelliJ auto-formatting  ;Improve the formatting;fix issue <issue_link> : permit use when servers or intermediaries mistakingly miss Content-<iden> header;mistakingly miss Content-<iden> header;Similar;0.674125611782074
Fix IntelliJ auto-formatting  ;Improve the formatting;rename <iden> ->  <file_name>  ;to harvest the names for new annotations;Similar;0.7038905620574951
Fix IntelliJ auto-formatting  ;Improve the formatting;Move variable to where it is used;where it is used;Similar;0.6215395927429199
Fix IntelliJ auto-formatting  ;Improve the formatting;Fix spelling;spelling;Similar;0.788472056388855
Fix IntelliJ auto-formatting  ;Improve the formatting;Add fixed query parameter support;support;Similar;0.7605280876159668
Fix IntelliJ auto-formatting  ;Improve the formatting;Add <file_name>, <file_name> support to <file_name>  ;-;Similar;0.6517529487609863
Fix IntelliJ auto-formatting  ;Improve the formatting;Allow <file_name> extensions;improved <file_name>;Similar;0.673896312713623
Fix IntelliJ auto-formatting  ;Improve the formatting;Repackage gson into retrofit.internal.gson  ;enhance integration;Similar;0.7163134217262268
Fix IntelliJ auto-formatting  ;Improve the formatting;Ensure <file_name> and <file_name> use FileDescriptor.sync();Ensure <file_name> and <file_name> use FileDescriptor.sync();Similar;0.6961008310317993
Fix IntelliJ auto-formatting  ;Improve the formatting;moved util to <file_name>, added <file_name>  ;Organize and enhance code files;Similar;0.6860852837562561
Fix IntelliJ auto-formatting  ;Improve the formatting;Use <iden> <version>s JsonAdapter.serializeNulls();serializeNulls;Similar;0.6595536470413208
Fix IntelliJ auto-formatting  ;Improve the formatting;Removal of Unnecessary Creation of <iden>;if <iden> has length 0 there is no point to create stringBuilder for that. that condition check needs to happen before stringBuilder creation.;Similar;0.6342265605926514
Fix IntelliJ auto-formatting  ;Improve the formatting;Expose <iden> via the <file_name> injection-like framework;injection-like framework;Similar;0.6668051481246948
Fix IntelliJ auto-formatting  ;Improve the formatting;Changing `<file_name>` to implement `<file_name>` interface;interface;Similar;0.7427722215652466
Fix IntelliJ auto-formatting  ;Improve the formatting;Fix support for protobuf <version>+;ExtensionRegistry cannot be null;Similar;0.7931818962097168
Fix IntelliJ auto-formatting  ;Improve the formatting;Fix typo;typo;Similar;0.8167020082473755
Fix IntelliJ auto-formatting  ;Improve the formatting;Remove redundant throws  ;redundant;Similar;0.5916084051132202
Add path and query tests for pre-encoded values;-;Add converters module and protobuf converter;to the sentence;Similar;0.7143226265907288
Add path and query tests for pre-encoded values;-;Newline at end of file  ;Yes plz;Similar;0.6289932727813721
Add path and query tests for pre-encoded values;-;Log network and unexpected exceptions if logging is enabled  ;if logging is enabled;Similar;0.6182513236999512
Add path and query tests for pre-encoded values;-;Fix styling of <iden> download;styling;Similar;0.6360846757888794
Add path and query tests for pre-encoded values;-;Rename pair to field to match annotation;match annotation;Similar;0.5911127328872681
Add path and query tests for pre-encoded values;-;" 
- Add <iden> <method_name>  
- Also update our sample to use <iden> contributors rather than the <iden>  
- Bump some dependencies to their latest versions  
";" 
- Use this on <iden> <version> and prior and when on the <iden>  
- because the latter is shutting down and subject to lame rate limiting when on common networks";Similar;0.6936324834823608
Add path and query tests for pre-encoded values;-;Provide a mutable <file_name> implementation. <iden> to conform.;to conform;Similar;0.7918511629104614
Add path and query tests for pre-encoded values;-;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Similar;0.6319786310195923
Add path and query tests for pre-encoded values;-;Simplify test method fetching;-;Similar;0.7203447222709656
Add path and query tests for pre-encoded values;-;Allow <file_name> instantiation  ;Hide some Apache implementation details;Similar;0.6810731887817383
Add path and query tests for pre-encoded values;-;Hide more implementation details;more implementation details;Similar;0.6245872974395752
Add path and query tests for pre-encoded values;-;Introduce builder pattern to instantiate <method_name>;profiler are now optional. Convenience methods for specifying a <iden> or an <iden> directly are also provided.;Similar;0.728556752204895
Add path and query tests for pre-encoded values;-;Adding a human-readable name to the  <file_name>  interface;human-readable;Similar;0.6548514366149902
Add path and query tests for pre-encoded values;-;Added getTag() and logChunk() methods;for easier subclassing;Similar;0.7353264093399048
Add path and query tests for pre-encoded values;-;Reintroduced deprecated <file_name> constructor;deprecated;Similar;0.5909202098846436
Add path and query tests for pre-encoded values;-;Fix small wording issues in custom converter docs;small wording issues;Similar;0.5230151414871216
Add path and query tests for pre-encoded values;-;Update custom conversion docs per feedback;Clarify that <iden> is just the default converter, Add section on other built-in converters, Add section on implementing your own custom converters;Similar;0.7171844840049744
Add path and query tests for pre-encoded values;-;Fix style nits per review;per review;Similar;0.6615463495254517
Add path and query tests for pre-encoded values;-;fix issue <issue_link> : permit use when servers or intermediaries mistakingly miss Content-<iden> header;mistakingly miss Content-<iden> header;Similar;0.5518503189086914
Add path and query tests for pre-encoded values;-;rename <iden> ->  <file_name>  ;to harvest the names for new annotations;Similar;0.664410412311554
Add path and query tests for pre-encoded values;-;Move variable to where it is used;where it is used;Similar;0.6391717195510864
Add path and query tests for pre-encoded values;-;Fix spelling;spelling;Similar;0.5711076259613037
Add path and query tests for pre-encoded values;-;Add fixed query parameter support;support;Similar;0.7920243740081787
Add path and query tests for pre-encoded values;-;Add <file_name>, <file_name> support to <file_name>  ;-;Similar;0.7156466245651245
Add path and query tests for pre-encoded values;-;Allow <file_name> extensions;improved <file_name>;Similar;0.6924634575843811
Add path and query tests for pre-encoded values;-;Repackage gson into retrofit.internal.gson  ;enhance integration;Similar;0.7230080366134644
Add path and query tests for pre-encoded values;-;Ensure <file_name> and <file_name> use FileDescriptor.sync();Ensure <file_name> and <file_name> use FileDescriptor.sync();Similar;0.7220360040664673
Add path and query tests for pre-encoded values;-;moved util to <file_name>, added <file_name>  ;Organize and enhance code files;Similar;0.7513155937194824
Add path and query tests for pre-encoded values;-;Use <iden> <version>s JsonAdapter.serializeNulls();serializeNulls;Similar;0.6657547950744629
Add path and query tests for pre-encoded values;-;Expose <iden> via the <file_name> injection-like framework;injection-like framework;Similar;0.7040870189666748
Add path and query tests for pre-encoded values;-;Changing `<file_name>` to implement `<file_name>` interface;interface;Similar;0.7303098440170288
Add path and query tests for pre-encoded values;-;Fix support for protobuf <version>+;ExtensionRegistry cannot be null;Similar;0.7204984426498413
Add path and query tests for pre-encoded values;-;Fix typo;typo;Similar;0.6348382234573364
Add converters module and protobuf converter;to the sentence;Newline at end of file  ;Yes plz;Similar;0.6080809831619263
Add converters module and protobuf converter;to the sentence;Log network and unexpected exceptions if logging is enabled  ;if logging is enabled;Similar;0.5171708464622498
Add converters module and protobuf converter;to the sentence;Fix styling of <iden> download;styling;Similar;0.6396338939666748
Add converters module and protobuf converter;to the sentence;Rename pair to field to match annotation;match annotation;Similar;0.5885505676269531
Add converters module and protobuf converter;to the sentence;" 
- Add <iden> <method_name>  
- Also update our sample to use <iden> contributors rather than the <iden>  
- Bump some dependencies to their latest versions  
";" 
- Use this on <iden> <version> and prior and when on the <iden>  
- because the latter is shutting down and subject to lame rate limiting when on common networks";Similar;0.5248376131057739
Add converters module and protobuf converter;to the sentence;Provide a mutable <file_name> implementation. <iden> to conform.;to conform;Similar;0.7529884576797485
Add converters module and protobuf converter;to the sentence;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Similar;0.5356985926628113
Add converters module and protobuf converter;to the sentence;Simplify test method fetching;-;Similar;0.6215897798538208
Add converters module and protobuf converter;to the sentence;Allow <file_name> instantiation  ;Hide some Apache implementation details;Similar;0.6295373439788818
Add converters module and protobuf converter;to the sentence;Hide more implementation details;more implementation details;Similar;0.5722777843475342
Add converters module and protobuf converter;to the sentence;Introduce builder pattern to instantiate <method_name>;profiler are now optional. Convenience methods for specifying a <iden> or an <iden> directly are also provided.;Similar;0.6820499897003174
Add converters module and protobuf converter;to the sentence;Use no_aop Guice variant  ;no_aop;Similar;0.503864049911499
Add converters module and protobuf converter;to the sentence;Adding a human-readable name to the  <file_name>  interface;human-readable;Similar;0.6153271198272705
Add converters module and protobuf converter;to the sentence;Added getTag() and logChunk() methods;for easier subclassing;Similar;0.7243157625198364
Add converters module and protobuf converter;to the sentence;Reintroduced deprecated <file_name> constructor;deprecated;Similar;0.5778608322143555
Add converters module and protobuf converter;to the sentence;Update custom conversion docs per feedback;Clarify that <iden> is just the default converter, Add section on other built-in converters, Add section on implementing your own custom converters;Similar;0.6680048108100891
Add converters module and protobuf converter;to the sentence;Fix style nits per review;per review;Similar;0.5547679662704468
Add converters module and protobuf converter;to the sentence;rename <iden> ->  <file_name>  ;to harvest the names for new annotations;Similar;0.7059569358825684
Add converters module and protobuf converter;to the sentence;Move variable to where it is used;where it is used;Similar;0.6036140322685242
Add converters module and protobuf converter;to the sentence;Fix spelling;spelling;Similar;0.5492889881134033
Add converters module and protobuf converter;to the sentence;Add fixed query parameter support;support;Similar;0.7122626304626465
Add converters module and protobuf converter;to the sentence;Add <file_name>, <file_name> support to <file_name>  ;-;Similar;0.7271654605865479
Add converters module and protobuf converter;to the sentence;Allow <file_name> extensions;improved <file_name>;Similar;0.7339398860931396
Add converters module and protobuf converter;to the sentence;Repackage gson into retrofit.internal.gson  ;enhance integration;Similar;0.7487362623214722
Add converters module and protobuf converter;to the sentence;Ensure <file_name> and <file_name> use FileDescriptor.sync();Ensure <file_name> and <file_name> use FileDescriptor.sync();Similar;0.6707717180252075
Add converters module and protobuf converter;to the sentence;moved util to <file_name>, added <file_name>  ;Organize and enhance code files;Similar;0.7349749803543091
Add converters module and protobuf converter;to the sentence;Use <iden> <version>s JsonAdapter.serializeNulls();serializeNulls;Similar;0.6941355466842651
Add converters module and protobuf converter;to the sentence;Expose <iden> via the <file_name> injection-like framework;injection-like framework;Similar;0.6877161264419556
Add converters module and protobuf converter;to the sentence;Changing `<file_name>` to implement `<file_name>` interface;interface;Similar;0.7335416078567505
Add converters module and protobuf converter;to the sentence;Fix support for protobuf <version>+;ExtensionRegistry cannot be null;Similar;0.7878329753875732
Add converters module and protobuf converter;to the sentence;Fix typo;typo;Similar;0.6740736961364746
Add converters module and protobuf converter;to the sentence;Remove redundant throws  ;redundant;Similar;0.5257566571235657
Newline at end of file  ;Yes plz;Log network and unexpected exceptions if logging is enabled  ;if logging is enabled;Similar;0.5013291239738464
Newline at end of file  ;Yes plz;Fix styling of <iden> download;styling;Similar;0.5976582765579224
Newline at end of file  ;Yes plz;" 
- Add <iden> <method_name>  
- Also update our sample to use <iden> contributors rather than the <iden>  
- Bump some dependencies to their latest versions  
";" 
- Use this on <iden> <version> and prior and when on the <iden>  
- because the latter is shutting down and subject to lame rate limiting when on common networks";Similar;0.5259011387825012
Newline at end of file  ;Yes plz;Provide a mutable <file_name> implementation. <iden> to conform.;to conform;Similar;0.640633225440979
Newline at end of file  ;Yes plz;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Similar;0.5313466191291809
Newline at end of file  ;Yes plz;Simplify test method fetching;-;Similar;0.5365766882896423
Newline at end of file  ;Yes plz;Allow <file_name> instantiation  ;Hide some Apache implementation details;Similar;0.6360183954238892
Newline at end of file  ;Yes plz;Hide more implementation details;more implementation details;Similar;0.5361475348472595
Newline at end of file  ;Yes plz;Remove unused <file_name> classes;unused;Similar;0.5612627863883972
Newline at end of file  ;Yes plz;Introduce builder pattern to instantiate <method_name>;profiler are now optional. Convenience methods for specifying a <iden> or an <iden> directly are also provided.;Similar;0.5797622799873352
Newline at end of file  ;Yes plz;Use no_aop Guice variant  ;no_aop;Similar;0.5624841451644897
Newline at end of file  ;Yes plz;Adding a human-readable name to the  <file_name>  interface;human-readable;Similar;0.55098557472229
Newline at end of file  ;Yes plz;Added getTag() and logChunk() methods;for easier subclassing;Similar;0.5673208236694336
Newline at end of file  ;Yes plz;Reintroduced deprecated <file_name> constructor;deprecated;Similar;0.6428045034408569
Newline at end of file  ;Yes plz;Fix small wording issues in custom converter docs;small wording issues;Similar;0.5096484422683716
Newline at end of file  ;Yes plz;Update custom conversion docs per feedback;Clarify that <iden> is just the default converter, Add section on other built-in converters, Add section on implementing your own custom converters;Similar;0.6451190710067749
Newline at end of file  ;Yes plz;Fix style nits per review;per review;Similar;0.6488624811172485
Newline at end of file  ;Yes plz;rename <iden> ->  <file_name>  ;to harvest the names for new annotations;Similar;0.6463919878005981
Newline at end of file  ;Yes plz;Move variable to where it is used;where it is used;Similar;0.6354542374610901
Newline at end of file  ;Yes plz;Fix spelling;spelling;Similar;0.5750707387924194
Newline at end of file  ;Yes plz;Add fixed query parameter support;support;Similar;0.6144132614135742
Newline at end of file  ;Yes plz;Add <file_name>, <file_name> support to <file_name>  ;-;Similar;0.5843470096588135
Newline at end of file  ;Yes plz;Allow <file_name> extensions;improved <file_name>;Similar;0.6255987286567688
Newline at end of file  ;Yes plz;Repackage gson into retrofit.internal.gson  ;enhance integration;Similar;0.6928654909133911
Newline at end of file  ;Yes plz;Ensure <file_name> and <file_name> use FileDescriptor.sync();Ensure <file_name> and <file_name> use FileDescriptor.sync();Similar;0.5818697810173035
Newline at end of file  ;Yes plz;moved util to <file_name>, added <file_name>  ;Organize and enhance code files;Similar;0.6835171580314636
Newline at end of file  ;Yes plz;Use <iden> <version>s JsonAdapter.serializeNulls();serializeNulls;Similar;0.623427152633667
Newline at end of file  ;Yes plz;Removal of Unnecessary Creation of <iden>;if <iden> has length 0 there is no point to create stringBuilder for that. that condition check needs to happen before stringBuilder creation.;Similar;0.5923143625259399
Newline at end of file  ;Yes plz;Expose <iden> via the <file_name> injection-like framework;injection-like framework;Similar;0.5689867734909058
Newline at end of file  ;Yes plz;Changing `<file_name>` to implement `<file_name>` interface;interface;Similar;0.6253260374069214
Newline at end of file  ;Yes plz;Fix support for protobuf <version>+;ExtensionRegistry cannot be null;Similar;0.7006940841674805
Newline at end of file  ;Yes plz;Fix typo;typo;Similar;0.5985161066055298
Newline at end of file  ;Yes plz;Remove redundant throws  ;redundant;Similar;0.5362222194671631
Log network and unexpected exceptions if logging is enabled  ;if logging is enabled;Fix styling of <iden> download;styling;Similar;0.6542909145355225
Log network and unexpected exceptions if logging is enabled  ;if logging is enabled;" 
- Add <iden> <method_name>  
- Also update our sample to use <iden> contributors rather than the <iden>  
- Bump some dependencies to their latest versions  
";" 
- Use this on <iden> <version> and prior and when on the <iden>  
- because the latter is shutting down and subject to lame rate limiting when on common networks";Similar;0.5644160509109497
Log network and unexpected exceptions if logging is enabled  ;if logging is enabled;Provide a mutable <file_name> implementation. <iden> to conform.;to conform;Similar;0.5418630242347717
Log network and unexpected exceptions if logging is enabled  ;if logging is enabled;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Similar;0.5861695408821106
Log network and unexpected exceptions if logging is enabled  ;if logging is enabled;Simplify test method fetching;-;Similar;0.5977106094360352
Log network and unexpected exceptions if logging is enabled  ;if logging is enabled;Allow <file_name> instantiation  ;Hide some Apache implementation details;Similar;0.666549801826477
Log network and unexpected exceptions if logging is enabled  ;if logging is enabled;Hide more implementation details;more implementation details;Similar;0.5604323148727417
Log network and unexpected exceptions if logging is enabled  ;if logging is enabled;Introduce builder pattern to instantiate <method_name>;profiler are now optional. Convenience methods for specifying a <iden> or an <iden> directly are also provided.;Similar;0.5594289302825928
Log network and unexpected exceptions if logging is enabled  ;if logging is enabled;Adding a human-readable name to the  <file_name>  interface;human-readable;Similar;0.5289033055305481
Log network and unexpected exceptions if logging is enabled  ;if logging is enabled;Added getTag() and logChunk() methods;for easier subclassing;Similar;0.7355640530586243
Log network and unexpected exceptions if logging is enabled  ;if logging is enabled;Reintroduced deprecated <file_name> constructor;deprecated;Similar;0.500341534614563
Log network and unexpected exceptions if logging is enabled  ;if logging is enabled;Fix small wording issues in custom converter docs;small wording issues;Similar;0.5486484169960022
Log network and unexpected exceptions if logging is enabled  ;if logging is enabled;Update custom conversion docs per feedback;Clarify that <iden> is just the default converter, Add section on other built-in converters, Add section on implementing your own custom converters;Similar;0.5657320022583008
Log network and unexpected exceptions if logging is enabled  ;if logging is enabled;Fix style nits per review;per review;Similar;0.5297030210494995
Log network and unexpected exceptions if logging is enabled  ;if logging is enabled;fix issue <issue_link> : permit use when servers or intermediaries mistakingly miss Content-<iden> header;mistakingly miss Content-<iden> header;Similar;0.7044388055801392
Log network and unexpected exceptions if logging is enabled  ;if logging is enabled;Move variable to where it is used;where it is used;Similar;0.5566108226776123
Log network and unexpected exceptions if logging is enabled  ;if logging is enabled;Add fixed query parameter support;support;Similar;0.6547451019287109
Log network and unexpected exceptions if logging is enabled  ;if logging is enabled;Add <file_name>, <file_name> support to <file_name>  ;-;Similar;0.6066774129867554
Log network and unexpected exceptions if logging is enabled  ;if logging is enabled;Allow <file_name> extensions;improved <file_name>;Similar;0.6297282576560974
Log network and unexpected exceptions if logging is enabled  ;if logging is enabled;Repackage gson into retrofit.internal.gson  ;enhance integration;Similar;0.5219602584838867
Log network and unexpected exceptions if logging is enabled  ;if logging is enabled;Ensure <file_name> and <file_name> use FileDescriptor.sync();Ensure <file_name> and <file_name> use FileDescriptor.sync();Similar;0.5700767636299133
Log network and unexpected exceptions if logging is enabled  ;if logging is enabled;moved util to <file_name>, added <file_name>  ;Organize and enhance code files;Similar;0.5828990936279297
Log network and unexpected exceptions if logging is enabled  ;if logging is enabled;Use <iden> <version>s JsonAdapter.serializeNulls();serializeNulls;Similar;0.558375895023346
Log network and unexpected exceptions if logging is enabled  ;if logging is enabled;Expose <iden> via the <file_name> injection-like framework;injection-like framework;Similar;0.5752825140953064
Log network and unexpected exceptions if logging is enabled  ;if logging is enabled;Changing `<file_name>` to implement `<file_name>` interface;interface;Similar;0.590889036655426
Log network and unexpected exceptions if logging is enabled  ;if logging is enabled;Fix support for protobuf <version>+;ExtensionRegistry cannot be null;Similar;0.5928484797477722
Log network and unexpected exceptions if logging is enabled  ;if logging is enabled;Fix typo;typo;Similar;0.514122486114502
Fix styling of <iden> download;styling;Rename pair to field to match annotation;match annotation;Similar;0.5230608582496643
Fix styling of <iden> download;styling;" 
- Add <iden> <method_name>  
- Also update our sample to use <iden> contributors rather than the <iden>  
- Bump some dependencies to their latest versions  
";" 
- Use this on <iden> <version> and prior and when on the <iden>  
- because the latter is shutting down and subject to lame rate limiting when on common networks";Similar;0.6197583675384521
Fix styling of <iden> download;styling;Provide a mutable <file_name> implementation. <iden> to conform.;to conform;Similar;0.72843337059021
Fix styling of <iden> download;styling;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Similar;0.7011902332305908
Fix styling of <iden> download;styling;Simplify test method fetching;-;Similar;0.629071831703186
Fix styling of <iden> download;styling;Allow <file_name> instantiation  ;Hide some Apache implementation details;Similar;0.7260137796401978
Fix styling of <iden> download;styling;Hide more implementation details;more implementation details;Similar;0.5627070665359497
Fix styling of <iden> download;styling;Remove unused <file_name> classes;unused;Similar;0.5823572874069214
Fix styling of <iden> download;styling;Introduce builder pattern to instantiate <method_name>;profiler are now optional. Convenience methods for specifying a <iden> or an <iden> directly are also provided.;Similar;0.7281467914581299
Fix styling of <iden> download;styling;Use no_aop Guice variant  ;no_aop;Similar;0.5607197284698486
Fix styling of <iden> download;styling;Adding a human-readable name to the  <file_name>  interface;human-readable;Similar;0.6872434020042419
Fix styling of <iden> download;styling;Added getTag() and logChunk() methods;for easier subclassing;Similar;0.7072597742080688
Fix styling of <iden> download;styling;Reintroduced deprecated <file_name> constructor;deprecated;Similar;0.6931641697883606
Fix styling of <iden> download;styling;Fix small wording issues in custom converter docs;small wording issues;Similar;0.69057697057724
Fix styling of <iden> download;styling;Update custom conversion docs per feedback;Clarify that <iden> is just the default converter, Add section on other built-in converters, Add section on implementing your own custom converters;Similar;0.7621372938156128
Fix styling of <iden> download;styling;Fix style nits per review;per review;Similar;0.7598068714141846
Fix styling of <iden> download;styling;fix issue <issue_link> : permit use when servers or intermediaries mistakingly miss Content-<iden> header;mistakingly miss Content-<iden> header;Similar;0.7478504776954651
Fix styling of <iden> download;styling;rename <iden> ->  <file_name>  ;to harvest the names for new annotations;Similar;0.7102587819099426
Fix styling of <iden> download;styling;Move variable to where it is used;where it is used;Similar;0.6128503680229187
Fix styling of <iden> download;styling;Fix spelling;spelling;Similar;0.7571698427200317
Fix styling of <iden> download;styling;Add fixed query parameter support;support;Similar;0.7499815225601196
Fix styling of <iden> download;styling;Add <file_name>, <file_name> support to <file_name>  ;-;Similar;0.6689785718917847
Fix styling of <iden> download;styling;Allow <file_name> extensions;improved <file_name>;Similar;0.7112865447998047
Fix styling of <iden> download;styling;Repackage gson into retrofit.internal.gson  ;enhance integration;Similar;0.6386146545410156
Fix styling of <iden> download;styling;Ensure <file_name> and <file_name> use FileDescriptor.sync();Ensure <file_name> and <file_name> use FileDescriptor.sync();Similar;0.6782394647598267
Fix styling of <iden> download;styling;moved util to <file_name>, added <file_name>  ;Organize and enhance code files;Similar;0.6761350631713867
Fix styling of <iden> download;styling;Use <iden> <version>s JsonAdapter.serializeNulls();serializeNulls;Similar;0.7148041129112244
Fix styling of <iden> download;styling;Removal of Unnecessary Creation of <iden>;if <iden> has length 0 there is no point to create stringBuilder for that. that condition check needs to happen before stringBuilder creation.;Similar;0.5874284505844116
Fix styling of <iden> download;styling;Expose <iden> via the <file_name> injection-like framework;injection-like framework;Similar;0.7112271189689636
Fix styling of <iden> download;styling;Changing `<file_name>` to implement `<file_name>` interface;interface;Similar;0.7766042351722717
Fix styling of <iden> download;styling;Fix support for protobuf <version>+;ExtensionRegistry cannot be null;Similar;0.792138934135437
Fix styling of <iden> download;styling;Fix typo;typo;Similar;0.7762023210525513
Fix styling of <iden> download;styling;Remove redundant throws  ;redundant;Similar;0.5326340198516846
Rename pair to field to match annotation;match annotation;" 
- Add <iden> <method_name>  
- Also update our sample to use <iden> contributors rather than the <iden>  
- Bump some dependencies to their latest versions  
";" 
- Use this on <iden> <version> and prior and when on the <iden>  
- because the latter is shutting down and subject to lame rate limiting when on common networks";Similar;0.5179948210716248
Rename pair to field to match annotation;match annotation;Provide a mutable <file_name> implementation. <iden> to conform.;to conform;Similar;0.569312334060669
Rename pair to field to match annotation;match annotation;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Similar;0.5102907419204712
Rename pair to field to match annotation;match annotation;Simplify test method fetching;-;Similar;0.5766040086746216
Rename pair to field to match annotation;match annotation;Hide more implementation details;more implementation details;Similar;0.5177303552627563
Rename pair to field to match annotation;match annotation;Introduce builder pattern to instantiate <method_name>;profiler are now optional. Convenience methods for specifying a <iden> or an <iden> directly are also provided.;Similar;0.5689480304718018
Rename pair to field to match annotation;match annotation;Added getTag() and logChunk() methods;for easier subclassing;Similar;0.5294570326805115
Rename pair to field to match annotation;match annotation;Reintroduced deprecated <file_name> constructor;deprecated;Similar;0.5349850654602051
Rename pair to field to match annotation;match annotation;Update custom conversion docs per feedback;Clarify that <iden> is just the default converter, Add section on other built-in converters, Add section on implementing your own custom converters;Similar;0.5429151058197021
Rename pair to field to match annotation;match annotation;Fix style nits per review;per review;Similar;0.5065816044807434
Rename pair to field to match annotation;match annotation;rename <iden> ->  <file_name>  ;to harvest the names for new annotations;Similar;0.596070408821106
Rename pair to field to match annotation;match annotation;Move variable to where it is used;where it is used;Similar;0.5433828830718994
Rename pair to field to match annotation;match annotation;Add fixed query parameter support;support;Similar;0.584426999092102
Rename pair to field to match annotation;match annotation;Add <file_name>, <file_name> support to <file_name>  ;-;Similar;0.5035385489463806
Rename pair to field to match annotation;match annotation;Allow <file_name> extensions;improved <file_name>;Similar;0.535392165184021
Rename pair to field to match annotation;match annotation;Repackage gson into retrofit.internal.gson  ;enhance integration;Similar;0.6387038230895996
Rename pair to field to match annotation;match annotation;moved util to <file_name>, added <file_name>  ;Organize and enhance code files;Similar;0.5616609454154968
Rename pair to field to match annotation;match annotation;Changing `<file_name>` to implement `<file_name>` interface;interface;Similar;0.5892735123634338
Rename pair to field to match annotation;match annotation;Fix support for protobuf <version>+;ExtensionRegistry cannot be null;Similar;0.5528069138526917
Rename pair to field to match annotation;match annotation;Fix typo;typo;Similar;0.5167894959449768
Rename pair to field to match annotation;match annotation;Remove redundant throws  ;redundant;Similar;0.5159528851509094
" 
- Add <iden> <method_name>  
- Also update our sample to use <iden> contributors rather than the <iden>  
- Bump some dependencies to their latest versions  
";" 
- Use this on <iden> <version> and prior and when on the <iden>  
- because the latter is shutting down and subject to lame rate limiting when on common networks";Provide a mutable <file_name> implementation. <iden> to conform.;to conform;Similar;0.5825539231300354
" 
- Add <iden> <method_name>  
- Also update our sample to use <iden> contributors rather than the <iden>  
- Bump some dependencies to their latest versions  
";" 
- Use this on <iden> <version> and prior and when on the <iden>  
- because the latter is shutting down and subject to lame rate limiting when on common networks";Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Similar;0.6938439011573792
" 
- Add <iden> <method_name>  
- Also update our sample to use <iden> contributors rather than the <iden>  
- Bump some dependencies to their latest versions  
";" 
- Use this on <iden> <version> and prior and when on the <iden>  
- because the latter is shutting down and subject to lame rate limiting when on common networks";Simplify test method fetching;-;Similar;0.5688292980194092
" 
- Add <iden> <method_name>  
- Also update our sample to use <iden> contributors rather than the <iden>  
- Bump some dependencies to their latest versions  
";" 
- Use this on <iden> <version> and prior and when on the <iden>  
- because the latter is shutting down and subject to lame rate limiting when on common networks";Allow <file_name> instantiation  ;Hide some Apache implementation details;Similar;0.518905758857727
" 
- Add <iden> <method_name>  
- Also update our sample to use <iden> contributors rather than the <iden>  
- Bump some dependencies to their latest versions  
";" 
- Use this on <iden> <version> and prior and when on the <iden>  
- because the latter is shutting down and subject to lame rate limiting when on common networks";Hide more implementation details;more implementation details;Similar;0.5149936676025391
" 
- Add <iden> <method_name>  
- Also update our sample to use <iden> contributors rather than the <iden>  
- Bump some dependencies to their latest versions  
";" 
- Use this on <iden> <version> and prior and when on the <iden>  
- because the latter is shutting down and subject to lame rate limiting when on common networks";Introduce builder pattern to instantiate <method_name>;profiler are now optional. Convenience methods for specifying a <iden> or an <iden> directly are also provided.;Similar;0.591694712638855
" 
- Add <iden> <method_name>  
- Also update our sample to use <iden> contributors rather than the <iden>  
- Bump some dependencies to their latest versions  
";" 
- Use this on <iden> <version> and prior and when on the <iden>  
- because the latter is shutting down and subject to lame rate limiting when on common networks";Adding a human-readable name to the  <file_name>  interface;human-readable;Similar;0.5400838255882263
" 
- Add <iden> <method_name>  
- Also update our sample to use <iden> contributors rather than the <iden>  
- Bump some dependencies to their latest versions  
";" 
- Use this on <iden> <version> and prior and when on the <iden>  
- because the latter is shutting down and subject to lame rate limiting when on common networks";Added getTag() and logChunk() methods;for easier subclassing;Similar;0.6510202288627625
" 
- Add <iden> <method_name>  
- Also update our sample to use <iden> contributors rather than the <iden>  
- Bump some dependencies to their latest versions  
";" 
- Use this on <iden> <version> and prior and when on the <iden>  
- because the latter is shutting down and subject to lame rate limiting when on common networks";Reintroduced deprecated <file_name> constructor;deprecated;Similar;0.5361161828041077
" 
- Add <iden> <method_name>  
- Also update our sample to use <iden> contributors rather than the <iden>  
- Bump some dependencies to their latest versions  
";" 
- Use this on <iden> <version> and prior and when on the <iden>  
- because the latter is shutting down and subject to lame rate limiting when on common networks";Fix small wording issues in custom converter docs;small wording issues;Similar;0.6560975313186646
" 
- Add <iden> <method_name>  
- Also update our sample to use <iden> contributors rather than the <iden>  
- Bump some dependencies to their latest versions  
";" 
- Use this on <iden> <version> and prior and when on the <iden>  
- because the latter is shutting down and subject to lame rate limiting when on common networks";Update custom conversion docs per feedback;Clarify that <iden> is just the default converter, Add section on other built-in converters, Add section on implementing your own custom converters;Similar;0.7227644920349121
" 
- Add <iden> <method_name>  
- Also update our sample to use <iden> contributors rather than the <iden>  
- Bump some dependencies to their latest versions  
";" 
- Use this on <iden> <version> and prior and when on the <iden>  
- because the latter is shutting down and subject to lame rate limiting when on common networks";Fix style nits per review;per review;Similar;0.6424922943115234
" 
- Add <iden> <method_name>  
- Also update our sample to use <iden> contributors rather than the <iden>  
- Bump some dependencies to their latest versions  
";" 
- Use this on <iden> <version> and prior and when on the <iden>  
- because the latter is shutting down and subject to lame rate limiting when on common networks";fix issue <issue_link> : permit use when servers or intermediaries mistakingly miss Content-<iden> header;mistakingly miss Content-<iden> header;Similar;0.6522294282913208
" 
- Add <iden> <method_name>  
- Also update our sample to use <iden> contributors rather than the <iden>  
- Bump some dependencies to their latest versions  
";" 
- Use this on <iden> <version> and prior and when on the <iden>  
- because the latter is shutting down and subject to lame rate limiting when on common networks";rename <iden> ->  <file_name>  ;to harvest the names for new annotations;Similar;0.5285499095916748
" 
- Add <iden> <method_name>  
- Also update our sample to use <iden> contributors rather than the <iden>  
- Bump some dependencies to their latest versions  
";" 
- Use this on <iden> <version> and prior and when on the <iden>  
- because the latter is shutting down and subject to lame rate limiting when on common networks";Add fixed query parameter support;support;Similar;0.5817335247993469
" 
- Add <iden> <method_name>  
- Also update our sample to use <iden> contributors rather than the <iden>  
- Bump some dependencies to their latest versions  
";" 
- Use this on <iden> <version> and prior and when on the <iden>  
- because the latter is shutting down and subject to lame rate limiting when on common networks";Add <file_name>, <file_name> support to <file_name>  ;-;Similar;0.5364691019058228
" 
- Add <iden> <method_name>  
- Also update our sample to use <iden> contributors rather than the <iden>  
- Bump some dependencies to their latest versions  
";" 
- Use this on <iden> <version> and prior and when on the <iden>  
- because the latter is shutting down and subject to lame rate limiting when on common networks";Allow <file_name> extensions;improved <file_name>;Similar;0.5225173830986023
" 
- Add <iden> <method_name>  
- Also update our sample to use <iden> contributors rather than the <iden>  
- Bump some dependencies to their latest versions  
";" 
- Use this on <iden> <version> and prior and when on the <iden>  
- because the latter is shutting down and subject to lame rate limiting when on common networks";Repackage gson into retrofit.internal.gson  ;enhance integration;Similar;0.5255404114723206
" 
- Add <iden> <method_name>  
- Also update our sample to use <iden> contributors rather than the <iden>  
- Bump some dependencies to their latest versions  
";" 
- Use this on <iden> <version> and prior and when on the <iden>  
- because the latter is shutting down and subject to lame rate limiting when on common networks";Ensure <file_name> and <file_name> use FileDescriptor.sync();Ensure <file_name> and <file_name> use FileDescriptor.sync();Similar;0.5283079147338867
" 
- Add <iden> <method_name>  
- Also update our sample to use <iden> contributors rather than the <iden>  
- Bump some dependencies to their latest versions  
";" 
- Use this on <iden> <version> and prior and when on the <iden>  
- because the latter is shutting down and subject to lame rate limiting when on common networks";moved util to <file_name>, added <file_name>  ;Organize and enhance code files;Similar;0.5826548337936401
" 
- Add <iden> <method_name>  
- Also update our sample to use <iden> contributors rather than the <iden>  
- Bump some dependencies to their latest versions  
";" 
- Use this on <iden> <version> and prior and when on the <iden>  
- because the latter is shutting down and subject to lame rate limiting when on common networks";Expose <iden> via the <file_name> injection-like framework;injection-like framework;Similar;0.5542290210723877
" 
- Add <iden> <method_name>  
- Also update our sample to use <iden> contributors rather than the <iden>  
- Bump some dependencies to their latest versions  
";" 
- Use this on <iden> <version> and prior and when on the <iden>  
- because the latter is shutting down and subject to lame rate limiting when on common networks";Changing `<file_name>` to implement `<file_name>` interface;interface;Similar;0.649189293384552
" 
- Add <iden> <method_name>  
- Also update our sample to use <iden> contributors rather than the <iden>  
- Bump some dependencies to their latest versions  
";" 
- Use this on <iden> <version> and prior and when on the <iden>  
- because the latter is shutting down and subject to lame rate limiting when on common networks";Fix support for protobuf <version>+;ExtensionRegistry cannot be null;Similar;0.59031081199646
Provide a mutable <file_name> implementation. <iden> to conform.;to conform;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Similar;0.6379421353340149
Provide a mutable <file_name> implementation. <iden> to conform.;to conform;Simplify test method fetching;-;Similar;0.667137086391449
Provide a mutable <file_name> implementation. <iden> to conform.;to conform;Allow <file_name> instantiation  ;Hide some Apache implementation details;Similar;0.7813699245452881
Provide a mutable <file_name> implementation. <iden> to conform.;to conform;Hide more implementation details;more implementation details;Similar;0.5825198888778687
Provide a mutable <file_name> implementation. <iden> to conform.;to conform;Remove unused <file_name> classes;unused;Similar;0.5417792797088623
Provide a mutable <file_name> implementation. <iden> to conform.;to conform;Introduce builder pattern to instantiate <method_name>;profiler are now optional. Convenience methods for specifying a <iden> or an <iden> directly are also provided.;Similar;0.8208271265029907
Provide a mutable <file_name> implementation. <iden> to conform.;to conform;Use no_aop Guice variant  ;no_aop;Similar;0.5350899696350098
Provide a mutable <file_name> implementation. <iden> to conform.;to conform;Adding a human-readable name to the  <file_name>  interface;human-readable;Similar;0.7935589551925659
Provide a mutable <file_name> implementation. <iden> to conform.;to conform;Added getTag() and logChunk() methods;for easier subclassing;Similar;0.6943091154098511
Provide a mutable <file_name> implementation. <iden> to conform.;to conform;Reintroduced deprecated <file_name> constructor;deprecated;Similar;0.6197587251663208
Provide a mutable <file_name> implementation. <iden> to conform.;to conform;Fix small wording issues in custom converter docs;small wording issues;Similar;0.574398398399353
Provide a mutable <file_name> implementation. <iden> to conform.;to conform;Update custom conversion docs per feedback;Clarify that <iden> is just the default converter, Add section on other built-in converters, Add section on implementing your own custom converters;Similar;0.7600246071815491
Provide a mutable <file_name> implementation. <iden> to conform.;to conform;Fix style nits per review;per review;Similar;0.6637019515037537
Provide a mutable <file_name> implementation. <iden> to conform.;to conform;fix issue <issue_link> : permit use when servers or intermediaries mistakingly miss Content-<iden> header;mistakingly miss Content-<iden> header;Similar;0.5568289756774902
Provide a mutable <file_name> implementation. <iden> to conform.;to conform;rename <iden> ->  <file_name>  ;to harvest the names for new annotations;Similar;0.7927747964859009
Provide a mutable <file_name> implementation. <iden> to conform.;to conform;Move variable to where it is used;where it is used;Similar;0.6040574908256531
Provide a mutable <file_name> implementation. <iden> to conform.;to conform;Fix spelling;spelling;Similar;0.6031488180160522
Provide a mutable <file_name> implementation. <iden> to conform.;to conform;Add fixed query parameter support;support;Similar;0.8023358583450317
Provide a mutable <file_name> implementation. <iden> to conform.;to conform;Add <file_name>, <file_name> support to <file_name>  ;-;Similar;0.856271505355835
Provide a mutable <file_name> implementation. <iden> to conform.;to conform;Allow <file_name> extensions;improved <file_name>;Similar;0.8238099813461304
Provide a mutable <file_name> implementation. <iden> to conform.;to conform;Repackage gson into retrofit.internal.gson  ;enhance integration;Similar;0.6946433186531067
Provide a mutable <file_name> implementation. <iden> to conform.;to conform;Ensure <file_name> and <file_name> use FileDescriptor.sync();Ensure <file_name> and <file_name> use FileDescriptor.sync();Similar;0.8568558692932129
Provide a mutable <file_name> implementation. <iden> to conform.;to conform;moved util to <file_name>, added <file_name>  ;Organize and enhance code files;Similar;0.8257677555084229
Provide a mutable <file_name> implementation. <iden> to conform.;to conform;Use <iden> <version>s JsonAdapter.serializeNulls();serializeNulls;Similar;0.7768203020095825
Provide a mutable <file_name> implementation. <iden> to conform.;to conform;Removal of Unnecessary Creation of <iden>;if <iden> has length 0 there is no point to create stringBuilder for that. that condition check needs to happen before stringBuilder creation.;Similar;0.5174150466918945
Provide a mutable <file_name> implementation. <iden> to conform.;to conform;Expose <iden> via the <file_name> injection-like framework;injection-like framework;Similar;0.8457403182983398
Provide a mutable <file_name> implementation. <iden> to conform.;to conform;Changing `<file_name>` to implement `<file_name>` interface;interface;Similar;0.832633376121521
Provide a mutable <file_name> implementation. <iden> to conform.;to conform;Fix support for protobuf <version>+;ExtensionRegistry cannot be null;Similar;0.7879676818847656
Provide a mutable <file_name> implementation. <iden> to conform.;to conform;Fix typo;typo;Similar;0.7204484939575195
Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Simplify test method fetching;-;Similar;0.5085034966468811
Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Allow <file_name> instantiation  ;Hide some Apache implementation details;Similar;0.6485307216644287
Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Hide more implementation details;more implementation details;Similar;0.562416672706604
Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Remove unused <file_name> classes;unused;Similar;0.6235336065292358
Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Introduce builder pattern to instantiate <method_name>;profiler are now optional. Convenience methods for specifying a <iden> or an <iden> directly are also provided.;Similar;0.701592743396759
Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Adding a human-readable name to the  <file_name>  interface;human-readable;Similar;0.6243727803230286
Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Added getTag() and logChunk() methods;for easier subclassing;Similar;0.6971945762634277
Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Reintroduced deprecated <file_name> constructor;deprecated;Similar;0.7237529158592224
Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Fix small wording issues in custom converter docs;small wording issues;Similar;0.597240149974823
Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Update custom conversion docs per feedback;Clarify that <iden> is just the default converter, Add section on other built-in converters, Add section on implementing your own custom converters;Similar;0.6363136172294617
Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Fix style nits per review;per review;Similar;0.5846729278564453
Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;fix issue <issue_link> : permit use when servers or intermediaries mistakingly miss Content-<iden> header;mistakingly miss Content-<iden> header;Similar;0.7184373140335083
Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;rename <iden> ->  <file_name>  ;to harvest the names for new annotations;Similar;0.6562252044677734
Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Fix spelling;spelling;Similar;0.5154194831848145
Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Add fixed query parameter support;support;Similar;0.6131322383880615
Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Add <file_name>, <file_name> support to <file_name>  ;-;Similar;0.602371096611023
Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Allow <file_name> extensions;improved <file_name>;Similar;0.6289000511169434
Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Repackage gson into retrofit.internal.gson  ;enhance integration;Similar;0.6237013339996338
Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Ensure <file_name> and <file_name> use FileDescriptor.sync();Ensure <file_name> and <file_name> use FileDescriptor.sync();Similar;0.6468614339828491
Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;moved util to <file_name>, added <file_name>  ;Organize and enhance code files;Similar;0.6411795616149902
Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Use <iden> <version>s JsonAdapter.serializeNulls();serializeNulls;Similar;0.6360673308372498
Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Expose <iden> via the <file_name> injection-like framework;injection-like framework;Similar;0.6949537992477417
Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Changing `<file_name>` to implement `<file_name>` interface;interface;Similar;0.6729164719581604
Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Fix support for protobuf <version>+;ExtensionRegistry cannot be null;Similar;0.6426984071731567
Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Fix typo;typo;Similar;0.5186121463775635
Simplify test method fetching;-;Allow <file_name> instantiation  ;Hide some Apache implementation details;Similar;0.6284370422363281
Simplify test method fetching;-;Hide more implementation details;more implementation details;Similar;0.6325609683990479
Simplify test method fetching;-;Introduce builder pattern to instantiate <method_name>;profiler are now optional. Convenience methods for specifying a <iden> or an <iden> directly are also provided.;Similar;0.5780436992645264
Simplify test method fetching;-;Adding a human-readable name to the  <file_name>  interface;human-readable;Similar;0.5488690733909607
Simplify test method fetching;-;Added getTag() and logChunk() methods;for easier subclassing;Similar;0.5641293525695801
Simplify test method fetching;-;Reintroduced deprecated <file_name> constructor;deprecated;Similar;0.5098796486854553
Simplify test method fetching;-;Fix small wording issues in custom converter docs;small wording issues;Similar;0.6214803457260132
Simplify test method fetching;-;Update custom conversion docs per feedback;Clarify that <iden> is just the default converter, Add section on other built-in converters, Add section on implementing your own custom converters;Similar;0.6197760105133057
Simplify test method fetching;-;Fix style nits per review;per review;Similar;0.6298727989196777
Simplify test method fetching;-;fix issue <issue_link> : permit use when servers or intermediaries mistakingly miss Content-<iden> header;mistakingly miss Content-<iden> header;Similar;0.5287350416183472
Simplify test method fetching;-;rename <iden> ->  <file_name>  ;to harvest the names for new annotations;Similar;0.5105786323547363
Simplify test method fetching;-;Move variable to where it is used;where it is used;Similar;0.606395423412323
Simplify test method fetching;-;Fix spelling;spelling;Similar;0.6765037775039673
Simplify test method fetching;-;Add fixed query parameter support;support;Similar;0.7392174005508423
Simplify test method fetching;-;Add <file_name>, <file_name> support to <file_name>  ;-;Similar;0.5937870144844055
Simplify test method fetching;-;Allow <file_name> extensions;improved <file_name>;Similar;0.5932478904724121
Simplify test method fetching;-;Repackage gson into retrofit.internal.gson  ;enhance integration;Similar;0.6173065304756165
Simplify test method fetching;-;Ensure <file_name> and <file_name> use FileDescriptor.sync();Ensure <file_name> and <file_name> use FileDescriptor.sync();Similar;0.5982338786125183
Simplify test method fetching;-;moved util to <file_name>, added <file_name>  ;Organize and enhance code files;Similar;0.5764704942703247
Simplify test method fetching;-;Removal of Unnecessary Creation of <iden>;if <iden> has length 0 there is no point to create stringBuilder for that. that condition check needs to happen before stringBuilder creation.;Similar;0.570930004119873
Simplify test method fetching;-;Expose <iden> via the <file_name> injection-like framework;injection-like framework;Similar;0.5417293310165405
Simplify test method fetching;-;Changing `<file_name>` to implement `<file_name>` interface;interface;Similar;0.618096113204956
Simplify test method fetching;-;Fix support for protobuf <version>+;ExtensionRegistry cannot be null;Similar;0.6977806091308594
Simplify test method fetching;-;Fix typo;typo;Similar;0.6682615280151367
Simplify test method fetching;-;Remove redundant throws  ;redundant;Similar;0.5534138679504395
Allow <file_name> instantiation  ;Hide some Apache implementation details;Hide more implementation details;more implementation details;Similar;0.5132975578308105
Allow <file_name> instantiation  ;Hide some Apache implementation details;Remove unused <file_name> classes;unused;Similar;0.6107161045074463
Allow <file_name> instantiation  ;Hide some Apache implementation details;Introduce builder pattern to instantiate <method_name>;profiler are now optional. Convenience methods for specifying a <iden> or an <iden> directly are also provided.;Similar;0.7930253744125366
Allow <file_name> instantiation  ;Hide some Apache implementation details;Use no_aop Guice variant  ;no_aop;Similar;0.6330769658088684
Allow <file_name> instantiation  ;Hide some Apache implementation details;Adding a human-readable name to the  <file_name>  interface;human-readable;Similar;0.7911759614944458
Allow <file_name> instantiation  ;Hide some Apache implementation details;Added getTag() and logChunk() methods;for easier subclassing;Similar;0.7346149682998657
Allow <file_name> instantiation  ;Hide some Apache implementation details;Reintroduced deprecated <file_name> constructor;deprecated;Similar;0.6737313866615295
Allow <file_name> instantiation  ;Hide some Apache implementation details;Fix small wording issues in custom converter docs;small wording issues;Similar;0.5095374584197998
Allow <file_name> instantiation  ;Hide some Apache implementation details;Update custom conversion docs per feedback;Clarify that <iden> is just the default converter, Add section on other built-in converters, Add section on implementing your own custom converters;Similar;0.638672947883606
Allow <file_name> instantiation  ;Hide some Apache implementation details;Fix style nits per review;per review;Similar;0.5891801118850708
Allow <file_name> instantiation  ;Hide some Apache implementation details;fix issue <issue_link> : permit use when servers or intermediaries mistakingly miss Content-<iden> header;mistakingly miss Content-<iden> header;Similar;0.6013823747634888
Allow <file_name> instantiation  ;Hide some Apache implementation details;rename <iden> ->  <file_name>  ;to harvest the names for new annotations;Similar;0.8335056304931641
Allow <file_name> instantiation  ;Hide some Apache implementation details;Move variable to where it is used;where it is used;Similar;0.702756404876709
Allow <file_name> instantiation  ;Hide some Apache implementation details;Fix spelling;spelling;Similar;0.6282609701156616
Allow <file_name> instantiation  ;Hide some Apache implementation details;Add fixed query parameter support;support;Similar;0.7840399742126465
Allow <file_name> instantiation  ;Hide some Apache implementation details;Add <file_name>, <file_name> support to <file_name>  ;-;Similar;0.8933571577072144
Allow <file_name> instantiation  ;Hide some Apache implementation details;Allow <file_name> extensions;improved <file_name>;Similar;0.8941651582717896
Allow <file_name> instantiation  ;Hide some Apache implementation details;Repackage gson into retrofit.internal.gson  ;enhance integration;Similar;0.6772260069847107
Allow <file_name> instantiation  ;Hide some Apache implementation details;Ensure <file_name> and <file_name> use FileDescriptor.sync();Ensure <file_name> and <file_name> use FileDescriptor.sync();Similar;0.8118504285812378
Allow <file_name> instantiation  ;Hide some Apache implementation details;moved util to <file_name>, added <file_name>  ;Organize and enhance code files;Similar;0.8642947673797607
Allow <file_name> instantiation  ;Hide some Apache implementation details;Use <iden> <version>s JsonAdapter.serializeNulls();serializeNulls;Similar;0.7642807960510254
Allow <file_name> instantiation  ;Hide some Apache implementation details;Removal of Unnecessary Creation of <iden>;if <iden> has length 0 there is no point to create stringBuilder for that. that condition check needs to happen before stringBuilder creation.;Similar;0.59666907787323
Allow <file_name> instantiation  ;Hide some Apache implementation details;Expose <iden> via the <file_name> injection-like framework;injection-like framework;Similar;0.847456693649292
Allow <file_name> instantiation  ;Hide some Apache implementation details;Changing `<file_name>` to implement `<file_name>` interface;interface;Similar;0.7907257080078125
Allow <file_name> instantiation  ;Hide some Apache implementation details;Fix support for protobuf <version>+;ExtensionRegistry cannot be null;Similar;0.7585824131965637
Allow <file_name> instantiation  ;Hide some Apache implementation details;Fix typo;typo;Similar;0.6568505764007568
Allow <file_name> instantiation  ;Hide some Apache implementation details;Remove redundant throws  ;redundant;Similar;0.5614131689071655
Hide more implementation details;more implementation details;Use no_aop Guice variant  ;no_aop;Similar;0.580647885799408
Hide more implementation details;more implementation details;Added getTag() and logChunk() methods;for easier subclassing;Similar;0.5417373180389404
Hide more implementation details;more implementation details;Reintroduced deprecated <file_name> constructor;deprecated;Similar;0.5757737755775452
Hide more implementation details;more implementation details;Update custom conversion docs per feedback;Clarify that <iden> is just the default converter, Add section on other built-in converters, Add section on implementing your own custom converters;Similar;0.5156089067459106
Hide more implementation details;more implementation details;Fix style nits per review;per review;Similar;0.6072625517845154
Hide more implementation details;more implementation details;rename <iden> ->  <file_name>  ;to harvest the names for new annotations;Similar;0.5404983758926392
Hide more implementation details;more implementation details;Move variable to where it is used;where it is used;Similar;0.6633421182632446
Hide more implementation details;more implementation details;Fix spelling;spelling;Similar;0.5776621103286743
Hide more implementation details;more implementation details;Add fixed query parameter support;support;Similar;0.6730105876922607
Hide more implementation details;more implementation details;Add <file_name>, <file_name> support to <file_name>  ;-;Similar;0.5194534063339233
Hide more implementation details;more implementation details;Allow <file_name> extensions;improved <file_name>;Similar;0.5695674419403076
Hide more implementation details;more implementation details;Repackage gson into retrofit.internal.gson  ;enhance integration;Similar;0.604318380355835
Hide more implementation details;more implementation details;Ensure <file_name> and <file_name> use FileDescriptor.sync();Ensure <file_name> and <file_name> use FileDescriptor.sync();Similar;0.5295228958129883
Hide more implementation details;more implementation details;moved util to <file_name>, added <file_name>  ;Organize and enhance code files;Similar;0.564749538898468
Hide more implementation details;more implementation details;Use <iden> <version>s JsonAdapter.serializeNulls();serializeNulls;Similar;0.5743836164474487
Hide more implementation details;more implementation details;Removal of Unnecessary Creation of <iden>;if <iden> has length 0 there is no point to create stringBuilder for that. that condition check needs to happen before stringBuilder creation.;Similar;0.6064764261245728
Hide more implementation details;more implementation details;Changing `<file_name>` to implement `<file_name>` interface;interface;Similar;0.5381664037704468
Hide more implementation details;more implementation details;Fix support for protobuf <version>+;ExtensionRegistry cannot be null;Similar;0.6229155659675598
Hide more implementation details;more implementation details;Fix typo;typo;Similar;0.6496551632881165
Hide more implementation details;more implementation details;Remove redundant throws  ;redundant;Similar;0.6075996160507202
Remove unused <file_name> classes;unused;Introduce builder pattern to instantiate <method_name>;profiler are now optional. Convenience methods for specifying a <iden> or an <iden> directly are also provided.;Similar;0.5661886930465698
Remove unused <file_name> classes;unused;Use no_aop Guice variant  ;no_aop;Similar;0.7257446050643921
Remove unused <file_name> classes;unused;Adding a human-readable name to the  <file_name>  interface;human-readable;Similar;0.5410637855529785
Remove unused <file_name> classes;unused;Added getTag() and logChunk() methods;for easier subclassing;Similar;0.5120058059692383
Remove unused <file_name> classes;unused;Reintroduced deprecated <file_name> constructor;deprecated;Similar;0.8451347351074219
Remove unused <file_name> classes;unused;Update custom conversion docs per feedback;Clarify that <iden> is just the default converter, Add section on other built-in converters, Add section on implementing your own custom converters;Similar;0.5003412961959839
Remove unused <file_name> classes;unused;Fix style nits per review;per review;Similar;0.5343751907348633
Remove unused <file_name> classes;unused;fix issue <issue_link> : permit use when servers or intermediaries mistakingly miss Content-<iden> header;mistakingly miss Content-<iden> header;Similar;0.5652756690979004
Remove unused <file_name> classes;unused;rename <iden> ->  <file_name>  ;to harvest the names for new annotations;Similar;0.6890155076980591
Remove unused <file_name> classes;unused;Move variable to where it is used;where it is used;Similar;0.5561608076095581
Remove unused <file_name> classes;unused;Fix spelling;spelling;Similar;0.5790921449661255
Remove unused <file_name> classes;unused;Add fixed query parameter support;support;Similar;0.578961968421936
Remove unused <file_name> classes;unused;Add <file_name>, <file_name> support to <file_name>  ;-;Similar;0.5414645671844482
Remove unused <file_name> classes;unused;Allow <file_name> extensions;improved <file_name>;Similar;0.6115404963493347
Remove unused <file_name> classes;unused;Repackage gson into retrofit.internal.gson  ;enhance integration;Similar;0.562654972076416
Remove unused <file_name> classes;unused;Ensure <file_name> and <file_name> use FileDescriptor.sync();Ensure <file_name> and <file_name> use FileDescriptor.sync();Similar;0.5200549364089966
Remove unused <file_name> classes;unused;moved util to <file_name>, added <file_name>  ;Organize and enhance code files;Similar;0.610884428024292
Remove unused <file_name> classes;unused;Use <iden> <version>s JsonAdapter.serializeNulls();serializeNulls;Similar;0.5665571689605713
Remove unused <file_name> classes;unused;Removal of Unnecessary Creation of <iden>;if <iden> has length 0 there is no point to create stringBuilder for that. that condition check needs to happen before stringBuilder creation.;Similar;0.7955024242401123
Remove unused <file_name> classes;unused;Expose <iden> via the <file_name> injection-like framework;injection-like framework;Similar;0.5799247622489929
Remove unused <file_name> classes;unused;Changing `<file_name>` to implement `<file_name>` interface;interface;Similar;0.6275994777679443
Remove unused <file_name> classes;unused;Fix support for protobuf <version>+;ExtensionRegistry cannot be null;Similar;0.6183642148971558
Remove unused <file_name> classes;unused;Fix typo;typo;Similar;0.5568208694458008
Remove unused <file_name> classes;unused;Remove redundant throws  ;redundant;Similar;0.7225637435913086
Introduce builder pattern to instantiate <method_name>;profiler are now optional. Convenience methods for specifying a <iden> or an <iden> directly are also provided.;Adding a human-readable name to the  <file_name>  interface;human-readable;Similar;0.7831566333770752
Introduce builder pattern to instantiate <method_name>;profiler are now optional. Convenience methods for specifying a <iden> or an <iden> directly are also provided.;Added getTag() and logChunk() methods;for easier subclassing;Similar;0.7219010591506958
Introduce builder pattern to instantiate <method_name>;profiler are now optional. Convenience methods for specifying a <iden> or an <iden> directly are also provided.;Reintroduced deprecated <file_name> constructor;deprecated;Similar;0.6981785893440247
Introduce builder pattern to instantiate <method_name>;profiler are now optional. Convenience methods for specifying a <iden> or an <iden> directly are also provided.;Fix small wording issues in custom converter docs;small wording issues;Similar;0.5279216766357422
Introduce builder pattern to instantiate <method_name>;profiler are now optional. Convenience methods for specifying a <iden> or an <iden> directly are also provided.;Update custom conversion docs per feedback;Clarify that <iden> is just the default converter, Add section on other built-in converters, Add section on implementing your own custom converters;Similar;0.7466318607330322
Introduce builder pattern to instantiate <method_name>;profiler are now optional. Convenience methods for specifying a <iden> or an <iden> directly are also provided.;Fix style nits per review;per review;Similar;0.5920035243034363
Introduce builder pattern to instantiate <method_name>;profiler are now optional. Convenience methods for specifying a <iden> or an <iden> directly are also provided.;fix issue <issue_link> : permit use when servers or intermediaries mistakingly miss Content-<iden> header;mistakingly miss Content-<iden> header;Similar;0.5707553625106812
Introduce builder pattern to instantiate <method_name>;profiler are now optional. Convenience methods for specifying a <iden> or an <iden> directly are also provided.;rename <iden> ->  <file_name>  ;to harvest the names for new annotations;Similar;0.7611083984375
Introduce builder pattern to instantiate <method_name>;profiler are now optional. Convenience methods for specifying a <iden> or an <iden> directly are also provided.;Move variable to where it is used;where it is used;Similar;0.5698906183242798
Introduce builder pattern to instantiate <method_name>;profiler are now optional. Convenience methods for specifying a <iden> or an <iden> directly are also provided.;Fix spelling;spelling;Similar;0.5609074831008911
Introduce builder pattern to instantiate <method_name>;profiler are now optional. Convenience methods for specifying a <iden> or an <iden> directly are also provided.;Add fixed query parameter support;support;Similar;0.7316360473632812
Introduce builder pattern to instantiate <method_name>;profiler are now optional. Convenience methods for specifying a <iden> or an <iden> directly are also provided.;Add <file_name>, <file_name> support to <file_name>  ;-;Similar;0.7631098031997681
Introduce builder pattern to instantiate <method_name>;profiler are now optional. Convenience methods for specifying a <iden> or an <iden> directly are also provided.;Allow <file_name> extensions;improved <file_name>;Similar;0.7343222498893738
Introduce builder pattern to instantiate <method_name>;profiler are now optional. Convenience methods for specifying a <iden> or an <iden> directly are also provided.;Repackage gson into retrofit.internal.gson  ;enhance integration;Similar;0.6850592494010925
Introduce builder pattern to instantiate <method_name>;profiler are now optional. Convenience methods for specifying a <iden> or an <iden> directly are also provided.;Ensure <file_name> and <file_name> use FileDescriptor.sync();Ensure <file_name> and <file_name> use FileDescriptor.sync();Similar;0.7298307418823242
Introduce builder pattern to instantiate <method_name>;profiler are now optional. Convenience methods for specifying a <iden> or an <iden> directly are also provided.;moved util to <file_name>, added <file_name>  ;Organize and enhance code files;Similar;0.7852717638015747
Introduce builder pattern to instantiate <method_name>;profiler are now optional. Convenience methods for specifying a <iden> or an <iden> directly are also provided.;Use <iden> <version>s JsonAdapter.serializeNulls();serializeNulls;Similar;0.7073181867599487
Introduce builder pattern to instantiate <method_name>;profiler are now optional. Convenience methods for specifying a <iden> or an <iden> directly are also provided.;Expose <iden> via the <file_name> injection-like framework;injection-like framework;Similar;0.8502663373947144
Introduce builder pattern to instantiate <method_name>;profiler are now optional. Convenience methods for specifying a <iden> or an <iden> directly are also provided.;Changing `<file_name>` to implement `<file_name>` interface;interface;Similar;0.7999997138977051
Introduce builder pattern to instantiate <method_name>;profiler are now optional. Convenience methods for specifying a <iden> or an <iden> directly are also provided.;Fix support for protobuf <version>+;ExtensionRegistry cannot be null;Similar;0.7216929197311401
Introduce builder pattern to instantiate <method_name>;profiler are now optional. Convenience methods for specifying a <iden> or an <iden> directly are also provided.;Fix typo;typo;Similar;0.6197707653045654
Use no_aop Guice variant  ;no_aop;Reintroduced deprecated <file_name> constructor;deprecated;Similar;0.6559343338012695
Use no_aop Guice variant  ;no_aop;Fix style nits per review;per review;Similar;0.5714541673660278
Use no_aop Guice variant  ;no_aop;rename <iden> ->  <file_name>  ;to harvest the names for new annotations;Similar;0.6621312499046326
Use no_aop Guice variant  ;no_aop;Move variable to where it is used;where it is used;Similar;0.7026371359825134
Use no_aop Guice variant  ;no_aop;Fix spelling;spelling;Similar;0.6110291481018066
Use no_aop Guice variant  ;no_aop;Add fixed query parameter support;support;Similar;0.6122639179229736
Use no_aop Guice variant  ;no_aop;Add <file_name>, <file_name> support to <file_name>  ;-;Similar;0.5260986685752869
Use no_aop Guice variant  ;no_aop;Allow <file_name> extensions;improved <file_name>;Similar;0.6408408880233765
Use no_aop Guice variant  ;no_aop;Repackage gson into retrofit.internal.gson  ;enhance integration;Similar;0.5652638077735901
Use no_aop Guice variant  ;no_aop;Ensure <file_name> and <file_name> use FileDescriptor.sync();Ensure <file_name> and <file_name> use FileDescriptor.sync();Similar;0.5157037377357483
Use no_aop Guice variant  ;no_aop;moved util to <file_name>, added <file_name>  ;Organize and enhance code files;Similar;0.5690762400627136
Use no_aop Guice variant  ;no_aop;Use <iden> <version>s JsonAdapter.serializeNulls();serializeNulls;Similar;0.6694018840789795
Use no_aop Guice variant  ;no_aop;Removal of Unnecessary Creation of <iden>;if <iden> has length 0 there is no point to create stringBuilder for that. that condition check needs to happen before stringBuilder creation.;Similar;0.7683945894241333
Use no_aop Guice variant  ;no_aop;Expose <iden> via the <file_name> injection-like framework;injection-like framework;Similar;0.5546493530273438
Use no_aop Guice variant  ;no_aop;Changing `<file_name>` to implement `<file_name>` interface;interface;Similar;0.5425129532814026
Use no_aop Guice variant  ;no_aop;Fix support for protobuf <version>+;ExtensionRegistry cannot be null;Similar;0.6183469295501709
Use no_aop Guice variant  ;no_aop;Fix typo;typo;Similar;0.6492476463317871
Use no_aop Guice variant  ;no_aop;Remove redundant throws  ;redundant;Similar;0.7129591703414917
Adding a human-readable name to the  <file_name>  interface;human-readable;Added getTag() and logChunk() methods;for easier subclassing;Similar;0.7071002125740051
Adding a human-readable name to the  <file_name>  interface;human-readable;Reintroduced deprecated <file_name> constructor;deprecated;Similar;0.5960749387741089
Adding a human-readable name to the  <file_name>  interface;human-readable;Fix small wording issues in custom converter docs;small wording issues;Similar;0.572672963142395
Adding a human-readable name to the  <file_name>  interface;human-readable;Update custom conversion docs per feedback;Clarify that <iden> is just the default converter, Add section on other built-in converters, Add section on implementing your own custom converters;Similar;0.6513749361038208
Adding a human-readable name to the  <file_name>  interface;human-readable;Fix style nits per review;per review;Similar;0.5602474212646484
Adding a human-readable name to the  <file_name>  interface;human-readable;fix issue <issue_link> : permit use when servers or intermediaries mistakingly miss Content-<iden> header;mistakingly miss Content-<iden> header;Similar;0.5542498826980591
Adding a human-readable name to the  <file_name>  interface;human-readable;rename <iden> ->  <file_name>  ;to harvest the names for new annotations;Similar;0.7685859203338623
Adding a human-readable name to the  <file_name>  interface;human-readable;Fix spelling;spelling;Similar;0.5545523166656494
Adding a human-readable name to the  <file_name>  interface;human-readable;Add fixed query parameter support;support;Similar;0.6682356595993042
Adding a human-readable name to the  <file_name>  interface;human-readable;Add <file_name>, <file_name> support to <file_name>  ;-;Similar;0.8071363568305969
Adding a human-readable name to the  <file_name>  interface;human-readable;Allow <file_name> extensions;improved <file_name>;Similar;0.7552448511123657
Adding a human-readable name to the  <file_name>  interface;human-readable;Repackage gson into retrofit.internal.gson  ;enhance integration;Similar;0.5804884433746338
Adding a human-readable name to the  <file_name>  interface;human-readable;Ensure <file_name> and <file_name> use FileDescriptor.sync();Ensure <file_name> and <file_name> use FileDescriptor.sync();Similar;0.7323441505432129
Adding a human-readable name to the  <file_name>  interface;human-readable;moved util to <file_name>, added <file_name>  ;Organize and enhance code files;Similar;0.7936303615570068
Adding a human-readable name to the  <file_name>  interface;human-readable;Use <iden> <version>s JsonAdapter.serializeNulls();serializeNulls;Similar;0.6669293642044067
Adding a human-readable name to the  <file_name>  interface;human-readable;Expose <iden> via the <file_name> injection-like framework;injection-like framework;Similar;0.8312628269195557
Adding a human-readable name to the  <file_name>  interface;human-readable;Changing `<file_name>` to implement `<file_name>` interface;interface;Similar;0.841084897518158
Adding a human-readable name to the  <file_name>  interface;human-readable;Fix support for protobuf <version>+;ExtensionRegistry cannot be null;Similar;0.659038782119751
Adding a human-readable name to the  <file_name>  interface;human-readable;Fix typo;typo;Similar;0.5647143125534058
Added getTag() and logChunk() methods;for easier subclassing;Reintroduced deprecated <file_name> constructor;deprecated;Similar;0.6553312540054321
Added getTag() and logChunk() methods;for easier subclassing;Update custom conversion docs per feedback;Clarify that <iden> is just the default converter, Add section on other built-in converters, Add section on implementing your own custom converters;Similar;0.6611305475234985
Added getTag() and logChunk() methods;for easier subclassing;Fix style nits per review;per review;Similar;0.5827184915542603
Added getTag() and logChunk() methods;for easier subclassing;fix issue <issue_link> : permit use when servers or intermediaries mistakingly miss Content-<iden> header;mistakingly miss Content-<iden> header;Similar;0.5961349010467529
Added getTag() and logChunk() methods;for easier subclassing;rename <iden> ->  <file_name>  ;to harvest the names for new annotations;Similar;0.7345602512359619
Added getTag() and logChunk() methods;for easier subclassing;Move variable to where it is used;where it is used;Similar;0.6069799661636353
Added getTag() and logChunk() methods;for easier subclassing;Fix spelling;spelling;Similar;0.5007900595664978
Added getTag() and logChunk() methods;for easier subclassing;Add fixed query parameter support;support;Similar;0.711403489112854
Added getTag() and logChunk() methods;for easier subclassing;Add <file_name>, <file_name> support to <file_name>  ;-;Similar;0.7432848215103149
Added getTag() and logChunk() methods;for easier subclassing;Allow <file_name> extensions;improved <file_name>;Similar;0.7397638559341431
Added getTag() and logChunk() methods;for easier subclassing;Repackage gson into retrofit.internal.gson  ;enhance integration;Similar;0.6906962394714355
Added getTag() and logChunk() methods;for easier subclassing;Ensure <file_name> and <file_name> use FileDescriptor.sync();Ensure <file_name> and <file_name> use FileDescriptor.sync();Similar;0.6936830282211304
Added getTag() and logChunk() methods;for easier subclassing;moved util to <file_name>, added <file_name>  ;Organize and enhance code files;Similar;0.7893398404121399
Added getTag() and logChunk() methods;for easier subclassing;Use <iden> <version>s JsonAdapter.serializeNulls();serializeNulls;Similar;0.703479528427124
Added getTag() and logChunk() methods;for easier subclassing;Expose <iden> via the <file_name> injection-like framework;injection-like framework;Similar;0.7722883820533752
Added getTag() and logChunk() methods;for easier subclassing;Changing `<file_name>` to implement `<file_name>` interface;interface;Similar;0.7880513668060303
Added getTag() and logChunk() methods;for easier subclassing;Fix support for protobuf <version>+;ExtensionRegistry cannot be null;Similar;0.6846002340316772
Added getTag() and logChunk() methods;for easier subclassing;Fix typo;typo;Similar;0.5609766840934753
Reintroduced deprecated <file_name> constructor;deprecated;Update custom conversion docs per feedback;Clarify that <iden> is just the default converter, Add section on other built-in converters, Add section on implementing your own custom converters;Similar;0.5901550054550171
Reintroduced deprecated <file_name> constructor;deprecated;Fix style nits per review;per review;Similar;0.5909844040870667
Reintroduced deprecated <file_name> constructor;deprecated;fix issue <issue_link> : permit use when servers or intermediaries mistakingly miss Content-<iden> header;mistakingly miss Content-<iden> header;Similar;0.6471781134605408
Reintroduced deprecated <file_name> constructor;deprecated;rename <iden> ->  <file_name>  ;to harvest the names for new annotations;Similar;0.7569068670272827
Reintroduced deprecated <file_name> constructor;deprecated;Move variable to where it is used;where it is used;Similar;0.6278963685035706
Reintroduced deprecated <file_name> constructor;deprecated;Fix spelling;spelling;Similar;0.6418572068214417
Reintroduced deprecated <file_name> constructor;deprecated;Add fixed query parameter support;support;Similar;0.6600252389907837
Reintroduced deprecated <file_name> constructor;deprecated;Add <file_name>, <file_name> support to <file_name>  ;-;Similar;0.595169186592102
Reintroduced deprecated <file_name> constructor;deprecated;Allow <file_name> extensions;improved <file_name>;Similar;0.6379826068878174
Reintroduced deprecated <file_name> constructor;deprecated;Repackage gson into retrofit.internal.gson  ;enhance integration;Similar;0.7595068216323853
Reintroduced deprecated <file_name> constructor;deprecated;Ensure <file_name> and <file_name> use FileDescriptor.sync();Ensure <file_name> and <file_name> use FileDescriptor.sync();Similar;0.5845117568969727
Reintroduced deprecated <file_name> constructor;deprecated;moved util to <file_name>, added <file_name>  ;Organize and enhance code files;Similar;0.7338156700134277
Reintroduced deprecated <file_name> constructor;deprecated;Use <iden> <version>s JsonAdapter.serializeNulls();serializeNulls;Similar;0.6607768535614014
Reintroduced deprecated <file_name> constructor;deprecated;Removal of Unnecessary Creation of <iden>;if <iden> has length 0 there is no point to create stringBuilder for that. that condition check needs to happen before stringBuilder creation.;Similar;0.757975697517395
Reintroduced deprecated <file_name> constructor;deprecated;Expose <iden> via the <file_name> injection-like framework;injection-like framework;Similar;0.6543771028518677
Reintroduced deprecated <file_name> constructor;deprecated;Changing `<file_name>` to implement `<file_name>` interface;interface;Similar;0.7243882417678833
Reintroduced deprecated <file_name> constructor;deprecated;Fix support for protobuf <version>+;ExtensionRegistry cannot be null;Similar;0.694819450378418
Reintroduced deprecated <file_name> constructor;deprecated;Fix typo;typo;Similar;0.6518627405166626
Reintroduced deprecated <file_name> constructor;deprecated;Remove redundant throws  ;redundant;Similar;0.7432805299758911
Fix small wording issues in custom converter docs;small wording issues;Update custom conversion docs per feedback;Clarify that <iden> is just the default converter, Add section on other built-in converters, Add section on implementing your own custom converters;Similar;0.692899763584137
Fix small wording issues in custom converter docs;small wording issues;Fix style nits per review;per review;Similar;0.6197614669799805
Fix small wording issues in custom converter docs;small wording issues;fix issue <issue_link> : permit use when servers or intermediaries mistakingly miss Content-<iden> header;mistakingly miss Content-<iden> header;Similar;0.673941969871521
Fix small wording issues in custom converter docs;small wording issues;Fix spelling;spelling;Similar;0.6217806935310364
Fix small wording issues in custom converter docs;small wording issues;Add fixed query parameter support;support;Similar;0.5817456245422363
Fix small wording issues in custom converter docs;small wording issues;Allow <file_name> extensions;improved <file_name>;Similar;0.5040459632873535
Fix small wording issues in custom converter docs;small wording issues;Removal of Unnecessary Creation of <iden>;if <iden> has length 0 there is no point to create stringBuilder for that. that condition check needs to happen before stringBuilder creation.;Similar;0.5028064250946045
Fix small wording issues in custom converter docs;small wording issues;Expose <iden> via the <file_name> injection-like framework;injection-like framework;Similar;0.5124421715736389
Fix small wording issues in custom converter docs;small wording issues;Changing `<file_name>` to implement `<file_name>` interface;interface;Similar;0.5842925310134888
Fix small wording issues in custom converter docs;small wording issues;Fix support for protobuf <version>+;ExtensionRegistry cannot be null;Similar;0.6353728771209717
Fix small wording issues in custom converter docs;small wording issues;Fix typo;typo;Similar;0.5587918758392334
Update custom conversion docs per feedback;Clarify that <iden> is just the default converter, Add section on other built-in converters, Add section on implementing your own custom converters;Fix style nits per review;per review;Similar;0.7807948589324951
Update custom conversion docs per feedback;Clarify that <iden> is just the default converter, Add section on other built-in converters, Add section on implementing your own custom converters;fix issue <issue_link> : permit use when servers or intermediaries mistakingly miss Content-<iden> header;mistakingly miss Content-<iden> header;Similar;0.605241060256958
Update custom conversion docs per feedback;Clarify that <iden> is just the default converter, Add section on other built-in converters, Add section on implementing your own custom converters;rename <iden> ->  <file_name>  ;to harvest the names for new annotations;Similar;0.645337700843811
Update custom conversion docs per feedback;Clarify that <iden> is just the default converter, Add section on other built-in converters, Add section on implementing your own custom converters;Move variable to where it is used;where it is used;Similar;0.560748279094696
Update custom conversion docs per feedback;Clarify that <iden> is just the default converter, Add section on other built-in converters, Add section on implementing your own custom converters;Fix spelling;spelling;Similar;0.5862696170806885
Update custom conversion docs per feedback;Clarify that <iden> is just the default converter, Add section on other built-in converters, Add section on implementing your own custom converters;Add fixed query parameter support;support;Similar;0.7117104530334473
Update custom conversion docs per feedback;Clarify that <iden> is just the default converter, Add section on other built-in converters, Add section on implementing your own custom converters;Add <file_name>, <file_name> support to <file_name>  ;-;Similar;0.6512036323547363
Update custom conversion docs per feedback;Clarify that <iden> is just the default converter, Add section on other built-in converters, Add section on implementing your own custom converters;Allow <file_name> extensions;improved <file_name>;Similar;0.6518081426620483
Update custom conversion docs per feedback;Clarify that <iden> is just the default converter, Add section on other built-in converters, Add section on implementing your own custom converters;Repackage gson into retrofit.internal.gson  ;enhance integration;Similar;0.6470981240272522
Update custom conversion docs per feedback;Clarify that <iden> is just the default converter, Add section on other built-in converters, Add section on implementing your own custom converters;Ensure <file_name> and <file_name> use FileDescriptor.sync();Ensure <file_name> and <file_name> use FileDescriptor.sync();Similar;0.683542013168335
Update custom conversion docs per feedback;Clarify that <iden> is just the default converter, Add section on other built-in converters, Add section on implementing your own custom converters;moved util to <file_name>, added <file_name>  ;Organize and enhance code files;Similar;0.680752158164978
Update custom conversion docs per feedback;Clarify that <iden> is just the default converter, Add section on other built-in converters, Add section on implementing your own custom converters;Use <iden> <version>s JsonAdapter.serializeNulls();serializeNulls;Similar;0.6092333793640137
Update custom conversion docs per feedback;Clarify that <iden> is just the default converter, Add section on other built-in converters, Add section on implementing your own custom converters;Expose <iden> via the <file_name> injection-like framework;injection-like framework;Similar;0.6749464273452759
Update custom conversion docs per feedback;Clarify that <iden> is just the default converter, Add section on other built-in converters, Add section on implementing your own custom converters;Changing `<file_name>` to implement `<file_name>` interface;interface;Similar;0.7638142704963684
Update custom conversion docs per feedback;Clarify that <iden> is just the default converter, Add section on other built-in converters, Add section on implementing your own custom converters;Fix support for protobuf <version>+;ExtensionRegistry cannot be null;Similar;0.7140858173370361
Update custom conversion docs per feedback;Clarify that <iden> is just the default converter, Add section on other built-in converters, Add section on implementing your own custom converters;Fix typo;typo;Similar;0.6217501163482666
Fix style nits per review;per review;fix issue <issue_link> : permit use when servers or intermediaries mistakingly miss Content-<iden> header;mistakingly miss Content-<iden> header;Similar;0.6253710985183716
Fix style nits per review;per review;rename <iden> ->  <file_name>  ;to harvest the names for new annotations;Similar;0.5628594160079956
Fix style nits per review;per review;Move variable to where it is used;where it is used;Similar;0.5785675048828125
Fix style nits per review;per review;Fix spelling;spelling;Similar;0.7568799257278442
Fix style nits per review;per review;Add fixed query parameter support;support;Similar;0.726574182510376
Fix style nits per review;per review;Add <file_name>, <file_name> support to <file_name>  ;-;Similar;0.5556191205978394
Fix style nits per review;per review;Allow <file_name> extensions;improved <file_name>;Similar;0.5893176198005676
Fix style nits per review;per review;Repackage gson into retrofit.internal.gson  ;enhance integration;Similar;0.5996991991996765
Fix style nits per review;per review;Ensure <file_name> and <file_name> use FileDescriptor.sync();Ensure <file_name> and <file_name> use FileDescriptor.sync();Similar;0.5973933935165405
Fix style nits per review;per review;moved util to <file_name>, added <file_name>  ;Organize and enhance code files;Similar;0.5814988017082214
Fix style nits per review;per review;Use <iden> <version>s JsonAdapter.serializeNulls();serializeNulls;Similar;0.5682506561279297
Fix style nits per review;per review;Removal of Unnecessary Creation of <iden>;if <iden> has length 0 there is no point to create stringBuilder for that. that condition check needs to happen before stringBuilder creation.;Similar;0.5633994936943054
Fix style nits per review;per review;Expose <iden> via the <file_name> injection-like framework;injection-like framework;Similar;0.5092915296554565
Fix style nits per review;per review;Changing `<file_name>` to implement `<file_name>` interface;interface;Similar;0.619779109954834
Fix style nits per review;per review;Fix support for protobuf <version>+;ExtensionRegistry cannot be null;Similar;0.7348053455352783
Fix style nits per review;per review;Fix typo;typo;Similar;0.7308511734008789
Fix style nits per review;per review;Remove redundant throws  ;redundant;Similar;0.5361871719360352
fix issue <issue_link> : permit use when servers or intermediaries mistakingly miss Content-<iden> header;mistakingly miss Content-<iden> header;rename <iden> ->  <file_name>  ;to harvest the names for new annotations;Similar;0.5330935716629028
fix issue <issue_link> : permit use when servers or intermediaries mistakingly miss Content-<iden> header;mistakingly miss Content-<iden> header;Fix spelling;spelling;Similar;0.6130204200744629
fix issue <issue_link> : permit use when servers or intermediaries mistakingly miss Content-<iden> header;mistakingly miss Content-<iden> header;Add fixed query parameter support;support;Similar;0.6188758611679077
fix issue <issue_link> : permit use when servers or intermediaries mistakingly miss Content-<iden> header;mistakingly miss Content-<iden> header;Add <file_name>, <file_name> support to <file_name>  ;-;Similar;0.508014440536499
fix issue <issue_link> : permit use when servers or intermediaries mistakingly miss Content-<iden> header;mistakingly miss Content-<iden> header;Allow <file_name> extensions;improved <file_name>;Similar;0.5728801488876343
fix issue <issue_link> : permit use when servers or intermediaries mistakingly miss Content-<iden> header;mistakingly miss Content-<iden> header;Repackage gson into retrofit.internal.gson  ;enhance integration;Similar;0.5039157867431641
fix issue <issue_link> : permit use when servers or intermediaries mistakingly miss Content-<iden> header;mistakingly miss Content-<iden> header;Ensure <file_name> and <file_name> use FileDescriptor.sync();Ensure <file_name> and <file_name> use FileDescriptor.sync();Similar;0.5763493776321411
fix issue <issue_link> : permit use when servers or intermediaries mistakingly miss Content-<iden> header;mistakingly miss Content-<iden> header;moved util to <file_name>, added <file_name>  ;Organize and enhance code files;Similar;0.5096879005432129
fix issue <issue_link> : permit use when servers or intermediaries mistakingly miss Content-<iden> header;mistakingly miss Content-<iden> header;Use <iden> <version>s JsonAdapter.serializeNulls();serializeNulls;Similar;0.562814474105835
fix issue <issue_link> : permit use when servers or intermediaries mistakingly miss Content-<iden> header;mistakingly miss Content-<iden> header;Removal of Unnecessary Creation of <iden>;if <iden> has length 0 there is no point to create stringBuilder for that. that condition check needs to happen before stringBuilder creation.;Similar;0.5895966291427612
fix issue <issue_link> : permit use when servers or intermediaries mistakingly miss Content-<iden> header;mistakingly miss Content-<iden> header;Expose <iden> via the <file_name> injection-like framework;injection-like framework;Similar;0.5736475586891174
fix issue <issue_link> : permit use when servers or intermediaries mistakingly miss Content-<iden> header;mistakingly miss Content-<iden> header;Changing `<file_name>` to implement `<file_name>` interface;interface;Similar;0.620883584022522
fix issue <issue_link> : permit use when servers or intermediaries mistakingly miss Content-<iden> header;mistakingly miss Content-<iden> header;Fix support for protobuf <version>+;ExtensionRegistry cannot be null;Similar;0.6007091999053955
fix issue <issue_link> : permit use when servers or intermediaries mistakingly miss Content-<iden> header;mistakingly miss Content-<iden> header;Fix typo;typo;Similar;0.5723691582679749
rename <iden> ->  <file_name>  ;to harvest the names for new annotations;Move variable to where it is used;where it is used;Similar;0.6824002265930176
rename <iden> ->  <file_name>  ;to harvest the names for new annotations;Fix spelling;spelling;Similar;0.6205273270606995
rename <iden> ->  <file_name>  ;to harvest the names for new annotations;Add fixed query parameter support;support;Similar;0.7274725437164307
rename <iden> ->  <file_name>  ;to harvest the names for new annotations;Add <file_name>, <file_name> support to <file_name>  ;-;Similar;0.8332940340042114
rename <iden> ->  <file_name>  ;to harvest the names for new annotations;Allow <file_name> extensions;improved <file_name>;Similar;0.8419884443283081
rename <iden> ->  <file_name>  ;to harvest the names for new annotations;Repackage gson into retrofit.internal.gson  ;enhance integration;Similar;0.7507787942886353
rename <iden> ->  <file_name>  ;to harvest the names for new annotations;Ensure <file_name> and <file_name> use FileDescriptor.sync();Ensure <file_name> and <file_name> use FileDescriptor.sync();Similar;0.766919732093811
rename <iden> ->  <file_name>  ;to harvest the names for new annotations;moved util to <file_name>, added <file_name>  ;Organize and enhance code files;Similar;0.9009898900985718
rename <iden> ->  <file_name>  ;to harvest the names for new annotations;Use <iden> <version>s JsonAdapter.serializeNulls();serializeNulls;Similar;0.8096293210983276
rename <iden> ->  <file_name>  ;to harvest the names for new annotations;Removal of Unnecessary Creation of <iden>;if <iden> has length 0 there is no point to create stringBuilder for that. that condition check needs to happen before stringBuilder creation.;Similar;0.6282994747161865
rename <iden> ->  <file_name>  ;to harvest the names for new annotations;Expose <iden> via the <file_name> injection-like framework;injection-like framework;Similar;0.8471070528030396
rename <iden> ->  <file_name>  ;to harvest the names for new annotations;Changing `<file_name>` to implement `<file_name>` interface;interface;Similar;0.8554489612579346
rename <iden> ->  <file_name>  ;to harvest the names for new annotations;Fix support for protobuf <version>+;ExtensionRegistry cannot be null;Similar;0.7507480382919312
rename <iden> ->  <file_name>  ;to harvest the names for new annotations;Fix typo;typo;Similar;0.6625744104385376
rename <iden> ->  <file_name>  ;to harvest the names for new annotations;Remove redundant throws  ;redundant;Similar;0.5987809896469116
Move variable to where it is used;where it is used;Fix spelling;spelling;Similar;0.6453146934509277
Move variable to where it is used;where it is used;Add fixed query parameter support;support;Similar;0.7238216400146484
Move variable to where it is used;where it is used;Add <file_name>, <file_name> support to <file_name>  ;-;Similar;0.6311098337173462
Move variable to where it is used;where it is used;Allow <file_name> extensions;improved <file_name>;Similar;0.675423800945282
Move variable to where it is used;where it is used;Repackage gson into retrofit.internal.gson  ;enhance integration;Similar;0.6829317808151245
Move variable to where it is used;where it is used;Ensure <file_name> and <file_name> use FileDescriptor.sync();Ensure <file_name> and <file_name> use FileDescriptor.sync();Similar;0.5897806286811829
Move variable to where it is used;where it is used;moved util to <file_name>, added <file_name>  ;Organize and enhance code files;Similar;0.7233008146286011
Move variable to where it is used;where it is used;Use <iden> <version>s JsonAdapter.serializeNulls();serializeNulls;Similar;0.6552118062973022
Move variable to where it is used;where it is used;Removal of Unnecessary Creation of <iden>;if <iden> has length 0 there is no point to create stringBuilder for that. that condition check needs to happen before stringBuilder creation.;Similar;0.660214900970459
Move variable to where it is used;where it is used;Expose <iden> via the <file_name> injection-like framework;injection-like framework;Similar;0.5914943218231201
Move variable to where it is used;where it is used;Changing `<file_name>` to implement `<file_name>` interface;interface;Similar;0.6756452322006226
Move variable to where it is used;where it is used;Fix support for protobuf <version>+;ExtensionRegistry cannot be null;Similar;0.6849745512008667
Move variable to where it is used;where it is used;Fix typo;typo;Similar;0.6930099725723267
Move variable to where it is used;where it is used;Remove redundant throws  ;redundant;Similar;0.6986515522003174
Fix spelling;spelling;Add fixed query parameter support;support;Similar;0.6868546009063721
Fix spelling;spelling;Add <file_name>, <file_name> support to <file_name>  ;-;Similar;0.5277481079101562
Fix spelling;spelling;Allow <file_name> extensions;improved <file_name>;Similar;0.5938596725463867
Fix spelling;spelling;Repackage gson into retrofit.internal.gson  ;enhance integration;Similar;0.6009095907211304
Fix spelling;spelling;Ensure <file_name> and <file_name> use FileDescriptor.sync();Ensure <file_name> and <file_name> use FileDescriptor.sync();Similar;0.5618870258331299
Fix spelling;spelling;moved util to <file_name>, added <file_name>  ;Organize and enhance code files;Similar;0.577532172203064
Fix spelling;spelling;Use <iden> <version>s JsonAdapter.serializeNulls();serializeNulls;Similar;0.5590848922729492
Fix spelling;spelling;Removal of Unnecessary Creation of <iden>;if <iden> has length 0 there is no point to create stringBuilder for that. that condition check needs to happen before stringBuilder creation.;Similar;0.6884121894836426
Fix spelling;spelling;Expose <iden> via the <file_name> injection-like framework;injection-like framework;Similar;0.5034832954406738
Fix spelling;spelling;Changing `<file_name>` to implement `<file_name>` interface;interface;Similar;0.6225712895393372
Fix spelling;spelling;Fix support for protobuf <version>+;ExtensionRegistry cannot be null;Similar;0.7701349854469299
Fix spelling;spelling;Fix typo;typo;Similar;0.8300853967666626
Fix spelling;spelling;Remove redundant throws  ;redundant;Similar;0.6546821594238281
Add fixed query parameter support;support;Add <file_name>, <file_name> support to <file_name>  ;-;Similar;0.7973523139953613
Add fixed query parameter support;support;Allow <file_name> extensions;improved <file_name>;Similar;0.8172138333320618
Add fixed query parameter support;support;Repackage gson into retrofit.internal.gson  ;enhance integration;Similar;0.7020070552825928
Add fixed query parameter support;support;Ensure <file_name> and <file_name> use FileDescriptor.sync();Ensure <file_name> and <file_name> use FileDescriptor.sync();Similar;0.7414731383323669
Add fixed query parameter support;support;moved util to <file_name>, added <file_name>  ;Organize and enhance code files;Similar;0.7738649249076843
Add fixed query parameter support;support;Use <iden> <version>s JsonAdapter.serializeNulls();serializeNulls;Similar;0.6843832731246948
Add fixed query parameter support;support;Removal of Unnecessary Creation of <iden>;if <iden> has length 0 there is no point to create stringBuilder for that. that condition check needs to happen before stringBuilder creation.;Similar;0.6412192583084106
Add fixed query parameter support;support;Expose <iden> via the <file_name> injection-like framework;injection-like framework;Similar;0.7341757416725159
Add fixed query parameter support;support;Changing `<file_name>` to implement `<file_name>` interface;interface;Similar;0.7520205974578857
Add fixed query parameter support;support;Fix support for protobuf <version>+;ExtensionRegistry cannot be null;Similar;0.822589635848999
Add fixed query parameter support;support;Fix typo;typo;Similar;0.7720019817352295
Add fixed query parameter support;support;Remove redundant throws  ;redundant;Similar;0.598615825176239
Add <file_name>, <file_name> support to <file_name>  ;-;Allow <file_name> extensions;improved <file_name>;Similar;0.9179636836051941
Add <file_name>, <file_name> support to <file_name>  ;-;Repackage gson into retrofit.internal.gson  ;enhance integration;Similar;0.6376605033874512
Add <file_name>, <file_name> support to <file_name>  ;-;Ensure <file_name> and <file_name> use FileDescriptor.sync();Ensure <file_name> and <file_name> use FileDescriptor.sync();Similar;0.8598542213439941
Add <file_name>, <file_name> support to <file_name>  ;-;moved util to <file_name>, added <file_name>  ;Organize and enhance code files;Similar;0.9104733467102051
Add <file_name>, <file_name> support to <file_name>  ;-;Use <iden> <version>s JsonAdapter.serializeNulls();serializeNulls;Similar;0.7718778848648071
Add <file_name>, <file_name> support to <file_name>  ;-;Expose <iden> via the <file_name> injection-like framework;injection-like framework;Similar;0.8451688289642334
Add <file_name>, <file_name> support to <file_name>  ;-;Changing `<file_name>` to implement `<file_name>` interface;interface;Similar;0.8212052583694458
Add <file_name>, <file_name> support to <file_name>  ;-;Fix support for protobuf <version>+;ExtensionRegistry cannot be null;Similar;0.7703261375427246
Add <file_name>, <file_name> support to <file_name>  ;-;Fix typo;typo;Similar;0.6292698383331299
Allow <file_name> extensions;improved <file_name>;Repackage gson into retrofit.internal.gson  ;enhance integration;Similar;0.6590733528137207
Allow <file_name> extensions;improved <file_name>;Ensure <file_name> and <file_name> use FileDescriptor.sync();Ensure <file_name> and <file_name> use FileDescriptor.sync();Similar;0.80333411693573
Allow <file_name> extensions;improved <file_name>;moved util to <file_name>, added <file_name>  ;Organize and enhance code files;Similar;0.8489277362823486
Allow <file_name> extensions;improved <file_name>;Use <iden> <version>s JsonAdapter.serializeNulls();serializeNulls;Similar;0.7880712747573853
Allow <file_name> extensions;improved <file_name>;Removal of Unnecessary Creation of <iden>;if <iden> has length 0 there is no point to create stringBuilder for that. that condition check needs to happen before stringBuilder creation.;Similar;0.5718612670898438
Allow <file_name> extensions;improved <file_name>;Expose <iden> via the <file_name> injection-like framework;injection-like framework;Similar;0.8328016996383667
Allow <file_name> extensions;improved <file_name>;Changing `<file_name>` to implement `<file_name>` interface;interface;Similar;0.7921615839004517
Allow <file_name> extensions;improved <file_name>;Fix support for protobuf <version>+;ExtensionRegistry cannot be null;Similar;0.8161601424217224
Allow <file_name> extensions;improved <file_name>;Fix typo;typo;Similar;0.6671755909919739
Allow <file_name> extensions;improved <file_name>;Remove redundant throws  ;redundant;Similar;0.515494704246521
Repackage gson into retrofit.internal.gson  ;enhance integration;Ensure <file_name> and <file_name> use FileDescriptor.sync();Ensure <file_name> and <file_name> use FileDescriptor.sync();Similar;0.6809523701667786
Repackage gson into retrofit.internal.gson  ;enhance integration;moved util to <file_name>, added <file_name>  ;Organize and enhance code files;Similar;0.7688441276550293
Repackage gson into retrofit.internal.gson  ;enhance integration;Use <iden> <version>s JsonAdapter.serializeNulls();serializeNulls;Similar;0.691450834274292
Repackage gson into retrofit.internal.gson  ;enhance integration;Removal of Unnecessary Creation of <iden>;if <iden> has length 0 there is no point to create stringBuilder for that. that condition check needs to happen before stringBuilder creation.;Similar;0.6139432191848755
Repackage gson into retrofit.internal.gson  ;enhance integration;Expose <iden> via the <file_name> injection-like framework;injection-like framework;Similar;0.6516598463058472
Repackage gson into retrofit.internal.gson  ;enhance integration;Changing `<file_name>` to implement `<file_name>` interface;interface;Similar;0.7241215705871582
Repackage gson into retrofit.internal.gson  ;enhance integration;Fix support for protobuf <version>+;ExtensionRegistry cannot be null;Similar;0.7245762348175049
Repackage gson into retrofit.internal.gson  ;enhance integration;Fix typo;typo;Similar;0.7050374150276184
Repackage gson into retrofit.internal.gson  ;enhance integration;Remove redundant throws  ;redundant;Similar;0.6509496569633484
Ensure <file_name> and <file_name> use FileDescriptor.sync();Ensure <file_name> and <file_name> use FileDescriptor.sync();moved util to <file_name>, added <file_name>  ;Organize and enhance code files;Similar;0.8069458603858948
Ensure <file_name> and <file_name> use FileDescriptor.sync();Ensure <file_name> and <file_name> use FileDescriptor.sync();Use <iden> <version>s JsonAdapter.serializeNulls();serializeNulls;Similar;0.7673698663711548
Ensure <file_name> and <file_name> use FileDescriptor.sync();Ensure <file_name> and <file_name> use FileDescriptor.sync();Expose <iden> via the <file_name> injection-like framework;injection-like framework;Similar;0.8073415756225586
Ensure <file_name> and <file_name> use FileDescriptor.sync();Ensure <file_name> and <file_name> use FileDescriptor.sync();Changing `<file_name>` to implement `<file_name>` interface;interface;Similar;0.763008713722229
Ensure <file_name> and <file_name> use FileDescriptor.sync();Ensure <file_name> and <file_name> use FileDescriptor.sync();Fix support for protobuf <version>+;ExtensionRegistry cannot be null;Similar;0.7099522352218628
Ensure <file_name> and <file_name> use FileDescriptor.sync();Ensure <file_name> and <file_name> use FileDescriptor.sync();Fix typo;typo;Similar;0.6648062467575073
moved util to <file_name>, added <file_name>  ;Organize and enhance code files;Use <iden> <version>s JsonAdapter.serializeNulls();serializeNulls;Similar;0.7791630029678345
moved util to <file_name>, added <file_name>  ;Organize and enhance code files;Removal of Unnecessary Creation of <iden>;if <iden> has length 0 there is no point to create stringBuilder for that. that condition check needs to happen before stringBuilder creation.;Similar;0.5549769997596741
moved util to <file_name>, added <file_name>  ;Organize and enhance code files;Expose <iden> via the <file_name> injection-like framework;injection-like framework;Similar;0.827278733253479
moved util to <file_name>, added <file_name>  ;Organize and enhance code files;Changing `<file_name>` to implement `<file_name>` interface;interface;Similar;0.8891830444335938
moved util to <file_name>, added <file_name>  ;Organize and enhance code files;Fix support for protobuf <version>+;ExtensionRegistry cannot be null;Similar;0.7673316597938538
moved util to <file_name>, added <file_name>  ;Organize and enhance code files;Fix typo;typo;Similar;0.6576759219169617
moved util to <file_name>, added <file_name>  ;Organize and enhance code files;Remove redundant throws  ;redundant;Similar;0.5275391340255737
Use <iden> <version>s JsonAdapter.serializeNulls();serializeNulls;Removal of Unnecessary Creation of <iden>;if <iden> has length 0 there is no point to create stringBuilder for that. that condition check needs to happen before stringBuilder creation.;Similar;0.5201470851898193
Use <iden> <version>s JsonAdapter.serializeNulls();serializeNulls;Expose <iden> via the <file_name> injection-like framework;injection-like framework;Similar;0.8215926885604858
Use <iden> <version>s JsonAdapter.serializeNulls();serializeNulls;Changing `<file_name>` to implement `<file_name>` interface;interface;Similar;0.721112072467804
Use <iden> <version>s JsonAdapter.serializeNulls();serializeNulls;Fix support for protobuf <version>+;ExtensionRegistry cannot be null;Similar;0.7212880849838257
Use <iden> <version>s JsonAdapter.serializeNulls();serializeNulls;Fix typo;typo;Similar;0.6767507195472717
Removal of Unnecessary Creation of <iden>;if <iden> has length 0 there is no point to create stringBuilder for that. that condition check needs to happen before stringBuilder creation.;Changing `<file_name>` to implement `<file_name>` interface;interface;Similar;0.5519983768463135
Removal of Unnecessary Creation of <iden>;if <iden> has length 0 there is no point to create stringBuilder for that. that condition check needs to happen before stringBuilder creation.;Fix support for protobuf <version>+;ExtensionRegistry cannot be null;Similar;0.6350982189178467
Removal of Unnecessary Creation of <iden>;if <iden> has length 0 there is no point to create stringBuilder for that. that condition check needs to happen before stringBuilder creation.;Fix typo;typo;Similar;0.6517388820648193
Removal of Unnecessary Creation of <iden>;if <iden> has length 0 there is no point to create stringBuilder for that. that condition check needs to happen before stringBuilder creation.;Remove redundant throws  ;redundant;Similar;0.8504301309585571
Expose <iden> via the <file_name> injection-like framework;injection-like framework;Changing `<file_name>` to implement `<file_name>` interface;interface;Similar;0.8302749991416931
Expose <iden> via the <file_name> injection-like framework;injection-like framework;Fix support for protobuf <version>+;ExtensionRegistry cannot be null;Similar;0.7078875303268433
Expose <iden> via the <file_name> injection-like framework;injection-like framework;Fix typo;typo;Similar;0.5819841027259827
Changing `<file_name>` to implement `<file_name>` interface;interface;Fix support for protobuf <version>+;ExtensionRegistry cannot be null;Similar;0.7742400169372559
Changing `<file_name>` to implement `<file_name>` interface;interface;Fix typo;typo;Similar;0.6574536561965942
Fix support for protobuf <version>+;ExtensionRegistry cannot be null;Fix typo;typo;Similar;0.8192603588104248
Fix support for protobuf <version>+;ExtensionRegistry cannot be null;Remove redundant throws  ;redundant;Similar;0.5843971371650696
Fix typo;typo;Remove redundant throws  ;redundant;Similar;0.626021683216095
