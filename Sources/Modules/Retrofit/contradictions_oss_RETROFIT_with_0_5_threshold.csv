Decision1;Rationale1;Decision2;Rationale2;Relationship;Alpha
Add missing <iden> wrappers as return type;missing;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Contradicts;0.6118639707565308
Added a <file_name> rule for the line indentation  ;Indentation;Use the annotations directly for parameter handling.;Before we attempted to normalize the parameter annotations into a name and type model. The introduction of multi-part transfer encodings required something more expressive so the annotation instances themselves were used. This change removes the name and type in favor of using the annotation for everything.;Contradicts;0.6029033064842224
Added a <file_name> rule for the line indentation  ;Indentation;Properly name ignored exception in catch block  ;Properly naming;Contradicts;0.5470473766326904
Added a <file_name> rule for the line indentation  ;Indentation;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Contradicts;0.8332599401473999
Added a <file_name> rule for the line indentation  ;Indentation;Reintroduced deprecated <file_name> constructor;deprecated;Contradicts;0.8955945372581482
Adding GET support to <file_name>;support;Add coroutine support to <file_name> ;coroutine support;Contradicts;0.5548456311225891
Adding GET support to <file_name>;support;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Contradicts;0.6158739924430847
Adding GET support to <file_name>;support;Reintroduced deprecated <file_name> constructor;deprecated;Contradicts;0.7630059123039246
Fix inconsistencies in javadocs  ;These changes were made with consistency in mind, in relation to the rest of the project;Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;Contradicts;0.6231539249420166
Fix inconsistencies in javadocs  ;These changes were made with consistency in mind, in relation to the rest of the project;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Contradicts;0.627079963684082
baseUrl should end with /;end with /;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Contradicts;0.5457165837287903
add paragraph clarifying logging;clarifying logging;Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;Contradicts;0.5751993060112
add paragraph clarifying logging;clarifying logging;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Contradicts;0.6550843119621277
Add response object to <file_name> success;Gives access to response headers while still converting response within retrofit;Pull out <file_name> base class <enter>;This will allow us to support multiple forms of invocation beyond <iden> calls.;Contradicts;0.5261143445968628
Add response object to <file_name> success;Gives access to response headers while still converting response within retrofit;Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;Contradicts;0.6205942034721375
Add response object to <file_name> success;Gives access to response headers while still converting response within retrofit;Add converters module and protobuf converter;to the sentence;Contradicts;0.5827136039733887
Add response object to <file_name> success;Gives access to response headers while still converting response within retrofit;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Contradicts;0.7126246094703674
Add response object to <file_name> success;Gives access to response headers while still converting response within retrofit;Reintroduced deprecated <file_name> constructor;deprecated;Contradicts;0.7872170805931091
Support <iden> / <iden> for @field;Supporting <iden> / <iden> for @field;Remove old <iden> nonsense;As of API 26 the android.jar contains the classes checked by <iden> and used by <iden>.Java8. And we dont encourage throwing checked exceptions from the service method but instead routing them through your call adapter.;Contradicts;0.5328707098960876
Support <iden> / <iden> for @field;Supporting <iden> / <iden> for @field;Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;Contradicts;0.6871017813682556
Add <iden> wrapper validation  ;validation;Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;Contradicts;0.526866614818573
Add <iden> wrapper validation  ;validation;Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;Contradicts;0.7638183236122131
Add <iden> wrapper validation  ;validation;Use the annotations directly for parameter handling.;Before we attempted to normalize the parameter annotations into a name and type model. The introduction of multi-part transfer encodings required something more expressive so the annotation instances themselves were used. This change removes the name and type in favor of using the annotation for everything.;Contradicts;0.5837410688400269
Add <iden> wrapper validation  ;validation;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Contradicts;0.7038103342056274
Add <iden> wrapper validation  ;validation;Reintroduced deprecated <file_name> constructor;deprecated;Contradicts;0.6923716068267822
Add <iden> integration tests;integration;Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;Contradicts;0.9580800533294678
Add <iden> integration tests;integration;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Contradicts;0.7434232831001282
Add <iden> integration tests;integration;Removal of Unnecessary Creation of <iden>;if <iden> has length 0 there is no point to create stringBuilder for that. that condition check needs to happen before stringBuilder creation.;Contradicts;0.5543133020401001
Small fixes  ;error-prone;Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;Contradicts;0.59355229139328
Small fixes  ;error-prone;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Contradicts;0.7496827244758606
Add coroutine support to <file_name> ;coroutine support;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Contradicts;0.6418566107749939
Add coroutine support to <file_name> ;coroutine support;Reintroduced deprecated <file_name> constructor;deprecated;Contradicts;0.686703622341156
Migrate forced suspension mechanism from yield to <iden>;Since its possible for certain dispatchers to completely avoid yielding, and currently the immediate dispatchers exhibit this behavior, we need an alternate mechanism of forcing suspension or UndeclaredThrowableExceptions will still be seen.;Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;Contradicts;0.5355405211448669
Migrate forced suspension mechanism from yield to <iden>;Since its possible for certain dispatchers to completely avoid yielding, and currently the immediate dispatchers exhibit this behavior, we need an alternate mechanism of forcing suspension or UndeclaredThrowableExceptions will still be seen.;Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;Contradicts;0.9367420077323914
Migrate forced suspension mechanism from yield to <iden>;Since its possible for certain dispatchers to completely avoid yielding, and currently the immediate dispatchers exhibit this behavior, we need an alternate mechanism of forcing suspension or UndeclaredThrowableExceptions will still be seen.;Changing `<file_name>` to implement `<file_name>` interface;interface;Contradicts;0.7467936873435974
Add more obviously missing @nullable annotations;missing;Document maps dont allow null anywhere;null anywhere;Contradicts;0.7751858830451965
Add more obviously missing @nullable annotations;missing;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Contradicts;0.7884098291397095
Add more obviously missing @nullable annotations;missing;Hide more implementation details;more implementation details;Contradicts;0.5553458333015442
Add more obviously missing @nullable annotations;missing;Changing `<file_name>` to implement `<file_name>` interface;interface;Contradicts;0.5009003281593323
Add some missing @nullable annotations to <file_name> ;missing;Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;Contradicts;0.5337120890617371
Add some missing @nullable annotations to <file_name> ;missing;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Contradicts;0.7548887133598328
Fatal errors should crash the dispatcher thread;Fatal errors should be propagated by the async observer instead of attempting to make its way back downstream.;Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;Contradicts;0.6245141625404358
Fatal errors should crash the dispatcher thread;Fatal errors should be propagated by the async observer instead of attempting to make its way back downstream.;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Contradicts;0.5881898403167725
Add some missing Nullable annotations;missing;Document maps dont allow null anywhere;null anywhere;Contradicts;0.7976819276809692
Add some missing Nullable annotations;missing;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Contradicts;0.6841503381729126
Add some missing Nullable annotations;missing;Document maps dont allow null anywhere;null anywhere;Contradicts;0.7976819276809692
Add some missing Nullable annotations;missing;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Contradicts;0.6841503381729126
Use a dummy value to further validation optional delegation;This ensures the value can only come from only one place;Use the annotations directly for parameter handling.;Before we attempted to normalize the parameter annotations into a name and type model. The introduction of multi-part transfer encodings required something more expressive so the annotation instances themselves were used. This change removes the name and type in favor of using the annotation for everything.;Contradicts;0.6645709872245789
Use a dummy value to further validation optional delegation;This ensures the value can only come from only one place;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Contradicts;0.5763382315635681
Use a dummy value to further validation optional delegation;This ensures the value can only come from only one place;Reintroduced deprecated <file_name> constructor;deprecated;Contradicts;0.5120741128921509
Expose static factory for <file_name> <enter> Also rework the internals of how an <file_name> gets instantiated and set as a tag on the <iden>;This will make a future change easier to land;Pull out <file_name> base class <enter>;This will allow us to support multiple forms of invocation beyond <iden> calls.;Contradicts;0.50656658411026
Expose static factory for <file_name> <enter> Also rework the internals of how an <file_name> gets instantiated and set as a tag on the <iden>;This will make a future change easier to land;Document maps dont allow null anywhere;null anywhere;Contradicts;0.5046101212501526
Expose static factory for <file_name> <enter> Also rework the internals of how an <file_name> gets instantiated and set as a tag on the <iden>;This will make a future change easier to land;Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;Contradicts;0.6374918222427368
Expose static factory for <file_name> <enter> Also rework the internals of how an <file_name> gets instantiated and set as a tag on the <iden>;This will make a future change easier to land;Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;Contradicts;0.912531852722168
Expose static factory for <file_name> <enter> Also rework the internals of how an <file_name> gets instantiated and set as a tag on the <iden>;This will make a future change easier to land;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Contradicts;0.7106934189796448
Expose static factory for <file_name> <enter> Also rework the internals of how an <file_name> gets instantiated and set as a tag on the <iden>;This will make a future change easier to land;Hide more implementation details;more implementation details;Contradicts;0.5040454864501953
Expose static factory for <file_name> <enter> Also rework the internals of how an <file_name> gets instantiated and set as a tag on the <iden>;This will make a future change easier to land;Reintroduced deprecated <file_name> constructor;deprecated;Contradicts;0.9037084579467773
Re-work unresolvable type detection in parameters  ;"In order to natively support Kotlins suspend modifier in the future, we need to allow wildcards to be used for the last parameter; As a result, we only validate the shape of a type once an annotation is detected.";Use the annotations directly for parameter handling.;Before we attempted to normalize the parameter annotations into a name and type model. The introduction of multi-part transfer encodings required something more expressive so the annotation instances themselves were used. This change removes the name and type in favor of using the annotation for everything.;Contradicts;0.5284805297851562
Re-work unresolvable type detection in parameters  ;"In order to natively support Kotlins suspend modifier in the future, we need to allow wildcards to be used for the last parameter; As a result, we only validate the shape of a type once an annotation is detected.";Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Contradicts;0.5874255299568176
Re-work unresolvable type detection in parameters  ;"In order to natively support Kotlins suspend modifier in the future, we need to allow wildcards to be used for the last parameter; As a result, we only validate the shape of a type once an annotation is detected.";Reintroduced deprecated <file_name> constructor;deprecated;Contradicts;0.5500170588493347
Re-work unresolvable type detection in parameters  ;"In order to natively support Kotlins suspend modifier in the future, we need to allow wildcards to be used for the last parameter; As a result, we only validate the shape of a type once an annotation is detected.";Changing `<file_name>` to implement `<file_name>` interface;interface;Contradicts;0.5050727128982544
Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;Contradicts;0.5782102942466736
Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;Contradicts;0.5351000428199768
Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Contradicts;0.561454176902771
Update to <iden> <version>;Use get instead of parse for <iden> and <iden> where valid input is always required;Changing `<file_name>` to implement `<file_name>` interface;interface;Contradicts;0.6164105534553528
Consolidate exception formatters in one place  ;streamline implementation and improve maintenance;Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;Contradicts;0.5914309024810791
Consolidate exception formatters in one place  ;streamline implementation and improve maintenance;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Contradicts;0.5964928865432739
Pull out <file_name> base class <enter>;This will allow us to support multiple forms of invocation beyond <iden> calls.;Reintroduced deprecated <file_name> constructor;deprecated;Contradicts;0.8573492169380188
Remove old <iden> nonsense;As of API 26 the android.jar contains the classes checked by <iden> and used by <iden>.Java8. And we dont encourage throwing checked exceptions from the service method but instead routing them through your call adapter.;Rename <method_name> to onSuccess(), and failure() to <iden>();to onSuccess(), and failure(), <iden>;Contradicts;0.9338498711585999
Remove old <iden> nonsense;As of API 26 the android.jar contains the classes checked by <iden> and used by <iden>.Java8. And we dont encourage throwing checked exceptions from the service method but instead routing them through your call adapter.;Add converters module and protobuf converter;to the sentence;Contradicts;0.5532045960426331
Remove old <iden> nonsense;As of API 26 the android.jar contains the classes checked by <iden> and used by <iden>.Java8. And we dont encourage throwing checked exceptions from the service method but instead routing them through your call adapter.;Reintroduced deprecated <file_name> constructor;deprecated;Contradicts;0.954214334487915
Use HTTPS links in documentation where possible  ;where possible;Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;Contradicts;0.6765092611312866
Use HTTPS links in documentation where possible  ;where possible;Reintroduced deprecated <file_name> constructor;deprecated;Contradicts;0.6275164484977722
Combine <file_name> and <iden> into <method_name> <enter>  ;This is one class that handles all of the annotations and binding for a service method;Rename <method_name> to onSuccess(), and failure() to <iden>();to onSuccess(), and failure(), <iden>;Contradicts;0.8899573683738708
Combine <file_name> and <iden> into <method_name> <enter>  ;This is one class that handles all of the annotations and binding for a service method;Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;Contradicts;0.7265965342521667
Combine <file_name> and <iden> into <method_name> <enter>  ;This is one class that handles all of the annotations and binding for a service method;Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;Contradicts;0.6517695188522339
Combine <file_name> and <iden> into <method_name> <enter>  ;This is one class that handles all of the annotations and binding for a service method;Allow <file_name> instantiation  ;Hide some Apache implementation details;Contradicts;0.6938797831535339
Combine <file_name> and <iden> into <method_name> <enter>  ;This is one class that handles all of the annotations and binding for a service method;Reintroduced deprecated <file_name> constructor;deprecated;Contradicts;0.8225380778312683
Combine <file_name> and <iden> into <method_name> <enter>  ;This is one class that handles all of the annotations and binding for a service method;rename <iden> ->  <file_name>  ;to harvest the names for new annotations;Contradicts;0.8175134062767029
Combine <file_name> and <iden> into <method_name> <enter>  ;This is one class that handles all of the annotations and binding for a service method;moved util to <file_name>, added <file_name>  ;Organize and enhance code files;Contradicts;0.7487731575965881
Combine <file_name> and <iden> into <method_name> <enter>  ;This is one class that handles all of the annotations and binding for a service method;Changing `<file_name>` to implement `<file_name>` interface;interface;Contradicts;0.5122303366661072
Rename <method_name> to onSuccess(), and failure() to <iden>();to onSuccess(), and failure(), <iden>;Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;Contradicts;0.5923663377761841
Rename <method_name> to onSuccess(), and failure() to <iden>();to onSuccess(), and failure(), <iden>;Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;Contradicts;0.6135258078575134
Rename <method_name> to onSuccess(), and failure() to <iden>();to onSuccess(), and failure(), <iden>;Reintroduced deprecated <file_name> constructor;deprecated;Contradicts;0.8055628538131714
Rename <method_name> to onSuccess(), and failure() to <iden>();to onSuccess(), and failure(), <iden>;Changing `<file_name>` to implement `<file_name>` interface;interface;Contradicts;0.5359510779380798
Refer to the latest OkHttp version;latest;Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;Contradicts;0.6264552474021912
Refer to the latest OkHttp version;latest;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Contradicts;0.7030513286590576
Refer to the latest OkHttp version;latest;Reintroduced deprecated <file_name> constructor;deprecated;Contradicts;0.882600724697113
Add JSR 305 nullability annotations;nullability annotations;Document maps dont allow null anywhere;null anywhere;Contradicts;0.712727963924408
Add JSR 305 nullability annotations;nullability annotations;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Contradicts;0.7130762934684753
Update <file_name> to the latest version;the latest version;Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;Contradicts;0.5260277390480042
Update <file_name> to the latest version;the latest version;Reintroduced deprecated <file_name> constructor;deprecated;Contradicts;0.905970573425293
Remove unused interface  ;unused;Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;Contradicts;0.5663123726844788
Remove unused interface  ;unused;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Contradicts;0.5793283581733704
Remove unused interface  ;unused;Reintroduced deprecated <file_name> constructor;deprecated;Contradicts;0.6822841167449951
Remove unused interface  ;unused;Changing `<file_name>` to implement `<file_name>` interface;interface;Contradicts;0.6001151204109192
Simplify observable creation and reduce runtime allocations;Simplify, reduce;Reintroduced deprecated <file_name> constructor;deprecated;Contradicts;0.5629485845565796
Refactor <iden> tests to avoid the use of blocking operators  ;avoid the use of blocking operators;Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;Contradicts;0.7477759122848511
Refactor <iden> tests to avoid the use of blocking operators  ;avoid the use of blocking operators;Reintroduced deprecated <file_name> constructor;deprecated;Contradicts;0.8142892718315125
Remove duplicated test  ;It is the same as in this file;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Contradicts;0.5555188655853271
Remove duplicated test  ;It is the same as in this file;Reintroduced deprecated <file_name> constructor;deprecated;Contradicts;0.5679471492767334
call it a <version>;Actually;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Contradicts;0.5538778305053711
call it a <version>;Actually;Reintroduced deprecated <file_name> constructor;deprecated;Contradicts;0.5952498316764832
call it a <version>;Actually;Changing `<file_name>` to implement `<file_name>` interface;interface;Contradicts;0.5405405163764954
Add missing import  ;missing;Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;Contradicts;0.8382229208946228
Add missing import  ;missing;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Contradicts;0.8142824769020081
Document maps dont allow null anywhere;null anywhere;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Contradicts;0.5512939095497131
Document maps dont allow null anywhere;null anywhere;Reintroduced deprecated <file_name> constructor;deprecated;Contradicts;0.6598805785179138
Remove the need for generated accessor methods  ;need for generated accessor methods;Reintroduced deprecated <file_name> constructor;deprecated;Contradicts;0.6123848557472229
Propagate callback executor even when not explicitly specified  ;This lets custom <iden> implementations use the <file_name> default for their callbacks;Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;Contradicts;0.890897810459137
Propagate callback executor even when not explicitly specified  ;This lets custom <iden> implementations use the <file_name> default for their callbacks;Reintroduced deprecated <file_name> constructor;deprecated;Contradicts;0.7391438484191895
Propagate callback executor even when not explicitly specified  ;This lets custom <iden> implementations use the <file_name> default for their callbacks;Changing `<file_name>` to implement `<file_name>` interface;interface;Contradicts;0.5620558857917786
Add example of using <iden> <file_name> as a <iden> <method_name>  ;This also adds the <file_name> instance as a param to the string <file_name> to allow it to delegate to others directly. This brings it into parity with the method signatures of the other <file_name> methods anyway.;Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;Contradicts;0.6053638458251953
Add example of using <iden> <file_name> as a <iden> <method_name>  ;This also adds the <file_name> instance as a param to the string <file_name> to allow it to delegate to others directly. This brings it into parity with the method signatures of the other <file_name> methods anyway.;Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;Contradicts;0.7223545908927917
Add example of using <iden> <file_name> as a <iden> <method_name>  ;This also adds the <file_name> instance as a param to the string <file_name> to allow it to delegate to others directly. This brings it into parity with the method signatures of the other <file_name> methods anyway.;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Contradicts;0.6432400345802307
Add example of using <iden> <file_name> as a <iden> <method_name>  ;This also adds the <file_name> instance as a param to the string <file_name> to allow it to delegate to others directly. This brings it into parity with the method signatures of the other <file_name> methods anyway.;Reintroduced deprecated <file_name> constructor;deprecated;Contradicts;0.8432052731513977
Use new <iden>s non-throwing close and a simpler body copy;non-throwing close and a simpler body			      ;Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;Contradicts;0.6353196501731873
Use new <iden>s non-throwing close and a simpler body copy;non-throwing close and a simpler body			      ;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Contradicts;0.6595706343650818
Use new <iden>s non-throwing close and a simpler body copy;non-throwing close and a simpler body			      ;Reintroduced deprecated <file_name> constructor;deprecated;Contradicts;0.9809169769287109
Remove incorrect generic parameter  ;incorrect;Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;Contradicts;0.8054305911064148
Remove incorrect generic parameter  ;incorrect;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Contradicts;0.6161373257637024
Remove incorrect generic parameter  ;incorrect;Reintroduced deprecated <file_name> constructor;deprecated;Contradicts;0.7420278191566467
Use a correct implementation of path encoding;correct;Log network and unexpected exceptions if logging is enabled  ;if logging is enabled;Contradicts;0.568744957447052
Use a correct implementation of path encoding;correct;Reintroduced deprecated <file_name> constructor;deprecated;Contradicts;0.5901826024055481
Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;Remove unused classes from <otherCommit_link>;unused;Contradicts;0.5237566232681274
Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Contradicts;0.6122263669967651
Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;Hide more implementation details;more implementation details;Contradicts;0.5256929397583008
Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;Use no_aop Guice variant  ;no_aop;Contradicts;0.5580732226371765
Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;Adding a human-readable name to the  <file_name>  interface;human-readable;Contradicts;0.57742840051651
Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;Reintroduced deprecated <file_name> constructor;deprecated;Contradicts;0.9146900773048401
Switch to a generic to/from  <file_name> , explicit factory.;This allows for specialization based on for what purpose the  <file_name>  is being created.;rename <iden> ->  <file_name>  ;to harvest the names for new annotations;Contradicts;0.851386547088623
Update RxJava to the specified version with an important Android fix  ;In case someone is relying on the transitive dependency;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Contradicts;0.7717804312705994
Update RxJava to the specified version with an important Android fix  ;In case someone is relying on the transitive dependency;Reintroduced deprecated <file_name> constructor;deprecated;Contradicts;0.8315656185150146
Update RxJava to the specified version with an important Android fix  ;In case someone is relying on the transitive dependency;Changing `<file_name>` to implement `<file_name>` interface;interface;Contradicts;0.5401419997215271
Naming, API changes, and documentation around mock services.  ;mock services;Use the annotations directly for parameter handling.;Before we attempted to normalize the parameter annotations into a name and type model. The introduction of multi-part transfer encodings required something more expressive so the annotation instances themselves were used. This change removes the name and type in favor of using the annotation for everything.;Contradicts;0.5157038569450378
Naming, API changes, and documentation around mock services.  ;mock services;Add converters module and protobuf converter;to the sentence;Contradicts;0.5520032048225403
Naming, API changes, and documentation around mock services.  ;mock services;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Contradicts;0.7963783144950867
Naming, API changes, and documentation around mock services.  ;mock services;Hide more implementation details;more implementation details;Contradicts;0.6521297097206116
Naming, API changes, and documentation around mock services.  ;mock services;Reintroduced deprecated <file_name> constructor;deprecated;Contradicts;0.6235792636871338
Naming, API changes, and documentation around mock services.  ;mock services;Fix spelling;spelling;Contradicts;0.5391342043876648
Introduce factory for <file_name> concept;This is still highly-inefficient in its internal use and there are no tests proving that we now fail earlier in configuring a service method;Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;Contradicts;0.5295946598052979
Introduce factory for <file_name> concept;This is still highly-inefficient in its internal use and there are no tests proving that we now fail earlier in configuring a service method;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Contradicts;0.7473760843276978
Introduce factory for <file_name> concept;This is still highly-inefficient in its internal use and there are no tests proving that we now fail earlier in configuring a service method;Reintroduced deprecated <file_name> constructor;deprecated;Contradicts;0.7901018857955933
Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;Provide a mutable <file_name> implementation. <iden> to conform.;to conform;Contradicts;0.7101019620895386
Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;Reintroduced deprecated <file_name> constructor;deprecated;Contradicts;0.7480993270874023
Move <file_name> into the main package, remove <iden> from core;This change means that only <iden> and <iden> are the types which are allowed for their respective objects by default. If you want serialization of any kind, you need to opt-in with either your own <file_name> or one of the provided ones;fix issue <issue_link> : permit use when servers or intermediaries mistakingly miss Content-<iden> header;mistakingly miss Content-<iden> header;Contradicts;0.6814730167388916
Remove unused classes from <otherCommit_link>;unused;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Contradicts;0.5439808964729309
Remove unused classes from <otherCommit_link>;unused;Reintroduced deprecated <file_name> constructor;deprecated;Contradicts;0.7493727803230286
Remove unused classes from <otherCommit_link>;unused;Changing `<file_name>` to implement `<file_name>` interface;interface;Contradicts;0.7108664512634277
Update to OkHttp <version>. Fix a tiny potential NPE;potential NPE;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Contradicts;0.738172173500061
Fix annotation link;<iden> is gone;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Contradicts;0.6448864936828613
Use the annotations directly for parameter handling.;Before we attempted to normalize the parameter annotations into a name and type model. The introduction of multi-part transfer encodings required something more expressive so the annotation instances themselves were used. This change removes the name and type in favor of using the annotation for everything.;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Contradicts;0.6590428948402405
Use the annotations directly for parameter handling.;Before we attempted to normalize the parameter annotations into a name and type model. The introduction of multi-part transfer encodings required something more expressive so the annotation instances themselves were used. This change removes the name and type in favor of using the annotation for everything.;Reintroduced deprecated <file_name> constructor;deprecated;Contradicts;0.7906460762023926
Use the annotations directly for parameter handling.;Before we attempted to normalize the parameter annotations into a name and type model. The introduction of multi-part transfer encodings required something more expressive so the annotation instances themselves were used. This change removes the name and type in favor of using the annotation for everything.;Changing `<file_name>` to implement `<file_name>` interface;interface;Contradicts;0.5846713781356812
Expose success type on <method_name>;Theres a bit of a test gap going on for all the variants of successful and erroneous handling of sync, async, and rx. This new behavior is fully tested in all three but more general behavior testing for them will be needed in a follow-up.;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Contradicts;0.8640516996383667
Correct map parameter type detection for query and field  ;-;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Contradicts;0.6058783531188965
Correct map parameter type detection for query and field  ;-;Changing `<file_name>` to implement `<file_name>` interface;interface;Contradicts;0.7388117909431458
Update <file_name> to latest. Add default constructor.;latest, Add default constructor;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Contradicts;0.5320343375205994
Update <file_name> to latest. Add default constructor.;latest, Add default constructor;Reintroduced deprecated <file_name> constructor;deprecated;Contradicts;0.9743891954421997
Update <file_name> to latest. Add default constructor.;latest, Add default constructor;Removal of Unnecessary Creation of <iden>;if <iden> has length 0 there is no point to create stringBuilder for that. that condition check needs to happen before stringBuilder creation.;Contradicts;0.5374780893325806
Add simple package info to root package  ;simple;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Contradicts;0.7698705196380615
Properly name ignored exception in catch block  ;Properly naming;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Contradicts;0.654920756816864
Correct header length checking logic. Improve exception message;Improve;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Contradicts;0.5822672843933105
Correct header length checking logic. Improve exception message;Improve;Reintroduced deprecated <file_name> constructor;deprecated;Contradicts;0.6122722029685974
Promote <iden> logging to a class which knows about chunking  ;This is an <iden>-specific implementation detail which is now only performed when needed;Reintroduced deprecated <file_name> constructor;deprecated;Contradicts;0.6451282501220703
Fix IntelliJ auto-formatting  ;Improve the formatting;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Contradicts;0.808670163154602
Add path and query tests for pre-encoded values;-;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Contradicts;0.6063402891159058
Add converters module and protobuf converter;to the sentence;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Contradicts;0.8616322875022888
Add converters module and protobuf converter;to the sentence;Reintroduced deprecated <file_name> constructor;deprecated;Contradicts;0.7089475393295288
Log network and unexpected exceptions if logging is enabled  ;if logging is enabled;Changing `<file_name>` to implement `<file_name>` interface;interface;Contradicts;0.6829121708869934
Fix styling of <iden> download;styling;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Contradicts;0.6563419699668884
Fix styling of <iden> download;styling;Reintroduced deprecated <file_name> constructor;deprecated;Contradicts;0.5370512008666992
Rename pair to field to match annotation;match annotation;Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Contradicts;0.5942578315734863
" 
- Add <iden> <method_name>  
- Also update our sample to use <iden> contributors rather than the <iden>  
- Bump some dependencies to their latest versions  
";" 
- Use this on <iden> <version> and prior and when on the <iden>  
- because the latter is shutting down and subject to lame rate limiting when on common networks";Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Contradicts;0.5235881805419922
" 
- Add <iden> <method_name>  
- Also update our sample to use <iden> contributors rather than the <iden>  
- Bump some dependencies to their latest versions  
";" 
- Use this on <iden> <version> and prior and when on the <iden>  
- because the latter is shutting down and subject to lame rate limiting when on common networks";Reintroduced deprecated <file_name> constructor;deprecated;Contradicts;0.6465986371040344
" 
- Add <iden> <method_name>  
- Also update our sample to use <iden> contributors rather than the <iden>  
- Bump some dependencies to their latest versions  
";" 
- Use this on <iden> <version> and prior and when on the <iden>  
- because the latter is shutting down and subject to lame rate limiting when on common networks";Removal of Unnecessary Creation of <iden>;if <iden> has length 0 there is no point to create stringBuilder for that. that condition check needs to happen before stringBuilder creation.;Contradicts;0.9863511919975281
Provide a mutable <file_name> implementation. <iden> to conform.;to conform;Use no_aop Guice variant  ;no_aop;Contradicts;0.5129789710044861
Provide a mutable <file_name> implementation. <iden> to conform.;to conform;Reintroduced deprecated <file_name> constructor;deprecated;Contradicts;0.8784360289573669
Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Use no_aop Guice variant  ;no_aop;Contradicts;0.6408299803733826
Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Reintroduced deprecated <file_name> constructor;deprecated;Contradicts;0.8445336818695068
Revert Revert Allow  <file_name>  instantiation. Hide some Apache implementation details.;This reverts commit  <otherCommit_link>;Allow <file_name> extensions;improved <file_name>;Contradicts;0.658042848110199
Allow <file_name> instantiation  ;Hide some Apache implementation details;Reintroduced deprecated <file_name> constructor;deprecated;Contradicts;0.8611265420913696
Allow <file_name> instantiation  ;Hide some Apache implementation details;Allow <file_name> extensions;improved <file_name>;Contradicts;0.5477975010871887
Hide more implementation details;more implementation details;Expose <iden> via the <file_name> injection-like framework;injection-like framework;Contradicts;0.5405112504959106
Remove unused <file_name> classes;unused;Reintroduced deprecated <file_name> constructor;deprecated;Contradicts;0.968499481678009
Remove unused <file_name> classes;unused;moved util to <file_name>, added <file_name>  ;Organize and enhance code files;Contradicts;0.9332810044288635
Introduce builder pattern to instantiate <method_name>;profiler are now optional. Convenience methods for specifying a <iden> or an <iden> directly are also provided.;Reintroduced deprecated <file_name> constructor;deprecated;Contradicts;0.9207895994186401
Adding a human-readable name to the  <file_name>  interface;human-readable;Reintroduced deprecated <file_name> constructor;deprecated;Contradicts;0.8622389435768127
Adding a human-readable name to the  <file_name>  interface;human-readable;Removal of Unnecessary Creation of <iden>;if <iden> has length 0 there is no point to create stringBuilder for that. that condition check needs to happen before stringBuilder creation.;Contradicts;0.593475878238678
Reintroduced deprecated <file_name> constructor;deprecated;Add fixed query parameter support;support;Contradicts;0.5338749885559082
Reintroduced deprecated <file_name> constructor;deprecated;Removal of Unnecessary Creation of <iden>;if <iden> has length 0 there is no point to create stringBuilder for that. that condition check needs to happen before stringBuilder creation.;Contradicts;0.8813978433609009
Fix small wording issues in custom converter docs;small wording issues;Changing `<file_name>` to implement `<file_name>` interface;interface;Contradicts;0.5806392431259155
Update custom conversion docs per feedback;Clarify that <iden> is just the default converter, Add section on other built-in converters, Add section on implementing your own custom converters;Changing `<file_name>` to implement `<file_name>` interface;interface;Contradicts;0.6535447239875793
fix issue <issue_link> : permit use when servers or intermediaries mistakingly miss Content-<iden> header;mistakingly miss Content-<iden> header;Changing `<file_name>` to implement `<file_name>` interface;interface;Contradicts;0.823123574256897
