Decision1;Rationale1;Decision2;Rationale2;Relationship;Alpha
trigger wakeup key events;ACPI: button;Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;Similar;0.648673415184021
trigger wakeup key events;ACPI: button;fix some coding style issues;fix some coding style issues;Similar;0.552395224571228
trigger wakeup key events;ACPI: button;code indent should use tabs where possible;to maintain consistency and follow coding standards;Similar;0.5545645952224731
trigger wakeup key events;ACPI: button;fix handling lid state changes when input device closed;-;Similar;0.5422711372375488
trigger wakeup key events;ACPI: button;Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;Similar;0.5032614469528198
trigger wakeup key events;ACPI: button;"
The problem here is the accesses to the PBCG and HMCG
";"
these are the pinconf0 registers for the power";Similar;0.538925051689148
trigger wakeup key events;ACPI: button;adds the BYT_TRIG_LVL flag to this;so now it is turned into a level interrupt which fires both when low and high, iow it simply always fires leading to an interrupt storm, the tablet immediately waking up from suspend again, etc;Similar;0.6188116073608398
trigger wakeup key events;ACPI: button;This commit adds a quirk for this;as no lid-switch function is better then the interrupt storm;Similar;0.743364155292511
trigger wakeup key events;ACPI: button;Setting lid_init_state to ACPI_BUTTON_LID_INIT_OPEN on the T200TA  ;fixes the unwanted behavior, adds a DMI based quirk;Similar;0.5260249376296997
trigger wakeup key events;ACPI: button; the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;Similar;0.6569445133209229
trigger wakeup key events;ACPI: button;re-using the existing option;keeps things simple and it will make it much easier to add DMI quirks which can either disable the LID completely or set another non-default lid_init_state value, both of which are necessary on some devices;Similar;0.6766685247421265
trigger wakeup key events;ACPI: button;[ an action or a change that has been made, including a description of the patch behaviour ];[ the reason for a decision or value judgment ];Similar;0.6638842225074768
trigger wakeup key events;ACPI: button;Increment wakeup count only when notified;-;Similar;0.6344114542007446
trigger wakeup key events;ACPI: button;adds an acpi_handle_debug call  ;to help debugging this;Similar;0.6228471994400024
trigger wakeup key events;ACPI: button;Fix function prototypes for module_param_call();-;Similar;0.5360919237136841
trigger wakeup key events;ACPI: button;The ->sync hook allows all of the relevant event queues to be flushed;to prevent events from being missed due to race conditions;Similar;0.5496652126312256
trigger wakeup key events;ACPI: button;libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;Similar;0.5138925313949585
trigger wakeup key events;ACPI: button;Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;Similar;0.6396855115890503
trigger wakeup key events;ACPI: button;Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);Similar;0.5290156602859497
trigger wakeup key events;ACPI: button;The ->sync hook allows all of the relevant event queues to be flushed;to prevent events from being missed due to race conditions;Similar;0.5496652126312256
trigger wakeup key events;ACPI: button;This patch adds a mechanism to insert lid events as a compensation for the platform triggered ones to form a complete event switches  ;in order to make sure that the platform triggered events can always be reliably delivered to the userspace;Similar;0.579889178276062
trigger wakeup key events;ACPI: button;implements this mechanism  ;only;Similar;0.7109057903289795
trigger wakeup key events;ACPI: button;Use key event type to implement ACPI lid events;Another approach;Similar;0.7668689489364624
trigger wakeup key events;ACPI: button;Add ACPI Button event via netlink routine;-;Similar;0.651358962059021
trigger wakeup key events;ACPI: button;add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;Similar;0.6244664788246155
trigger wakeup key events;ACPI: button;compile error;CONFIG_PM_SLEEP is undefined;Similar;0.5936062335968018
trigger wakeup key events;ACPI: button;Fix enabling button GPEs twice;Fix;Similar;0.5140728950500488
trigger wakeup key events;ACPI: button;Button GPEs have been enabled in the acpi_wake_device_init() during boot;the button driver enables them for the second time;Similar;0.5635579824447632
trigger wakeup key events;ACPI: button;Clean up inclusions of ACPI header files;ACPI;Similar;0.5056033730506897
trigger wakeup key events;ACPI: button;<acpi/acpi_bus.h> be included prior to <acpi/acpi_drivers.h>;so that the acpi_pci_root declarations the latter depends on are always there;Similar;0.5459622144699097
trigger wakeup key events;ACPI: button;Use device wakeup flags for handling ACPI wakeup devices;for handling ACPI wakeup devices;Similar;0.7177128195762634
trigger wakeup key events;ACPI: button;Use GPE reference counting to support shared GPEs  ;the wakeup enable mask bits of GPEs are set as soon as the GPEs are enabled to wake up the system;Similar;0.5341171622276306
trigger wakeup key events;ACPI: button;it is sufficient to set/unset the wakeup mask bits for them during system sleep transitions;"this means that the reference counting of ""wakeup"" GPEs doesnt really make sense";Similar;0.5784398317337036
trigger wakeup key events;ACPI: button;This will allow us to simplify the GPE handling code quite a bit;that change is too intrusive for 2.6.35;Similar;0.5360747575759888
trigger wakeup key events;ACPI: button;Update gfp.h and slab.h includes  ;prepare for breaking implicit slab.h inclusion from percpu.h;Similar;0.5555185079574585
trigger wakeup key events;ACPI: button;Prepare for this change by updating users of gfp and slab facilities;include those headers directly instead of assuming availability;Similar;0.5446329116821289
trigger wakeup key events;ACPI: button;the following script is used as the basis of conversion;As this conversion needs to touch a large number of source files;Similar;0.591173529624939
trigger wakeup key events;ACPI: button;put the new include  ;its order conforms to its surrounding;Similar;0.6681084036827087
trigger wakeup key events;ACPI: button;prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;Similar;0.5124584436416626
trigger wakeup key events;ACPI: button;The script was run again  ;to make sure no file was left behind;Similar;0.5817824006080627
trigger wakeup key events;ACPI: button;description of the patch behaviour;an action or a change;Similar;0.5761885643005371
trigger wakeup key events;ACPI: button;failures were fixed;Build tests were done on the following configurations;Similar;0.548797607421875
trigger wakeup key events;ACPI: button;percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;Similar;0.5977632403373718
trigger wakeup key events;ACPI: button;Im fairly confident about the coverage of this conversion patch  ;Given the fact that I had only a couple of failures from tests on step 6;Similar;0.5228186249732971
trigger wakeup key events;ACPI: button;Add more run-time wake-up fields;Add more;Similar;0.6283180713653564
trigger wakeup key events;ACPI: button;Introduce a new wake-up flag, always_enabled, for marking devices that should be permanently enabled to generate run-time events  ;devices that should be permanently enabled to generate run-time events;Similar;0.6244677305221558
trigger wakeup key events;ACPI: button;Introduce a reference counter for run-wake devices and a function that will initialize all of the run-time wake-up fields for given device.;-;Similar;0.6467442512512207
trigger wakeup key events;ACPI: button;Add an API to allow devices to indicate whether or not they want their devices GPE to be enabled for both runtime and wakeup events;to allow devices to indicate whether or not they want their devices GPE to be enabled;Similar;0.6002472043037415
trigger wakeup key events;ACPI: button;complain the following warning message;"will

";Similar;0.691602349281311
trigger wakeup key events;ACPI: button;return -ENODEV;theres no lid device present;Similar;0.7080708742141724
trigger wakeup key events;ACPI: button;Some drivers need to know when a lid event occurs and get the current status;-;Similar;0.5423258543014526
trigger wakeup key events;ACPI: button;whitespace fix  ;This does not change any actual console output;Similar;0.6005638837814331
trigger wakeup key events;ACPI: button;type: Power Button;I dont think theres anything meaningful user-space can do by knowing whether a button is a control method or a fixed hardware button;Similar;0.6577267050743103
trigger wakeup key events;ACPI: button;Remove button->device pointer;button;Similar;0.5400589108467102
trigger wakeup key events;ACPI: button;convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.5890703797340393
trigger wakeup key events;ACPI: button;Setting ->owner as done currently (pde->owner = THIS_MODULE) is racy;as correctly noted at bug #12454;Similar;0.5073410272598267
trigger wakeup key events;ACPI: button;"proc_fops is declared as ""const""";should give some thoughts;Similar;0.6085000038146973
trigger wakeup key events;ACPI: button;start using GPE from userspace;GPE is already disabled in interrupt context;Similar;0.5956869125366211
trigger wakeup key events;ACPI: button;Move all the component definitions for drivers to a single shared place, include/acpi/acpi_drivers.h  ;to have a single shared place;Similar;0.5077058672904968
trigger wakeup key events;ACPI: button;"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.6419345140457153
trigger wakeup key events;ACPI: button;Use proc_create()/proc_create_data() to make sure that ->proc_fops and ->data be setup;before gluing PDE to main tree;Similar;0.6098179817199707
trigger wakeup key events;ACPI: button;get rid of input BIT* duplicate defines;duplicate;Similar;0.5340925455093384
trigger wakeup key events;ACPI: button;Define the macro temporarily in a local manner;all those local definitions will be removed further in this patchset (to not break bisecting);Similar;0.5511059165000916
trigger wakeup key events;ACPI: button;Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;Similar;0.553350567817688
trigger wakeup key events;ACPI: button;"Invoke with ; as leaving it off confuses Lindent  ";gcc doesnt care;Similar;0.5554342269897461
trigger wakeup key events;ACPI: button;Fix indentation where Lindent did get confused  ;Lindent did get confused;Similar;0.6206511855125427
trigger wakeup key events;ACPI: button;restore /proc/acpi/button/ (ala 2.6.12)  ;[ACPI];Similar;0.558139443397522
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;Similar;0.669758677482605
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;fix some coding style issues;fix some coding style issues;Similar;0.6388235092163086
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;Fix some coding style issues reported by checkpatch.pl;including the following types;Similar;0.6669654846191406
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;code indent should use tabs where possible;to maintain consistency and follow coding standards;Similar;0.662419855594635
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;Clean up printing messages;ACPI button;Similar;0.579156756401062
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;Similar;0.6032830476760864
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;"Remove the "" MD60198"" part from the E2215T quirk";the MD60### part of the model number differs per country/batch while all of the E2215T and E2228T models have this issue;Similar;0.5115842819213867
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;Drop no longer necessary Acer SW5-012 lid_init_state quirk;no longer necessary;Similar;0.5170131921768188
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;"Commit 78a5b53e9fb4 (""Input: soc_button_array - work around DSDTs which modify the irqflags"") adds a workaround for DSDTs with a _LID method which play tricks with the irqflags";assuming that the OS is using an irq-type of IRQ_TYPE_LEVEL_LOW;Similar;0.5873488187789917
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;fix handling lid state changes when input device closed;-;Similar;0.7207516431808472
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];Similar;0.5901859998703003
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;Delete unused proc filename macros;unused;Similar;0.6628725528717041
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;Drop no longer necessary Asus T200TA lid_init_state quirk;no longer necessary;Similar;0.5030571818351746
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;drop the quirk  ;the lid_init_state=ACPI_BUTTON_LID_INIT_OPEN quirk for the Asus T200TA is no longer necessary, the lid now works properly without it;Similar;0.50851970911026
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;"Fixes: 17e5888e4e18 (""x86: Select HARDIRQS_SW_RESEND on x86"")";"(""x86: Select HARDIRQS_SW_RESEND on x86"")";Similar;0.5386618971824646
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;"
The problem here is the accesses to the PBCG and HMCG
";"
these are the pinconf0 registers for the power";Similar;0.664152979850769
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;adds the BYT_TRIG_LVL flag to this;so now it is turned into a level interrupt which fires both when low and high, iow it simply always fires leading to an interrupt storm, the tablet immediately waking up from suspend again, etc;Similar;0.5863432288169861
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;Remove unused acpi_lid_notifier_[un]register() functions;unused;Similar;0.647818386554718
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;Setting lid_init_state to ACPI_BUTTON_LID_INIT_OPEN on the T200TA  ;fixes the unwanted behavior, adds a DMI based quirk;Similar;0.6494263410568237
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons; the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;Similar;0.7426531314849854
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;Turn lid_blacklst DMI table into a generic quirk table;ACPI: button;Similar;0.5303126573562622
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;Similar;0.6267012357711792
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;re-using the existing option;keeps things simple and it will make it much easier to add DMI quirks which can either disable the LID completely or set another non-default lid_init_state value, both of which are necessary on some devices;Similar;0.5281673073768616
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;[ an action or a change that has been made, including a description of the patch behaviour ];[ the reason for a decision or value judgment ];Similar;0.5977117419242859
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;Similar;0.5765275955200195
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;Similar;0.7071198225021362
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;Fix a build warning in the ACPI button driver when CONFIG_PROC_FS is not enabled by marking the unused function as __maybe_unused;not enabled, unused;Similar;0.5873085260391235
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;Similar;0.6611417531967163
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;adds an acpi_handle_debug call  ;to help debugging this;Similar;0.7092172503471375
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;Fix function prototypes for module_param_call();-;Similar;0.6600857973098755
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;fix whitespace in pr_fmt() to align log entries;align log entries;Similar;0.6485673189163208
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;Similar;0.5930302143096924
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;assume the user will use the internal keyboard before this timeout expires;logind only checks the lid switch value after a timeout;Similar;0.5073635578155518
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;Similar;0.7675127983093262
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);Similar;0.6400704383850098
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;Similar;0.6562710404396057
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;This patch adds a mechanism to insert lid events as a compensation for the platform triggered ones to form a complete event switches  ;in order to make sure that the platform triggered events can always be reliably delivered to the userspace;Similar;0.5393185019493103
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;Use key event type to implement ACPI lid events;Another approach;Similar;0.637181282043457
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;Remove pointer to old lid_sysfs on unbind;ACPI / button;Similar;0.6349178552627563
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;Similar;0.6028891801834106
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;Correct a wrong macro usage;This patch simplies the code by merging some redundant code;Similar;0.5289863348007202
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;Similar;0.5807251334190369
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;Similar;0.6961343288421631
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;Add ACPI Button event via netlink routine;-;Similar;0.6402662992477417
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;Similar;0.6409099102020264
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;This caused ACPI shutdown regression on gentoo;VirtualBox;Similar;0.5265384912490845
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;Similar;0.6211943626403809
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;fix button driver compile error when CONFIG_PM_SLEEP is undefined;CONFIG_PM_SLEEP is undefined;Similar;0.5933276414871216
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;compile error;CONFIG_PM_SLEEP is undefined;Similar;0.5998671054840088
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;Fix enabling button GPEs twice;Fix;Similar;0.6012074947357178
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;Button GPEs have been enabled in the acpi_wake_device_init() during boot;the button driver enables them for the second time;Similar;0.5454367399215698
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;remove the GPE enabling code from the button driver;to avoid the problem;Similar;0.6830571293830872
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;Clean up inclusions of ACPI header files;ACPI;Similar;0.6254334449768066
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;Similar;0.6176339983940125
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;<acpi/acpi_bus.h> be included prior to <acpi/acpi_drivers.h>;so that the acpi_pci_root declarations the latter depends on are always there;Similar;0.5437462329864502
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;Use the patch to replace the origin code;provide a better solution;Similar;0.5489006042480469
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;drop the second ACPI driver .remove() argument  ;the second ACPI driver .remove() argument is in fact useless;Similar;0.5323275327682495
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;Fix unused function warnings for CONFIG_PM_SLEEP;unused function warnings;Similar;0.5509860515594482
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;remove unused procfs I/F;unused;Similar;0.5673474073410034
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;Remove unused ACPI button procfs interface;unused;Similar;0.6561751365661621
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;Use device wakeup flags for handling ACPI wakeup devices;for handling ACPI wakeup devices;Similar;0.612030029296875
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;use standard device wakeup flags instead of the special ACPI flags for handling those devices;address this problem;Similar;0.5983536243438721
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;Use GPE reference counting to support shared GPEs  ;the wakeup enable mask bits of GPEs are set as soon as the GPEs are enabled to wake up the system;Similar;0.5459773540496826
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;Update gfp.h and slab.h includes  ;prepare for breaking implicit slab.h inclusion from percpu.h;Similar;0.5609035491943359
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;Prepare for this change by updating users of gfp and slab facilities;include those headers directly instead of assuming availability;Similar;0.5305806398391724
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;the following script is used as the basis of conversion;As this conversion needs to touch a large number of source files;Similar;0.608176589012146
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;Similar;0.6121853590011597
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;The script was run again  ;to make sure no file was left behind;Similar;0.545164167881012
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;Similar;0.6593773365020752
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;Introduce a reference counter for run-wake devices and a function that will initialize all of the run-time wake-up fields for given device.;-;Similar;0.5108827352523804
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;Add an API to allow devices to indicate whether or not they want their devices GPE to be enabled for both runtime and wakeup events;to allow devices to indicate whether or not they want their devices GPE to be enabled;Similar;0.5858546495437622
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;complain the following warning message;"will

";Similar;0.5072011947631836
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;Some drivers need to know when a lid event occurs and get the current status;-;Similar;0.5754300355911255
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;whitespace fix  ;This does not change any actual console output;Similar;0.5770823955535889
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;we could install either a fixed event handler or a notify handler, but the Linux/ACPI code now handles that for us;We previously needed that so we dont need to worry about it;Similar;0.5245327353477478
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;type: Power Button;I dont think theres anything meaningful user-space can do by knowing whether a button is a control method or a fixed hardware button;Similar;0.605613648891449
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;Remove button->device pointer;button;Similar;0.7165309190750122
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;We no longer need a pointer from struct acpi_button back to the struct acpi_device;no longer need;Similar;0.553475558757782
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;This patch adds temporaries to cache the acpi_device_hid(), acpi_device_name(), and acpi_device_class() pointers;so we dont have to clutter the code with so many uses of those interfaces;Similar;0.5420113801956177
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;Better to oops and learn about a bug;than to silently cover it up;Similar;0.5093678832054138
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;changes a bit of whitespace to follow Linux conventions;follow Linux conventions;Similar;0.5922014117240906
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;use .notify method instead of installing handler directly  ;-;Similar;0.6287657022476196
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;The presence of .notify() causes Linux/ACPI to manage event handlers and notify handlers on our behalf  ;so we dont have to install and remove them ourselves;Similar;0.5187901258468628
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.734464168548584
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;"proc_fops is declared as ""const""";should give some thoughts;Similar;0.5907354354858398
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;start using GPE from userspace;GPE is already disabled in interrupt context;Similar;0.5337832570075989
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;Move all the component definitions for drivers to a single shared place, include/acpi/acpi_drivers.h  ;to have a single shared place;Similar;0.5420655012130737
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.6747663617134094
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;Similar;0.6537526845932007
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Similar;0.6017242670059204
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;Use proc_create()/proc_create_data() to make sure that ->proc_fops and ->data be setup;before gluing PDE to main tree;Similar;0.5329549908638
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;get rid of input BIT* duplicate defines;duplicate;Similar;0.6153979301452637
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;Similar;0.5747215747833252
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;Define the macro temporarily in a local manner;all those local definitions will be removed further in this patchset (to not break bisecting);Similar;0.556266725063324
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;Similar;0.6053264141082764
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.6108746528625488
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;fix acpi_driver.name usage;fix;Similar;0.6222009062767029
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;ls bus/acpi/drivers  ;Display the list of ACPI drivers.;Similar;0.5217703580856323
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;"Make ""module name"" actually match the file name";cosmetic only;Similar;0.5038717985153198
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;"Invoke with ; as leaving it off confuses Lindent  ";gcc doesnt care;Similar;0.5377269983291626
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;Fix indentation where Lindent did get confused  ;Lindent did get confused;Similar;0.6420853137969971
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;remove unnecessary casts and variable initializations, clean up formatting;unnecessary;Similar;0.5519067049026489
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;Remove unneeded acpi_handle from driver;unneeded;Similar;0.6247016191482544
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;Use acpi_devices handle instead of drivers  ;-;Similar;0.6440543532371521
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.6642109155654907
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;restore /proc/acpi/button/ (ala 2.6.12)  ;[ACPI];Similar;0.578319787979126
Use different notify handlers for lid and buttons  ;differentiate between lid and buttons;"Create a separate ""historical"" git archive";about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated;Similar;0.5681079626083374
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;Fix some coding style issues reported by checkpatch.pl;including the following types;Similar;0.5325976014137268
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;code indent should use tabs where possible;to maintain consistency and follow coding standards;Similar;0.658083438873291
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;Clean up printing messages;ACPI button;Similar;0.5499696135520935
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;Similar;0.6433804631233215
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;"Remove the "" MD60198"" part from the E2215T quirk";the MD60### part of the model number differs per country/batch while all of the E2215T and E2228T models have this issue;Similar;0.56956946849823
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;Drop no longer necessary Acer SW5-012 lid_init_state quirk;no longer necessary;Similar;0.5362886190414429
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;"Commit 78a5b53e9fb4 (""Input: soc_button_array - work around DSDTs which modify the irqflags"") adds a workaround for DSDTs with a _LID method which play tricks with the irqflags";assuming that the OS is using an irq-type of IRQ_TYPE_LEVEL_LOW;Similar;0.5038113594055176
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;fix handling lid state changes when input device closed;-;Similar;0.6173783540725708
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;Similar;0.5510017275810242
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];Similar;0.6264529824256897
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;Remove unnecessary fall-through markings  ;when it is the case;Similar;0.5003629922866821
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;Delete unused proc filename macros;unused;Similar;0.6061350107192993
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;Drop no longer necessary Asus T200TA lid_init_state quirk;no longer necessary;Similar;0.5205847024917603
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;drop the quirk  ;the lid_init_state=ACPI_BUTTON_LID_INIT_OPEN quirk for the Asus T200TA is no longer necessary, the lid now works properly without it;Similar;0.57212233543396
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;"Fixes: 17e5888e4e18 (""x86: Select HARDIRQS_SW_RESEND on x86"")";"(""x86: Select HARDIRQS_SW_RESEND on x86"")";Similar;0.564038872718811
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;"
The problem here is the accesses to the PBCG and HMCG
";"
these are the pinconf0 registers for the power";Similar;0.618533730506897
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;adds the BYT_TRIG_LVL flag to this;so now it is turned into a level interrupt which fires both when low and high, iow it simply always fires leading to an interrupt storm, the tablet immediately waking up from suspend again, etc;Similar;0.7851974368095398
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;This commit adds a quirk for this;as no lid-switch function is better then the interrupt storm;Similar;0.5707749128341675
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;Remove unused acpi_lid_notifier_[un]register() functions;unused;Similar;0.6909557580947876
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;Setting lid_init_state to ACPI_BUTTON_LID_INIT_OPEN on the T200TA  ;fixes the unwanted behavior, adds a DMI based quirk;Similar;0.6598489880561829
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special; the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;Similar;0.7442420721054077
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;Turn lid_blacklst DMI table into a generic quirk table;ACPI: button;Similar;0.5330731272697449
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;Similar;0.6139089465141296
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;re-using the existing option;keeps things simple and it will make it much easier to add DMI quirks which can either disable the LID completely or set another non-default lid_init_state value, both of which are necessary on some devices;Similar;0.6617797613143921
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;[ an action or a change that has been made, including a description of the patch behaviour ];[ the reason for a decision or value judgment ];Similar;0.598440945148468
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;Similar;0.633252739906311
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;Similar;0.6290881633758545
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;Increment wakeup count only when notified;-;Similar;0.5665044784545898
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;only trigger acpi_pm_wakeup_event() in the acpi_button_notify() path and dont do that in the acpi_lid_initialize_state() path;To avoid the confusion;Similar;0.5396298170089722
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;Similar;0.7318354845046997
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;adds an acpi_handle_debug call  ;to help debugging this;Similar;0.8696728944778442
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;Fix function prototypes for module_param_call();-;Similar;0.7364691495895386
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;fix whitespace in pr_fmt() to align log entries;align log entries;Similar;0.6794992089271545
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;The ->sync hook allows all of the relevant event queues to be flushed;to prevent events from being missed due to race conditions;Similar;0.50465989112854
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;Similar;0.5756975412368774
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;assume the user will use the internal keyboard before this timeout expires;logind only checks the lid switch value after a timeout;Similar;0.5039188861846924
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;"userspace requires to see ""close"" event after the system is resumed";so that it can determine whether the internal display should remain dark and the external display should be lit on;Similar;0.5213836431503296
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;Similar;0.8089457750320435
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);Similar;0.7814662456512451
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;The ->sync hook allows all of the relevant event queues to be flushed;to prevent events from being missed due to race conditions;Similar;0.50465989112854
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;Similar;0.5531586408615112
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;This patch adds a mechanism to insert lid events as a compensation for the platform triggered ones to form a complete event switches  ;in order to make sure that the platform triggered events can always be reliably delivered to the userspace;Similar;0.5269718170166016
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;implements this mechanism  ;only;Similar;0.6608505249023438
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;Use key event type to implement ACPI lid events;Another approach;Similar;0.763932466506958
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;Remove pointer to old lid_sysfs on unbind;ACPI / button;Similar;0.6823543310165405
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;Similar;0.5706660151481628
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;Similar;0.5383558869361877
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;Add ACPI Button event via netlink routine;-;Similar;0.7467306852340698
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;Similar;0.5979171991348267
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;This caused ACPI shutdown regression on gentoo;VirtualBox;Similar;0.5678828954696655
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;Similar;0.7311641573905945
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;compile error;CONFIG_PM_SLEEP is undefined;Similar;0.6852002143859863
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;Fix enabling button GPEs twice;Fix;Similar;0.5324068069458008
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;Button GPEs have been enabled in the acpi_wake_device_init() during boot;the button driver enables them for the second time;Similar;0.5820155143737793
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;remove the GPE enabling code from the button driver;to avoid the problem;Similar;0.5717763304710388
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;Clean up inclusions of ACPI header files;ACPI;Similar;0.6727285385131836
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;Similar;0.5101621747016907
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;<acpi/acpi_bus.h> be included prior to <acpi/acpi_drivers.h>;so that the acpi_pci_root declarations the latter depends on are always there;Similar;0.7533204555511475
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;Use the patch to replace the origin code;provide a better solution;Similar;0.5671892166137695
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;Remove useless type argument of driver .remove() operation;useless;Similar;0.5028671026229858
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;"The second argument of ACPI driver .remove() operation is only used by the ACPI processor driver
";the value passed to that driver through it is always available from the given struct acpi_device objects removal_type field;Similar;0.5038889050483704
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;drop the second ACPI driver .remove() argument  ;the second ACPI driver .remove() argument is in fact useless;Similar;0.5442184209823608
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;remove unused procfs I/F;unused;Similar;0.6227835416793823
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;Remove unused ACPI button procfs interface;unused;Similar;0.5902153253555298
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;Use device wakeup flags for handling ACPI wakeup devices;for handling ACPI wakeup devices;Similar;0.670021653175354
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;use standard device wakeup flags instead of the special ACPI flags for handling those devices;address this problem;Similar;0.5030194520950317
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;Use GPE reference counting to support shared GPEs  ;the wakeup enable mask bits of GPEs are set as soon as the GPEs are enabled to wake up the system;Similar;0.6403354406356812
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;Update gfp.h and slab.h includes  ;prepare for breaking implicit slab.h inclusion from percpu.h;Similar;0.70298832654953
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;Prepare for this change by updating users of gfp and slab facilities;include those headers directly instead of assuming availability;Similar;0.5806554555892944
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;the following script is used as the basis of conversion;As this conversion needs to touch a large number of source files;Similar;0.6821907758712769
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;put the new include  ;its order conforms to its surrounding;Similar;0.6147510409355164
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;Similar;0.5936627984046936
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;The script was run again  ;to make sure no file was left behind;Similar;0.5606256723403931
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;description of the patch behaviour;an action or a change;Similar;0.5459122061729431
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;Similar;0.688509464263916
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;Introduce a new wake-up flag, always_enabled, for marking devices that should be permanently enabled to generate run-time events  ;devices that should be permanently enabled to generate run-time events;Similar;0.5389803647994995
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;Introduce a reference counter for run-wake devices and a function that will initialize all of the run-time wake-up fields for given device.;-;Similar;0.5948807001113892
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;Add an API to allow devices to indicate whether or not they want their devices GPE to be enabled for both runtime and wakeup events;to allow devices to indicate whether or not they want their devices GPE to be enabled;Similar;0.5905483961105347
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;Remove the old GPE type handling entirely  ;Gets rid of various quirks, like the implicit disabling with GPE type setting;Similar;0.5156471133232117
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;complain the following warning message;"will

";Similar;0.6430867910385132
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;return -ENODEV;theres no lid device present;Similar;0.7415791153907776
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;whitespace fix  ;This does not change any actual console output;Similar;0.6559871435165405
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;type: Power Button;I dont think theres anything meaningful user-space can do by knowing whether a button is a control method or a fixed hardware button;Similar;0.5585182905197144
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;Remove button->device pointer;button;Similar;0.7174891829490662
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;We no longer need a pointer from struct acpi_button back to the struct acpi_device;no longer need;Similar;0.5228978395462036
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;This patch adds temporaries to cache the acpi_device_hid(), acpi_device_name(), and acpi_device_class() pointers;so we dont have to clutter the code with so many uses of those interfaces;Similar;0.5741047859191895
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;changes a bit of whitespace to follow Linux conventions;follow Linux conventions;Similar;0.5236912965774536
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;use .notify method instead of installing handler directly  ;-;Similar;0.7126740217208862
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;The presence of .notify() causes Linux/ACPI to manage event handlers and notify handlers on our behalf  ;so we dont have to install and remove them ourselves;Similar;0.5826764106750488
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.8144063949584961
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;Setting ->owner as done currently (pde->owner = THIS_MODULE) is racy;as correctly noted at bug #12454;Similar;0.5489388704299927
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;"proc_fops is declared as ""const""";should give some thoughts;Similar;0.8226295709609985
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;start using GPE from userspace;GPE is already disabled in interrupt context;Similar;0.7316460609436035
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;Move all the component definitions for drivers to a single shared place, include/acpi/acpi_drivers.h  ;to have a single shared place;Similar;0.6803358793258667
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.7300938367843628
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;Similar;0.7023165225982666
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Similar;0.7043761014938354
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;Use proc_create()/proc_create_data() to make sure that ->proc_fops and ->data be setup;before gluing PDE to main tree;Similar;0.6148951053619385
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;get rid of input BIT* duplicate defines;duplicate;Similar;0.7310377955436707
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;Similar;0.5595035552978516
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;Define the macro temporarily in a local manner;all those local definitions will be removed further in this patchset (to not break bisecting);Similar;0.616689920425415
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;Similar;0.7543969750404358
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.7160437107086182
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;fix acpi_driver.name usage;fix;Similar;0.7597527503967285
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;ls bus/acpi/drivers  ;Display the list of ACPI drivers.;Similar;0.5645005702972412
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;"Make ""module name"" actually match the file name";cosmetic only;Similar;0.5803607702255249
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;"Invoke with ; as leaving it off confuses Lindent  ";gcc doesnt care;Similar;0.5471526384353638
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;Fix indentation where Lindent did get confused  ;Lindent did get confused;Similar;0.5392556190490723
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;remove unnecessary casts and variable initializations, clean up formatting;unnecessary;Similar;0.518104076385498
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;Remove unneeded acpi_handle from driver;unneeded;Similar;0.5970431566238403
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;Use acpi_devices handle instead of drivers  ;-;Similar;0.641059398651123
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.7175402641296387
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;restore /proc/acpi/button/ (ala 2.6.12)  ;[ACPI];Similar;0.6978713274002075
Introduce acpi_lid_notify();lid handling in acpi_button_notify() is special;"Create a separate ""historical"" git archive";about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated;Similar;0.6133459806442261
Driver core needs no inform from callee(bus driver) about the result of remove callback;increases separation of concerns;"Remove the "" MD60198"" part from the E2215T quirk";the MD60### part of the model number differs per country/batch while all of the E2215T and E2228T models have this issue;Similar;0.5430364608764648
Driver core needs no inform from callee(bus driver) about the result of remove callback;increases separation of concerns;Drop no longer necessary Acer SW5-012 lid_init_state quirk;no longer necessary;Similar;0.6088323593139648
Driver core needs no inform from callee(bus driver) about the result of remove callback;increases separation of concerns;we no longer need to disable the lid functionality on the Acer SW5-012;Now that this workaround is in place;Similar;0.6089942455291748
Driver core needs no inform from callee(bus driver) about the result of remove callback;increases separation of concerns;Drop no longer necessary Asus T200TA lid_init_state quirk;no longer necessary;Similar;0.6348060369491577
Driver core needs no inform from callee(bus driver) about the result of remove callback;increases separation of concerns;Remove unused acpi_lid_notifier_[un]register() functions;unused;Similar;0.5562741756439209
Driver core needs no inform from callee(bus driver) about the result of remove callback;increases separation of concerns;Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;Similar;0.5174548029899597
Driver core needs no inform from callee(bus driver) about the result of remove callback;increases separation of concerns;Fix a build warning in the ACPI button driver when CONFIG_PROC_FS is not enabled by marking the unused function as __maybe_unused;not enabled, unused;Similar;0.5196311473846436
Driver core needs no inform from callee(bus driver) about the result of remove callback;increases separation of concerns;only trigger acpi_pm_wakeup_event() in the acpi_button_notify() path and dont do that in the acpi_lid_initialize_state() path;To avoid the confusion;Similar;0.5714177489280701
Driver core needs no inform from callee(bus driver) about the result of remove callback;increases separation of concerns;"The only solution is to add a DMI based blacklist and ignore the LID device on these tablets.
";There is nothing the ACPI button driver (or the gpio code) can do to fix this.;Similar;0.5633275508880615
Driver core needs no inform from callee(bus driver) about the result of remove callback;increases separation of concerns;it should not send the complement switch event for the unreliable initial lid state notification;However this mechanism is not suitable for lid_init_state=open/method;Similar;0.6706717014312744
Driver core needs no inform from callee(bus driver) about the result of remove callback;increases separation of concerns;When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;Similar;0.5863059759140015
Driver core needs no inform from callee(bus driver) about the result of remove callback;increases separation of concerns;this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;Similar;0.595435619354248
Driver core needs no inform from callee(bus driver) about the result of remove callback;increases separation of concerns;There is no need to carry potentially outdated Free Software Foundation mailing address in file headers;since the COPYING file includes it;Similar;0.7015196084976196
Driver core needs no inform from callee(bus driver) about the result of remove callback;increases separation of concerns;removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;Similar;0.5023635625839233
Driver core needs no inform from callee(bus driver) about the result of remove callback;increases separation of concerns;This caused ACPI shutdown regression on gentoo;VirtualBox;Similar;0.5119240283966064
Driver core needs no inform from callee(bus driver) about the result of remove callback;increases separation of concerns;remove the GPE enabling code from the button driver;to avoid the problem;Similar;0.5295757055282593
Driver core needs no inform from callee(bus driver) about the result of remove callback;increases separation of concerns;Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;Similar;0.5500110387802124
Driver core needs no inform from callee(bus driver) about the result of remove callback;increases separation of concerns;<acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> should not be included directly from any files that are built for CONFIG_ACPI unset;because that generally leads to build warnings about undefined symbols in !CONFIG_ACPI builds;Similar;0.7783230543136597
Driver core needs no inform from callee(bus driver) about the result of remove callback;increases separation of concerns;Remove useless type argument of driver .remove() operation;useless;Similar;0.6634525060653687
Driver core needs no inform from callee(bus driver) about the result of remove callback;increases separation of concerns;"The second argument of ACPI driver .remove() operation is only used by the ACPI processor driver
";the value passed to that driver through it is always available from the given struct acpi_device objects removal_type field;Similar;0.5950583219528198
Driver core needs no inform from callee(bus driver) about the result of remove callback;increases separation of concerns;drop the second ACPI driver .remove() argument  ;the second ACPI driver .remove() argument is in fact useless;Similar;0.6074705123901367
Driver core needs no inform from callee(bus driver) about the result of remove callback;increases separation of concerns;Fix unused function warnings for CONFIG_PM_SLEEP;unused function warnings;Similar;0.5252467393875122
Driver core needs no inform from callee(bus driver) about the result of remove callback;increases separation of concerns;add #ifdefs to prevent them from being built in that case  ;several suspend/resume functions in ACPI drivers are not used for CONFIG_PM_SLEEP unset;Similar;0.5928788185119629
Driver core needs no inform from callee(bus driver) about the result of remove callback;increases separation of concerns;remove unused procfs I/F;unused;Similar;0.5620243549346924
Driver core needs no inform from callee(bus driver) about the result of remove callback;increases separation of concerns;Remove unused ACPI button procfs interface;unused;Similar;0.5535324215888977
Driver core needs no inform from callee(bus driver) about the result of remove callback;increases separation of concerns;Avoid disabling wakeup unnecessarily on remove;-;Similar;0.5394309759140015
Driver core needs no inform from callee(bus driver) about the result of remove callback;increases separation of concerns;CONFIG_GCOV_KERNEL was turned off for all tests and a few more options had to be turned off depending on archs to make things build;my distributed build env didnt work with gcov compiles, like ipr on powerpc/64 which failed due to missing writeq;Similar;0.5420446395874023
Driver core needs no inform from callee(bus driver) about the result of remove callback;increases separation of concerns;Remove the old GPE type handling entirely  ;Gets rid of various quirks, like the implicit disabling with GPE type setting;Similar;0.5318270921707153
Driver core needs no inform from callee(bus driver) about the result of remove callback;increases separation of concerns;"This patch is to eliminate the above warning message
";Device PNP0C0D:00 failed to resume: error 1;Similar;0.5209587812423706
Driver core needs no inform from callee(bus driver) about the result of remove callback;increases separation of concerns;dont try to use a non-existent lid device;non-existent;Similar;0.673722505569458
Driver core needs no inform from callee(bus driver) about the result of remove callback;increases separation of concerns;not all ACPI drivers use/want it;they should not have to #undef PREFIX to define their own;Similar;0.5054641962051392
Driver core needs no inform from callee(bus driver) about the result of remove callback;increases separation of concerns;We no longer need a pointer from struct acpi_button back to the struct acpi_device;no longer need;Similar;0.6919310092926025
Driver core needs no inform from callee(bus driver) about the result of remove callback;increases separation of concerns;use .notify method instead of installing handler directly  ;-;Similar;0.532523512840271
Driver core needs no inform from callee(bus driver) about the result of remove callback;increases separation of concerns;"rmmoded directories will be empty and return ""."" and "".."" -- no harm";no harm;Similar;0.5778864622116089
Driver core needs no inform from callee(bus driver) about the result of remove callback;increases separation of concerns;dont want such modular code;definitely;Similar;0.5078245997428894
Driver core needs no inform from callee(bus driver) about the result of remove callback;increases separation of concerns;Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;Similar;0.5803545117378235
Driver core needs no inform from callee(bus driver) about the result of remove callback;increases separation of concerns;Remove unneeded acpi_handle from driver;unneeded;Similar;0.7081964015960693
Driver core needs no inform from callee(bus driver) about the result of remove callback;increases separation of concerns;Use acpi_devices handle instead of drivers  ;-;Similar;0.6012197732925415
fix some coding style issues;fix some coding style issues;Fix some coding style issues reported by checkpatch.pl;including the following types;Similar;0.850007176399231
fix some coding style issues;fix some coding style issues;code indent should use tabs where possible;to maintain consistency and follow coding standards;Similar;0.6080975532531738
fix some coding style issues;fix some coding style issues;Clean up printing messages;ACPI button;Similar;0.6254985928535461
fix some coding style issues;fix some coding style issues;fix handling lid state changes when input device closed;-;Similar;0.6759659051895142
fix some coding style issues;fix some coding style issues;Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];Similar;0.536913275718689
fix some coding style issues;fix some coding style issues;Remove unnecessary fall-through markings  ;when it is the case;Similar;0.6000795960426331
fix some coding style issues;fix some coding style issues;Delete unused proc filename macros;unused;Similar;0.556704044342041
fix some coding style issues;fix some coding style issues;drop the quirk  ;the lid_init_state=ACPI_BUTTON_LID_INIT_OPEN quirk for the Asus T200TA is no longer necessary, the lid now works properly without it;Similar;0.501133382320404
fix some coding style issues;fix some coding style issues;"
The problem here is the accesses to the PBCG and HMCG
";"
these are the pinconf0 registers for the power";Similar;0.5431876182556152
fix some coding style issues;fix some coding style issues;This commit adds a quirk for this;as no lid-switch function is better then the interrupt storm;Similar;0.6544116139411926
fix some coding style issues;fix some coding style issues; the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;Similar;0.5005465745925903
fix some coding style issues;fix some coding style issues;"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;Similar;0.5955716371536255
fix some coding style issues;fix some coding style issues;re-using the existing option;keeps things simple and it will make it much easier to add DMI quirks which can either disable the LID completely or set another non-default lid_init_state value, both of which are necessary on some devices;Similar;0.6128181219100952
fix some coding style issues;fix some coding style issues;[ an action or a change that has been made, including a description of the patch behaviour ];[ the reason for a decision or value judgment ];Similar;0.7510899901390076
fix some coding style issues;fix some coding style issues;Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;Similar;0.5917009115219116
fix some coding style issues;fix some coding style issues;Fix a build warning in the ACPI button driver when CONFIG_PROC_FS is not enabled by marking the unused function as __maybe_unused;not enabled, unused;Similar;0.5669829845428467
fix some coding style issues;fix some coding style issues;adds an acpi_handle_debug call  ;to help debugging this;Similar;0.5683960914611816
fix some coding style issues;fix some coding style issues;Fix function prototypes for module_param_call();-;Similar;0.6575629711151123
fix some coding style issues;fix some coding style issues;fix whitespace in pr_fmt() to align log entries;align log entries;Similar;0.5642584562301636
fix some coding style issues;fix some coding style issues;libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;Similar;0.5897533893585205
fix some coding style issues;fix some coding style issues;Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;Similar;0.5050784945487976
fix some coding style issues;fix some coding style issues;This patch makes it deprecated;lid_init__state=open is more useful than this mode;Similar;0.6057550311088562
fix some coding style issues;fix some coding style issues;have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;Similar;0.5710011720657349
fix some coding style issues;fix some coding style issues;This patch adds a mechanism to insert lid events as a compensation for the platform triggered ones to form a complete event switches  ;in order to make sure that the platform triggered events can always be reliably delivered to the userspace;Similar;0.5183538794517517
fix some coding style issues;fix some coding style issues;implements this mechanism  ;only;Similar;0.5703363418579102
fix some coding style issues;fix some coding style issues;Use key event type to implement ACPI lid events;Another approach;Similar;0.5707056522369385
fix some coding style issues;fix some coding style issues;Remove pointer to old lid_sysfs on unbind;ACPI / button;Similar;0.5206078290939331
fix some coding style issues;fix some coding style issues;When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;Similar;0.5951201915740967
fix some coding style issues;fix some coding style issues;Correct a wrong macro usage;This patch simplies the code by merging some redundant code;Similar;0.6891227960586548
fix some coding style issues;fix some coding style issues;this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;Similar;0.5443053245544434
fix some coding style issues;fix some coding style issues;"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;Similar;0.5450794100761414
fix some coding style issues;fix some coding style issues;removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;Similar;0.5173869132995605
fix some coding style issues;fix some coding style issues;fix button driver compile error when CONFIG_PM_SLEEP is undefined;CONFIG_PM_SLEEP is undefined;Similar;0.550735592842102
fix some coding style issues;fix some coding style issues;compile error;CONFIG_PM_SLEEP is undefined;Similar;0.6550376415252686
fix some coding style issues;fix some coding style issues;Fix enabling button GPEs twice;Fix;Similar;0.5206125378608704
fix some coding style issues;fix some coding style issues;remove the GPE enabling code from the button driver;to avoid the problem;Similar;0.5496110916137695
fix some coding style issues;fix some coding style issues;Clean up inclusions of ACPI header files;ACPI;Similar;0.6083633899688721
fix some coding style issues;fix some coding style issues;Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;Similar;0.5546088218688965
fix some coding style issues;fix some coding style issues;Use the patch to replace the origin code;provide a better solution;Similar;0.6721651554107666
fix some coding style issues;fix some coding style issues;add #ifdefs to prevent them from being built in that case  ;several suspend/resume functions in ACPI drivers are not used for CONFIG_PM_SLEEP unset;Similar;0.5267795324325562
fix some coding style issues;fix some coding style issues;Remove unused ACPI button procfs interface;unused;Similar;0.5035052299499512
fix some coding style issues;fix some coding style issues;Avoid disabling wakeup unnecessarily on remove;-;Similar;0.5236603021621704
fix some coding style issues;fix some coding style issues;Use device wakeup flags for handling ACPI wakeup devices;for handling ACPI wakeup devices;Similar;0.5151914954185486
fix some coding style issues;fix some coding style issues;Use GPE reference counting to support shared GPEs  ;the wakeup enable mask bits of GPEs are set as soon as the GPEs are enabled to wake up the system;Similar;0.5474648475646973
fix some coding style issues;fix some coding style issues;This will allow us to simplify the GPE handling code quite a bit;that change is too intrusive for 2.6.35;Similar;0.7289397716522217
fix some coding style issues;fix some coding style issues;Prepare for this change by updating users of gfp and slab facilities;include those headers directly instead of assuming availability;Similar;0.5150959491729736
fix some coding style issues;fix some coding style issues;the following script is used as the basis of conversion;As this conversion needs to touch a large number of source files;Similar;0.6286378502845764
fix some coding style issues;fix some coding style issues;prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;Similar;0.6802811622619629
fix some coding style issues;fix some coding style issues;The script was run again  ;to make sure no file was left behind;Similar;0.5868478417396545
fix some coding style issues;fix some coding style issues;description of the patch behaviour;an action or a change;Similar;0.6271508932113647
fix some coding style issues;fix some coding style issues;failures were fixed;Build tests were done on the following configurations;Similar;0.6668761372566223
fix some coding style issues;fix some coding style issues;percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;Similar;0.6133272647857666
fix some coding style issues;fix some coding style issues;Add an API to allow devices to indicate whether or not they want their devices GPE to be enabled for both runtime and wakeup events;to allow devices to indicate whether or not they want their devices GPE to be enabled;Similar;0.5349043607711792
fix some coding style issues;fix some coding style issues;complain the following warning message;"will

";Similar;0.600050687789917
fix some coding style issues;fix some coding style issues;"This patch is to eliminate the above warning message
";Device PNP0C0D:00 failed to resume: error 1;Similar;0.5719581842422485
fix some coding style issues;fix some coding style issues;Some drivers need to know when a lid event occurs and get the current status;-;Similar;0.6342459917068481
fix some coding style issues;fix some coding style issues;whitespace fix  ;This does not change any actual console output;Similar;0.6479312181472778
fix some coding style issues;fix some coding style issues;we could install either a fixed event handler or a notify handler, but the Linux/ACPI code now handles that for us;We previously needed that so we dont need to worry about it;Similar;0.5036973357200623
fix some coding style issues;fix some coding style issues;type: Power Button;I dont think theres anything meaningful user-space can do by knowing whether a button is a control method or a fixed hardware button;Similar;0.5107125043869019
fix some coding style issues;fix some coding style issues;Remove button->device pointer;button;Similar;0.5756903886795044
fix some coding style issues;fix some coding style issues;This patch adds temporaries to cache the acpi_device_hid(), acpi_device_name(), and acpi_device_class() pointers;so we dont have to clutter the code with so many uses of those interfaces;Similar;0.5014427900314331
fix some coding style issues;fix some coding style issues;Better to oops and learn about a bug;than to silently cover it up;Similar;0.5040315985679626
fix some coding style issues;fix some coding style issues;changes a bit of whitespace to follow Linux conventions;follow Linux conventions;Similar;0.5727249979972839
fix some coding style issues;fix some coding style issues;convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.5073837637901306
fix some coding style issues;fix some coding style issues;Setting ->owner as done currently (pde->owner = THIS_MODULE) is racy;as correctly noted at bug #12454;Similar;0.5044084191322327
fix some coding style issues;fix some coding style issues;dont want such modular code;definitely;Similar;0.5555634498596191
fix some coding style issues;fix some coding style issues;"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.555986762046814
fix some coding style issues;fix some coding style issues;Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;Similar;0.5356194972991943
fix some coding style issues;fix some coding style issues;use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Similar;0.5330166220664978
fix some coding style issues;fix some coding style issues;Use proc_create()/proc_create_data() to make sure that ->proc_fops and ->data be setup;before gluing PDE to main tree;Similar;0.5696553587913513
fix some coding style issues;fix some coding style issues;get rid of input BIT* duplicate defines;duplicate;Similar;0.5384097099304199
fix some coding style issues;fix some coding style issues;Define the macro temporarily in a local manner;all those local definitions will be removed further in this patchset (to not break bisecting);Similar;0.633196234703064
fix some coding style issues;fix some coding style issues;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.5272200107574463
fix some coding style issues;fix some coding style issues;fix acpi_driver.name usage;fix;Similar;0.5421098470687866
fix some coding style issues;fix some coding style issues;"Make ""module name"" actually match the file name";cosmetic only;Similar;0.5585011839866638
fix some coding style issues;fix some coding style issues;"Invoke with ; as leaving it off confuses Lindent  ";gcc doesnt care;Similar;0.5366417765617371
fix some coding style issues;fix some coding style issues;Fix indentation where Lindent did get confused  ;Lindent did get confused;Similar;0.7508395910263062
fix some coding style issues;fix some coding style issues;remove unnecessary casts and variable initializations, clean up formatting;unnecessary;Similar;0.6360011100769043
fix some coding style issues;fix some coding style issues;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.5016024708747864
Fix some coding style issues reported by checkpatch.pl;including the following types;code indent should use tabs where possible;to maintain consistency and follow coding standards;Similar;0.6605901718139648
Fix some coding style issues reported by checkpatch.pl;including the following types;Clean up printing messages;ACPI button;Similar;0.6651427745819092
Fix some coding style issues reported by checkpatch.pl;including the following types;replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;Similar;0.5641132593154907
Fix some coding style issues reported by checkpatch.pl;including the following types;"Commit 78a5b53e9fb4 (""Input: soc_button_array - work around DSDTs which modify the irqflags"") adds a workaround for DSDTs with a _LID method which play tricks with the irqflags";assuming that the OS is using an irq-type of IRQ_TYPE_LEVEL_LOW;Similar;0.6023538112640381
Fix some coding style issues reported by checkpatch.pl;including the following types;fix handling lid state changes when input device closed;-;Similar;0.6913836002349854
Fix some coding style issues reported by checkpatch.pl;including the following types;Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;Similar;0.5460416078567505
Fix some coding style issues reported by checkpatch.pl;including the following types;Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];Similar;0.6535912752151489
Fix some coding style issues reported by checkpatch.pl;including the following types;Remove unnecessary fall-through markings  ;when it is the case;Similar;0.5292865633964539
Fix some coding style issues reported by checkpatch.pl;including the following types;Delete unused proc filename macros;unused;Similar;0.5810601711273193
Fix some coding style issues reported by checkpatch.pl;including the following types;"Fixes: 17e5888e4e18 (""x86: Select HARDIRQS_SW_RESEND on x86"")";"(""x86: Select HARDIRQS_SW_RESEND on x86"")";Similar;0.5776902437210083
Fix some coding style issues reported by checkpatch.pl;including the following types;"
The problem here is the accesses to the PBCG and HMCG
";"
these are the pinconf0 registers for the power";Similar;0.5408034324645996
Fix some coding style issues reported by checkpatch.pl;including the following types;adds the BYT_TRIG_LVL flag to this;so now it is turned into a level interrupt which fires both when low and high, iow it simply always fires leading to an interrupt storm, the tablet immediately waking up from suspend again, etc;Similar;0.5089379549026489
Fix some coding style issues reported by checkpatch.pl;including the following types;This commit adds a quirk for this;as no lid-switch function is better then the interrupt storm;Similar;0.5127205848693848
Fix some coding style issues reported by checkpatch.pl;including the following types;Remove unused acpi_lid_notifier_[un]register() functions;unused;Similar;0.5291669368743896
Fix some coding style issues reported by checkpatch.pl;including the following types; the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;Similar;0.5281088948249817
Fix some coding style issues reported by checkpatch.pl;including the following types;"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;Similar;0.6068035364151001
Fix some coding style issues reported by checkpatch.pl;including the following types;re-using the existing option;keeps things simple and it will make it much easier to add DMI quirks which can either disable the LID completely or set another non-default lid_init_state value, both of which are necessary on some devices;Similar;0.5167467594146729
Fix some coding style issues reported by checkpatch.pl;including the following types;[ an action or a change that has been made, including a description of the patch behaviour ];[ the reason for a decision or value judgment ];Similar;0.7004683613777161
Fix some coding style issues reported by checkpatch.pl;including the following types;update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;Similar;0.5745911598205566
Fix some coding style issues reported by checkpatch.pl;including the following types;Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;Similar;0.6192464828491211
Fix some coding style issues reported by checkpatch.pl;including the following types;Fix a build warning in the ACPI button driver when CONFIG_PROC_FS is not enabled by marking the unused function as __maybe_unused;not enabled, unused;Similar;0.6546589136123657
Fix some coding style issues reported by checkpatch.pl;including the following types;Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;Similar;0.6133246421813965
Fix some coding style issues reported by checkpatch.pl;including the following types;adds an acpi_handle_debug call  ;to help debugging this;Similar;0.6577809453010559
Fix some coding style issues reported by checkpatch.pl;including the following types;Fix function prototypes for module_param_call();-;Similar;0.715927004814148
Fix some coding style issues reported by checkpatch.pl;including the following types;fix whitespace in pr_fmt() to align log entries;align log entries;Similar;0.7135711312294006
Fix some coding style issues reported by checkpatch.pl;including the following types;libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;Similar;0.7354446053504944
Fix some coding style issues reported by checkpatch.pl;including the following types;assume the user will use the internal keyboard before this timeout expires;logind only checks the lid switch value after a timeout;Similar;0.5017796754837036
Fix some coding style issues reported by checkpatch.pl;including the following types;"userspace requires to see ""close"" event after the system is resumed";so that it can determine whether the internal display should remain dark and the external display should be lit on;Similar;0.540949285030365
Fix some coding style issues reported by checkpatch.pl;including the following types;Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;Similar;0.5412267446517944
Fix some coding style issues reported by checkpatch.pl;including the following types;This patch makes it deprecated;lid_init__state=open is more useful than this mode;Similar;0.5150058269500732
Fix some coding style issues reported by checkpatch.pl;including the following types;have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;Similar;0.6049869656562805
Fix some coding style issues reported by checkpatch.pl;including the following types;This patch adds a mechanism to insert lid events as a compensation for the platform triggered ones to form a complete event switches  ;in order to make sure that the platform triggered events can always be reliably delivered to the userspace;Similar;0.6126558780670166
Fix some coding style issues reported by checkpatch.pl;including the following types;Use key event type to implement ACPI lid events;Another approach;Similar;0.5346401333808899
Fix some coding style issues reported by checkpatch.pl;including the following types;Remove pointer to old lid_sysfs on unbind;ACPI / button;Similar;0.5824177265167236
Fix some coding style issues reported by checkpatch.pl;including the following types;When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;Similar;0.6543651819229126
Fix some coding style issues reported by checkpatch.pl;including the following types;Correct a wrong macro usage;This patch simplies the code by merging some redundant code;Similar;0.5926949977874756
Fix some coding style issues reported by checkpatch.pl;including the following types;this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;Similar;0.5969207286834717
Fix some coding style issues reported by checkpatch.pl;including the following types;"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;Similar;0.6382368803024292
Fix some coding style issues reported by checkpatch.pl;including the following types;Add ACPI Button event via netlink routine;-;Similar;0.589756965637207
Fix some coding style issues reported by checkpatch.pl;including the following types;removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;Similar;0.5817046165466309
Fix some coding style issues reported by checkpatch.pl;including the following types;This caused ACPI shutdown regression on gentoo;VirtualBox;Similar;0.530642032623291
Fix some coding style issues reported by checkpatch.pl;including the following types;add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;Similar;0.603320300579071
Fix some coding style issues reported by checkpatch.pl;including the following types;fix button driver compile error when CONFIG_PM_SLEEP is undefined;CONFIG_PM_SLEEP is undefined;Similar;0.6899838447570801
Fix some coding style issues reported by checkpatch.pl;including the following types;compile error;CONFIG_PM_SLEEP is undefined;Similar;0.6314974427223206
Fix some coding style issues reported by checkpatch.pl;including the following types;Fix enabling button GPEs twice;Fix;Similar;0.5959479212760925
Fix some coding style issues reported by checkpatch.pl;including the following types;Button GPEs have been enabled in the acpi_wake_device_init() during boot;the button driver enables them for the second time;Similar;0.5718591213226318
Fix some coding style issues reported by checkpatch.pl;including the following types;remove the GPE enabling code from the button driver;to avoid the problem;Similar;0.5985329151153564
Fix some coding style issues reported by checkpatch.pl;including the following types;Clean up inclusions of ACPI header files;ACPI;Similar;0.7113566994667053
Fix some coding style issues reported by checkpatch.pl;including the following types;Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;Similar;0.6132375597953796
Fix some coding style issues reported by checkpatch.pl;including the following types;Use the patch to replace the origin code;provide a better solution;Similar;0.7300921678543091
Fix some coding style issues reported by checkpatch.pl;including the following types;Fix unused function warnings for CONFIG_PM_SLEEP;unused function warnings;Similar;0.606870174407959
Fix some coding style issues reported by checkpatch.pl;including the following types;add #ifdefs to prevent them from being built in that case  ;several suspend/resume functions in ACPI drivers are not used for CONFIG_PM_SLEEP unset;Similar;0.515939474105835
Fix some coding style issues reported by checkpatch.pl;including the following types;Remove unused ACPI button procfs interface;unused;Similar;0.5471698045730591
Fix some coding style issues reported by checkpatch.pl;including the following types;Use device wakeup flags for handling ACPI wakeup devices;for handling ACPI wakeup devices;Similar;0.556739091873169
Fix some coding style issues reported by checkpatch.pl;including the following types;use standard device wakeup flags instead of the special ACPI flags for handling those devices;address this problem;Similar;0.5084148049354553
Fix some coding style issues reported by checkpatch.pl;including the following types;Use GPE reference counting to support shared GPEs  ;the wakeup enable mask bits of GPEs are set as soon as the GPEs are enabled to wake up the system;Similar;0.6323704719543457
Fix some coding style issues reported by checkpatch.pl;including the following types;it is sufficient to set/unset the wakeup mask bits for them during system sleep transitions;"this means that the reference counting of ""wakeup"" GPEs doesnt really make sense";Similar;0.5391927361488342
Fix some coding style issues reported by checkpatch.pl;including the following types;This will allow us to simplify the GPE handling code quite a bit;that change is too intrusive for 2.6.35;Similar;0.6995558738708496
Fix some coding style issues reported by checkpatch.pl;including the following types;Update gfp.h and slab.h includes  ;prepare for breaking implicit slab.h inclusion from percpu.h;Similar;0.5961202383041382
Fix some coding style issues reported by checkpatch.pl;including the following types;Prepare for this change by updating users of gfp and slab facilities;include those headers directly instead of assuming availability;Similar;0.6221603155136108
Fix some coding style issues reported by checkpatch.pl;including the following types;the following script is used as the basis of conversion;As this conversion needs to touch a large number of source files;Similar;0.6577258110046387
Fix some coding style issues reported by checkpatch.pl;including the following types;prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;Similar;0.7920788526535034
Fix some coding style issues reported by checkpatch.pl;including the following types;The script was run again  ;to make sure no file was left behind;Similar;0.6242275834083557
Fix some coding style issues reported by checkpatch.pl;including the following types;description of the patch behaviour;an action or a change;Similar;0.585705041885376
Fix some coding style issues reported by checkpatch.pl;including the following types;failures were fixed;Build tests were done on the following configurations;Similar;0.5758794546127319
Fix some coding style issues reported by checkpatch.pl;including the following types;percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;Similar;0.5869739055633545
Fix some coding style issues reported by checkpatch.pl;including the following types;Introduce a reference counter for run-wake devices and a function that will initialize all of the run-time wake-up fields for given device.;-;Similar;0.58650803565979
Fix some coding style issues reported by checkpatch.pl;including the following types;Add an API to allow devices to indicate whether or not they want their devices GPE to be enabled for both runtime and wakeup events;to allow devices to indicate whether or not they want their devices GPE to be enabled;Similar;0.633927583694458
Fix some coding style issues reported by checkpatch.pl;including the following types;complain the following warning message;"will

";Similar;0.5674173831939697
Fix some coding style issues reported by checkpatch.pl;including the following types;"This patch is to eliminate the above warning message
";Device PNP0C0D:00 failed to resume: error 1;Similar;0.5766854286193848
Fix some coding style issues reported by checkpatch.pl;including the following types;Some drivers need to know when a lid event occurs and get the current status;-;Similar;0.6253461241722107
Fix some coding style issues reported by checkpatch.pl;including the following types;whitespace fix  ;This does not change any actual console output;Similar;0.6560611128807068
Fix some coding style issues reported by checkpatch.pl;including the following types;we could install either a fixed event handler or a notify handler, but the Linux/ACPI code now handles that for us;We previously needed that so we dont need to worry about it;Similar;0.6375283002853394
Fix some coding style issues reported by checkpatch.pl;including the following types;Remove button->device pointer;button;Similar;0.5423573851585388
Fix some coding style issues reported by checkpatch.pl;including the following types;This patch adds temporaries to cache the acpi_device_hid(), acpi_device_name(), and acpi_device_class() pointers;so we dont have to clutter the code with so many uses of those interfaces;Similar;0.6343227624893188
Fix some coding style issues reported by checkpatch.pl;including the following types;Better to oops and learn about a bug;than to silently cover it up;Similar;0.5648888945579529
Fix some coding style issues reported by checkpatch.pl;including the following types;changes a bit of whitespace to follow Linux conventions;follow Linux conventions;Similar;0.6710023880004883
Fix some coding style issues reported by checkpatch.pl;including the following types;use .notify method instead of installing handler directly  ;-;Similar;0.5300397276878357
Fix some coding style issues reported by checkpatch.pl;including the following types;The presence of .notify() causes Linux/ACPI to manage event handlers and notify handlers on our behalf  ;so we dont have to install and remove them ourselves;Similar;0.585210382938385
Fix some coding style issues reported by checkpatch.pl;including the following types;convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.6181632280349731
Fix some coding style issues reported by checkpatch.pl;including the following types;start using GPE from userspace;GPE is already disabled in interrupt context;Similar;0.5636310577392578
Fix some coding style issues reported by checkpatch.pl;including the following types;"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.6468677520751953
Fix some coding style issues reported by checkpatch.pl;including the following types;Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;Similar;0.5928739309310913
Fix some coding style issues reported by checkpatch.pl;including the following types;use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Similar;0.5333925485610962
Fix some coding style issues reported by checkpatch.pl;including the following types;Use proc_create()/proc_create_data() to make sure that ->proc_fops and ->data be setup;before gluing PDE to main tree;Similar;0.6238053441047668
Fix some coding style issues reported by checkpatch.pl;including the following types;Add correct ->owner to proc_fops to fix reading/module unloading race  ;fix reading/module unloading race;Similar;0.6129554510116577
Fix some coding style issues reported by checkpatch.pl;including the following types;get rid of input BIT* duplicate defines;duplicate;Similar;0.5272836089134216
Fix some coding style issues reported by checkpatch.pl;including the following types;Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;Similar;0.5247575044631958
Fix some coding style issues reported by checkpatch.pl;including the following types;Define the macro temporarily in a local manner;all those local definitions will be removed further in this patchset (to not break bisecting);Similar;0.6225447654724121
Fix some coding style issues reported by checkpatch.pl;including the following types;Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;Similar;0.5168566107749939
Fix some coding style issues reported by checkpatch.pl;including the following types;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.5876337885856628
Fix some coding style issues reported by checkpatch.pl;including the following types;fix acpi_driver.name usage;fix;Similar;0.6214245557785034
Fix some coding style issues reported by checkpatch.pl;including the following types;"Make ""module name"" actually match the file name";cosmetic only;Similar;0.5823580026626587
Fix some coding style issues reported by checkpatch.pl;including the following types;Fix indentation where Lindent did get confused  ;Lindent did get confused;Similar;0.6681634187698364
Fix some coding style issues reported by checkpatch.pl;including the following types;remove unnecessary casts and variable initializations, clean up formatting;unnecessary;Similar;0.6670585870742798
Fix some coding style issues reported by checkpatch.pl;including the following types;Remove unneeded acpi_handle from driver;unneeded;Similar;0.5484611988067627
Fix some coding style issues reported by checkpatch.pl;including the following types;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.585174560546875
Fix some coding style issues reported by checkpatch.pl;including the following types;restore /proc/acpi/button/ (ala 2.6.12)  ;[ACPI];Similar;0.5130842924118042
code indent should use tabs where possible;to maintain consistency and follow coding standards;Clean up printing messages;ACPI button;Similar;0.5409837961196899
code indent should use tabs where possible;to maintain consistency and follow coding standards;"Commit 78a5b53e9fb4 (""Input: soc_button_array - work around DSDTs which modify the irqflags"") adds a workaround for DSDTs with a _LID method which play tricks with the irqflags";assuming that the OS is using an irq-type of IRQ_TYPE_LEVEL_LOW;Similar;0.5474109649658203
code indent should use tabs where possible;to maintain consistency and follow coding standards;fix handling lid state changes when input device closed;-;Similar;0.6650815606117249
code indent should use tabs where possible;to maintain consistency and follow coding standards;Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;Similar;0.6289576292037964
code indent should use tabs where possible;to maintain consistency and follow coding standards;Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];Similar;0.538564920425415
code indent should use tabs where possible;to maintain consistency and follow coding standards;Remove unnecessary fall-through markings  ;when it is the case;Similar;0.5298498868942261
code indent should use tabs where possible;to maintain consistency and follow coding standards;Delete unused proc filename macros;unused;Similar;0.5176216959953308
code indent should use tabs where possible;to maintain consistency and follow coding standards;"Fixes: 17e5888e4e18 (""x86: Select HARDIRQS_SW_RESEND on x86"")";"(""x86: Select HARDIRQS_SW_RESEND on x86"")";Similar;0.5811110734939575
code indent should use tabs where possible;to maintain consistency and follow coding standards;"
The problem here is the accesses to the PBCG and HMCG
";"
these are the pinconf0 registers for the power";Similar;0.5489843487739563
code indent should use tabs where possible;to maintain consistency and follow coding standards;adds the BYT_TRIG_LVL flag to this;so now it is turned into a level interrupt which fires both when low and high, iow it simply always fires leading to an interrupt storm, the tablet immediately waking up from suspend again, etc;Similar;0.5476036071777344
code indent should use tabs where possible;to maintain consistency and follow coding standards;This commit adds a quirk for this;as no lid-switch function is better then the interrupt storm;Similar;0.5970287322998047
code indent should use tabs where possible;to maintain consistency and follow coding standards;Remove unused acpi_lid_notifier_[un]register() functions;unused;Similar;0.5233988761901855
code indent should use tabs where possible;to maintain consistency and follow coding standards;Setting lid_init_state to ACPI_BUTTON_LID_INIT_OPEN on the T200TA  ;fixes the unwanted behavior, adds a DMI based quirk;Similar;0.539250373840332
code indent should use tabs where possible;to maintain consistency and follow coding standards; the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;Similar;0.6425849795341492
code indent should use tabs where possible;to maintain consistency and follow coding standards;Turn lid_blacklst DMI table into a generic quirk table;ACPI: button;Similar;0.5370446443557739
code indent should use tabs where possible;to maintain consistency and follow coding standards;"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;Similar;0.575690507888794
code indent should use tabs where possible;to maintain consistency and follow coding standards;re-using the existing option;keeps things simple and it will make it much easier to add DMI quirks which can either disable the LID completely or set another non-default lid_init_state value, both of which are necessary on some devices;Similar;0.5749907493591309
code indent should use tabs where possible;to maintain consistency and follow coding standards;[ an action or a change that has been made, including a description of the patch behaviour ];[ the reason for a decision or value judgment ];Similar;0.7203688025474548
code indent should use tabs where possible;to maintain consistency and follow coding standards;update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;Similar;0.5291886925697327
code indent should use tabs where possible;to maintain consistency and follow coding standards;Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;Similar;0.5940974950790405
code indent should use tabs where possible;to maintain consistency and follow coding standards;Fix a build warning in the ACPI button driver when CONFIG_PROC_FS is not enabled by marking the unused function as __maybe_unused;not enabled, unused;Similar;0.5029924511909485
code indent should use tabs where possible;to maintain consistency and follow coding standards;Increment wakeup count only when notified;-;Similar;0.5392642021179199
code indent should use tabs where possible;to maintain consistency and follow coding standards;Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;Similar;0.6627498269081116
code indent should use tabs where possible;to maintain consistency and follow coding standards;making the ACPI button driver loadable as a module even if not booted in ACPI mode;to fix the asymmetry and provide the acpi_lid_open() symbol;Similar;0.5842077136039734
code indent should use tabs where possible;to maintain consistency and follow coding standards;adds an acpi_handle_debug call  ;to help debugging this;Similar;0.6567400693893433
code indent should use tabs where possible;to maintain consistency and follow coding standards;Fix function prototypes for module_param_call();-;Similar;0.6962975859642029
code indent should use tabs where possible;to maintain consistency and follow coding standards;fix whitespace in pr_fmt() to align log entries;align log entries;Similar;0.7243893146514893
code indent should use tabs where possible;to maintain consistency and follow coding standards;The ->sync hook allows all of the relevant event queues to be flushed;to prevent events from being missed due to race conditions;Similar;0.5079278945922852
code indent should use tabs where possible;to maintain consistency and follow coding standards;libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;Similar;0.6333158016204834
code indent should use tabs where possible;to maintain consistency and follow coding standards;assume the user will use the internal keyboard before this timeout expires;logind only checks the lid switch value after a timeout;Similar;0.5106450915336609
code indent should use tabs where possible;to maintain consistency and follow coding standards;"userspace requires to see ""close"" event after the system is resumed";so that it can determine whether the internal display should remain dark and the external display should be lit on;Similar;0.5268920660018921
code indent should use tabs where possible;to maintain consistency and follow coding standards;Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;Similar;0.6300511956214905
code indent should use tabs where possible;to maintain consistency and follow coding standards;Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);Similar;0.6039961576461792
code indent should use tabs where possible;to maintain consistency and follow coding standards;The ->sync hook allows all of the relevant event queues to be flushed;to prevent events from being missed due to race conditions;Similar;0.5079278945922852
code indent should use tabs where possible;to maintain consistency and follow coding standards;have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;Similar;0.5617502927780151
code indent should use tabs where possible;to maintain consistency and follow coding standards;This patch adds a mechanism to insert lid events as a compensation for the platform triggered ones to form a complete event switches  ;in order to make sure that the platform triggered events can always be reliably delivered to the userspace;Similar;0.6221323013305664
code indent should use tabs where possible;to maintain consistency and follow coding standards;implements this mechanism  ;only;Similar;0.6125515103340149
code indent should use tabs where possible;to maintain consistency and follow coding standards;Use key event type to implement ACPI lid events;Another approach;Similar;0.6899231672286987
code indent should use tabs where possible;to maintain consistency and follow coding standards;While using KEY event type, there is no such problem;no such problem;Similar;0.5019809603691101
code indent should use tabs where possible;to maintain consistency and follow coding standards;Remove pointer to old lid_sysfs on unbind;ACPI / button;Similar;0.5776671171188354
code indent should use tabs where possible;to maintain consistency and follow coding standards;When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;Similar;0.5373491048812866
code indent should use tabs where possible;to maintain consistency and follow coding standards;Correct a wrong macro usage;This patch simplies the code by merging some redundant code;Similar;0.5316567420959473
code indent should use tabs where possible;to maintain consistency and follow coding standards;"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;Similar;0.5320175886154175
code indent should use tabs where possible;to maintain consistency and follow coding standards;Add ACPI Button event via netlink routine;-;Similar;0.6496945023536682
code indent should use tabs where possible;to maintain consistency and follow coding standards;add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;Similar;0.6153006553649902
code indent should use tabs where possible;to maintain consistency and follow coding standards;fix button driver compile error when CONFIG_PM_SLEEP is undefined;CONFIG_PM_SLEEP is undefined;Similar;0.5652920007705688
code indent should use tabs where possible;to maintain consistency and follow coding standards;compile error;CONFIG_PM_SLEEP is undefined;Similar;0.6288259029388428
code indent should use tabs where possible;to maintain consistency and follow coding standards;Fix enabling button GPEs twice;Fix;Similar;0.5233760476112366
code indent should use tabs where possible;to maintain consistency and follow coding standards;Button GPEs have been enabled in the acpi_wake_device_init() during boot;the button driver enables them for the second time;Similar;0.5714811086654663
code indent should use tabs where possible;to maintain consistency and follow coding standards;remove the GPE enabling code from the button driver;to avoid the problem;Similar;0.5294428467750549
code indent should use tabs where possible;to maintain consistency and follow coding standards;Clean up inclusions of ACPI header files;ACPI;Similar;0.6265239715576172
code indent should use tabs where possible;to maintain consistency and follow coding standards;Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;Similar;0.5502555966377258
code indent should use tabs where possible;to maintain consistency and follow coding standards;<acpi/acpi_bus.h> be included prior to <acpi/acpi_drivers.h>;so that the acpi_pci_root declarations the latter depends on are always there;Similar;0.5723769664764404
code indent should use tabs where possible;to maintain consistency and follow coding standards;Use the patch to replace the origin code;provide a better solution;Similar;0.6382240653038025
code indent should use tabs where possible;to maintain consistency and follow coding standards;"The second argument of ACPI driver .remove() operation is only used by the ACPI processor driver
";the value passed to that driver through it is always available from the given struct acpi_device objects removal_type field;Similar;0.5175367593765259
code indent should use tabs where possible;to maintain consistency and follow coding standards;Fix unused function warnings for CONFIG_PM_SLEEP;unused function warnings;Similar;0.5189107656478882
code indent should use tabs where possible;to maintain consistency and follow coding standards;Use device wakeup flags for handling ACPI wakeup devices;for handling ACPI wakeup devices;Similar;0.5708422660827637
code indent should use tabs where possible;to maintain consistency and follow coding standards;Use GPE reference counting to support shared GPEs  ;the wakeup enable mask bits of GPEs are set as soon as the GPEs are enabled to wake up the system;Similar;0.7055437564849854
code indent should use tabs where possible;to maintain consistency and follow coding standards;it is sufficient to set/unset the wakeup mask bits for them during system sleep transitions;"this means that the reference counting of ""wakeup"" GPEs doesnt really make sense";Similar;0.5392780303955078
code indent should use tabs where possible;to maintain consistency and follow coding standards;This will allow us to simplify the GPE handling code quite a bit;that change is too intrusive for 2.6.35;Similar;0.572695255279541
code indent should use tabs where possible;to maintain consistency and follow coding standards;Update gfp.h and slab.h includes  ;prepare for breaking implicit slab.h inclusion from percpu.h;Similar;0.6240018606185913
code indent should use tabs where possible;to maintain consistency and follow coding standards;Prepare for this change by updating users of gfp and slab facilities;include those headers directly instead of assuming availability;Similar;0.6528366804122925
code indent should use tabs where possible;to maintain consistency and follow coding standards;the following script is used as the basis of conversion;As this conversion needs to touch a large number of source files;Similar;0.6551632881164551
code indent should use tabs where possible;to maintain consistency and follow coding standards;only the necessary includes are there;necessary;Similar;0.5138459205627441
code indent should use tabs where possible;to maintain consistency and follow coding standards;prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;Similar;0.6345667839050293
code indent should use tabs where possible;to maintain consistency and follow coding standards;The script was run again  ;to make sure no file was left behind;Similar;0.511873722076416
code indent should use tabs where possible;to maintain consistency and follow coding standards;description of the patch behaviour;an action or a change;Similar;0.6847452521324158
code indent should use tabs where possible;to maintain consistency and follow coding standards;failures were fixed;Build tests were done on the following configurations;Similar;0.6155173778533936
code indent should use tabs where possible;to maintain consistency and follow coding standards;percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;Similar;0.5433712005615234
code indent should use tabs where possible;to maintain consistency and follow coding standards;Im fairly confident about the coverage of this conversion patch  ;Given the fact that I had only a couple of failures from tests on step 6;Similar;0.5171666741371155
code indent should use tabs where possible;to maintain consistency and follow coding standards;Introduce a new wake-up flag, always_enabled, for marking devices that should be permanently enabled to generate run-time events  ;devices that should be permanently enabled to generate run-time events;Similar;0.5194731950759888
code indent should use tabs where possible;to maintain consistency and follow coding standards;Introduce a reference counter for run-wake devices and a function that will initialize all of the run-time wake-up fields for given device.;-;Similar;0.6074326038360596
code indent should use tabs where possible;to maintain consistency and follow coding standards;Add an API to allow devices to indicate whether or not they want their devices GPE to be enabled for both runtime and wakeup events;to allow devices to indicate whether or not they want their devices GPE to be enabled;Similar;0.649459183216095
code indent should use tabs where possible;to maintain consistency and follow coding standards;complain the following warning message;"will

";Similar;0.5847657918930054
code indent should use tabs where possible;to maintain consistency and follow coding standards;"This patch is to eliminate the above warning message
";Device PNP0C0D:00 failed to resume: error 1;Similar;0.5265524983406067
code indent should use tabs where possible;to maintain consistency and follow coding standards;return -ENODEV;theres no lid device present;Similar;0.5037992000579834
code indent should use tabs where possible;to maintain consistency and follow coding standards;Some drivers need to know when a lid event occurs and get the current status;-;Similar;0.5871433615684509
code indent should use tabs where possible;to maintain consistency and follow coding standards;whitespace fix  ;This does not change any actual console output;Similar;0.6931619644165039
code indent should use tabs where possible;to maintain consistency and follow coding standards;we could install either a fixed event handler or a notify handler, but the Linux/ACPI code now handles that for us;We previously needed that so we dont need to worry about it;Similar;0.5713579654693604
code indent should use tabs where possible;to maintain consistency and follow coding standards;type: Power Button;I dont think theres anything meaningful user-space can do by knowing whether a button is a control method or a fixed hardware button;Similar;0.501828134059906
code indent should use tabs where possible;to maintain consistency and follow coding standards;Remove button->device pointer;button;Similar;0.6014034152030945
code indent should use tabs where possible;to maintain consistency and follow coding standards;This patch adds temporaries to cache the acpi_device_hid(), acpi_device_name(), and acpi_device_class() pointers;so we dont have to clutter the code with so many uses of those interfaces;Similar;0.6194981336593628
code indent should use tabs where possible;to maintain consistency and follow coding standards;Better to oops and learn about a bug;than to silently cover it up;Similar;0.5945345163345337
code indent should use tabs where possible;to maintain consistency and follow coding standards;changes a bit of whitespace to follow Linux conventions;follow Linux conventions;Similar;0.6526929140090942
code indent should use tabs where possible;to maintain consistency and follow coding standards;use .notify method instead of installing handler directly  ;-;Similar;0.5753370523452759
code indent should use tabs where possible;to maintain consistency and follow coding standards;The presence of .notify() causes Linux/ACPI to manage event handlers and notify handlers on our behalf  ;so we dont have to install and remove them ourselves;Similar;0.5971062183380127
code indent should use tabs where possible;to maintain consistency and follow coding standards;convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.5960094928741455
code indent should use tabs where possible;to maintain consistency and follow coding standards;Setting ->owner as done currently (pde->owner = THIS_MODULE) is racy;as correctly noted at bug #12454;Similar;0.5522327423095703
code indent should use tabs where possible;to maintain consistency and follow coding standards;"proc_fops is declared as ""const""";should give some thoughts;Similar;0.6211459636688232
code indent should use tabs where possible;to maintain consistency and follow coding standards;start using GPE from userspace;GPE is already disabled in interrupt context;Similar;0.6115907430648804
code indent should use tabs where possible;to maintain consistency and follow coding standards;Move all the component definitions for drivers to a single shared place, include/acpi/acpi_drivers.h  ;to have a single shared place;Similar;0.6061868667602539
code indent should use tabs where possible;to maintain consistency and follow coding standards;"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.6955402493476868
code indent should use tabs where possible;to maintain consistency and follow coding standards;Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;Similar;0.5903657674789429
code indent should use tabs where possible;to maintain consistency and follow coding standards;use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Similar;0.6396971344947815
code indent should use tabs where possible;to maintain consistency and follow coding standards;Use proc_create()/proc_create_data() to make sure that ->proc_fops and ->data be setup;before gluing PDE to main tree;Similar;0.6757246255874634
code indent should use tabs where possible;to maintain consistency and follow coding standards;get rid of input BIT* duplicate defines;duplicate;Similar;0.558195948600769
code indent should use tabs where possible;to maintain consistency and follow coding standards;Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;Similar;0.5481681823730469
code indent should use tabs where possible;to maintain consistency and follow coding standards;Define the macro temporarily in a local manner;all those local definitions will be removed further in this patchset (to not break bisecting);Similar;0.588355302810669
code indent should use tabs where possible;to maintain consistency and follow coding standards;Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;Similar;0.5716557502746582
code indent should use tabs where possible;to maintain consistency and follow coding standards;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.5810803771018982
code indent should use tabs where possible;to maintain consistency and follow coding standards;fix acpi_driver.name usage;fix;Similar;0.6369229555130005
code indent should use tabs where possible;to maintain consistency and follow coding standards;"Make ""module name"" actually match the file name";cosmetic only;Similar;0.6734124422073364
code indent should use tabs where possible;to maintain consistency and follow coding standards;Fix indentation where Lindent did get confused  ;Lindent did get confused;Similar;0.5869370698928833
code indent should use tabs where possible;to maintain consistency and follow coding standards;remove unnecessary casts and variable initializations, clean up formatting;unnecessary;Similar;0.5710760951042175
code indent should use tabs where possible;to maintain consistency and follow coding standards;Remove unneeded acpi_handle from driver;unneeded;Similar;0.5106013417243958
code indent should use tabs where possible;to maintain consistency and follow coding standards;Use acpi_devices handle instead of drivers  ;-;Similar;0.5566761493682861
code indent should use tabs where possible;to maintain consistency and follow coding standards;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.5553425550460815
code indent should use tabs where possible;to maintain consistency and follow coding standards;restore /proc/acpi/button/ (ala 2.6.12)  ;[ACPI];Similar;0.5010863542556763
Clean up printing messages;ACPI button;fix handling lid state changes when input device closed;-;Similar;0.5479509830474854
Clean up printing messages;ACPI button;Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;Similar;0.5282666683197021
Clean up printing messages;ACPI button;Remove unnecessary fall-through markings  ;when it is the case;Similar;0.5773693323135376
Clean up printing messages;ACPI button;re-using the existing option;keeps things simple and it will make it much easier to add DMI quirks which can either disable the LID completely or set another non-default lid_init_state value, both of which are necessary on some devices;Similar;0.5171161890029907
Clean up printing messages;ACPI button;[ an action or a change that has been made, including a description of the patch behaviour ];[ the reason for a decision or value judgment ];Similar;0.6062190532684326
Clean up printing messages;ACPI button;update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;Similar;0.5449763536453247
Clean up printing messages;ACPI button;Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;Similar;0.5149416923522949
Clean up printing messages;ACPI button;adds an acpi_handle_debug call  ;to help debugging this;Similar;0.5444450378417969
Clean up printing messages;ACPI button;Fix function prototypes for module_param_call();-;Similar;0.5144212245941162
Clean up printing messages;ACPI button;fix whitespace in pr_fmt() to align log entries;align log entries;Similar;0.5427646636962891
Clean up printing messages;ACPI button;"userspace requires to see ""close"" event after the system is resumed";so that it can determine whether the internal display should remain dark and the external display should be lit on;Similar;0.5109938979148865
Clean up printing messages;ACPI button;implements this mechanism  ;only;Similar;0.5505805611610413
Clean up printing messages;ACPI button;"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;Similar;0.5215251445770264
Clean up printing messages;ACPI button;compile error;CONFIG_PM_SLEEP is undefined;Similar;0.6116341352462769
Clean up printing messages;ACPI button;Clean up inclusions of ACPI header files;ACPI;Similar;0.733812689781189
Clean up printing messages;ACPI button;remove unused procfs I/F;unused;Similar;0.5115096569061279
Clean up printing messages;ACPI button;Use device wakeup flags for handling ACPI wakeup devices;for handling ACPI wakeup devices;Similar;0.5452662706375122
Clean up printing messages;ACPI button;it is sufficient to set/unset the wakeup mask bits for them during system sleep transitions;"this means that the reference counting of ""wakeup"" GPEs doesnt really make sense";Similar;0.5192731022834778
Clean up printing messages;ACPI button;This will allow us to simplify the GPE handling code quite a bit;that change is too intrusive for 2.6.35;Similar;0.5720834732055664
Clean up printing messages;ACPI button;Update gfp.h and slab.h includes  ;prepare for breaking implicit slab.h inclusion from percpu.h;Similar;0.5397748947143555
Clean up printing messages;ACPI button;Prepare for this change by updating users of gfp and slab facilities;include those headers directly instead of assuming availability;Similar;0.565754771232605
Clean up printing messages;ACPI button;the following script is used as the basis of conversion;As this conversion needs to touch a large number of source files;Similar;0.654064416885376
Clean up printing messages;ACPI button;prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;Similar;0.5883642435073853
Clean up printing messages;ACPI button;The script was run again  ;to make sure no file was left behind;Similar;0.6167574524879456
Clean up printing messages;ACPI button;description of the patch behaviour;an action or a change;Similar;0.5439828038215637
Clean up printing messages;ACPI button;failures were fixed;Build tests were done on the following configurations;Similar;0.5734645128250122
Clean up printing messages;ACPI button;percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;Similar;0.5377429723739624
Clean up printing messages;ACPI button;Im fairly confident about the coverage of this conversion patch  ;Given the fact that I had only a couple of failures from tests on step 6;Similar;0.5116738080978394
Clean up printing messages;ACPI button;Remove the old GPE type handling entirely  ;Gets rid of various quirks, like the implicit disabling with GPE type setting;Similar;0.503875732421875
Clean up printing messages;ACPI button;complain the following warning message;"will

";Similar;0.5920276641845703
Clean up printing messages;ACPI button;"This patch is to eliminate the above warning message
";Device PNP0C0D:00 failed to resume: error 1;Similar;0.5408920049667358
Clean up printing messages;ACPI button;whitespace fix  ;This does not change any actual console output;Similar;0.6212747097015381
Clean up printing messages;ACPI button;type: Power Button;I dont think theres anything meaningful user-space can do by knowing whether a button is a control method or a fixed hardware button;Similar;0.5004010200500488
Clean up printing messages;ACPI button;Remove button->device pointer;button;Similar;0.5483114719390869
Clean up printing messages;ACPI button;use .notify method instead of installing handler directly  ;-;Similar;0.5407798886299133
Clean up printing messages;ACPI button;convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.5462756156921387
Clean up printing messages;ACPI button;"proc_fops is declared as ""const""";should give some thoughts;Similar;0.5148298740386963
Clean up printing messages;ACPI button;"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.635733962059021
Clean up printing messages;ACPI button;use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Similar;0.5359349250793457
Clean up printing messages;ACPI button;Use proc_create()/proc_create_data() to make sure that ->proc_fops and ->data be setup;before gluing PDE to main tree;Similar;0.5737087726593018
Clean up printing messages;ACPI button;get rid of input BIT* duplicate defines;duplicate;Similar;0.5556975603103638
Clean up printing messages;ACPI button;Define the macro temporarily in a local manner;all those local definitions will be removed further in this patchset (to not break bisecting);Similar;0.562971830368042
Clean up printing messages;ACPI button;Fix indentation where Lindent did get confused  ;Lindent did get confused;Similar;0.5303930044174194
Clean up printing messages;ACPI button;remove unnecessary casts and variable initializations, clean up formatting;unnecessary;Similar;0.7649597525596619
Clean up printing messages;ACPI button;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.5954234600067139
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;"Remove the "" MD60198"" part from the E2215T quirk";the MD60### part of the model number differs per country/batch while all of the E2215T and E2228T models have this issue;Similar;0.7227755784988403
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;Drop no longer necessary Acer SW5-012 lid_init_state quirk;no longer necessary;Similar;0.7019029855728149
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;"Commit 78a5b53e9fb4 (""Input: soc_button_array - work around DSDTs which modify the irqflags"") adds a workaround for DSDTs with a _LID method which play tricks with the irqflags";assuming that the OS is using an irq-type of IRQ_TYPE_LEVEL_LOW;Similar;0.6097506284713745
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;we no longer need to disable the lid functionality on the Acer SW5-012;Now that this workaround is in place;Similar;0.5802390575408936
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;fix handling lid state changes when input device closed;-;Similar;0.6335848569869995
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;Similar;0.549639105796814
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];Similar;0.7777236700057983
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;Remove unnecessary fall-through markings  ;when it is the case;Similar;0.5215324759483337
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;Delete unused proc filename macros;unused;Similar;0.7550334334373474
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;Drop no longer necessary Asus T200TA lid_init_state quirk;no longer necessary;Similar;0.6706383228302002
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;drop the quirk  ;the lid_init_state=ACPI_BUTTON_LID_INIT_OPEN quirk for the Asus T200TA is no longer necessary, the lid now works properly without it;Similar;0.5643322467803955
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;"Fixes: 17e5888e4e18 (""x86: Select HARDIRQS_SW_RESEND on x86"")";"(""x86: Select HARDIRQS_SW_RESEND on x86"")";Similar;0.574371337890625
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;adds the BYT_TRIG_LVL flag to this;so now it is turned into a level interrupt which fires both when low and high, iow it simply always fires leading to an interrupt storm, the tablet immediately waking up from suspend again, etc;Similar;0.5987067222595215
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;Remove unused acpi_lid_notifier_[un]register() functions;unused;Similar;0.7840161323547363
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;Setting lid_init_state to ACPI_BUTTON_LID_INIT_OPEN on the T200TA  ;fixes the unwanted behavior, adds a DMI based quirk;Similar;0.6223106384277344
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too; the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;Similar;0.5872077345848083
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;Turn lid_blacklst DMI table into a generic quirk table;ACPI: button;Similar;0.5985963940620422
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;Similar;0.7189469933509827
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;Similar;0.6959779262542725
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;Similar;0.723723292350769
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;Fix a build warning in the ACPI button driver when CONFIG_PROC_FS is not enabled by marking the unused function as __maybe_unused;not enabled, unused;Similar;0.691065788269043
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;only trigger acpi_pm_wakeup_event() in the acpi_button_notify() path and dont do that in the acpi_lid_initialize_state() path;To avoid the confusion;Similar;0.6569960117340088
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;Similar;0.6765881776809692
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;making the ACPI button driver loadable as a module even if not booted in ACPI mode;to fix the asymmetry and provide the acpi_lid_open() symbol;Similar;0.5365834832191467
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;"The only solution is to add a DMI based blacklist and ignore the LID device on these tablets.
";There is nothing the ACPI button driver (or the gpio code) can do to fix this.;Similar;0.5946691036224365
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;adds an acpi_handle_debug call  ;to help debugging this;Similar;0.7219945192337036
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;Fix function prototypes for module_param_call();-;Similar;0.6283580660820007
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;fix whitespace in pr_fmt() to align log entries;align log entries;Similar;0.6355122327804565
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;Similar;0.6405519247055054
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;assume the user will use the internal keyboard before this timeout expires;logind only checks the lid switch value after a timeout;Similar;0.5234179496765137
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;Similar;0.7082028388977051
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);Similar;0.7282677292823792
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;Similar;0.7297965288162231
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;This patch adds a mechanism to insert lid events as a compensation for the platform triggered ones to form a complete event switches  ;in order to make sure that the platform triggered events can always be reliably delivered to the userspace;Similar;0.6004934906959534
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;Remove pointer to old lid_sysfs on unbind;ACPI / button;Similar;0.7535371780395508
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;Similar;0.7187759876251221
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;Similar;0.7150003910064697
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;There is no need to carry potentially outdated Free Software Foundation mailing address in file headers;since the COPYING file includes it;Similar;0.5246316194534302
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;Similar;0.7140815258026123
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;Add ACPI Button event via netlink routine;-;Similar;0.625593900680542
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;Similar;0.7955899238586426
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;This caused ACPI shutdown regression on gentoo;VirtualBox;Similar;0.738864004611969
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;Similar;0.6900620460510254
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;fix button driver compile error when CONFIG_PM_SLEEP is undefined;CONFIG_PM_SLEEP is undefined;Similar;0.6577843427658081
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;Fix enabling button GPEs twice;Fix;Similar;0.5462350845336914
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;Button GPEs have been enabled in the acpi_wake_device_init() during boot;the button driver enables them for the second time;Similar;0.6027500629425049
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;remove the GPE enabling code from the button driver;to avoid the problem;Similar;0.7979269027709961
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;Clean up inclusions of ACPI header files;ACPI;Similar;0.6354098916053772
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;Similar;0.7561591267585754
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;<acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> should not be included directly from any files that are built for CONFIG_ACPI unset;because that generally leads to build warnings about undefined symbols in !CONFIG_ACPI builds;Similar;0.5211923122406006
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;<acpi/acpi_bus.h> be included prior to <acpi/acpi_drivers.h>;so that the acpi_pci_root declarations the latter depends on are always there;Similar;0.5183438062667847
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;Use the patch to replace the origin code;provide a better solution;Similar;0.6119661331176758
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;Remove useless type argument of driver .remove() operation;useless;Similar;0.6774483919143677
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;"The second argument of ACPI driver .remove() operation is only used by the ACPI processor driver
";the value passed to that driver through it is always available from the given struct acpi_device objects removal_type field;Similar;0.6169556379318237
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;drop the second ACPI driver .remove() argument  ;the second ACPI driver .remove() argument is in fact useless;Similar;0.7830202579498291
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;Fix unused function warnings for CONFIG_PM_SLEEP;unused function warnings;Similar;0.670096218585968
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;add #ifdefs to prevent them from being built in that case  ;several suspend/resume functions in ACPI drivers are not used for CONFIG_PM_SLEEP unset;Similar;0.5335591435432434
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;remove unused procfs I/F;unused;Similar;0.6917566061019897
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;Remove unused ACPI button procfs interface;unused;Similar;0.816499650478363
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;Use device wakeup flags for handling ACPI wakeup devices;for handling ACPI wakeup devices;Similar;0.5103812217712402
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;use standard device wakeup flags instead of the special ACPI flags for handling those devices;address this problem;Similar;0.6150660514831543
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;Update gfp.h and slab.h includes  ;prepare for breaking implicit slab.h inclusion from percpu.h;Similar;0.5402007699012756
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;Similar;0.5688571333885193
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;CONFIG_GCOV_KERNEL was turned off for all tests and a few more options had to be turned off depending on archs to make things build;my distributed build env didnt work with gcov compiles, like ipr on powerpc/64 which failed due to missing writeq;Similar;0.6254644393920898
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;Similar;0.6186484098434448
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;Introduce a new wake-up flag, always_enabled, for marking devices that should be permanently enabled to generate run-time events  ;devices that should be permanently enabled to generate run-time events;Similar;0.5149192214012146
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;Introduce a reference counter for run-wake devices and a function that will initialize all of the run-time wake-up fields for given device.;-;Similar;0.5171290636062622
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;Add an API to allow devices to indicate whether or not they want their devices GPE to be enabled for both runtime and wakeup events;to allow devices to indicate whether or not they want their devices GPE to be enabled;Similar;0.5115341544151306
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;Remove the old GPE type handling entirely  ;Gets rid of various quirks, like the implicit disabling with GPE type setting;Similar;0.6251674294471741
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;"This patch is to eliminate the above warning message
";Device PNP0C0D:00 failed to resume: error 1;Similar;0.5782759189605713
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;we could install either a fixed event handler or a notify handler, but the Linux/ACPI code now handles that for us;We previously needed that so we dont need to worry about it;Similar;0.584572434425354
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;Remove button->device pointer;button;Similar;0.7037676572799683
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;We no longer need a pointer from struct acpi_button back to the struct acpi_device;no longer need;Similar;0.710484504699707
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;This patch adds temporaries to cache the acpi_device_hid(), acpi_device_name(), and acpi_device_class() pointers;so we dont have to clutter the code with so many uses of those interfaces;Similar;0.6736327409744263
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;changes a bit of whitespace to follow Linux conventions;follow Linux conventions;Similar;0.573266863822937
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;use .notify method instead of installing handler directly  ;-;Similar;0.644210934638977
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;The presence of .notify() causes Linux/ACPI to manage event handlers and notify handlers on our behalf  ;so we dont have to install and remove them ourselves;Similar;0.502739667892456
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.7468352317810059
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;"proc_fops is declared as ""const""";should give some thoughts;Similar;0.5084744691848755
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;"rmmoded directories will be empty and return ""."" and "".."" -- no harm";no harm;Similar;0.5242993831634521
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;start using GPE from userspace;GPE is already disabled in interrupt context;Similar;0.5069128274917603
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;Move all the component definitions for drivers to a single shared place, include/acpi/acpi_drivers.h  ;to have a single shared place;Similar;0.597293496131897
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.589329719543457
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;Similar;0.7001743912696838
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Similar;0.5879818201065063
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;Add correct ->owner to proc_fops to fix reading/module unloading race  ;fix reading/module unloading race;Similar;0.5119322538375854
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;get rid of input BIT* duplicate defines;duplicate;Similar;0.7374817132949829
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;Similar;0.7365432977676392
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;Similar;0.6626955270767212
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.8068422079086304
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;fix acpi_driver.name usage;fix;Similar;0.6300068497657776
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;remove unnecessary casts and variable initializations, clean up formatting;unnecessary;Similar;0.6104904413223267
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;Remove unneeded acpi_handle from driver;unneeded;Similar;0.732909619808197
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;Use acpi_devices handle instead of drivers  ;-;Similar;0.6634094715118408
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.7556949257850647
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;restore /proc/acpi/button/ (ala 2.6.12)  ;[ACPI];Similar;0.6449509859085083
replace the direct printk() invocations with pr_info() and drop the unneeded PREFIX symbol definition from battery.c;changes the excessive log level for some of them too;"Create a separate ""historical"" git archive";about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated;Similar;0.6035658717155457
"Remove the "" MD60198"" part from the E2215T quirk";the MD60### part of the model number differs per country/batch while all of the E2215T and E2228T models have this issue;Drop no longer necessary Acer SW5-012 lid_init_state quirk;no longer necessary;Similar;0.8025887608528137
"Remove the "" MD60198"" part from the E2215T quirk";the MD60### part of the model number differs per country/batch while all of the E2215T and E2228T models have this issue;we no longer need to disable the lid functionality on the Acer SW5-012;Now that this workaround is in place;Similar;0.6359120607376099
"Remove the "" MD60198"" part from the E2215T quirk";the MD60### part of the model number differs per country/batch while all of the E2215T and E2228T models have this issue;fix handling lid state changes when input device closed;-;Similar;0.6260738372802734
"Remove the "" MD60198"" part from the E2215T quirk";the MD60### part of the model number differs per country/batch while all of the E2215T and E2228T models have this issue;Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;Similar;0.5140372514724731
"Remove the "" MD60198"" part from the E2215T quirk";the MD60### part of the model number differs per country/batch while all of the E2215T and E2228T models have this issue;Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];Similar;0.6865419149398804
"Remove the "" MD60198"" part from the E2215T quirk";the MD60### part of the model number differs per country/batch while all of the E2215T and E2228T models have this issue;Remove unnecessary fall-through markings  ;when it is the case;Similar;0.6535171866416931
"Remove the "" MD60198"" part from the E2215T quirk";the MD60### part of the model number differs per country/batch while all of the E2215T and E2228T models have this issue;Delete unused proc filename macros;unused;Similar;0.7458273768424988
"Remove the "" MD60198"" part from the E2215T quirk";the MD60### part of the model number differs per country/batch while all of the E2215T and E2228T models have this issue;Drop no longer necessary Asus T200TA lid_init_state quirk;no longer necessary;Similar;0.7650212645530701
"Remove the "" MD60198"" part from the E2215T quirk";the MD60### part of the model number differs per country/batch while all of the E2215T and E2228T models have this issue;drop the quirk  ;the lid_init_state=ACPI_BUTTON_LID_INIT_OPEN quirk for the Asus T200TA is no longer necessary, the lid now works properly without it;Similar;0.7132294774055481
"Remove the "" MD60198"" part from the E2215T quirk";the MD60### part of the model number differs per country/batch while all of the E2215T and E2228T models have this issue;"Fixes: 17e5888e4e18 (""x86: Select HARDIRQS_SW_RESEND on x86"")";"(""x86: Select HARDIRQS_SW_RESEND on x86"")";Similar;0.5712566375732422
"Remove the "" MD60198"" part from the E2215T quirk";the MD60### part of the model number differs per country/batch while all of the E2215T and E2228T models have this issue;"
The problem here is the accesses to the PBCG and HMCG
";"
these are the pinconf0 registers for the power";Similar;0.5193362832069397
"Remove the "" MD60198"" part from the E2215T quirk";the MD60### part of the model number differs per country/batch while all of the E2215T and E2228T models have this issue;adds the BYT_TRIG_LVL flag to this;so now it is turned into a level interrupt which fires both when low and high, iow it simply always fires leading to an interrupt storm, the tablet immediately waking up from suspend again, etc;Similar;0.5158172845840454
"Remove the "" MD60198"" part from the E2215T quirk";the MD60### part of the model number differs per country/batch while all of the E2215T and E2228T models have this issue;Remove unused acpi_lid_notifier_[un]register() functions;unused;Similar;0.7971667647361755
"Remove the "" MD60198"" part from the E2215T quirk";the MD60### part of the model number differs per country/batch while all of the E2215T and E2228T models have this issue;Turn lid_blacklst DMI table into a generic quirk table;ACPI: button;Similar;0.5994412899017334
"Remove the "" MD60198"" part from the E2215T quirk";the MD60### part of the model number differs per country/batch while all of the E2215T and E2228T models have this issue;"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;Similar;0.6294569969177246
"Remove the "" MD60198"" part from the E2215T quirk";the MD60### part of the model number differs per country/batch while all of the E2215T and E2228T models have this issue;re-using the existing option;keeps things simple and it will make it much easier to add DMI quirks which can either disable the LID completely or set another non-default lid_init_state value, both of which are necessary on some devices;Similar;0.5069711804389954
"Remove the "" MD60198"" part from the E2215T quirk";the MD60### part of the model number differs per country/batch while all of the E2215T and E2228T models have this issue;Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;Similar;0.6544432640075684
"Remove the "" MD60198"" part from the E2215T quirk";the MD60### part of the model number differs per country/batch while all of the E2215T and E2228T models have this issue;Fix a build warning in the ACPI button driver when CONFIG_PROC_FS is not enabled by marking the unused function as __maybe_unused;not enabled, unused;Similar;0.501322865486145
"Remove the "" MD60198"" part from the E2215T quirk";the MD60### part of the model number differs per country/batch while all of the E2215T and E2228T models have this issue;only trigger acpi_pm_wakeup_event() in the acpi_button_notify() path and dont do that in the acpi_lid_initialize_state() path;To avoid the confusion;Similar;0.533547580242157
"Remove the "" MD60198"" part from the E2215T quirk";the MD60### part of the model number differs per country/batch while all of the E2215T and E2228T models have this issue;"The only solution is to add a DMI based blacklist and ignore the LID device on these tablets.
";There is nothing the ACPI button driver (or the gpio code) can do to fix this.;Similar;0.5098816156387329
"Remove the "" MD60198"" part from the E2215T quirk";the MD60### part of the model number differs per country/batch while all of the E2215T and E2228T models have this issue;adds an acpi_handle_debug call  ;to help debugging this;Similar;0.5683376789093018
"Remove the "" MD60198"" part from the E2215T quirk";the MD60### part of the model number differs per country/batch while all of the E2215T and E2228T models have this issue;It breaks docking stations basically;there is no way to have a user-space hwdb to fix that;Similar;0.5652620196342468
"Remove the "" MD60198"" part from the E2215T quirk";the MD60### part of the model number differs per country/batch while all of the E2215T and E2228T models have this issue;"userspace requires to see ""close"" event after the system is resumed";so that it can determine whether the internal display should remain dark and the external display should be lit on;Similar;0.5617083311080933
"Remove the "" MD60198"" part from the E2215T quirk";the MD60### part of the model number differs per country/batch while all of the E2215T and E2228T models have this issue;Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;Similar;0.5775517225265503
"Remove the "" MD60198"" part from the E2215T quirk";the MD60### part of the model number differs per country/batch while all of the E2215T and E2228T models have this issue;Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);Similar;0.6945005059242249
"Remove the "" MD60198"" part from the E2215T quirk";the MD60### part of the model number differs per country/batch while all of the E2215T and E2228T models have this issue;This patch makes it deprecated;lid_init__state=open is more useful than this mode;Similar;0.5256149768829346
"Remove the "" MD60198"" part from the E2215T quirk";the MD60### part of the model number differs per country/batch while all of the E2215T and E2228T models have this issue;have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;Similar;0.7208919525146484
"Remove the "" MD60198"" part from the E2215T quirk";the MD60### part of the model number differs per country/batch while all of the E2215T and E2228T models have this issue;it should not send the complement switch event for the unreliable initial lid state notification;However this mechanism is not suitable for lid_init_state=open/method;Similar;0.5941745042800903
"Remove the "" MD60198"" part from the E2215T quirk";the MD60### part of the model number differs per country/batch while all of the E2215T and E2228T models have this issue;Remove pointer to old lid_sysfs on unbind;ACPI / button;Similar;0.7819855213165283
"Remove the "" MD60198"" part from the E2215T quirk";the MD60### part of the model number differs per country/batch while all of the E2215T and E2228T models have this issue;When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;Similar;0.728940486907959
"Remove the "" MD60198"" part from the E2215T quirk";the MD60### part of the model number differs per country/batch while all of the E2215T and E2228T models have this issue;Correct a wrong macro usage;This patch simplies the code by merging some redundant code;Similar;0.5184853076934814
"Remove the "" MD60198"" part from the E2215T quirk";the MD60### part of the model number differs per country/batch while all of the E2215T and E2228T models have this issue;this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;Similar;0.6862128973007202
"Remove the "" MD60198"" part from the E2215T quirk";the MD60### part of the model number differs per country/batch while all of the E2215T and E2228T models have this issue;"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;Similar;0.5671862959861755
"Remove the "" MD60198"" part from the E2215T quirk";the MD60### part of the model number differs per country/batch while all of the E2215T and E2228T models have this issue;removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;Similar;0.7062054872512817
"Remove the "" MD60198"" part from the E2215T quirk";the MD60### part of the model number differs per country/batch while all of the E2215T and E2228T models have this issue;This caused ACPI shutdown regression on gentoo;VirtualBox;Similar;0.74936842918396
"Remove the "" MD60198"" part from the E2215T quirk";the MD60### part of the model number differs per country/batch while all of the E2215T and E2228T models have this issue;add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;Similar;0.5026679039001465
"Remove the "" MD60198"" part from the E2215T quirk";the MD60### part of the model number differs per country/batch while all of the E2215T and E2228T models have this issue;fix button driver compile error when CONFIG_PM_SLEEP is undefined;CONFIG_PM_SLEEP is undefined;Similar;0.5254217386245728
"Remove the "" MD60198"" part from the E2215T quirk";the MD60### part of the model number differs per country/batch while all of the E2215T and E2228T models have this issue;compile error;CONFIG_PM_SLEEP is undefined;Similar;0.5157718658447266
"Remove the "" MD60198"" part from the E2215T quirk";the MD60### part of the model number differs per country/batch while all of the E2215T and E2228T models have this issue;remove the GPE enabling code from the button driver;to avoid the problem;Similar;0.7042642831802368
"Remove the "" MD60198"" part from the E2215T quirk";the MD60### part of the model number differs per country/batch while all of the E2215T and E2228T models have this issue;Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;Similar;0.6731883883476257
"Remove the "" MD60198"" part from the E2215T quirk";the MD60### part of the model number differs per country/batch while all of the E2215T and E2228T models have this issue;<acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> should not be included directly from any files that are built for CONFIG_ACPI unset;because that generally leads to build warnings about undefined symbols in !CONFIG_ACPI builds;Similar;0.5793366432189941
"Remove the "" MD60198"" part from the E2215T quirk";the MD60### part of the model number differs per country/batch while all of the E2215T and E2228T models have this issue;<acpi/acpi_bus.h> be included prior to <acpi/acpi_drivers.h>;so that the acpi_pci_root declarations the latter depends on are always there;Similar;0.5000114440917969
"Remove the "" MD60198"" part from the E2215T quirk";the MD60### part of the model number differs per country/batch while all of the E2215T and E2228T models have this issue;Use the patch to replace the origin code;provide a better solution;Similar;0.5319651365280151
"Remove the "" MD60198"" part from the E2215T quirk";the MD60### part of the model number differs per country/batch while all of the E2215T and E2228T models have this issue;Remove useless type argument of driver .remove() operation;useless;Similar;0.7334266304969788
"Remove the "" MD60198"" part from the E2215T quirk";the MD60### part of the model number differs per country/batch while all of the E2215T and E2228T models have this issue;"The second argument of ACPI driver .remove() operation is only used by the ACPI processor driver
";the value passed to that driver through it is always available from the given struct acpi_device objects removal_type field;Similar;0.5532512068748474
"Remove the "" MD60198"" part from the E2215T quirk";the MD60### part of the model number differs per country/batch while all of the E2215T and E2228T models have this issue;drop the second ACPI driver .remove() argument  ;the second ACPI driver .remove() argument is in fact useless;Similar;0.8028779625892639
"Remove the "" MD60198"" part from the E2215T quirk";the MD60### part of the model number differs per country/batch while all of the E2215T and E2228T models have this issue;Fix unused function warnings for CONFIG_PM_SLEEP;unused function warnings;Similar;0.5910215377807617
"Remove the "" MD60198"" part from the E2215T quirk";the MD60### part of the model number differs per country/batch while all of the E2215T and E2228T models have this issue;add #ifdefs to prevent them from being built in that case  ;several suspend/resume functions in ACPI drivers are not used for CONFIG_PM_SLEEP unset;Similar;0.5785829424858093
"Remove the "" MD60198"" part from the E2215T quirk";the MD60### part of the model number differs per country/batch while all of the E2215T and E2228T models have this issue;remove unused procfs I/F;unused;Similar;0.8061790466308594
"Remove the "" MD60198"" part from the E2215T quirk";the MD60### part of the model number differs per country/batch while all of the E2215T and E2228T models have this issue;Remove unused ACPI button procfs interface;unused;Similar;0.7704001069068909
"Remove the "" MD60198"" part from the E2215T quirk";the MD60### part of the model number differs per country/batch while all of the E2215T and E2228T models have this issue;Avoid disabling wakeup unnecessarily on remove;-;Similar;0.6235170364379883
"Remove the "" MD60198"" part from the E2215T quirk";the MD60### part of the model number differs per country/batch while all of the E2215T and E2228T models have this issue;CONFIG_GCOV_KERNEL was turned off for all tests and a few more options had to be turned off depending on archs to make things build;my distributed build env didnt work with gcov compiles, like ipr on powerpc/64 which failed due to missing writeq;Similar;0.5130480527877808
"Remove the "" MD60198"" part from the E2215T quirk";the MD60### part of the model number differs per country/batch while all of the E2215T and E2228T models have this issue;percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;Similar;0.6599669456481934
"Remove the "" MD60198"" part from the E2215T quirk";the MD60### part of the model number differs per country/batch while all of the E2215T and E2228T models have this issue;Remove the old GPE type handling entirely  ;Gets rid of various quirks, like the implicit disabling with GPE type setting;Similar;0.7443028688430786
"Remove the "" MD60198"" part from the E2215T quirk";the MD60### part of the model number differs per country/batch while all of the E2215T and E2228T models have this issue;"This patch is to eliminate the above warning message
";Device PNP0C0D:00 failed to resume: error 1;Similar;0.6479730606079102
"Remove the "" MD60198"" part from the E2215T quirk";the MD60### part of the model number differs per country/batch while all of the E2215T and E2228T models have this issue;dont try to use a non-existent lid device;non-existent;Similar;0.5699858665466309
"Remove the "" MD60198"" part from the E2215T quirk";the MD60### part of the model number differs per country/batch while all of the E2215T and E2228T models have this issue;return -ENODEV;theres no lid device present;Similar;0.5038198232650757
"Remove the "" MD60198"" part from the E2215T quirk";the MD60### part of the model number differs per country/batch while all of the E2215T and E2228T models have this issue;Remove button->device pointer;button;Similar;0.7000162601470947
"Remove the "" MD60198"" part from the E2215T quirk";the MD60### part of the model number differs per country/batch while all of the E2215T and E2228T models have this issue;We no longer need a pointer from struct acpi_button back to the struct acpi_device;no longer need;Similar;0.6877588033676147
"Remove the "" MD60198"" part from the E2215T quirk";the MD60### part of the model number differs per country/batch while all of the E2215T and E2228T models have this issue;use .notify method instead of installing handler directly  ;-;Similar;0.5406768321990967
"Remove the "" MD60198"" part from the E2215T quirk";the MD60### part of the model number differs per country/batch while all of the E2215T and E2228T models have this issue;convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.5579695701599121
"Remove the "" MD60198"" part from the E2215T quirk";the MD60### part of the model number differs per country/batch while all of the E2215T and E2228T models have this issue;"proc_fops is declared as ""const""";should give some thoughts;Similar;0.5781980752944946
"Remove the "" MD60198"" part from the E2215T quirk";the MD60### part of the model number differs per country/batch while all of the E2215T and E2228T models have this issue;"rmmoded directories will be empty and return ""."" and "".."" -- no harm";no harm;Similar;0.5567067861557007
"Remove the "" MD60198"" part from the E2215T quirk";the MD60### part of the model number differs per country/batch while all of the E2215T and E2228T models have this issue;Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;Similar;0.5258736610412598
"Remove the "" MD60198"" part from the E2215T quirk";the MD60### part of the model number differs per country/batch while all of the E2215T and E2228T models have this issue;use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Similar;0.5701687335968018
"Remove the "" MD60198"" part from the E2215T quirk";the MD60### part of the model number differs per country/batch while all of the E2215T and E2228T models have this issue;get rid of input BIT* duplicate defines;duplicate;Similar;0.745266854763031
"Remove the "" MD60198"" part from the E2215T quirk";the MD60### part of the model number differs per country/batch while all of the E2215T and E2228T models have this issue;Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;Similar;0.7048140168190002
"Remove the "" MD60198"" part from the E2215T quirk";the MD60### part of the model number differs per country/batch while all of the E2215T and E2228T models have this issue;Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;Similar;0.5753360986709595
"Remove the "" MD60198"" part from the E2215T quirk";the MD60### part of the model number differs per country/batch while all of the E2215T and E2228T models have this issue;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.761942982673645
"Remove the "" MD60198"" part from the E2215T quirk";the MD60### part of the model number differs per country/batch while all of the E2215T and E2228T models have this issue;"Invoke with ; as leaving it off confuses Lindent  ";gcc doesnt care;Similar;0.6238836050033569
"Remove the "" MD60198"" part from the E2215T quirk";the MD60### part of the model number differs per country/batch while all of the E2215T and E2228T models have this issue;Fix indentation where Lindent did get confused  ;Lindent did get confused;Similar;0.5294017791748047
"Remove the "" MD60198"" part from the E2215T quirk";the MD60### part of the model number differs per country/batch while all of the E2215T and E2228T models have this issue;remove unnecessary casts and variable initializations, clean up formatting;unnecessary;Similar;0.5165653824806213
"Remove the "" MD60198"" part from the E2215T quirk";the MD60### part of the model number differs per country/batch while all of the E2215T and E2228T models have this issue;Remove unneeded acpi_handle from driver;unneeded;Similar;0.73093581199646
"Remove the "" MD60198"" part from the E2215T quirk";the MD60### part of the model number differs per country/batch while all of the E2215T and E2228T models have this issue;Use acpi_devices handle instead of drivers  ;-;Similar;0.6099495887756348
"Remove the "" MD60198"" part from the E2215T quirk";the MD60### part of the model number differs per country/batch while all of the E2215T and E2228T models have this issue;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.6492376327514648
"Remove the "" MD60198"" part from the E2215T quirk";the MD60### part of the model number differs per country/batch while all of the E2215T and E2228T models have this issue;"Create a separate ""historical"" git archive";about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated;Similar;0.720567524433136
Drop no longer necessary Acer SW5-012 lid_init_state quirk;no longer necessary;we no longer need to disable the lid functionality on the Acer SW5-012;Now that this workaround is in place;Similar;0.795497477054596
Drop no longer necessary Acer SW5-012 lid_init_state quirk;no longer necessary;fix handling lid state changes when input device closed;-;Similar;0.6642656326293945
Drop no longer necessary Acer SW5-012 lid_init_state quirk;no longer necessary;Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;Similar;0.5586771965026855
Drop no longer necessary Acer SW5-012 lid_init_state quirk;no longer necessary;Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];Similar;0.6041737198829651
Drop no longer necessary Acer SW5-012 lid_init_state quirk;no longer necessary;Remove unnecessary fall-through markings  ;when it is the case;Similar;0.7439178228378296
Drop no longer necessary Acer SW5-012 lid_init_state quirk;no longer necessary;Delete unused proc filename macros;unused;Similar;0.7012548446655273
Drop no longer necessary Acer SW5-012 lid_init_state quirk;no longer necessary;Drop no longer necessary Asus T200TA lid_init_state quirk;no longer necessary;Similar;0.9607511758804321
Drop no longer necessary Acer SW5-012 lid_init_state quirk;no longer necessary;drop the quirk  ;the lid_init_state=ACPI_BUTTON_LID_INIT_OPEN quirk for the Asus T200TA is no longer necessary, the lid now works properly without it;Similar;0.7676233053207397
Drop no longer necessary Acer SW5-012 lid_init_state quirk;no longer necessary;Remove unused acpi_lid_notifier_[un]register() functions;unused;Similar;0.7974832057952881
Drop no longer necessary Acer SW5-012 lid_init_state quirk;no longer necessary; the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;Similar;0.5079542398452759
Drop no longer necessary Acer SW5-012 lid_init_state quirk;no longer necessary;Turn lid_blacklst DMI table into a generic quirk table;ACPI: button;Similar;0.5911772847175598
Drop no longer necessary Acer SW5-012 lid_init_state quirk;no longer necessary;"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;Similar;0.617394208908081
Drop no longer necessary Acer SW5-012 lid_init_state quirk;no longer necessary;update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;Similar;0.5018073320388794
Drop no longer necessary Acer SW5-012 lid_init_state quirk;no longer necessary;Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;Similar;0.7213908433914185
Drop no longer necessary Acer SW5-012 lid_init_state quirk;no longer necessary;Fix a build warning in the ACPI button driver when CONFIG_PROC_FS is not enabled by marking the unused function as __maybe_unused;not enabled, unused;Similar;0.5369313955307007
Drop no longer necessary Acer SW5-012 lid_init_state quirk;no longer necessary;only trigger acpi_pm_wakeup_event() in the acpi_button_notify() path and dont do that in the acpi_lid_initialize_state() path;To avoid the confusion;Similar;0.6025195121765137
Drop no longer necessary Acer SW5-012 lid_init_state quirk;no longer necessary;"The only solution is to add a DMI based blacklist and ignore the LID device on these tablets.
";There is nothing the ACPI button driver (or the gpio code) can do to fix this.;Similar;0.5691701173782349
Drop no longer necessary Acer SW5-012 lid_init_state quirk;no longer necessary;evemu-record after noticing a spurious suspend is too late to detect;a LID closed event is the (probable) cause of this;Similar;0.5627025365829468
Drop no longer necessary Acer SW5-012 lid_init_state quirk;no longer necessary;adds an acpi_handle_debug call  ;to help debugging this;Similar;0.5183470249176025
Drop no longer necessary Acer SW5-012 lid_init_state quirk;no longer necessary;"the ""open"" choice is worse";"the ""method"" operation mode implementation can be buggy on some platforms";Similar;0.5632503032684326
Drop no longer necessary Acer SW5-012 lid_init_state quirk;no longer necessary;It breaks docking stations basically;there is no way to have a user-space hwdb to fix that;Similar;0.5894065499305725
Drop no longer necessary Acer SW5-012 lid_init_state quirk;no longer necessary;"userspace requires to see ""close"" event after the system is resumed";so that it can determine whether the internal display should remain dark and the external display should be lit on;Similar;0.5810022950172424
Drop no longer necessary Acer SW5-012 lid_init_state quirk;no longer necessary;Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;Similar;0.6106850504875183
Drop no longer necessary Acer SW5-012 lid_init_state quirk;no longer necessary;Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);Similar;0.7197732925415039
Drop no longer necessary Acer SW5-012 lid_init_state quirk;no longer necessary;This patch makes it deprecated;lid_init__state=open is more useful than this mode;Similar;0.6054048538208008
Drop no longer necessary Acer SW5-012 lid_init_state quirk;no longer necessary;have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;Similar;0.7409325242042542
Drop no longer necessary Acer SW5-012 lid_init_state quirk;no longer necessary;it should not send the complement switch event for the unreliable initial lid state notification;However this mechanism is not suitable for lid_init_state=open/method;Similar;0.6766531467437744
Drop no longer necessary Acer SW5-012 lid_init_state quirk;no longer necessary;Remove pointer to old lid_sysfs on unbind;ACPI / button;Similar;0.7382608652114868
Drop no longer necessary Acer SW5-012 lid_init_state quirk;no longer necessary;When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;Similar;0.6965656280517578
Drop no longer necessary Acer SW5-012 lid_init_state quirk;no longer necessary;Correct a wrong macro usage;This patch simplies the code by merging some redundant code;Similar;0.533112645149231
Drop no longer necessary Acer SW5-012 lid_init_state quirk;no longer necessary;this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;Similar;0.7593318223953247
Drop no longer necessary Acer SW5-012 lid_init_state quirk;no longer necessary;There is no need to carry potentially outdated Free Software Foundation mailing address in file headers;since the COPYING file includes it;Similar;0.5805584192276001
Drop no longer necessary Acer SW5-012 lid_init_state quirk;no longer necessary;"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;Similar;0.6102437973022461
Drop no longer necessary Acer SW5-012 lid_init_state quirk;no longer necessary;removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;Similar;0.6997960805892944
Drop no longer necessary Acer SW5-012 lid_init_state quirk;no longer necessary;This caused ACPI shutdown regression on gentoo;VirtualBox;Similar;0.7655172348022461
Drop no longer necessary Acer SW5-012 lid_init_state quirk;no longer necessary;fix button driver compile error when CONFIG_PM_SLEEP is undefined;CONFIG_PM_SLEEP is undefined;Similar;0.5567269921302795
Drop no longer necessary Acer SW5-012 lid_init_state quirk;no longer necessary;remove the GPE enabling code from the button driver;to avoid the problem;Similar;0.6796181201934814
Drop no longer necessary Acer SW5-012 lid_init_state quirk;no longer necessary;Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;Similar;0.688178539276123
Drop no longer necessary Acer SW5-012 lid_init_state quirk;no longer necessary;<acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> should not be included directly from any files that are built for CONFIG_ACPI unset;because that generally leads to build warnings about undefined symbols in !CONFIG_ACPI builds;Similar;0.6012465953826904
Drop no longer necessary Acer SW5-012 lid_init_state quirk;no longer necessary;Remove useless type argument of driver .remove() operation;useless;Similar;0.7598032355308533
Drop no longer necessary Acer SW5-012 lid_init_state quirk;no longer necessary;"The second argument of ACPI driver .remove() operation is only used by the ACPI processor driver
";the value passed to that driver through it is always available from the given struct acpi_device objects removal_type field;Similar;0.5616878271102905
Drop no longer necessary Acer SW5-012 lid_init_state quirk;no longer necessary;drop the second ACPI driver .remove() argument  ;the second ACPI driver .remove() argument is in fact useless;Similar;0.8100870251655579
Drop no longer necessary Acer SW5-012 lid_init_state quirk;no longer necessary;Fix unused function warnings for CONFIG_PM_SLEEP;unused function warnings;Similar;0.6182621717453003
Drop no longer necessary Acer SW5-012 lid_init_state quirk;no longer necessary;add #ifdefs to prevent them from being built in that case  ;several suspend/resume functions in ACPI drivers are not used for CONFIG_PM_SLEEP unset;Similar;0.5684017539024353
Drop no longer necessary Acer SW5-012 lid_init_state quirk;no longer necessary;remove unused procfs I/F;unused;Similar;0.8044151067733765
Drop no longer necessary Acer SW5-012 lid_init_state quirk;no longer necessary;Remove unused ACPI button procfs interface;unused;Similar;0.7840162515640259
Drop no longer necessary Acer SW5-012 lid_init_state quirk;no longer necessary;Avoid disabling wakeup unnecessarily on remove;-;Similar;0.7205806970596313
Drop no longer necessary Acer SW5-012 lid_init_state quirk;no longer necessary;use standard device wakeup flags instead of the special ACPI flags for handling those devices;address this problem;Similar;0.5228406190872192
Drop no longer necessary Acer SW5-012 lid_init_state quirk;no longer necessary;CONFIG_GCOV_KERNEL was turned off for all tests and a few more options had to be turned off depending on archs to make things build;my distributed build env didnt work with gcov compiles, like ipr on powerpc/64 which failed due to missing writeq;Similar;0.5510871410369873
Drop no longer necessary Acer SW5-012 lid_init_state quirk;no longer necessary;percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;Similar;0.6576107740402222
Drop no longer necessary Acer SW5-012 lid_init_state quirk;no longer necessary;Remove the old GPE type handling entirely  ;Gets rid of various quirks, like the implicit disabling with GPE type setting;Similar;0.7424037456512451
Drop no longer necessary Acer SW5-012 lid_init_state quirk;no longer necessary;"This patch is to eliminate the above warning message
";Device PNP0C0D:00 failed to resume: error 1;Similar;0.6821780800819397
Drop no longer necessary Acer SW5-012 lid_init_state quirk;no longer necessary;dont try to use a non-existent lid device;non-existent;Similar;0.6717722415924072
Drop no longer necessary Acer SW5-012 lid_init_state quirk;no longer necessary;return -ENODEV;theres no lid device present;Similar;0.5054407119750977
Drop no longer necessary Acer SW5-012 lid_init_state quirk;no longer necessary;whitespace fix  ;This does not change any actual console output;Similar;0.5148515701293945
Drop no longer necessary Acer SW5-012 lid_init_state quirk;no longer necessary;Remove button->device pointer;button;Similar;0.7067126035690308
Drop no longer necessary Acer SW5-012 lid_init_state quirk;no longer necessary;We no longer need a pointer from struct acpi_button back to the struct acpi_device;no longer need;Similar;0.7935276031494141
Drop no longer necessary Acer SW5-012 lid_init_state quirk;no longer necessary;use .notify method instead of installing handler directly  ;-;Similar;0.558730959892273
Drop no longer necessary Acer SW5-012 lid_init_state quirk;no longer necessary;convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.5534094572067261
Drop no longer necessary Acer SW5-012 lid_init_state quirk;no longer necessary;"proc_fops is declared as ""const""";should give some thoughts;Similar;0.5336931943893433
Drop no longer necessary Acer SW5-012 lid_init_state quirk;no longer necessary;"rmmoded directories will be empty and return ""."" and "".."" -- no harm";no harm;Similar;0.689419150352478
Drop no longer necessary Acer SW5-012 lid_init_state quirk;no longer necessary;dont want such modular code;definitely;Similar;0.5712913274765015
Drop no longer necessary Acer SW5-012 lid_init_state quirk;no longer necessary;"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.5100319981575012
Drop no longer necessary Acer SW5-012 lid_init_state quirk;no longer necessary;use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Similar;0.6000950336456299
Drop no longer necessary Acer SW5-012 lid_init_state quirk;no longer necessary;get rid of input BIT* duplicate defines;duplicate;Similar;0.7450670599937439
Drop no longer necessary Acer SW5-012 lid_init_state quirk;no longer necessary;Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;Similar;0.736190140247345
Drop no longer necessary Acer SW5-012 lid_init_state quirk;no longer necessary;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.7366983294487
Drop no longer necessary Acer SW5-012 lid_init_state quirk;no longer necessary;"Invoke with ; as leaving it off confuses Lindent  ";gcc doesnt care;Similar;0.6720789670944214
Drop no longer necessary Acer SW5-012 lid_init_state quirk;no longer necessary;Fix indentation where Lindent did get confused  ;Lindent did get confused;Similar;0.5974966287612915
Drop no longer necessary Acer SW5-012 lid_init_state quirk;no longer necessary;remove unnecessary casts and variable initializations, clean up formatting;unnecessary;Similar;0.5987464189529419
Drop no longer necessary Acer SW5-012 lid_init_state quirk;no longer necessary;Remove unneeded acpi_handle from driver;unneeded;Similar;0.7218348979949951
Drop no longer necessary Acer SW5-012 lid_init_state quirk;no longer necessary;Use acpi_devices handle instead of drivers  ;-;Similar;0.6379438638687134
Drop no longer necessary Acer SW5-012 lid_init_state quirk;no longer necessary;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.6677380800247192
Drop no longer necessary Acer SW5-012 lid_init_state quirk;no longer necessary;restore /proc/acpi/button/ (ala 2.6.12)  ;[ACPI];Similar;0.5264970660209656
Drop no longer necessary Acer SW5-012 lid_init_state quirk;no longer necessary;"Create a separate ""historical"" git archive";about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated;Similar;0.6315181255340576
"Commit 78a5b53e9fb4 (""Input: soc_button_array - work around DSDTs which modify the irqflags"") adds a workaround for DSDTs with a _LID method which play tricks with the irqflags";assuming that the OS is using an irq-type of IRQ_TYPE_LEVEL_LOW;fix handling lid state changes when input device closed;-;Similar;0.5619081258773804
"Commit 78a5b53e9fb4 (""Input: soc_button_array - work around DSDTs which modify the irqflags"") adds a workaround for DSDTs with a _LID method which play tricks with the irqflags";assuming that the OS is using an irq-type of IRQ_TYPE_LEVEL_LOW;Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];Similar;0.6532249450683594
"Commit 78a5b53e9fb4 (""Input: soc_button_array - work around DSDTs which modify the irqflags"") adds a workaround for DSDTs with a _LID method which play tricks with the irqflags";assuming that the OS is using an irq-type of IRQ_TYPE_LEVEL_LOW;Delete unused proc filename macros;unused;Similar;0.5185714960098267
"Commit 78a5b53e9fb4 (""Input: soc_button_array - work around DSDTs which modify the irqflags"") adds a workaround for DSDTs with a _LID method which play tricks with the irqflags";assuming that the OS is using an irq-type of IRQ_TYPE_LEVEL_LOW;"Fixes: 17e5888e4e18 (""x86: Select HARDIRQS_SW_RESEND on x86"")";"(""x86: Select HARDIRQS_SW_RESEND on x86"")";Similar;0.7046161890029907
"Commit 78a5b53e9fb4 (""Input: soc_button_array - work around DSDTs which modify the irqflags"") adds a workaround for DSDTs with a _LID method which play tricks with the irqflags";assuming that the OS is using an irq-type of IRQ_TYPE_LEVEL_LOW;adds the BYT_TRIG_LVL flag to this;so now it is turned into a level interrupt which fires both when low and high, iow it simply always fires leading to an interrupt storm, the tablet immediately waking up from suspend again, etc;Similar;0.5956929922103882
"Commit 78a5b53e9fb4 (""Input: soc_button_array - work around DSDTs which modify the irqflags"") adds a workaround for DSDTs with a _LID method which play tricks with the irqflags";assuming that the OS is using an irq-type of IRQ_TYPE_LEVEL_LOW;Setting lid_init_state to ACPI_BUTTON_LID_INIT_OPEN on the T200TA  ;fixes the unwanted behavior, adds a DMI based quirk;Similar;0.670706033706665
"Commit 78a5b53e9fb4 (""Input: soc_button_array - work around DSDTs which modify the irqflags"") adds a workaround for DSDTs with a _LID method which play tricks with the irqflags";assuming that the OS is using an irq-type of IRQ_TYPE_LEVEL_LOW; the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;Similar;0.6399314999580383
"Commit 78a5b53e9fb4 (""Input: soc_button_array - work around DSDTs which modify the irqflags"") adds a workaround for DSDTs with a _LID method which play tricks with the irqflags";assuming that the OS is using an irq-type of IRQ_TYPE_LEVEL_LOW;Turn lid_blacklst DMI table into a generic quirk table;ACPI: button;Similar;0.6118466854095459
"Commit 78a5b53e9fb4 (""Input: soc_button_array - work around DSDTs which modify the irqflags"") adds a workaround for DSDTs with a _LID method which play tricks with the irqflags";assuming that the OS is using an irq-type of IRQ_TYPE_LEVEL_LOW;"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;Similar;0.6709699630737305
"Commit 78a5b53e9fb4 (""Input: soc_button_array - work around DSDTs which modify the irqflags"") adds a workaround for DSDTs with a _LID method which play tricks with the irqflags";assuming that the OS is using an irq-type of IRQ_TYPE_LEVEL_LOW;update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;Similar;0.6477609872817993
"Commit 78a5b53e9fb4 (""Input: soc_button_array - work around DSDTs which modify the irqflags"") adds a workaround for DSDTs with a _LID method which play tricks with the irqflags";assuming that the OS is using an irq-type of IRQ_TYPE_LEVEL_LOW;Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;Similar;0.5749129056930542
"Commit 78a5b53e9fb4 (""Input: soc_button_array - work around DSDTs which modify the irqflags"") adds a workaround for DSDTs with a _LID method which play tricks with the irqflags";assuming that the OS is using an irq-type of IRQ_TYPE_LEVEL_LOW;Fix a build warning in the ACPI button driver when CONFIG_PROC_FS is not enabled by marking the unused function as __maybe_unused;not enabled, unused;Similar;0.6074860095977783
"Commit 78a5b53e9fb4 (""Input: soc_button_array - work around DSDTs which modify the irqflags"") adds a workaround for DSDTs with a _LID method which play tricks with the irqflags";assuming that the OS is using an irq-type of IRQ_TYPE_LEVEL_LOW;only trigger acpi_pm_wakeup_event() in the acpi_button_notify() path and dont do that in the acpi_lid_initialize_state() path;To avoid the confusion;Similar;0.511214554309845
"Commit 78a5b53e9fb4 (""Input: soc_button_array - work around DSDTs which modify the irqflags"") adds a workaround for DSDTs with a _LID method which play tricks with the irqflags";assuming that the OS is using an irq-type of IRQ_TYPE_LEVEL_LOW;Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;Similar;0.6965002417564392
"Commit 78a5b53e9fb4 (""Input: soc_button_array - work around DSDTs which modify the irqflags"") adds a workaround for DSDTs with a _LID method which play tricks with the irqflags";assuming that the OS is using an irq-type of IRQ_TYPE_LEVEL_LOW;making the ACPI button driver loadable as a module even if not booted in ACPI mode;to fix the asymmetry and provide the acpi_lid_open() symbol;Similar;0.5174010992050171
"Commit 78a5b53e9fb4 (""Input: soc_button_array - work around DSDTs which modify the irqflags"") adds a workaround for DSDTs with a _LID method which play tricks with the irqflags";assuming that the OS is using an irq-type of IRQ_TYPE_LEVEL_LOW;adds an acpi_handle_debug call  ;to help debugging this;Similar;0.6791011095046997
"Commit 78a5b53e9fb4 (""Input: soc_button_array - work around DSDTs which modify the irqflags"") adds a workaround for DSDTs with a _LID method which play tricks with the irqflags";assuming that the OS is using an irq-type of IRQ_TYPE_LEVEL_LOW;Fix function prototypes for module_param_call();-;Similar;0.6531500816345215
"Commit 78a5b53e9fb4 (""Input: soc_button_array - work around DSDTs which modify the irqflags"") adds a workaround for DSDTs with a _LID method which play tricks with the irqflags";assuming that the OS is using an irq-type of IRQ_TYPE_LEVEL_LOW;fix whitespace in pr_fmt() to align log entries;align log entries;Similar;0.6802441477775574
"Commit 78a5b53e9fb4 (""Input: soc_button_array - work around DSDTs which modify the irqflags"") adds a workaround for DSDTs with a _LID method which play tricks with the irqflags";assuming that the OS is using an irq-type of IRQ_TYPE_LEVEL_LOW;libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;Similar;0.7518762350082397
"Commit 78a5b53e9fb4 (""Input: soc_button_array - work around DSDTs which modify the irqflags"") adds a workaround for DSDTs with a _LID method which play tricks with the irqflags";assuming that the OS is using an irq-type of IRQ_TYPE_LEVEL_LOW;Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;Similar;0.680538535118103
"Commit 78a5b53e9fb4 (""Input: soc_button_array - work around DSDTs which modify the irqflags"") adds a workaround for DSDTs with a _LID method which play tricks with the irqflags";assuming that the OS is using an irq-type of IRQ_TYPE_LEVEL_LOW;Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);Similar;0.5567565560340881
"Commit 78a5b53e9fb4 (""Input: soc_button_array - work around DSDTs which modify the irqflags"") adds a workaround for DSDTs with a _LID method which play tricks with the irqflags";assuming that the OS is using an irq-type of IRQ_TYPE_LEVEL_LOW;have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;Similar;0.5927000641822815
"Commit 78a5b53e9fb4 (""Input: soc_button_array - work around DSDTs which modify the irqflags"") adds a workaround for DSDTs with a _LID method which play tricks with the irqflags";assuming that the OS is using an irq-type of IRQ_TYPE_LEVEL_LOW;This patch adds a mechanism to insert lid events as a compensation for the platform triggered ones to form a complete event switches  ;in order to make sure that the platform triggered events can always be reliably delivered to the userspace;Similar;0.7348788976669312
"Commit 78a5b53e9fb4 (""Input: soc_button_array - work around DSDTs which modify the irqflags"") adds a workaround for DSDTs with a _LID method which play tricks with the irqflags";assuming that the OS is using an irq-type of IRQ_TYPE_LEVEL_LOW;Use key event type to implement ACPI lid events;Another approach;Similar;0.5244858860969543
"Commit 78a5b53e9fb4 (""Input: soc_button_array - work around DSDTs which modify the irqflags"") adds a workaround for DSDTs with a _LID method which play tricks with the irqflags";assuming that the OS is using an irq-type of IRQ_TYPE_LEVEL_LOW;Remove pointer to old lid_sysfs on unbind;ACPI / button;Similar;0.516120433807373
"Commit 78a5b53e9fb4 (""Input: soc_button_array - work around DSDTs which modify the irqflags"") adds a workaround for DSDTs with a _LID method which play tricks with the irqflags";assuming that the OS is using an irq-type of IRQ_TYPE_LEVEL_LOW;When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;Similar;0.5243675112724304
"Commit 78a5b53e9fb4 (""Input: soc_button_array - work around DSDTs which modify the irqflags"") adds a workaround for DSDTs with a _LID method which play tricks with the irqflags";assuming that the OS is using an irq-type of IRQ_TYPE_LEVEL_LOW;"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;Similar;0.6023635864257812
"Commit 78a5b53e9fb4 (""Input: soc_button_array - work around DSDTs which modify the irqflags"") adds a workaround for DSDTs with a _LID method which play tricks with the irqflags";assuming that the OS is using an irq-type of IRQ_TYPE_LEVEL_LOW;Add ACPI Button event via netlink routine;-;Similar;0.7366256713867188
"Commit 78a5b53e9fb4 (""Input: soc_button_array - work around DSDTs which modify the irqflags"") adds a workaround for DSDTs with a _LID method which play tricks with the irqflags";assuming that the OS is using an irq-type of IRQ_TYPE_LEVEL_LOW;removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;Similar;0.568803071975708
"Commit 78a5b53e9fb4 (""Input: soc_button_array - work around DSDTs which modify the irqflags"") adds a workaround for DSDTs with a _LID method which play tricks with the irqflags";assuming that the OS is using an irq-type of IRQ_TYPE_LEVEL_LOW;add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;Similar;0.7561328411102295
"Commit 78a5b53e9fb4 (""Input: soc_button_array - work around DSDTs which modify the irqflags"") adds a workaround for DSDTs with a _LID method which play tricks with the irqflags";assuming that the OS is using an irq-type of IRQ_TYPE_LEVEL_LOW;fix button driver compile error when CONFIG_PM_SLEEP is undefined;CONFIG_PM_SLEEP is undefined;Similar;0.6243884563446045
"Commit 78a5b53e9fb4 (""Input: soc_button_array - work around DSDTs which modify the irqflags"") adds a workaround for DSDTs with a _LID method which play tricks with the irqflags";assuming that the OS is using an irq-type of IRQ_TYPE_LEVEL_LOW;Fix enabling button GPEs twice;Fix;Similar;0.664728045463562
"Commit 78a5b53e9fb4 (""Input: soc_button_array - work around DSDTs which modify the irqflags"") adds a workaround for DSDTs with a _LID method which play tricks with the irqflags";assuming that the OS is using an irq-type of IRQ_TYPE_LEVEL_LOW;Button GPEs have been enabled in the acpi_wake_device_init() during boot;the button driver enables them for the second time;Similar;0.6976691484451294
"Commit 78a5b53e9fb4 (""Input: soc_button_array - work around DSDTs which modify the irqflags"") adds a workaround for DSDTs with a _LID method which play tricks with the irqflags";assuming that the OS is using an irq-type of IRQ_TYPE_LEVEL_LOW;remove the GPE enabling code from the button driver;to avoid the problem;Similar;0.5990965366363525
"Commit 78a5b53e9fb4 (""Input: soc_button_array - work around DSDTs which modify the irqflags"") adds a workaround for DSDTs with a _LID method which play tricks with the irqflags";assuming that the OS is using an irq-type of IRQ_TYPE_LEVEL_LOW;Clean up inclusions of ACPI header files;ACPI;Similar;0.5304162502288818
"Commit 78a5b53e9fb4 (""Input: soc_button_array - work around DSDTs which modify the irqflags"") adds a workaround for DSDTs with a _LID method which play tricks with the irqflags";assuming that the OS is using an irq-type of IRQ_TYPE_LEVEL_LOW;Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;Similar;0.5404784083366394
"Commit 78a5b53e9fb4 (""Input: soc_button_array - work around DSDTs which modify the irqflags"") adds a workaround for DSDTs with a _LID method which play tricks with the irqflags";assuming that the OS is using an irq-type of IRQ_TYPE_LEVEL_LOW;Use the patch to replace the origin code;provide a better solution;Similar;0.5644707679748535
"Commit 78a5b53e9fb4 (""Input: soc_button_array - work around DSDTs which modify the irqflags"") adds a workaround for DSDTs with a _LID method which play tricks with the irqflags";assuming that the OS is using an irq-type of IRQ_TYPE_LEVEL_LOW;Fix unused function warnings for CONFIG_PM_SLEEP;unused function warnings;Similar;0.518420934677124
"Commit 78a5b53e9fb4 (""Input: soc_button_array - work around DSDTs which modify the irqflags"") adds a workaround for DSDTs with a _LID method which play tricks with the irqflags";assuming that the OS is using an irq-type of IRQ_TYPE_LEVEL_LOW;Remove unused ACPI button procfs interface;unused;Similar;0.5421619415283203
"Commit 78a5b53e9fb4 (""Input: soc_button_array - work around DSDTs which modify the irqflags"") adds a workaround for DSDTs with a _LID method which play tricks with the irqflags";assuming that the OS is using an irq-type of IRQ_TYPE_LEVEL_LOW;Use device wakeup flags for handling ACPI wakeup devices;for handling ACPI wakeup devices;Similar;0.5820657014846802
"Commit 78a5b53e9fb4 (""Input: soc_button_array - work around DSDTs which modify the irqflags"") adds a workaround for DSDTs with a _LID method which play tricks with the irqflags";assuming that the OS is using an irq-type of IRQ_TYPE_LEVEL_LOW;Use GPE reference counting to support shared GPEs  ;the wakeup enable mask bits of GPEs are set as soon as the GPEs are enabled to wake up the system;Similar;0.5400734543800354
"Commit 78a5b53e9fb4 (""Input: soc_button_array - work around DSDTs which modify the irqflags"") adds a workaround for DSDTs with a _LID method which play tricks with the irqflags";assuming that the OS is using an irq-type of IRQ_TYPE_LEVEL_LOW;it is sufficient to set/unset the wakeup mask bits for them during system sleep transitions;"this means that the reference counting of ""wakeup"" GPEs doesnt really make sense";Similar;0.5285282731056213
"Commit 78a5b53e9fb4 (""Input: soc_button_array - work around DSDTs which modify the irqflags"") adds a workaround for DSDTs with a _LID method which play tricks with the irqflags";assuming that the OS is using an irq-type of IRQ_TYPE_LEVEL_LOW;This will allow us to simplify the GPE handling code quite a bit;that change is too intrusive for 2.6.35;Similar;0.5689800977706909
"Commit 78a5b53e9fb4 (""Input: soc_button_array - work around DSDTs which modify the irqflags"") adds a workaround for DSDTs with a _LID method which play tricks with the irqflags";assuming that the OS is using an irq-type of IRQ_TYPE_LEVEL_LOW;Prepare for this change by updating users of gfp and slab facilities;include those headers directly instead of assuming availability;Similar;0.6032624840736389
"Commit 78a5b53e9fb4 (""Input: soc_button_array - work around DSDTs which modify the irqflags"") adds a workaround for DSDTs with a _LID method which play tricks with the irqflags";assuming that the OS is using an irq-type of IRQ_TYPE_LEVEL_LOW;prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;Similar;0.5719376802444458
"Commit 78a5b53e9fb4 (""Input: soc_button_array - work around DSDTs which modify the irqflags"") adds a workaround for DSDTs with a _LID method which play tricks with the irqflags";assuming that the OS is using an irq-type of IRQ_TYPE_LEVEL_LOW;The script was run again  ;to make sure no file was left behind;Similar;0.5244207382202148
"Commit 78a5b53e9fb4 (""Input: soc_button_array - work around DSDTs which modify the irqflags"") adds a workaround for DSDTs with a _LID method which play tricks with the irqflags";assuming that the OS is using an irq-type of IRQ_TYPE_LEVEL_LOW;percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;Similar;0.524487316608429
"Commit 78a5b53e9fb4 (""Input: soc_button_array - work around DSDTs which modify the irqflags"") adds a workaround for DSDTs with a _LID method which play tricks with the irqflags";assuming that the OS is using an irq-type of IRQ_TYPE_LEVEL_LOW;Introduce a new wake-up flag, always_enabled, for marking devices that should be permanently enabled to generate run-time events  ;devices that should be permanently enabled to generate run-time events;Similar;0.5775500535964966
"Commit 78a5b53e9fb4 (""Input: soc_button_array - work around DSDTs which modify the irqflags"") adds a workaround for DSDTs with a _LID method which play tricks with the irqflags";assuming that the OS is using an irq-type of IRQ_TYPE_LEVEL_LOW;Introduce a reference counter for run-wake devices and a function that will initialize all of the run-time wake-up fields for given device.;-;Similar;0.6366750001907349
"Commit 78a5b53e9fb4 (""Input: soc_button_array - work around DSDTs which modify the irqflags"") adds a workaround for DSDTs with a _LID method which play tricks with the irqflags";assuming that the OS is using an irq-type of IRQ_TYPE_LEVEL_LOW;Add an API to allow devices to indicate whether or not they want their devices GPE to be enabled for both runtime and wakeup events;to allow devices to indicate whether or not they want their devices GPE to be enabled;Similar;0.653874397277832
"Commit 78a5b53e9fb4 (""Input: soc_button_array - work around DSDTs which modify the irqflags"") adds a workaround for DSDTs with a _LID method which play tricks with the irqflags";assuming that the OS is using an irq-type of IRQ_TYPE_LEVEL_LOW;we could install either a fixed event handler or a notify handler, but the Linux/ACPI code now handles that for us;We previously needed that so we dont need to worry about it;Similar;0.6180397272109985
"Commit 78a5b53e9fb4 (""Input: soc_button_array - work around DSDTs which modify the irqflags"") adds a workaround for DSDTs with a _LID method which play tricks with the irqflags";assuming that the OS is using an irq-type of IRQ_TYPE_LEVEL_LOW;Remove button->device pointer;button;Similar;0.5183971524238586
"Commit 78a5b53e9fb4 (""Input: soc_button_array - work around DSDTs which modify the irqflags"") adds a workaround for DSDTs with a _LID method which play tricks with the irqflags";assuming that the OS is using an irq-type of IRQ_TYPE_LEVEL_LOW;This patch adds temporaries to cache the acpi_device_hid(), acpi_device_name(), and acpi_device_class() pointers;so we dont have to clutter the code with so many uses of those interfaces;Similar;0.7684546113014221
"Commit 78a5b53e9fb4 (""Input: soc_button_array - work around DSDTs which modify the irqflags"") adds a workaround for DSDTs with a _LID method which play tricks with the irqflags";assuming that the OS is using an irq-type of IRQ_TYPE_LEVEL_LOW;Better to oops and learn about a bug;than to silently cover it up;Similar;0.5353904962539673
"Commit 78a5b53e9fb4 (""Input: soc_button_array - work around DSDTs which modify the irqflags"") adds a workaround for DSDTs with a _LID method which play tricks with the irqflags";assuming that the OS is using an irq-type of IRQ_TYPE_LEVEL_LOW;changes a bit of whitespace to follow Linux conventions;follow Linux conventions;Similar;0.6527999639511108
"Commit 78a5b53e9fb4 (""Input: soc_button_array - work around DSDTs which modify the irqflags"") adds a workaround for DSDTs with a _LID method which play tricks with the irqflags";assuming that the OS is using an irq-type of IRQ_TYPE_LEVEL_LOW;The presence of .notify() causes Linux/ACPI to manage event handlers and notify handlers on our behalf  ;so we dont have to install and remove them ourselves;Similar;0.5697269439697266
"Commit 78a5b53e9fb4 (""Input: soc_button_array - work around DSDTs which modify the irqflags"") adds a workaround for DSDTs with a _LID method which play tricks with the irqflags";assuming that the OS is using an irq-type of IRQ_TYPE_LEVEL_LOW;convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.6246511340141296
"Commit 78a5b53e9fb4 (""Input: soc_button_array - work around DSDTs which modify the irqflags"") adds a workaround for DSDTs with a _LID method which play tricks with the irqflags";assuming that the OS is using an irq-type of IRQ_TYPE_LEVEL_LOW;start using GPE from userspace;GPE is already disabled in interrupt context;Similar;0.554425060749054
"Commit 78a5b53e9fb4 (""Input: soc_button_array - work around DSDTs which modify the irqflags"") adds a workaround for DSDTs with a _LID method which play tricks with the irqflags";assuming that the OS is using an irq-type of IRQ_TYPE_LEVEL_LOW;Move all the component definitions for drivers to a single shared place, include/acpi/acpi_drivers.h  ;to have a single shared place;Similar;0.5447666049003601
"Commit 78a5b53e9fb4 (""Input: soc_button_array - work around DSDTs which modify the irqflags"") adds a workaround for DSDTs with a _LID method which play tricks with the irqflags";assuming that the OS is using an irq-type of IRQ_TYPE_LEVEL_LOW;"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.5648851990699768
"Commit 78a5b53e9fb4 (""Input: soc_button_array - work around DSDTs which modify the irqflags"") adds a workaround for DSDTs with a _LID method which play tricks with the irqflags";assuming that the OS is using an irq-type of IRQ_TYPE_LEVEL_LOW;Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;Similar;0.6386392116546631
"Commit 78a5b53e9fb4 (""Input: soc_button_array - work around DSDTs which modify the irqflags"") adds a workaround for DSDTs with a _LID method which play tricks with the irqflags";assuming that the OS is using an irq-type of IRQ_TYPE_LEVEL_LOW;Use proc_create()/proc_create_data() to make sure that ->proc_fops and ->data be setup;before gluing PDE to main tree;Similar;0.6048719882965088
"Commit 78a5b53e9fb4 (""Input: soc_button_array - work around DSDTs which modify the irqflags"") adds a workaround for DSDTs with a _LID method which play tricks with the irqflags";assuming that the OS is using an irq-type of IRQ_TYPE_LEVEL_LOW;Add correct ->owner to proc_fops to fix reading/module unloading race  ;fix reading/module unloading race;Similar;0.6331571340560913
"Commit 78a5b53e9fb4 (""Input: soc_button_array - work around DSDTs which modify the irqflags"") adds a workaround for DSDTs with a _LID method which play tricks with the irqflags";assuming that the OS is using an irq-type of IRQ_TYPE_LEVEL_LOW;Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;Similar;0.6099768877029419
"Commit 78a5b53e9fb4 (""Input: soc_button_array - work around DSDTs which modify the irqflags"") adds a workaround for DSDTs with a _LID method which play tricks with the irqflags";assuming that the OS is using an irq-type of IRQ_TYPE_LEVEL_LOW;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.5718368291854858
"Commit 78a5b53e9fb4 (""Input: soc_button_array - work around DSDTs which modify the irqflags"") adds a workaround for DSDTs with a _LID method which play tricks with the irqflags";assuming that the OS is using an irq-type of IRQ_TYPE_LEVEL_LOW;fix acpi_driver.name usage;fix;Similar;0.5435223579406738
"Commit 78a5b53e9fb4 (""Input: soc_button_array - work around DSDTs which modify the irqflags"") adds a workaround for DSDTs with a _LID method which play tricks with the irqflags";assuming that the OS is using an irq-type of IRQ_TYPE_LEVEL_LOW;"Make ""module name"" actually match the file name";cosmetic only;Similar;0.5070340633392334
"Commit 78a5b53e9fb4 (""Input: soc_button_array - work around DSDTs which modify the irqflags"") adds a workaround for DSDTs with a _LID method which play tricks with the irqflags";assuming that the OS is using an irq-type of IRQ_TYPE_LEVEL_LOW;restore /proc/acpi/button/ (ala 2.6.12)  ;[ACPI];Similar;0.6384347677230835
we no longer need to disable the lid functionality on the Acer SW5-012;Now that this workaround is in place;fix handling lid state changes when input device closed;-;Similar;0.5478429794311523
we no longer need to disable the lid functionality on the Acer SW5-012;Now that this workaround is in place;Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;Similar;0.5372416973114014
we no longer need to disable the lid functionality on the Acer SW5-012;Now that this workaround is in place;Remove unnecessary fall-through markings  ;when it is the case;Similar;0.6194065809249878
we no longer need to disable the lid functionality on the Acer SW5-012;Now that this workaround is in place;Delete unused proc filename macros;unused;Similar;0.5507019758224487
we no longer need to disable the lid functionality on the Acer SW5-012;Now that this workaround is in place;Drop no longer necessary Asus T200TA lid_init_state quirk;no longer necessary;Similar;0.764855146408081
we no longer need to disable the lid functionality on the Acer SW5-012;Now that this workaround is in place;drop the quirk  ;the lid_init_state=ACPI_BUTTON_LID_INIT_OPEN quirk for the Asus T200TA is no longer necessary, the lid now works properly without it;Similar;0.5670424699783325
we no longer need to disable the lid functionality on the Acer SW5-012;Now that this workaround is in place;Remove unused acpi_lid_notifier_[un]register() functions;unused;Similar;0.6323271989822388
we no longer need to disable the lid functionality on the Acer SW5-012;Now that this workaround is in place;Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;Similar;0.5697430968284607
we no longer need to disable the lid functionality on the Acer SW5-012;Now that this workaround is in place;only trigger acpi_pm_wakeup_event() in the acpi_button_notify() path and dont do that in the acpi_lid_initialize_state() path;To avoid the confusion;Similar;0.5570611953735352
we no longer need to disable the lid functionality on the Acer SW5-012;Now that this workaround is in place;making the ACPI button driver loadable as a module even if not booted in ACPI mode;to fix the asymmetry and provide the acpi_lid_open() symbol;Similar;0.5297934412956238
we no longer need to disable the lid functionality on the Acer SW5-012;Now that this workaround is in place;"The only solution is to add a DMI based blacklist and ignore the LID device on these tablets.
";There is nothing the ACPI button driver (or the gpio code) can do to fix this.;Similar;0.5406466126441956
we no longer need to disable the lid functionality on the Acer SW5-012;Now that this workaround is in place;Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);Similar;0.5404341220855713
we no longer need to disable the lid functionality on the Acer SW5-012;Now that this workaround is in place;have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;Similar;0.518527090549469
we no longer need to disable the lid functionality on the Acer SW5-012;Now that this workaround is in place;it should not send the complement switch event for the unreliable initial lid state notification;However this mechanism is not suitable for lid_init_state=open/method;Similar;0.6460071802139282
we no longer need to disable the lid functionality on the Acer SW5-012;Now that this workaround is in place;While using KEY event type, there is no such problem;no such problem;Similar;0.6437146663665771
we no longer need to disable the lid functionality on the Acer SW5-012;Now that this workaround is in place;Remove pointer to old lid_sysfs on unbind;ACPI / button;Similar;0.5973038077354431
we no longer need to disable the lid functionality on the Acer SW5-012;Now that this workaround is in place;When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;Similar;0.5359699726104736
we no longer need to disable the lid functionality on the Acer SW5-012;Now that this workaround is in place;this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;Similar;0.6307765245437622
we no longer need to disable the lid functionality on the Acer SW5-012;Now that this workaround is in place;There is no need to carry potentially outdated Free Software Foundation mailing address in file headers;since the COPYING file includes it;Similar;0.7860438823699951
we no longer need to disable the lid functionality on the Acer SW5-012;Now that this workaround is in place;"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;Similar;0.5627448558807373
we no longer need to disable the lid functionality on the Acer SW5-012;Now that this workaround is in place;removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;Similar;0.5701744556427002
we no longer need to disable the lid functionality on the Acer SW5-012;Now that this workaround is in place;This caused ACPI shutdown regression on gentoo;VirtualBox;Similar;0.5297914743423462
we no longer need to disable the lid functionality on the Acer SW5-012;Now that this workaround is in place;remove the GPE enabling code from the button driver;to avoid the problem;Similar;0.5463852286338806
we no longer need to disable the lid functionality on the Acer SW5-012;Now that this workaround is in place;Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;Similar;0.5692335963249207
we no longer need to disable the lid functionality on the Acer SW5-012;Now that this workaround is in place;<acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> should not be included directly from any files that are built for CONFIG_ACPI unset;because that generally leads to build warnings about undefined symbols in !CONFIG_ACPI builds;Similar;0.6367365717887878
we no longer need to disable the lid functionality on the Acer SW5-012;Now that this workaround is in place;Remove useless type argument of driver .remove() operation;useless;Similar;0.5617163181304932
we no longer need to disable the lid functionality on the Acer SW5-012;Now that this workaround is in place;"The second argument of ACPI driver .remove() operation is only used by the ACPI processor driver
";the value passed to that driver through it is always available from the given struct acpi_device objects removal_type field;Similar;0.5030570030212402
we no longer need to disable the lid functionality on the Acer SW5-012;Now that this workaround is in place;drop the second ACPI driver .remove() argument  ;the second ACPI driver .remove() argument is in fact useless;Similar;0.5899240970611572
we no longer need to disable the lid functionality on the Acer SW5-012;Now that this workaround is in place;add #ifdefs to prevent them from being built in that case  ;several suspend/resume functions in ACPI drivers are not used for CONFIG_PM_SLEEP unset;Similar;0.5124742388725281
we no longer need to disable the lid functionality on the Acer SW5-012;Now that this workaround is in place;remove unused procfs I/F;unused;Similar;0.6741812229156494
we no longer need to disable the lid functionality on the Acer SW5-012;Now that this workaround is in place;Remove unused ACPI button procfs interface;unused;Similar;0.6629035472869873
we no longer need to disable the lid functionality on the Acer SW5-012;Now that this workaround is in place;Avoid disabling wakeup unnecessarily on remove;-;Similar;0.6336078643798828
we no longer need to disable the lid functionality on the Acer SW5-012;Now that this workaround is in place;use standard device wakeup flags instead of the special ACPI flags for handling those devices;address this problem;Similar;0.6469783186912537
we no longer need to disable the lid functionality on the Acer SW5-012;Now that this workaround is in place;percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;Similar;0.5514022707939148
we no longer need to disable the lid functionality on the Acer SW5-012;Now that this workaround is in place;Remove the old GPE type handling entirely  ;Gets rid of various quirks, like the implicit disabling with GPE type setting;Similar;0.630129337310791
we no longer need to disable the lid functionality on the Acer SW5-012;Now that this workaround is in place;"This patch is to eliminate the above warning message
";Device PNP0C0D:00 failed to resume: error 1;Similar;0.5542129278182983
we no longer need to disable the lid functionality on the Acer SW5-012;Now that this workaround is in place;dont try to use a non-existent lid device;non-existent;Similar;0.7259554862976074
we no longer need to disable the lid functionality on the Acer SW5-012;Now that this workaround is in place;not all ACPI drivers use/want it;they should not have to #undef PREFIX to define their own;Similar;0.5054552555084229
we no longer need to disable the lid functionality on the Acer SW5-012;Now that this workaround is in place;Remove button->device pointer;button;Similar;0.5477147102355957
we no longer need to disable the lid functionality on the Acer SW5-012;Now that this workaround is in place;We no longer need a pointer from struct acpi_button back to the struct acpi_device;no longer need;Similar;0.8631794452667236
we no longer need to disable the lid functionality on the Acer SW5-012;Now that this workaround is in place;use .notify method instead of installing handler directly  ;-;Similar;0.5453933477401733
we no longer need to disable the lid functionality on the Acer SW5-012;Now that this workaround is in place;"rmmoded directories will be empty and return ""."" and "".."" -- no harm";no harm;Similar;0.7061005234718323
we no longer need to disable the lid functionality on the Acer SW5-012;Now that this workaround is in place;dont want such modular code;definitely;Similar;0.5391615629196167
we no longer need to disable the lid functionality on the Acer SW5-012;Now that this workaround is in place;use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Similar;0.6364082098007202
we no longer need to disable the lid functionality on the Acer SW5-012;Now that this workaround is in place;get rid of input BIT* duplicate defines;duplicate;Similar;0.5893747806549072
we no longer need to disable the lid functionality on the Acer SW5-012;Now that this workaround is in place;Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;Similar;0.6533315181732178
we no longer need to disable the lid functionality on the Acer SW5-012;Now that this workaround is in place;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.5847045183181763
we no longer need to disable the lid functionality on the Acer SW5-012;Now that this workaround is in place;remove unnecessary casts and variable initializations, clean up formatting;unnecessary;Similar;0.5656872987747192
we no longer need to disable the lid functionality on the Acer SW5-012;Now that this workaround is in place;Remove unneeded acpi_handle from driver;unneeded;Similar;0.602715790271759
we no longer need to disable the lid functionality on the Acer SW5-012;Now that this workaround is in place;Use acpi_devices handle instead of drivers  ;-;Similar;0.6392992734909058
we no longer need to disable the lid functionality on the Acer SW5-012;Now that this workaround is in place;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.5340844392776489
we no longer need to disable the lid functionality on the Acer SW5-012;Now that this workaround is in place;restore /proc/acpi/button/ (ala 2.6.12)  ;[ACPI];Similar;0.505698025226593
fix handling lid state changes when input device closed;-;Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;Similar;0.7230042815208435
fix handling lid state changes when input device closed;-;Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];Similar;0.6222825050354004
fix handling lid state changes when input device closed;-;Remove unnecessary fall-through markings  ;when it is the case;Similar;0.6678352355957031
fix handling lid state changes when input device closed;-;Delete unused proc filename macros;unused;Similar;0.6920529007911682
fix handling lid state changes when input device closed;-;Drop no longer necessary Asus T200TA lid_init_state quirk;no longer necessary;Similar;0.6798450946807861
fix handling lid state changes when input device closed;-;drop the quirk  ;the lid_init_state=ACPI_BUTTON_LID_INIT_OPEN quirk for the Asus T200TA is no longer necessary, the lid now works properly without it;Similar;0.6422942876815796
fix handling lid state changes when input device closed;-;"Fixes: 17e5888e4e18 (""x86: Select HARDIRQS_SW_RESEND on x86"")";"(""x86: Select HARDIRQS_SW_RESEND on x86"")";Similar;0.601445198059082
fix handling lid state changes when input device closed;-;"
The problem here is the accesses to the PBCG and HMCG
";"
these are the pinconf0 registers for the power";Similar;0.5537772178649902
fix handling lid state changes when input device closed;-;This commit adds a quirk for this;as no lid-switch function is better then the interrupt storm;Similar;0.5097973346710205
fix handling lid state changes when input device closed;-;Remove unused acpi_lid_notifier_[un]register() functions;unused;Similar;0.7153408527374268
fix handling lid state changes when input device closed;-;Setting lid_init_state to ACPI_BUTTON_LID_INIT_OPEN on the T200TA  ;fixes the unwanted behavior, adds a DMI based quirk;Similar;0.6144810914993286
fix handling lid state changes when input device closed;-; the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;Similar;0.6725648641586304
fix handling lid state changes when input device closed;-;Turn lid_blacklst DMI table into a generic quirk table;ACPI: button;Similar;0.5306044816970825
fix handling lid state changes when input device closed;-;"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;Similar;0.6731021404266357
fix handling lid state changes when input device closed;-;re-using the existing option;keeps things simple and it will make it much easier to add DMI quirks which can either disable the LID completely or set another non-default lid_init_state value, both of which are necessary on some devices;Similar;0.5759035348892212
fix handling lid state changes when input device closed;-;[ an action or a change that has been made, including a description of the patch behaviour ];[ the reason for a decision or value judgment ];Similar;0.6542811393737793
fix handling lid state changes when input device closed;-;update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;Similar;0.5737911462783813
fix handling lid state changes when input device closed;-;Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;Similar;0.7828636169433594
fix handling lid state changes when input device closed;-;Fix a build warning in the ACPI button driver when CONFIG_PROC_FS is not enabled by marking the unused function as __maybe_unused;not enabled, unused;Similar;0.6300708055496216
fix handling lid state changes when input device closed;-;only trigger acpi_pm_wakeup_event() in the acpi_button_notify() path and dont do that in the acpi_lid_initialize_state() path;To avoid the confusion;Similar;0.5220641493797302
fix handling lid state changes when input device closed;-;Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;Similar;0.5739463567733765
fix handling lid state changes when input device closed;-;making the ACPI button driver loadable as a module even if not booted in ACPI mode;to fix the asymmetry and provide the acpi_lid_open() symbol;Similar;0.5187668204307556
fix handling lid state changes when input device closed;-;evemu-record after noticing a spurious suspend is too late to detect;a LID closed event is the (probable) cause of this;Similar;0.5062419772148132
fix handling lid state changes when input device closed;-;adds an acpi_handle_debug call  ;to help debugging this;Similar;0.6720766425132751
fix handling lid state changes when input device closed;-;Fix function prototypes for module_param_call();-;Similar;0.6716163158416748
fix handling lid state changes when input device closed;-;fix whitespace in pr_fmt() to align log entries;align log entries;Similar;0.6733754873275757
fix handling lid state changes when input device closed;-;libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;Similar;0.6936274766921997
fix handling lid state changes when input device closed;-;assume the user will use the internal keyboard before this timeout expires;logind only checks the lid switch value after a timeout;Similar;0.6443748474121094
fix handling lid state changes when input device closed;-;"userspace requires to see ""close"" event after the system is resumed";so that it can determine whether the internal display should remain dark and the external display should be lit on;Similar;0.7377289533615112
fix handling lid state changes when input device closed;-;Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;Similar;0.7203887104988098
fix handling lid state changes when input device closed;-;Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);Similar;0.727480947971344
fix handling lid state changes when input device closed;-;This patch makes it deprecated;lid_init__state=open is more useful than this mode;Similar;0.5964336395263672
fix handling lid state changes when input device closed;-;have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;Similar;0.7315808534622192
fix handling lid state changes when input device closed;-;This patch adds a mechanism to insert lid events as a compensation for the platform triggered ones to form a complete event switches  ;in order to make sure that the platform triggered events can always be reliably delivered to the userspace;Similar;0.6307172775268555
fix handling lid state changes when input device closed;-;it should not send the complement switch event for the unreliable initial lid state notification;However this mechanism is not suitable for lid_init_state=open/method;Similar;0.5546934008598328
fix handling lid state changes when input device closed;-;Use key event type to implement ACPI lid events;Another approach;Similar;0.6115003228187561
fix handling lid state changes when input device closed;-;Remove pointer to old lid_sysfs on unbind;ACPI / button;Similar;0.76249098777771
fix handling lid state changes when input device closed;-;When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;Similar;0.7489135265350342
fix handling lid state changes when input device closed;-;Correct a wrong macro usage;This patch simplies the code by merging some redundant code;Similar;0.5718048214912415
fix handling lid state changes when input device closed;-;this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;Similar;0.7932030558586121
fix handling lid state changes when input device closed;-;"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;Similar;0.721519410610199
fix handling lid state changes when input device closed;-;Add ACPI Button event via netlink routine;-;Similar;0.5873894691467285
fix handling lid state changes when input device closed;-;removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;Similar;0.6955217123031616
fix handling lid state changes when input device closed;-;This caused ACPI shutdown regression on gentoo;VirtualBox;Similar;0.7315198183059692
fix handling lid state changes when input device closed;-;add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;Similar;0.6197367906570435
fix handling lid state changes when input device closed;-;fix button driver compile error when CONFIG_PM_SLEEP is undefined;CONFIG_PM_SLEEP is undefined;Similar;0.7065136432647705
fix handling lid state changes when input device closed;-;compile error;CONFIG_PM_SLEEP is undefined;Similar;0.6499109268188477
fix handling lid state changes when input device closed;-;Fix enabling button GPEs twice;Fix;Similar;0.5719176530838013
fix handling lid state changes when input device closed;-;Button GPEs have been enabled in the acpi_wake_device_init() during boot;the button driver enables them for the second time;Similar;0.5917863845825195
fix handling lid state changes when input device closed;-;remove the GPE enabling code from the button driver;to avoid the problem;Similar;0.6874606609344482
fix handling lid state changes when input device closed;-;Clean up inclusions of ACPI header files;ACPI;Similar;0.6577966809272766
fix handling lid state changes when input device closed;-;Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;Similar;0.6740987300872803
fix handling lid state changes when input device closed;-;<acpi/acpi_bus.h> be included prior to <acpi/acpi_drivers.h>;so that the acpi_pci_root declarations the latter depends on are always there;Similar;0.5092724561691284
fix handling lid state changes when input device closed;-;Use the patch to replace the origin code;provide a better solution;Similar;0.6545311212539673
fix handling lid state changes when input device closed;-;Remove useless type argument of driver .remove() operation;useless;Similar;0.6150631308555603
fix handling lid state changes when input device closed;-;drop the second ACPI driver .remove() argument  ;the second ACPI driver .remove() argument is in fact useless;Similar;0.6554677486419678
fix handling lid state changes when input device closed;-;Fix unused function warnings for CONFIG_PM_SLEEP;unused function warnings;Similar;0.6950922608375549
fix handling lid state changes when input device closed;-;add #ifdefs to prevent them from being built in that case  ;several suspend/resume functions in ACPI drivers are not used for CONFIG_PM_SLEEP unset;Similar;0.5644037127494812
fix handling lid state changes when input device closed;-;remove unused procfs I/F;unused;Similar;0.6625686883926392
fix handling lid state changes when input device closed;-;Remove unused ACPI button procfs interface;unused;Similar;0.7151575088500977
fix handling lid state changes when input device closed;-;Avoid disabling wakeup unnecessarily on remove;-;Similar;0.5673540830612183
fix handling lid state changes when input device closed;-;Use device wakeup flags for handling ACPI wakeup devices;for handling ACPI wakeup devices;Similar;0.5856819152832031
fix handling lid state changes when input device closed;-;use standard device wakeup flags instead of the special ACPI flags for handling those devices;address this problem;Similar;0.5653268694877625
fix handling lid state changes when input device closed;-;Use GPE reference counting to support shared GPEs  ;the wakeup enable mask bits of GPEs are set as soon as the GPEs are enabled to wake up the system;Similar;0.532788872718811
fix handling lid state changes when input device closed;-;it is sufficient to set/unset the wakeup mask bits for them during system sleep transitions;"this means that the reference counting of ""wakeup"" GPEs doesnt really make sense";Similar;0.5581386089324951
fix handling lid state changes when input device closed;-;This will allow us to simplify the GPE handling code quite a bit;that change is too intrusive for 2.6.35;Similar;0.5672025680541992
fix handling lid state changes when input device closed;-;Update gfp.h and slab.h includes  ;prepare for breaking implicit slab.h inclusion from percpu.h;Similar;0.545375406742096
fix handling lid state changes when input device closed;-;Prepare for this change by updating users of gfp and slab facilities;include those headers directly instead of assuming availability;Similar;0.5100644826889038
fix handling lid state changes when input device closed;-;the following script is used as the basis of conversion;As this conversion needs to touch a large number of source files;Similar;0.575681746006012
fix handling lid state changes when input device closed;-;prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;Similar;0.6332333087921143
fix handling lid state changes when input device closed;-;The script was run again  ;to make sure no file was left behind;Similar;0.540961503982544
fix handling lid state changes when input device closed;-;description of the patch behaviour;an action or a change;Similar;0.57697594165802
fix handling lid state changes when input device closed;-;failures were fixed;Build tests were done on the following configurations;Similar;0.6410830616950989
fix handling lid state changes when input device closed;-;percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;Similar;0.7057798504829407
fix handling lid state changes when input device closed;-;Introduce a reference counter for run-wake devices and a function that will initialize all of the run-time wake-up fields for given device.;-;Similar;0.5028361082077026
fix handling lid state changes when input device closed;-;Add an API to allow devices to indicate whether or not they want their devices GPE to be enabled for both runtime and wakeup events;to allow devices to indicate whether or not they want their devices GPE to be enabled;Similar;0.5274935364723206
fix handling lid state changes when input device closed;-;Remove the old GPE type handling entirely  ;Gets rid of various quirks, like the implicit disabling with GPE type setting;Similar;0.5967663526535034
fix handling lid state changes when input device closed;-;complain the following warning message;"will

";Similar;0.5274362564086914
fix handling lid state changes when input device closed;-;"This patch is to eliminate the above warning message
";Device PNP0C0D:00 failed to resume: error 1;Similar;0.6282515525817871
fix handling lid state changes when input device closed;-;return -ENODEV;theres no lid device present;Similar;0.503746509552002
fix handling lid state changes when input device closed;-;Some drivers need to know when a lid event occurs and get the current status;-;Similar;0.6138184070587158
fix handling lid state changes when input device closed;-;whitespace fix  ;This does not change any actual console output;Similar;0.6737021803855896
fix handling lid state changes when input device closed;-;we could install either a fixed event handler or a notify handler, but the Linux/ACPI code now handles that for us;We previously needed that so we dont need to worry about it;Similar;0.5543593168258667
fix handling lid state changes when input device closed;-;type: Power Button;I dont think theres anything meaningful user-space can do by knowing whether a button is a control method or a fixed hardware button;Similar;0.5000078678131104
fix handling lid state changes when input device closed;-;Remove button->device pointer;button;Similar;0.7508223056793213
fix handling lid state changes when input device closed;-;We no longer need a pointer from struct acpi_button back to the struct acpi_device;no longer need;Similar;0.6260114908218384
fix handling lid state changes when input device closed;-;This patch adds temporaries to cache the acpi_device_hid(), acpi_device_name(), and acpi_device_class() pointers;so we dont have to clutter the code with so many uses of those interfaces;Similar;0.5685223340988159
fix handling lid state changes when input device closed;-;Better to oops and learn about a bug;than to silently cover it up;Similar;0.5230947732925415
fix handling lid state changes when input device closed;-;changes a bit of whitespace to follow Linux conventions;follow Linux conventions;Similar;0.66522216796875
fix handling lid state changes when input device closed;-;use .notify method instead of installing handler directly  ;-;Similar;0.5692659616470337
fix handling lid state changes when input device closed;-;convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.6787923574447632
fix handling lid state changes when input device closed;-;"proc_fops is declared as ""const""";should give some thoughts;Similar;0.5757256746292114
fix handling lid state changes when input device closed;-;start using GPE from userspace;GPE is already disabled in interrupt context;Similar;0.5136797428131104
fix handling lid state changes when input device closed;-;"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.765286386013031
fix handling lid state changes when input device closed;-;Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;Similar;0.573986828327179
fix handling lid state changes when input device closed;-;use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Similar;0.5856456756591797
fix handling lid state changes when input device closed;-;get rid of input BIT* duplicate defines;duplicate;Similar;0.6979490518569946
fix handling lid state changes when input device closed;-;Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;Similar;0.6031818389892578
fix handling lid state changes when input device closed;-;Define the macro temporarily in a local manner;all those local definitions will be removed further in this patchset (to not break bisecting);Similar;0.6470991373062134
fix handling lid state changes when input device closed;-;Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;Similar;0.5739359855651855
fix handling lid state changes when input device closed;-;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.7230018377304077
fix handling lid state changes when input device closed;-;fix acpi_driver.name usage;fix;Similar;0.6010820865631104
fix handling lid state changes when input device closed;-;"Make ""module name"" actually match the file name";cosmetic only;Similar;0.5324674844741821
fix handling lid state changes when input device closed;-;"Invoke with ; as leaving it off confuses Lindent  ";gcc doesnt care;Similar;0.6019153594970703
fix handling lid state changes when input device closed;-;Fix indentation where Lindent did get confused  ;Lindent did get confused;Similar;0.708381175994873
fix handling lid state changes when input device closed;-;remove unnecessary casts and variable initializations, clean up formatting;unnecessary;Similar;0.6909562349319458
fix handling lid state changes when input device closed;-;Remove unneeded acpi_handle from driver;unneeded;Similar;0.6755474805831909
fix handling lid state changes when input device closed;-;Use acpi_devices handle instead of drivers  ;-;Similar;0.5934488773345947
fix handling lid state changes when input device closed;-;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.6385701894760132
fix handling lid state changes when input device closed;-;restore /proc/acpi/button/ (ala 2.6.12)  ;[ACPI];Similar;0.5704027414321899
fix handling lid state changes when input device closed;-;"Create a separate ""historical"" git archive";about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated;Similar;0.5696347951889038
Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;Remove unnecessary fall-through markings  ;when it is the case;Similar;0.5753474235534668
Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;Delete unused proc filename macros;unused;Similar;0.5258068442344666
Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;Drop no longer necessary Asus T200TA lid_init_state quirk;no longer necessary;Similar;0.5938311815261841
Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;"Fixes: 17e5888e4e18 (""x86: Select HARDIRQS_SW_RESEND on x86"")";"(""x86: Select HARDIRQS_SW_RESEND on x86"")";Similar;0.514621913433075
Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;Remove unused acpi_lid_notifier_[un]register() functions;unused;Similar;0.5869172811508179
Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device; the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;Similar;0.531800389289856
Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;re-using the existing option;keeps things simple and it will make it much easier to add DMI quirks which can either disable the LID completely or set another non-default lid_init_state value, both of which are necessary on some devices;Similar;0.545886754989624
Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;[ an action or a change that has been made, including a description of the patch behaviour ];[ the reason for a decision or value judgment ];Similar;0.5376080870628357
Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;Similar;0.6224123239517212
Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;Similar;0.6553533673286438
Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;Fix a build warning in the ACPI button driver when CONFIG_PROC_FS is not enabled by marking the unused function as __maybe_unused;not enabled, unused;Similar;0.5414203405380249
Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;Increment wakeup count only when notified;-;Similar;0.5897922515869141
Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;only trigger acpi_pm_wakeup_event() in the acpi_button_notify() path and dont do that in the acpi_lid_initialize_state() path;To avoid the confusion;Similar;0.6456493139266968
Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;Similar;0.5350227952003479
Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;making the ACPI button driver loadable as a module even if not booted in ACPI mode;to fix the asymmetry and provide the acpi_lid_open() symbol;Similar;0.7237148284912109
Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;evemu-record after noticing a spurious suspend is too late to detect;a LID closed event is the (probable) cause of this;Similar;0.5743435025215149
Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;adds an acpi_handle_debug call  ;to help debugging this;Similar;0.5262585282325745
Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;Fix function prototypes for module_param_call();-;Similar;0.5374292135238647
Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;fix whitespace in pr_fmt() to align log entries;align log entries;Similar;0.5786780118942261
Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;Similar;0.585540771484375
Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;assume the user will use the internal keyboard before this timeout expires;logind only checks the lid switch value after a timeout;Similar;0.6929471492767334
Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;"userspace requires to see ""close"" event after the system is resumed";so that it can determine whether the internal display should remain dark and the external display should be lit on;Similar;0.765506386756897
Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;Similar;0.5506249666213989
Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);Similar;0.5769688487052917
Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;Similar;0.5196130275726318
Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;This patch adds a mechanism to insert lid events as a compensation for the platform triggered ones to form a complete event switches  ;in order to make sure that the platform triggered events can always be reliably delivered to the userspace;Similar;0.5379786491394043
Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;it should not send the complement switch event for the unreliable initial lid state notification;However this mechanism is not suitable for lid_init_state=open/method;Similar;0.5562719106674194
Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;Use key event type to implement ACPI lid events;Another approach;Similar;0.515832245349884
Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;While using KEY event type, there is no such problem;no such problem;Similar;0.5040836930274963
Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;Remove pointer to old lid_sysfs on unbind;ACPI / button;Similar;0.642027735710144
Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;Similar;0.6439409255981445
Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;Similar;0.6362271308898926
Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;Similar;0.6470850110054016
Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;Add ACPI Button event via netlink routine;-;Similar;0.5172631740570068
Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;Similar;0.5407359600067139
Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;This caused ACPI shutdown regression on gentoo;VirtualBox;Similar;0.6312634348869324
Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;Similar;0.5729236602783203
Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;fix button driver compile error when CONFIG_PM_SLEEP is undefined;CONFIG_PM_SLEEP is undefined;Similar;0.5919917225837708
Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;compile error;CONFIG_PM_SLEEP is undefined;Similar;0.5016366243362427
Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;Fix enabling button GPEs twice;Fix;Similar;0.5543437004089355
Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;Button GPEs have been enabled in the acpi_wake_device_init() during boot;the button driver enables them for the second time;Similar;0.5196810960769653
Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;remove the GPE enabling code from the button driver;to avoid the problem;Similar;0.5312495231628418
Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;Clean up inclusions of ACPI header files;ACPI;Similar;0.5623255968093872
Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;Similar;0.5775298476219177
Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;<acpi/acpi_bus.h> be included prior to <acpi/acpi_drivers.h>;so that the acpi_pci_root declarations the latter depends on are always there;Similar;0.5226353406906128
Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;Use the patch to replace the origin code;provide a better solution;Similar;0.5349480509757996
Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;Remove useless type argument of driver .remove() operation;useless;Similar;0.5351321697235107
Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;drop the second ACPI driver .remove() argument  ;the second ACPI driver .remove() argument is in fact useless;Similar;0.5096851587295532
Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;Fix unused function warnings for CONFIG_PM_SLEEP;unused function warnings;Similar;0.6206795573234558
Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;add #ifdefs to prevent them from being built in that case  ;several suspend/resume functions in ACPI drivers are not used for CONFIG_PM_SLEEP unset;Similar;0.6293505430221558
Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;remove unused procfs I/F;unused;Similar;0.5969269871711731
Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;Remove unused ACPI button procfs interface;unused;Similar;0.5666597485542297
Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;Avoid disabling wakeup unnecessarily on remove;-;Similar;0.5291049480438232
Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;Use GPE reference counting to support shared GPEs  ;the wakeup enable mask bits of GPEs are set as soon as the GPEs are enabled to wake up the system;Similar;0.5069079399108887
Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;it is sufficient to set/unset the wakeup mask bits for them during system sleep transitions;"this means that the reference counting of ""wakeup"" GPEs doesnt really make sense";Similar;0.6307028532028198
Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;Update gfp.h and slab.h includes  ;prepare for breaking implicit slab.h inclusion from percpu.h;Similar;0.5009338855743408
Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;Similar;0.5306570529937744
Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;The script was run again  ;to make sure no file was left behind;Similar;0.5072141885757446
Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;failures were fixed;Build tests were done on the following configurations;Similar;0.6613823175430298
Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;CONFIG_GCOV_KERNEL was turned off for all tests and a few more options had to be turned off depending on archs to make things build;my distributed build env didnt work with gcov compiles, like ipr on powerpc/64 which failed due to missing writeq;Similar;0.5176950097084045
Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;Similar;0.5341380834579468
Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;Introduce a new wake-up flag, always_enabled, for marking devices that should be permanently enabled to generate run-time events  ;devices that should be permanently enabled to generate run-time events;Similar;0.6103520393371582
Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;Introduce a reference counter for run-wake devices and a function that will initialize all of the run-time wake-up fields for given device.;-;Similar;0.5412156581878662
Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;Add an API to allow devices to indicate whether or not they want their devices GPE to be enabled for both runtime and wakeup events;to allow devices to indicate whether or not they want their devices GPE to be enabled;Similar;0.5599097013473511
Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;Remove the old GPE type handling entirely  ;Gets rid of various quirks, like the implicit disabling with GPE type setting;Similar;0.5723464488983154
Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;complain the following warning message;"will

";Similar;0.5022228956222534
Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;"This patch is to eliminate the above warning message
";Device PNP0C0D:00 failed to resume: error 1;Similar;0.6346846222877502
Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;Some drivers need to know when a lid event occurs and get the current status;-;Similar;0.5170109272003174
Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;whitespace fix  ;This does not change any actual console output;Similar;0.5648523569107056
Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;we could install either a fixed event handler or a notify handler, but the Linux/ACPI code now handles that for us;We previously needed that so we dont need to worry about it;Similar;0.5294564962387085
Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;Remove button->device pointer;button;Similar;0.5799949765205383
Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;We no longer need a pointer from struct acpi_button back to the struct acpi_device;no longer need;Similar;0.6235425472259521
Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;This patch adds temporaries to cache the acpi_device_hid(), acpi_device_name(), and acpi_device_class() pointers;so we dont have to clutter the code with so many uses of those interfaces;Similar;0.5022011995315552
Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;changes a bit of whitespace to follow Linux conventions;follow Linux conventions;Similar;0.5020589828491211
Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;use .notify method instead of installing handler directly  ;-;Similar;0.5315731763839722
Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;The presence of .notify() causes Linux/ACPI to manage event handlers and notify handlers on our behalf  ;so we dont have to install and remove them ourselves;Similar;0.5009812712669373
Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.5757312774658203
Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;Setting ->owner as done currently (pde->owner = THIS_MODULE) is racy;as correctly noted at bug #12454;Similar;0.5298401713371277
Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;"proc_fops is declared as ""const""";should give some thoughts;Similar;0.5271095633506775
Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;"rmmoded directories will be empty and return ""."" and "".."" -- no harm";no harm;Similar;0.6521245241165161
Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;Move all the component definitions for drivers to a single shared place, include/acpi/acpi_drivers.h  ;to have a single shared place;Similar;0.5209894180297852
Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.6777706146240234
Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Similar;0.5547031164169312
Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;Use proc_create()/proc_create_data() to make sure that ->proc_fops and ->data be setup;before gluing PDE to main tree;Similar;0.5036616325378418
Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;get rid of input BIT* duplicate defines;duplicate;Similar;0.5856783390045166
Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;Similar;0.5521311163902283
Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;Define the macro temporarily in a local manner;all those local definitions will be removed further in this patchset (to not break bisecting);Similar;0.5314338207244873
Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;Similar;0.5193081498146057
Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.6453421115875244
Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;fix acpi_driver.name usage;fix;Similar;0.5112428069114685
Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;"Make ""module name"" actually match the file name";cosmetic only;Similar;0.5560941696166992
Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;"Invoke with ; as leaving it off confuses Lindent  ";gcc doesnt care;Similar;0.5098599195480347
Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;remove unnecessary casts and variable initializations, clean up formatting;unnecessary;Similar;0.6168493032455444
Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;Remove unneeded acpi_handle from driver;unneeded;Similar;0.5633299350738525
Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.5929014682769775
Lets ensure that state updates happen even if userspace closed (or in the future inhibited) input device;state updates happen even if userspace closed (or in the future inhibited) input device;restore /proc/acpi/button/ (ala 2.6.12)  ;[ACPI];Similar;0.5134323835372925
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];Remove unnecessary fall-through markings  ;when it is the case;Similar;0.5565335750579834
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];Delete unused proc filename macros;unused;Similar;0.7051965594291687
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];Drop no longer necessary Asus T200TA lid_init_state quirk;no longer necessary;Similar;0.5621470212936401
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];drop the quirk  ;the lid_init_state=ACPI_BUTTON_LID_INIT_OPEN quirk for the Asus T200TA is no longer necessary, the lid now works properly without it;Similar;0.5288993120193481
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];"Fixes: 17e5888e4e18 (""x86: Select HARDIRQS_SW_RESEND on x86"")";"(""x86: Select HARDIRQS_SW_RESEND on x86"")";Similar;0.6380926370620728
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];adds the BYT_TRIG_LVL flag to this;so now it is turned into a level interrupt which fires both when low and high, iow it simply always fires leading to an interrupt storm, the tablet immediately waking up from suspend again, etc;Similar;0.6258172392845154
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];Remove unused acpi_lid_notifier_[un]register() functions;unused;Similar;0.6835314035415649
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];Setting lid_init_state to ACPI_BUTTON_LID_INIT_OPEN on the T200TA  ;fixes the unwanted behavior, adds a DMI based quirk;Similar;0.5276405811309814
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1]; the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;Similar;0.5623589754104614
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];Turn lid_blacklst DMI table into a generic quirk table;ACPI: button;Similar;0.6040854454040527
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;Similar;0.756775975227356
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];re-using the existing option;keeps things simple and it will make it much easier to add DMI quirks which can either disable the LID completely or set another non-default lid_init_state value, both of which are necessary on some devices;Similar;0.5749657154083252
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];[ an action or a change that has been made, including a description of the patch behaviour ];[ the reason for a decision or value judgment ];Similar;0.5779987573623657
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;Similar;0.6148838400840759
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;Similar;0.6038129329681396
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];Fix a build warning in the ACPI button driver when CONFIG_PROC_FS is not enabled by marking the unused function as __maybe_unused;not enabled, unused;Similar;0.618147611618042
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];only trigger acpi_pm_wakeup_event() in the acpi_button_notify() path and dont do that in the acpi_lid_initialize_state() path;To avoid the confusion;Similar;0.5015894174575806
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;Similar;0.6749134659767151
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];adds an acpi_handle_debug call  ;to help debugging this;Similar;0.7124687433242798
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];Fix function prototypes for module_param_call();-;Similar;0.6508044600486755
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];fix whitespace in pr_fmt() to align log entries;align log entries;Similar;0.6502844095230103
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];It breaks docking stations basically;there is no way to have a user-space hwdb to fix that;Similar;0.5235599279403687
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;Similar;0.6581908464431763
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];"userspace requires to see ""close"" event after the system is resumed";so that it can determine whether the internal display should remain dark and the external display should be lit on;Similar;0.5113587975502014
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;Similar;0.6584334373474121
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);Similar;0.6541010141372681
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];This patch makes it deprecated;lid_init__state=open is more useful than this mode;Similar;0.5011507272720337
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;Similar;0.7381930351257324
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];This patch adds a mechanism to insert lid events as a compensation for the platform triggered ones to form a complete event switches  ;in order to make sure that the platform triggered events can always be reliably delivered to the userspace;Similar;0.6685113906860352
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];Remove pointer to old lid_sysfs on unbind;ACPI / button;Similar;0.7081022262573242
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;Similar;0.6740484237670898
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];Correct a wrong macro usage;This patch simplies the code by merging some redundant code;Similar;0.5349286198616028
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;Similar;0.6070288419723511
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;Similar;0.6105122566223145
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];Add ACPI Button event via netlink routine;-;Similar;0.6456578969955444
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;Similar;0.7222480773925781
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];This caused ACPI shutdown regression on gentoo;VirtualBox;Similar;0.618927538394928
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;Similar;0.7056980133056641
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];fix button driver compile error when CONFIG_PM_SLEEP is undefined;CONFIG_PM_SLEEP is undefined;Similar;0.6413308382034302
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];compile error;CONFIG_PM_SLEEP is undefined;Similar;0.5510362386703491
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];Fix enabling button GPEs twice;Fix;Similar;0.5982744097709656
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];Button GPEs have been enabled in the acpi_wake_device_init() during boot;the button driver enables them for the second time;Similar;0.5994974970817566
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];remove the GPE enabling code from the button driver;to avoid the problem;Similar;0.6863254308700562
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];Clean up inclusions of ACPI header files;ACPI;Similar;0.6035019159317017
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;Similar;0.7054527401924133
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];<acpi/acpi_bus.h> be included prior to <acpi/acpi_drivers.h>;so that the acpi_pci_root declarations the latter depends on are always there;Similar;0.528407871723175
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];Use the patch to replace the origin code;provide a better solution;Similar;0.7049587965011597
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];Remove useless type argument of driver .remove() operation;useless;Similar;0.5869655013084412
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];"The second argument of ACPI driver .remove() operation is only used by the ACPI processor driver
";the value passed to that driver through it is always available from the given struct acpi_device objects removal_type field;Similar;0.5395461320877075
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];drop the second ACPI driver .remove() argument  ;the second ACPI driver .remove() argument is in fact useless;Similar;0.6749513745307922
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];Fix unused function warnings for CONFIG_PM_SLEEP;unused function warnings;Similar;0.5863152742385864
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];remove unused procfs I/F;unused;Similar;0.6473801136016846
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];Remove unused ACPI button procfs interface;unused;Similar;0.6716606020927429
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];use standard device wakeup flags instead of the special ACPI flags for handling those devices;address this problem;Similar;0.5125925540924072
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];Update gfp.h and slab.h includes  ;prepare for breaking implicit slab.h inclusion from percpu.h;Similar;0.6103495359420776
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];Prepare for this change by updating users of gfp and slab facilities;include those headers directly instead of assuming availability;Similar;0.5624580383300781
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];the following script is used as the basis of conversion;As this conversion needs to touch a large number of source files;Similar;0.5750857591629028
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];put the new include  ;its order conforms to its surrounding;Similar;0.5172607898712158
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;Similar;0.6597332954406738
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];The script was run again  ;to make sure no file was left behind;Similar;0.5901488661766052
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];CONFIG_GCOV_KERNEL was turned off for all tests and a few more options had to be turned off depending on archs to make things build;my distributed build env didnt work with gcov compiles, like ipr on powerpc/64 which failed due to missing writeq;Similar;0.5569435358047485
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;Similar;0.6879392862319946
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];Introduce a new wake-up flag, always_enabled, for marking devices that should be permanently enabled to generate run-time events  ;devices that should be permanently enabled to generate run-time events;Similar;0.549062967300415
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];Introduce a reference counter for run-wake devices and a function that will initialize all of the run-time wake-up fields for given device.;-;Similar;0.5886395573616028
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];Add an API to allow devices to indicate whether or not they want their devices GPE to be enabled for both runtime and wakeup events;to allow devices to indicate whether or not they want their devices GPE to be enabled;Similar;0.5322397351264954
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];Remove the old GPE type handling entirely  ;Gets rid of various quirks, like the implicit disabling with GPE type setting;Similar;0.59089595079422
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];complain the following warning message;"will

";Similar;0.5215503573417664
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];"This patch is to eliminate the above warning message
";Device PNP0C0D:00 failed to resume: error 1;Similar;0.5786548852920532
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];whitespace fix  ;This does not change any actual console output;Similar;0.5603066086769104
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];we could install either a fixed event handler or a notify handler, but the Linux/ACPI code now handles that for us;We previously needed that so we dont need to worry about it;Similar;0.6035134792327881
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];Remove button->device pointer;button;Similar;0.6723606586456299
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];We no longer need a pointer from struct acpi_button back to the struct acpi_device;no longer need;Similar;0.522060751914978
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];This patch adds temporaries to cache the acpi_device_hid(), acpi_device_name(), and acpi_device_class() pointers;so we dont have to clutter the code with so many uses of those interfaces;Similar;0.7239086627960205
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];Better to oops and learn about a bug;than to silently cover it up;Similar;0.5084472894668579
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];changes a bit of whitespace to follow Linux conventions;follow Linux conventions;Similar;0.6523272395133972
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];use .notify method instead of installing handler directly  ;-;Similar;0.5834681987762451
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];The presence of .notify() causes Linux/ACPI to manage event handlers and notify handlers on our behalf  ;so we dont have to install and remove them ourselves;Similar;0.5004459619522095
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.6940885782241821
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];"proc_fops is declared as ""const""";should give some thoughts;Similar;0.5157361030578613
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];start using GPE from userspace;GPE is already disabled in interrupt context;Similar;0.5481222867965698
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];Move all the component definitions for drivers to a single shared place, include/acpi/acpi_drivers.h  ;to have a single shared place;Similar;0.5886275768280029
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.6391544342041016
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;Similar;0.6897969245910645
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Similar;0.536430299282074
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];Add correct ->owner to proc_fops to fix reading/module unloading race  ;fix reading/module unloading race;Similar;0.5388375520706177
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];get rid of input BIT* duplicate defines;duplicate;Similar;0.6735172271728516
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;Similar;0.6711052656173706
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];Define the macro temporarily in a local manner;all those local definitions will be removed further in this patchset (to not break bisecting);Similar;0.5521285533905029
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;Similar;0.6688774228096008
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.7697102427482605
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];fix acpi_driver.name usage;fix;Similar;0.6060577630996704
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];Fix indentation where Lindent did get confused  ;Lindent did get confused;Similar;0.5607784986495972
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];remove unnecessary casts and variable initializations, clean up formatting;unnecessary;Similar;0.6284199357032776
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];Remove unneeded acpi_handle from driver;unneeded;Similar;0.5864765048027039
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];Use acpi_devices handle instead of drivers  ;-;Similar;0.5201117992401123
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.6232755780220032
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];restore /proc/acpi/button/ (ala 2.6.12)  ;[ACPI];Similar;0.5935471057891846
Replace the existing /* fall through */ comments and its variants with the new pseudo-keyword macro fallthrough;[1];"Create a separate ""historical"" git archive";about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated;Similar;0.622636079788208
Remove unnecessary fall-through markings  ;when it is the case;Delete unused proc filename macros;unused;Similar;0.5874149203300476
Remove unnecessary fall-through markings  ;when it is the case;Drop no longer necessary Asus T200TA lid_init_state quirk;no longer necessary;Similar;0.7635619640350342
Remove unnecessary fall-through markings  ;when it is the case;drop the quirk  ;the lid_init_state=ACPI_BUTTON_LID_INIT_OPEN quirk for the Asus T200TA is no longer necessary, the lid now works properly without it;Similar;0.7775020599365234
Remove unnecessary fall-through markings  ;when it is the case;This commit adds a quirk for this;as no lid-switch function is better then the interrupt storm;Similar;0.6201484203338623
Remove unnecessary fall-through markings  ;when it is the case;Remove unused acpi_lid_notifier_[un]register() functions;unused;Similar;0.6810274720191956
Remove unnecessary fall-through markings  ;when it is the case;"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;Similar;0.5015155673027039
Remove unnecessary fall-through markings  ;when it is the case;re-using the existing option;keeps things simple and it will make it much easier to add DMI quirks which can either disable the LID completely or set another non-default lid_init_state value, both of which are necessary on some devices;Similar;0.6164596080780029
Remove unnecessary fall-through markings  ;when it is the case;[ an action or a change that has been made, including a description of the patch behaviour ];[ the reason for a decision or value judgment ];Similar;0.6054424047470093
Remove unnecessary fall-through markings  ;when it is the case;Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;Similar;0.6238507032394409
Remove unnecessary fall-through markings  ;when it is the case;evemu-record after noticing a spurious suspend is too late to detect;a LID closed event is the (probable) cause of this;Similar;0.5469697713851929
Remove unnecessary fall-through markings  ;when it is the case;"the ""open"" choice is worse";"the ""method"" operation mode implementation can be buggy on some platforms";Similar;0.659623384475708
Remove unnecessary fall-through markings  ;when it is the case;It breaks docking stations basically;there is no way to have a user-space hwdb to fix that;Similar;0.5643056631088257
Remove unnecessary fall-through markings  ;when it is the case;"userspace requires to see ""close"" event after the system is resumed";so that it can determine whether the internal display should remain dark and the external display should be lit on;Similar;0.5764315128326416
Remove unnecessary fall-through markings  ;when it is the case;Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;Similar;0.5152316689491272
Remove unnecessary fall-through markings  ;when it is the case;Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);Similar;0.6405602693557739
Remove unnecessary fall-through markings  ;when it is the case;This patch makes it deprecated;lid_init__state=open is more useful than this mode;Similar;0.7352906465530396
Remove unnecessary fall-through markings  ;when it is the case;have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;Similar;0.6491372585296631
Remove unnecessary fall-through markings  ;when it is the case;it should not send the complement switch event for the unreliable initial lid state notification;However this mechanism is not suitable for lid_init_state=open/method;Similar;0.638319730758667
Remove unnecessary fall-through markings  ;when it is the case;implements this mechanism  ;only;Similar;0.5276876091957092
Remove unnecessary fall-through markings  ;when it is the case;While using KEY event type, there is no such problem;no such problem;Similar;0.5474467277526855
Remove unnecessary fall-through markings  ;when it is the case;Remove pointer to old lid_sysfs on unbind;ACPI / button;Similar;0.6633577346801758
Remove unnecessary fall-through markings  ;when it is the case;When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;Similar;0.6539788246154785
Remove unnecessary fall-through markings  ;when it is the case;Correct a wrong macro usage;This patch simplies the code by merging some redundant code;Similar;0.6717531681060791
Remove unnecessary fall-through markings  ;when it is the case;this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;Similar;0.6354885101318359
Remove unnecessary fall-through markings  ;when it is the case;"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;Similar;0.5115017890930176
Remove unnecessary fall-through markings  ;when it is the case;removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;Similar;0.5408066511154175
Remove unnecessary fall-through markings  ;when it is the case;This caused ACPI shutdown regression on gentoo;VirtualBox;Similar;0.617212176322937
Remove unnecessary fall-through markings  ;when it is the case;compile error;CONFIG_PM_SLEEP is undefined;Similar;0.6707277894020081
Remove unnecessary fall-through markings  ;when it is the case;remove the GPE enabling code from the button driver;to avoid the problem;Similar;0.5829575061798096
Remove unnecessary fall-through markings  ;when it is the case;Clean up inclusions of ACPI header files;ACPI;Similar;0.5328152775764465
Remove unnecessary fall-through markings  ;when it is the case;Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;Similar;0.5829885005950928
Remove unnecessary fall-through markings  ;when it is the case;Use the patch to replace the origin code;provide a better solution;Similar;0.5193364024162292
Remove unnecessary fall-through markings  ;when it is the case;Remove useless type argument of driver .remove() operation;useless;Similar;0.7614386081695557
Remove unnecessary fall-through markings  ;when it is the case;drop the second ACPI driver .remove() argument  ;the second ACPI driver .remove() argument is in fact useless;Similar;0.6482772827148438
Remove unnecessary fall-through markings  ;when it is the case;add #ifdefs to prevent them from being built in that case  ;several suspend/resume functions in ACPI drivers are not used for CONFIG_PM_SLEEP unset;Similar;0.6054372787475586
Remove unnecessary fall-through markings  ;when it is the case;remove unused procfs I/F;unused;Similar;0.7647925615310669
Remove unnecessary fall-through markings  ;when it is the case;Remove unused ACPI button procfs interface;unused;Similar;0.6363623738288879
Remove unnecessary fall-through markings  ;when it is the case;Avoid disabling wakeup unnecessarily on remove;-;Similar;0.8177422285079956
Remove unnecessary fall-through markings  ;when it is the case;the following script is used as the basis of conversion;As this conversion needs to touch a large number of source files;Similar;0.5117661952972412
Remove unnecessary fall-through markings  ;when it is the case;only the necessary includes are there;necessary;Similar;0.5253833532333374
Remove unnecessary fall-through markings  ;when it is the case;The script was run again  ;to make sure no file was left behind;Similar;0.5596333742141724
Remove unnecessary fall-through markings  ;when it is the case;description of the patch behaviour;an action or a change;Similar;0.5786077380180359
Remove unnecessary fall-through markings  ;when it is the case;failures were fixed;Build tests were done on the following configurations;Similar;0.7413033246994019
Remove unnecessary fall-through markings  ;when it is the case;percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;Similar;0.6481270790100098
Remove unnecessary fall-through markings  ;when it is the case;Remove the old GPE type handling entirely  ;Gets rid of various quirks, like the implicit disabling with GPE type setting;Similar;0.726665735244751
Remove unnecessary fall-through markings  ;when it is the case;complain the following warning message;"will

";Similar;0.5783987045288086
Remove unnecessary fall-through markings  ;when it is the case;"This patch is to eliminate the above warning message
";Device PNP0C0D:00 failed to resume: error 1;Similar;0.7917873859405518
Remove unnecessary fall-through markings  ;when it is the case;dont try to use a non-existent lid device;non-existent;Similar;0.6342848539352417
Remove unnecessary fall-through markings  ;when it is the case;return -ENODEV;theres no lid device present;Similar;0.5724529027938843
Remove unnecessary fall-through markings  ;when it is the case;whitespace fix  ;This does not change any actual console output;Similar;0.6306989789009094
Remove unnecessary fall-through markings  ;when it is the case;Remove button->device pointer;button;Similar;0.7137832641601562
Remove unnecessary fall-through markings  ;when it is the case;We no longer need a pointer from struct acpi_button back to the struct acpi_device;no longer need;Similar;0.6423719525337219
Remove unnecessary fall-through markings  ;when it is the case;use .notify method instead of installing handler directly  ;-;Similar;0.5476700067520142
Remove unnecessary fall-through markings  ;when it is the case;Setting ->owner as done currently (pde->owner = THIS_MODULE) is racy;as correctly noted at bug #12454;Similar;0.5463452339172363
Remove unnecessary fall-through markings  ;when it is the case;"proc_fops is declared as ""const""";should give some thoughts;Similar;0.582817018032074
Remove unnecessary fall-through markings  ;when it is the case;"rmmoded directories will be empty and return ""."" and "".."" -- no harm";no harm;Similar;0.6192739009857178
Remove unnecessary fall-through markings  ;when it is the case;dont want such modular code;definitely;Similar;0.6477882266044617
Remove unnecessary fall-through markings  ;when it is the case;"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.5469011068344116
Remove unnecessary fall-through markings  ;when it is the case;use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Similar;0.6505118012428284
Remove unnecessary fall-through markings  ;when it is the case;get rid of input BIT* duplicate defines;duplicate;Similar;0.7331288456916809
Remove unnecessary fall-through markings  ;when it is the case;Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;Similar;0.6602702140808105
Remove unnecessary fall-through markings  ;when it is the case;Define the macro temporarily in a local manner;all those local definitions will be removed further in this patchset (to not break bisecting);Similar;0.5221225619316101
Remove unnecessary fall-through markings  ;when it is the case;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.6684764623641968
Remove unnecessary fall-through markings  ;when it is the case;"Invoke with ; as leaving it off confuses Lindent  ";gcc doesnt care;Similar;0.7607936263084412
Remove unnecessary fall-through markings  ;when it is the case;Fix indentation where Lindent did get confused  ;Lindent did get confused;Similar;0.7122814655303955
Remove unnecessary fall-through markings  ;when it is the case;remove unnecessary casts and variable initializations, clean up formatting;unnecessary;Similar;0.7799181938171387
Remove unnecessary fall-through markings  ;when it is the case;Remove unneeded acpi_handle from driver;unneeded;Similar;0.6375146508216858
Remove unnecessary fall-through markings  ;when it is the case;Use acpi_devices handle instead of drivers  ;-;Similar;0.5462565422058105
Remove unnecessary fall-through markings  ;when it is the case;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.6381366848945618
Remove unnecessary fall-through markings  ;when it is the case;"Create a separate ""historical"" git archive";about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated;Similar;0.5717612504959106
Delete unused proc filename macros;unused;Drop no longer necessary Asus T200TA lid_init_state quirk;no longer necessary;Similar;0.6829602718353271
Delete unused proc filename macros;unused;drop the quirk  ;the lid_init_state=ACPI_BUTTON_LID_INIT_OPEN quirk for the Asus T200TA is no longer necessary, the lid now works properly without it;Similar;0.637197732925415
Delete unused proc filename macros;unused;"Fixes: 17e5888e4e18 (""x86: Select HARDIRQS_SW_RESEND on x86"")";"(""x86: Select HARDIRQS_SW_RESEND on x86"")";Similar;0.5498243570327759
Delete unused proc filename macros;unused;"
The problem here is the accesses to the PBCG and HMCG
";"
these are the pinconf0 registers for the power";Similar;0.5419071912765503
Delete unused proc filename macros;unused;adds the BYT_TRIG_LVL flag to this;so now it is turned into a level interrupt which fires both when low and high, iow it simply always fires leading to an interrupt storm, the tablet immediately waking up from suspend again, etc;Similar;0.5394630432128906
Delete unused proc filename macros;unused;Remove unused acpi_lid_notifier_[un]register() functions;unused;Similar;0.876331090927124
Delete unused proc filename macros;unused;Setting lid_init_state to ACPI_BUTTON_LID_INIT_OPEN on the T200TA  ;fixes the unwanted behavior, adds a DMI based quirk;Similar;0.5109519958496094
Delete unused proc filename macros;unused; the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;Similar;0.5762892961502075
Delete unused proc filename macros;unused;Turn lid_blacklst DMI table into a generic quirk table;ACPI: button;Similar;0.6615782976150513
Delete unused proc filename macros;unused;"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;Similar;0.7295587062835693
Delete unused proc filename macros;unused;update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;Similar;0.5753949284553528
Delete unused proc filename macros;unused;Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;Similar;0.7466669082641602
Delete unused proc filename macros;unused;Fix a build warning in the ACPI button driver when CONFIG_PROC_FS is not enabled by marking the unused function as __maybe_unused;not enabled, unused;Similar;0.6658177375793457
Delete unused proc filename macros;unused;only trigger acpi_pm_wakeup_event() in the acpi_button_notify() path and dont do that in the acpi_lid_initialize_state() path;To avoid the confusion;Similar;0.5244393348693848
Delete unused proc filename macros;unused;Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;Similar;0.6363171339035034
Delete unused proc filename macros;unused;"The only solution is to add a DMI based blacklist and ignore the LID device on these tablets.
";There is nothing the ACPI button driver (or the gpio code) can do to fix this.;Similar;0.5388224124908447
Delete unused proc filename macros;unused;adds an acpi_handle_debug call  ;to help debugging this;Similar;0.709525465965271
Delete unused proc filename macros;unused;Fix function prototypes for module_param_call();-;Similar;0.6583296060562134
Delete unused proc filename macros;unused;fix whitespace in pr_fmt() to align log entries;align log entries;Similar;0.6544275879859924
Delete unused proc filename macros;unused;It breaks docking stations basically;there is no way to have a user-space hwdb to fix that;Similar;0.564626932144165
Delete unused proc filename macros;unused;libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;Similar;0.5486928820610046
Delete unused proc filename macros;unused;assume the user will use the internal keyboard before this timeout expires;logind only checks the lid switch value after a timeout;Similar;0.5540162920951843
Delete unused proc filename macros;unused;"userspace requires to see ""close"" event after the system is resumed";so that it can determine whether the internal display should remain dark and the external display should be lit on;Similar;0.5706681609153748
Delete unused proc filename macros;unused;Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;Similar;0.6837223768234253
Delete unused proc filename macros;unused;Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);Similar;0.7699131965637207
Delete unused proc filename macros;unused;This patch makes it deprecated;lid_init__state=open is more useful than this mode;Similar;0.5605533123016357
Delete unused proc filename macros;unused;have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;Similar;0.7916935682296753
Delete unused proc filename macros;unused;it should not send the complement switch event for the unreliable initial lid state notification;However this mechanism is not suitable for lid_init_state=open/method;Similar;0.524570107460022
Delete unused proc filename macros;unused;Remove pointer to old lid_sysfs on unbind;ACPI / button;Similar;0.862403392791748
Delete unused proc filename macros;unused;When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;Similar;0.7004295587539673
Delete unused proc filename macros;unused;Correct a wrong macro usage;This patch simplies the code by merging some redundant code;Similar;0.6620118618011475
Delete unused proc filename macros;unused;this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;Similar;0.7521612644195557
Delete unused proc filename macros;unused;There is no need to carry potentially outdated Free Software Foundation mailing address in file headers;since the COPYING file includes it;Similar;0.5132542848587036
Delete unused proc filename macros;unused;"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;Similar;0.6435503959655762
Delete unused proc filename macros;unused;Add ACPI Button event via netlink routine;-;Similar;0.5479514002799988
Delete unused proc filename macros;unused;removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;Similar;0.7791411876678467
Delete unused proc filename macros;unused;This caused ACPI shutdown regression on gentoo;VirtualBox;Similar;0.753574013710022
Delete unused proc filename macros;unused;add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;Similar;0.5884159803390503
Delete unused proc filename macros;unused;fix button driver compile error when CONFIG_PM_SLEEP is undefined;CONFIG_PM_SLEEP is undefined;Similar;0.6307438611984253
Delete unused proc filename macros;unused;compile error;CONFIG_PM_SLEEP is undefined;Similar;0.634453296661377
Delete unused proc filename macros;unused;Fix enabling button GPEs twice;Fix;Similar;0.5087292194366455
Delete unused proc filename macros;unused;Button GPEs have been enabled in the acpi_wake_device_init() during boot;the button driver enables them for the second time;Similar;0.5251690149307251
Delete unused proc filename macros;unused;remove the GPE enabling code from the button driver;to avoid the problem;Similar;0.823997437953949
Delete unused proc filename macros;unused;Clean up inclusions of ACPI header files;ACPI;Similar;0.6895152926445007
Delete unused proc filename macros;unused;Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;Similar;0.720207691192627
Delete unused proc filename macros;unused;<acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> should not be included directly from any files that are built for CONFIG_ACPI unset;because that generally leads to build warnings about undefined symbols in !CONFIG_ACPI builds;Similar;0.5421862602233887
Delete unused proc filename macros;unused;Use the patch to replace the origin code;provide a better solution;Similar;0.6884282827377319
Delete unused proc filename macros;unused;Remove useless type argument of driver .remove() operation;useless;Similar;0.7445753812789917
Delete unused proc filename macros;unused;"The second argument of ACPI driver .remove() operation is only used by the ACPI processor driver
";the value passed to that driver through it is always available from the given struct acpi_device objects removal_type field;Similar;0.6122438907623291
Delete unused proc filename macros;unused;drop the second ACPI driver .remove() argument  ;the second ACPI driver .remove() argument is in fact useless;Similar;0.7472208142280579
Delete unused proc filename macros;unused;Fix unused function warnings for CONFIG_PM_SLEEP;unused function warnings;Similar;0.692070484161377
Delete unused proc filename macros;unused;add #ifdefs to prevent them from being built in that case  ;several suspend/resume functions in ACPI drivers are not used for CONFIG_PM_SLEEP unset;Similar;0.5919701457023621
Delete unused proc filename macros;unused;remove unused procfs I/F;unused;Similar;0.7925589084625244
Delete unused proc filename macros;unused;Remove unused ACPI button procfs interface;unused;Similar;0.8663809299468994
Delete unused proc filename macros;unused;Avoid disabling wakeup unnecessarily on remove;-;Similar;0.5437530279159546
Delete unused proc filename macros;unused;use standard device wakeup flags instead of the special ACPI flags for handling those devices;address this problem;Similar;0.5017163753509521
Delete unused proc filename macros;unused;the following script is used as the basis of conversion;As this conversion needs to touch a large number of source files;Similar;0.5040915012359619
Delete unused proc filename macros;unused;prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;Similar;0.6003373861312866
Delete unused proc filename macros;unused;CONFIG_GCOV_KERNEL was turned off for all tests and a few more options had to be turned off depending on archs to make things build;my distributed build env didnt work with gcov compiles, like ipr on powerpc/64 which failed due to missing writeq;Similar;0.5646098852157593
Delete unused proc filename macros;unused;percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;Similar;0.6534656882286072
Delete unused proc filename macros;unused;Remove the old GPE type handling entirely  ;Gets rid of various quirks, like the implicit disabling with GPE type setting;Similar;0.6958985924720764
Delete unused proc filename macros;unused;"This patch is to eliminate the above warning message
";Device PNP0C0D:00 failed to resume: error 1;Similar;0.5974269509315491
Delete unused proc filename macros;unused;whitespace fix  ;This does not change any actual console output;Similar;0.5841130018234253
Delete unused proc filename macros;unused;Remove button->device pointer;button;Similar;0.7907567620277405
Delete unused proc filename macros;unused;We no longer need a pointer from struct acpi_button back to the struct acpi_device;no longer need;Similar;0.6873044967651367
Delete unused proc filename macros;unused;This patch adds temporaries to cache the acpi_device_hid(), acpi_device_name(), and acpi_device_class() pointers;so we dont have to clutter the code with so many uses of those interfaces;Similar;0.5731916427612305
Delete unused proc filename macros;unused;changes a bit of whitespace to follow Linux conventions;follow Linux conventions;Similar;0.603451132774353
Delete unused proc filename macros;unused;use .notify method instead of installing handler directly  ;-;Similar;0.583338737487793
Delete unused proc filename macros;unused;convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.6723476052284241
Delete unused proc filename macros;unused;Setting ->owner as done currently (pde->owner = THIS_MODULE) is racy;as correctly noted at bug #12454;Similar;0.5008173584938049
Delete unused proc filename macros;unused;"proc_fops is declared as ""const""";should give some thoughts;Similar;0.6292989253997803
Delete unused proc filename macros;unused;Move all the component definitions for drivers to a single shared place, include/acpi/acpi_drivers.h  ;to have a single shared place;Similar;0.5054157376289368
Delete unused proc filename macros;unused;"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.5520766973495483
Delete unused proc filename macros;unused;Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;Similar;0.6766852736473083
Delete unused proc filename macros;unused;use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Similar;0.6748287677764893
Delete unused proc filename macros;unused;get rid of input BIT* duplicate defines;duplicate;Similar;0.7818379402160645
Delete unused proc filename macros;unused;Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;Similar;0.7622636556625366
Delete unused proc filename macros;unused;Define the macro temporarily in a local manner;all those local definitions will be removed further in this patchset (to not break bisecting);Similar;0.5184600949287415
Delete unused proc filename macros;unused;Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;Similar;0.5962167382240295
Delete unused proc filename macros;unused;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.799113392829895
Delete unused proc filename macros;unused;fix acpi_driver.name usage;fix;Similar;0.6609712243080139
Delete unused proc filename macros;unused;"Make ""module name"" actually match the file name";cosmetic only;Similar;0.5100274085998535
Delete unused proc filename macros;unused;"Invoke with ; as leaving it off confuses Lindent  ";gcc doesnt care;Similar;0.5564197897911072
Delete unused proc filename macros;unused;Fix indentation where Lindent did get confused  ;Lindent did get confused;Similar;0.5616773366928101
Delete unused proc filename macros;unused;remove unnecessary casts and variable initializations, clean up formatting;unnecessary;Similar;0.6004000306129456
Delete unused proc filename macros;unused;Remove unneeded acpi_handle from driver;unneeded;Similar;0.7570536136627197
Delete unused proc filename macros;unused;Use acpi_devices handle instead of drivers  ;-;Similar;0.6648774147033691
Delete unused proc filename macros;unused;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.7345088720321655
Delete unused proc filename macros;unused;"Create a separate ""historical"" git archive";about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated;Similar;0.7043538093566895
Drop no longer necessary Asus T200TA lid_init_state quirk;no longer necessary;drop the quirk  ;the lid_init_state=ACPI_BUTTON_LID_INIT_OPEN quirk for the Asus T200TA is no longer necessary, the lid now works properly without it;Similar;0.7799781560897827
Drop no longer necessary Asus T200TA lid_init_state quirk;no longer necessary;"
The problem here is the accesses to the PBCG and HMCG
";"
these are the pinconf0 registers for the power";Similar;0.5007133483886719
Drop no longer necessary Asus T200TA lid_init_state quirk;no longer necessary;Remove unused acpi_lid_notifier_[un]register() functions;unused;Similar;0.7876611948013306
Drop no longer necessary Asus T200TA lid_init_state quirk;no longer necessary;Turn lid_blacklst DMI table into a generic quirk table;ACPI: button;Similar;0.5678018927574158
Drop no longer necessary Asus T200TA lid_init_state quirk;no longer necessary;"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;Similar;0.5897642374038696
Drop no longer necessary Asus T200TA lid_init_state quirk;no longer necessary;Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;Similar;0.7196327447891235
Drop no longer necessary Asus T200TA lid_init_state quirk;no longer necessary;Fix a build warning in the ACPI button driver when CONFIG_PROC_FS is not enabled by marking the unused function as __maybe_unused;not enabled, unused;Similar;0.5301311612129211
Drop no longer necessary Asus T200TA lid_init_state quirk;no longer necessary;only trigger acpi_pm_wakeup_event() in the acpi_button_notify() path and dont do that in the acpi_lid_initialize_state() path;To avoid the confusion;Similar;0.5882651805877686
Drop no longer necessary Asus T200TA lid_init_state quirk;no longer necessary;"The only solution is to add a DMI based blacklist and ignore the LID device on these tablets.
";There is nothing the ACPI button driver (or the gpio code) can do to fix this.;Similar;0.574795126914978
Drop no longer necessary Asus T200TA lid_init_state quirk;no longer necessary;evemu-record after noticing a spurious suspend is too late to detect;a LID closed event is the (probable) cause of this;Similar;0.5576106309890747
Drop no longer necessary Asus T200TA lid_init_state quirk;no longer necessary;"the ""open"" choice is worse";"the ""method"" operation mode implementation can be buggy on some platforms";Similar;0.5785703659057617
Drop no longer necessary Asus T200TA lid_init_state quirk;no longer necessary;It breaks docking stations basically;there is no way to have a user-space hwdb to fix that;Similar;0.5527490377426147
Drop no longer necessary Asus T200TA lid_init_state quirk;no longer necessary;"userspace requires to see ""close"" event after the system is resumed";so that it can determine whether the internal display should remain dark and the external display should be lit on;Similar;0.6089905500411987
Drop no longer necessary Asus T200TA lid_init_state quirk;no longer necessary;Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;Similar;0.582790195941925
Drop no longer necessary Asus T200TA lid_init_state quirk;no longer necessary;Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);Similar;0.714032769203186
Drop no longer necessary Asus T200TA lid_init_state quirk;no longer necessary;This patch makes it deprecated;lid_init__state=open is more useful than this mode;Similar;0.6273928284645081
Drop no longer necessary Asus T200TA lid_init_state quirk;no longer necessary;have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;Similar;0.7127936482429504
Drop no longer necessary Asus T200TA lid_init_state quirk;no longer necessary;it should not send the complement switch event for the unreliable initial lid state notification;However this mechanism is not suitable for lid_init_state=open/method;Similar;0.6859198808670044
Drop no longer necessary Asus T200TA lid_init_state quirk;no longer necessary;Remove pointer to old lid_sysfs on unbind;ACPI / button;Similar;0.7297936677932739
Drop no longer necessary Asus T200TA lid_init_state quirk;no longer necessary;When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;Similar;0.7092422246932983
Drop no longer necessary Asus T200TA lid_init_state quirk;no longer necessary;Correct a wrong macro usage;This patch simplies the code by merging some redundant code;Similar;0.559601902961731
Drop no longer necessary Asus T200TA lid_init_state quirk;no longer necessary;this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;Similar;0.7584847211837769
Drop no longer necessary Asus T200TA lid_init_state quirk;no longer necessary;There is no need to carry potentially outdated Free Software Foundation mailing address in file headers;since the COPYING file includes it;Similar;0.5979574918746948
Drop no longer necessary Asus T200TA lid_init_state quirk;no longer necessary;"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;Similar;0.5997910499572754
Drop no longer necessary Asus T200TA lid_init_state quirk;no longer necessary;removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;Similar;0.6791713833808899
Drop no longer necessary Asus T200TA lid_init_state quirk;no longer necessary;This caused ACPI shutdown regression on gentoo;VirtualBox;Similar;0.7660748958587646
Drop no longer necessary Asus T200TA lid_init_state quirk;no longer necessary;fix button driver compile error when CONFIG_PM_SLEEP is undefined;CONFIG_PM_SLEEP is undefined;Similar;0.559331476688385
Drop no longer necessary Asus T200TA lid_init_state quirk;no longer necessary;compile error;CONFIG_PM_SLEEP is undefined;Similar;0.5040730834007263
Drop no longer necessary Asus T200TA lid_init_state quirk;no longer necessary;remove the GPE enabling code from the button driver;to avoid the problem;Similar;0.6616173982620239
Drop no longer necessary Asus T200TA lid_init_state quirk;no longer necessary;Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;Similar;0.7021205425262451
Drop no longer necessary Asus T200TA lid_init_state quirk;no longer necessary;<acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> should not be included directly from any files that are built for CONFIG_ACPI unset;because that generally leads to build warnings about undefined symbols in !CONFIG_ACPI builds;Similar;0.595792293548584
Drop no longer necessary Asus T200TA lid_init_state quirk;no longer necessary;Remove useless type argument of driver .remove() operation;useless;Similar;0.7769979238510132
Drop no longer necessary Asus T200TA lid_init_state quirk;no longer necessary;"The second argument of ACPI driver .remove() operation is only used by the ACPI processor driver
";the value passed to that driver through it is always available from the given struct acpi_device objects removal_type field;Similar;0.5583256483078003
Drop no longer necessary Asus T200TA lid_init_state quirk;no longer necessary;drop the second ACPI driver .remove() argument  ;the second ACPI driver .remove() argument is in fact useless;Similar;0.7987550497055054
Drop no longer necessary Asus T200TA lid_init_state quirk;no longer necessary;Fix unused function warnings for CONFIG_PM_SLEEP;unused function warnings;Similar;0.6277827024459839
Drop no longer necessary Asus T200TA lid_init_state quirk;no longer necessary;add #ifdefs to prevent them from being built in that case  ;several suspend/resume functions in ACPI drivers are not used for CONFIG_PM_SLEEP unset;Similar;0.577008068561554
Drop no longer necessary Asus T200TA lid_init_state quirk;no longer necessary;remove unused procfs I/F;unused;Similar;0.7900207042694092
Drop no longer necessary Asus T200TA lid_init_state quirk;no longer necessary;Remove unused ACPI button procfs interface;unused;Similar;0.7652830481529236
Drop no longer necessary Asus T200TA lid_init_state quirk;no longer necessary;Avoid disabling wakeup unnecessarily on remove;-;Similar;0.7273615598678589
Drop no longer necessary Asus T200TA lid_init_state quirk;no longer necessary;use standard device wakeup flags instead of the special ACPI flags for handling those devices;address this problem;Similar;0.5264384746551514
Drop no longer necessary Asus T200TA lid_init_state quirk;no longer necessary;failures were fixed;Build tests were done on the following configurations;Similar;0.5461591482162476
Drop no longer necessary Asus T200TA lid_init_state quirk;no longer necessary;CONFIG_GCOV_KERNEL was turned off for all tests and a few more options had to be turned off depending on archs to make things build;my distributed build env didnt work with gcov compiles, like ipr on powerpc/64 which failed due to missing writeq;Similar;0.5279483795166016
Drop no longer necessary Asus T200TA lid_init_state quirk;no longer necessary;percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;Similar;0.630003809928894
Drop no longer necessary Asus T200TA lid_init_state quirk;no longer necessary;Remove the old GPE type handling entirely  ;Gets rid of various quirks, like the implicit disabling with GPE type setting;Similar;0.7347971796989441
Drop no longer necessary Asus T200TA lid_init_state quirk;no longer necessary;"This patch is to eliminate the above warning message
";Device PNP0C0D:00 failed to resume: error 1;Similar;0.6929897665977478
Drop no longer necessary Asus T200TA lid_init_state quirk;no longer necessary;dont try to use a non-existent lid device;non-existent;Similar;0.6928406953811646
Drop no longer necessary Asus T200TA lid_init_state quirk;no longer necessary;whitespace fix  ;This does not change any actual console output;Similar;0.5224452018737793
Drop no longer necessary Asus T200TA lid_init_state quirk;no longer necessary;Remove button->device pointer;button;Similar;0.6910459995269775
Drop no longer necessary Asus T200TA lid_init_state quirk;no longer necessary;We no longer need a pointer from struct acpi_button back to the struct acpi_device;no longer need;Similar;0.8036028146743774
Drop no longer necessary Asus T200TA lid_init_state quirk;no longer necessary;use .notify method instead of installing handler directly  ;-;Similar;0.5603213310241699
Drop no longer necessary Asus T200TA lid_init_state quirk;no longer necessary;convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.5305417776107788
Drop no longer necessary Asus T200TA lid_init_state quirk;no longer necessary;Setting ->owner as done currently (pde->owner = THIS_MODULE) is racy;as correctly noted at bug #12454;Similar;0.5109517574310303
Drop no longer necessary Asus T200TA lid_init_state quirk;no longer necessary;"proc_fops is declared as ""const""";should give some thoughts;Similar;0.5327426195144653
Drop no longer necessary Asus T200TA lid_init_state quirk;no longer necessary;"rmmoded directories will be empty and return ""."" and "".."" -- no harm";no harm;Similar;0.7084144353866577
Drop no longer necessary Asus T200TA lid_init_state quirk;no longer necessary;dont want such modular code;definitely;Similar;0.5892239212989807
Drop no longer necessary Asus T200TA lid_init_state quirk;no longer necessary;use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Similar;0.5746906995773315
Drop no longer necessary Asus T200TA lid_init_state quirk;no longer necessary;get rid of input BIT* duplicate defines;duplicate;Similar;0.7222503423690796
Drop no longer necessary Asus T200TA lid_init_state quirk;no longer necessary;Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;Similar;0.7234355211257935
Drop no longer necessary Asus T200TA lid_init_state quirk;no longer necessary;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.7228471040725708
Drop no longer necessary Asus T200TA lid_init_state quirk;no longer necessary;"Invoke with ; as leaving it off confuses Lindent  ";gcc doesnt care;Similar;0.6800707578659058
Drop no longer necessary Asus T200TA lid_init_state quirk;no longer necessary;Fix indentation where Lindent did get confused  ;Lindent did get confused;Similar;0.6024065017700195
Drop no longer necessary Asus T200TA lid_init_state quirk;no longer necessary;remove unnecessary casts and variable initializations, clean up formatting;unnecessary;Similar;0.5963229537010193
Drop no longer necessary Asus T200TA lid_init_state quirk;no longer necessary;Remove unneeded acpi_handle from driver;unneeded;Similar;0.74107825756073
Drop no longer necessary Asus T200TA lid_init_state quirk;no longer necessary;Use acpi_devices handle instead of drivers  ;-;Similar;0.6503427028656006
Drop no longer necessary Asus T200TA lid_init_state quirk;no longer necessary;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.6564685106277466
Drop no longer necessary Asus T200TA lid_init_state quirk;no longer necessary;"Create a separate ""historical"" git archive";about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated;Similar;0.6004383563995361
drop the quirk  ;the lid_init_state=ACPI_BUTTON_LID_INIT_OPEN quirk for the Asus T200TA is no longer necessary, the lid now works properly without it;"
The problem here is the accesses to the PBCG and HMCG
";"
these are the pinconf0 registers for the power";Similar;0.5321543216705322
drop the quirk  ;the lid_init_state=ACPI_BUTTON_LID_INIT_OPEN quirk for the Asus T200TA is no longer necessary, the lid now works properly without it;This commit adds a quirk for this;as no lid-switch function is better then the interrupt storm;Similar;0.6012693643569946
drop the quirk  ;the lid_init_state=ACPI_BUTTON_LID_INIT_OPEN quirk for the Asus T200TA is no longer necessary, the lid now works properly without it;Remove unused acpi_lid_notifier_[un]register() functions;unused;Similar;0.7137773036956787
drop the quirk  ;the lid_init_state=ACPI_BUTTON_LID_INIT_OPEN quirk for the Asus T200TA is no longer necessary, the lid now works properly without it;"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;Similar;0.5200324058532715
drop the quirk  ;the lid_init_state=ACPI_BUTTON_LID_INIT_OPEN quirk for the Asus T200TA is no longer necessary, the lid now works properly without it;re-using the existing option;keeps things simple and it will make it much easier to add DMI quirks which can either disable the LID completely or set another non-default lid_init_state value, both of which are necessary on some devices;Similar;0.611294686794281
drop the quirk  ;the lid_init_state=ACPI_BUTTON_LID_INIT_OPEN quirk for the Asus T200TA is no longer necessary, the lid now works properly without it;[ an action or a change that has been made, including a description of the patch behaviour ];[ the reason for a decision or value judgment ];Similar;0.5844440460205078
drop the quirk  ;the lid_init_state=ACPI_BUTTON_LID_INIT_OPEN quirk for the Asus T200TA is no longer necessary, the lid now works properly without it;Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;Similar;0.6291532516479492
drop the quirk  ;the lid_init_state=ACPI_BUTTON_LID_INIT_OPEN quirk for the Asus T200TA is no longer necessary, the lid now works properly without it;adds an acpi_handle_debug call  ;to help debugging this;Similar;0.5505532026290894
drop the quirk  ;the lid_init_state=ACPI_BUTTON_LID_INIT_OPEN quirk for the Asus T200TA is no longer necessary, the lid now works properly without it;"the ""open"" choice is worse";"the ""method"" operation mode implementation can be buggy on some platforms";Similar;0.5853031873703003
drop the quirk  ;the lid_init_state=ACPI_BUTTON_LID_INIT_OPEN quirk for the Asus T200TA is no longer necessary, the lid now works properly without it;It breaks docking stations basically;there is no way to have a user-space hwdb to fix that;Similar;0.5693522691726685
drop the quirk  ;the lid_init_state=ACPI_BUTTON_LID_INIT_OPEN quirk for the Asus T200TA is no longer necessary, the lid now works properly without it;"userspace requires to see ""close"" event after the system is resumed";so that it can determine whether the internal display should remain dark and the external display should be lit on;Similar;0.5198951959609985
drop the quirk  ;the lid_init_state=ACPI_BUTTON_LID_INIT_OPEN quirk for the Asus T200TA is no longer necessary, the lid now works properly without it;Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;Similar;0.5728046894073486
drop the quirk  ;the lid_init_state=ACPI_BUTTON_LID_INIT_OPEN quirk for the Asus T200TA is no longer necessary, the lid now works properly without it;Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);Similar;0.6790426969528198
drop the quirk  ;the lid_init_state=ACPI_BUTTON_LID_INIT_OPEN quirk for the Asus T200TA is no longer necessary, the lid now works properly without it;This patch makes it deprecated;lid_init__state=open is more useful than this mode;Similar;0.6285562515258789
drop the quirk  ;the lid_init_state=ACPI_BUTTON_LID_INIT_OPEN quirk for the Asus T200TA is no longer necessary, the lid now works properly without it;have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;Similar;0.6628772616386414
drop the quirk  ;the lid_init_state=ACPI_BUTTON_LID_INIT_OPEN quirk for the Asus T200TA is no longer necessary, the lid now works properly without it;it should not send the complement switch event for the unreliable initial lid state notification;However this mechanism is not suitable for lid_init_state=open/method;Similar;0.5558582544326782
drop the quirk  ;the lid_init_state=ACPI_BUTTON_LID_INIT_OPEN quirk for the Asus T200TA is no longer necessary, the lid now works properly without it;implements this mechanism  ;only;Similar;0.5408743619918823
drop the quirk  ;the lid_init_state=ACPI_BUTTON_LID_INIT_OPEN quirk for the Asus T200TA is no longer necessary, the lid now works properly without it;Remove pointer to old lid_sysfs on unbind;ACPI / button;Similar;0.6489751935005188
drop the quirk  ;the lid_init_state=ACPI_BUTTON_LID_INIT_OPEN quirk for the Asus T200TA is no longer necessary, the lid now works properly without it;When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;Similar;0.6418127417564392
drop the quirk  ;the lid_init_state=ACPI_BUTTON_LID_INIT_OPEN quirk for the Asus T200TA is no longer necessary, the lid now works properly without it;Correct a wrong macro usage;This patch simplies the code by merging some redundant code;Similar;0.636722981929779
drop the quirk  ;the lid_init_state=ACPI_BUTTON_LID_INIT_OPEN quirk for the Asus T200TA is no longer necessary, the lid now works properly without it;this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;Similar;0.6381063461303711
drop the quirk  ;the lid_init_state=ACPI_BUTTON_LID_INIT_OPEN quirk for the Asus T200TA is no longer necessary, the lid now works properly without it;removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;Similar;0.5829049944877625
drop the quirk  ;the lid_init_state=ACPI_BUTTON_LID_INIT_OPEN quirk for the Asus T200TA is no longer necessary, the lid now works properly without it;This caused ACPI shutdown regression on gentoo;VirtualBox;Similar;0.6600086688995361
drop the quirk  ;the lid_init_state=ACPI_BUTTON_LID_INIT_OPEN quirk for the Asus T200TA is no longer necessary, the lid now works properly without it;compile error;CONFIG_PM_SLEEP is undefined;Similar;0.6943616271018982
drop the quirk  ;the lid_init_state=ACPI_BUTTON_LID_INIT_OPEN quirk for the Asus T200TA is no longer necessary, the lid now works properly without it;remove the GPE enabling code from the button driver;to avoid the problem;Similar;0.5910362005233765
drop the quirk  ;the lid_init_state=ACPI_BUTTON_LID_INIT_OPEN quirk for the Asus T200TA is no longer necessary, the lid now works properly without it;Remove useless type argument of driver .remove() operation;useless;Similar;0.7254756689071655
drop the quirk  ;the lid_init_state=ACPI_BUTTON_LID_INIT_OPEN quirk for the Asus T200TA is no longer necessary, the lid now works properly without it;drop the second ACPI driver .remove() argument  ;the second ACPI driver .remove() argument is in fact useless;Similar;0.7575566172599792
drop the quirk  ;the lid_init_state=ACPI_BUTTON_LID_INIT_OPEN quirk for the Asus T200TA is no longer necessary, the lid now works properly without it;Fix unused function warnings for CONFIG_PM_SLEEP;unused function warnings;Similar;0.5082867741584778
drop the quirk  ;the lid_init_state=ACPI_BUTTON_LID_INIT_OPEN quirk for the Asus T200TA is no longer necessary, the lid now works properly without it;add #ifdefs to prevent them from being built in that case  ;several suspend/resume functions in ACPI drivers are not used for CONFIG_PM_SLEEP unset;Similar;0.5027127265930176
drop the quirk  ;the lid_init_state=ACPI_BUTTON_LID_INIT_OPEN quirk for the Asus T200TA is no longer necessary, the lid now works properly without it;remove unused procfs I/F;unused;Similar;0.7912070155143738
drop the quirk  ;the lid_init_state=ACPI_BUTTON_LID_INIT_OPEN quirk for the Asus T200TA is no longer necessary, the lid now works properly without it;Remove unused ACPI button procfs interface;unused;Similar;0.6763237118721008
drop the quirk  ;the lid_init_state=ACPI_BUTTON_LID_INIT_OPEN quirk for the Asus T200TA is no longer necessary, the lid now works properly without it;Avoid disabling wakeup unnecessarily on remove;-;Similar;0.7265115976333618
drop the quirk  ;the lid_init_state=ACPI_BUTTON_LID_INIT_OPEN quirk for the Asus T200TA is no longer necessary, the lid now works properly without it;put the new include  ;its order conforms to its surrounding;Similar;0.5029969215393066
drop the quirk  ;the lid_init_state=ACPI_BUTTON_LID_INIT_OPEN quirk for the Asus T200TA is no longer necessary, the lid now works properly without it;The script was run again  ;to make sure no file was left behind;Similar;0.5201528072357178
drop the quirk  ;the lid_init_state=ACPI_BUTTON_LID_INIT_OPEN quirk for the Asus T200TA is no longer necessary, the lid now works properly without it;description of the patch behaviour;an action or a change;Similar;0.5599260330200195
drop the quirk  ;the lid_init_state=ACPI_BUTTON_LID_INIT_OPEN quirk for the Asus T200TA is no longer necessary, the lid now works properly without it;failures were fixed;Build tests were done on the following configurations;Similar;0.5613211393356323
drop the quirk  ;the lid_init_state=ACPI_BUTTON_LID_INIT_OPEN quirk for the Asus T200TA is no longer necessary, the lid now works properly without it;percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;Similar;0.7160089015960693
drop the quirk  ;the lid_init_state=ACPI_BUTTON_LID_INIT_OPEN quirk for the Asus T200TA is no longer necessary, the lid now works properly without it;Remove the old GPE type handling entirely  ;Gets rid of various quirks, like the implicit disabling with GPE type setting;Similar;0.6526201963424683
drop the quirk  ;the lid_init_state=ACPI_BUTTON_LID_INIT_OPEN quirk for the Asus T200TA is no longer necessary, the lid now works properly without it;complain the following warning message;"will

";Similar;0.5626927614212036
drop the quirk  ;the lid_init_state=ACPI_BUTTON_LID_INIT_OPEN quirk for the Asus T200TA is no longer necessary, the lid now works properly without it;"This patch is to eliminate the above warning message
";Device PNP0C0D:00 failed to resume: error 1;Similar;0.6579688787460327
drop the quirk  ;the lid_init_state=ACPI_BUTTON_LID_INIT_OPEN quirk for the Asus T200TA is no longer necessary, the lid now works properly without it;dont try to use a non-existent lid device;non-existent;Similar;0.6755721569061279
drop the quirk  ;the lid_init_state=ACPI_BUTTON_LID_INIT_OPEN quirk for the Asus T200TA is no longer necessary, the lid now works properly without it;return -ENODEV;theres no lid device present;Similar;0.6636267900466919
drop the quirk  ;the lid_init_state=ACPI_BUTTON_LID_INIT_OPEN quirk for the Asus T200TA is no longer necessary, the lid now works properly without it;whitespace fix  ;This does not change any actual console output;Similar;0.6233795881271362
drop the quirk  ;the lid_init_state=ACPI_BUTTON_LID_INIT_OPEN quirk for the Asus T200TA is no longer necessary, the lid now works properly without it;Remove button->device pointer;button;Similar;0.7128351926803589
drop the quirk  ;the lid_init_state=ACPI_BUTTON_LID_INIT_OPEN quirk for the Asus T200TA is no longer necessary, the lid now works properly without it;We no longer need a pointer from struct acpi_button back to the struct acpi_device;no longer need;Similar;0.6240167617797852
drop the quirk  ;the lid_init_state=ACPI_BUTTON_LID_INIT_OPEN quirk for the Asus T200TA is no longer necessary, the lid now works properly without it;use .notify method instead of installing handler directly  ;-;Similar;0.5767095685005188
drop the quirk  ;the lid_init_state=ACPI_BUTTON_LID_INIT_OPEN quirk for the Asus T200TA is no longer necessary, the lid now works properly without it;convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.5072335004806519
drop the quirk  ;the lid_init_state=ACPI_BUTTON_LID_INIT_OPEN quirk for the Asus T200TA is no longer necessary, the lid now works properly without it;"proc_fops is declared as ""const""";should give some thoughts;Similar;0.6602785587310791
drop the quirk  ;the lid_init_state=ACPI_BUTTON_LID_INIT_OPEN quirk for the Asus T200TA is no longer necessary, the lid now works properly without it;"rmmoded directories will be empty and return ""."" and "".."" -- no harm";no harm;Similar;0.5668679475784302
drop the quirk  ;the lid_init_state=ACPI_BUTTON_LID_INIT_OPEN quirk for the Asus T200TA is no longer necessary, the lid now works properly without it;dont want such modular code;definitely;Similar;0.5434868335723877
drop the quirk  ;the lid_init_state=ACPI_BUTTON_LID_INIT_OPEN quirk for the Asus T200TA is no longer necessary, the lid now works properly without it;"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.5167911648750305
drop the quirk  ;the lid_init_state=ACPI_BUTTON_LID_INIT_OPEN quirk for the Asus T200TA is no longer necessary, the lid now works properly without it;use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Similar;0.6562876105308533
drop the quirk  ;the lid_init_state=ACPI_BUTTON_LID_INIT_OPEN quirk for the Asus T200TA is no longer necessary, the lid now works properly without it;get rid of input BIT* duplicate defines;duplicate;Similar;0.7927082777023315
drop the quirk  ;the lid_init_state=ACPI_BUTTON_LID_INIT_OPEN quirk for the Asus T200TA is no longer necessary, the lid now works properly without it;Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;Similar;0.6147933006286621
drop the quirk  ;the lid_init_state=ACPI_BUTTON_LID_INIT_OPEN quirk for the Asus T200TA is no longer necessary, the lid now works properly without it;Define the macro temporarily in a local manner;all those local definitions will be removed further in this patchset (to not break bisecting);Similar;0.5439165830612183
drop the quirk  ;the lid_init_state=ACPI_BUTTON_LID_INIT_OPEN quirk for the Asus T200TA is no longer necessary, the lid now works properly without it;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.6553483009338379
drop the quirk  ;the lid_init_state=ACPI_BUTTON_LID_INIT_OPEN quirk for the Asus T200TA is no longer necessary, the lid now works properly without it;"Invoke with ; as leaving it off confuses Lindent  ";gcc doesnt care;Similar;0.8076921701431274
drop the quirk  ;the lid_init_state=ACPI_BUTTON_LID_INIT_OPEN quirk for the Asus T200TA is no longer necessary, the lid now works properly without it;Fix indentation where Lindent did get confused  ;Lindent did get confused;Similar;0.69744473695755
drop the quirk  ;the lid_init_state=ACPI_BUTTON_LID_INIT_OPEN quirk for the Asus T200TA is no longer necessary, the lid now works properly without it;remove unnecessary casts and variable initializations, clean up formatting;unnecessary;Similar;0.5626035928726196
drop the quirk  ;the lid_init_state=ACPI_BUTTON_LID_INIT_OPEN quirk for the Asus T200TA is no longer necessary, the lid now works properly without it;Remove unneeded acpi_handle from driver;unneeded;Similar;0.64740389585495
drop the quirk  ;the lid_init_state=ACPI_BUTTON_LID_INIT_OPEN quirk for the Asus T200TA is no longer necessary, the lid now works properly without it;Use acpi_devices handle instead of drivers  ;-;Similar;0.6374585628509521
drop the quirk  ;the lid_init_state=ACPI_BUTTON_LID_INIT_OPEN quirk for the Asus T200TA is no longer necessary, the lid now works properly without it;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.6390458345413208
drop the quirk  ;the lid_init_state=ACPI_BUTTON_LID_INIT_OPEN quirk for the Asus T200TA is no longer necessary, the lid now works properly without it;"Create a separate ""historical"" git archive";about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated;Similar;0.6837351322174072
"Fixes: 17e5888e4e18 (""x86: Select HARDIRQS_SW_RESEND on x86"")";"(""x86: Select HARDIRQS_SW_RESEND on x86"")";adds the BYT_TRIG_LVL flag to this;so now it is turned into a level interrupt which fires both when low and high, iow it simply always fires leading to an interrupt storm, the tablet immediately waking up from suspend again, etc;Similar;0.5579349994659424
"Fixes: 17e5888e4e18 (""x86: Select HARDIRQS_SW_RESEND on x86"")";"(""x86: Select HARDIRQS_SW_RESEND on x86"")";Remove unused acpi_lid_notifier_[un]register() functions;unused;Similar;0.5433130264282227
"Fixes: 17e5888e4e18 (""x86: Select HARDIRQS_SW_RESEND on x86"")";"(""x86: Select HARDIRQS_SW_RESEND on x86"")";Setting lid_init_state to ACPI_BUTTON_LID_INIT_OPEN on the T200TA  ;fixes the unwanted behavior, adds a DMI based quirk;Similar;0.6667157411575317
"Fixes: 17e5888e4e18 (""x86: Select HARDIRQS_SW_RESEND on x86"")";"(""x86: Select HARDIRQS_SW_RESEND on x86"")"; the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;Similar;0.6356672048568726
"Fixes: 17e5888e4e18 (""x86: Select HARDIRQS_SW_RESEND on x86"")";"(""x86: Select HARDIRQS_SW_RESEND on x86"")";Turn lid_blacklst DMI table into a generic quirk table;ACPI: button;Similar;0.6225102543830872
"Fixes: 17e5888e4e18 (""x86: Select HARDIRQS_SW_RESEND on x86"")";"(""x86: Select HARDIRQS_SW_RESEND on x86"")";"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;Similar;0.6521974205970764
"Fixes: 17e5888e4e18 (""x86: Select HARDIRQS_SW_RESEND on x86"")";"(""x86: Select HARDIRQS_SW_RESEND on x86"")";update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;Similar;0.5841948986053467
"Fixes: 17e5888e4e18 (""x86: Select HARDIRQS_SW_RESEND on x86"")";"(""x86: Select HARDIRQS_SW_RESEND on x86"")";Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;Similar;0.5871058702468872
"Fixes: 17e5888e4e18 (""x86: Select HARDIRQS_SW_RESEND on x86"")";"(""x86: Select HARDIRQS_SW_RESEND on x86"")";Fix a build warning in the ACPI button driver when CONFIG_PROC_FS is not enabled by marking the unused function as __maybe_unused;not enabled, unused;Similar;0.5877846479415894
"Fixes: 17e5888e4e18 (""x86: Select HARDIRQS_SW_RESEND on x86"")";"(""x86: Select HARDIRQS_SW_RESEND on x86"")";Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;Similar;0.6597189903259277
"Fixes: 17e5888e4e18 (""x86: Select HARDIRQS_SW_RESEND on x86"")";"(""x86: Select HARDIRQS_SW_RESEND on x86"")";making the ACPI button driver loadable as a module even if not booted in ACPI mode;to fix the asymmetry and provide the acpi_lid_open() symbol;Similar;0.5397158265113831
"Fixes: 17e5888e4e18 (""x86: Select HARDIRQS_SW_RESEND on x86"")";"(""x86: Select HARDIRQS_SW_RESEND on x86"")";adds an acpi_handle_debug call  ;to help debugging this;Similar;0.630876362323761
"Fixes: 17e5888e4e18 (""x86: Select HARDIRQS_SW_RESEND on x86"")";"(""x86: Select HARDIRQS_SW_RESEND on x86"")";Fix function prototypes for module_param_call();-;Similar;0.6508461833000183
"Fixes: 17e5888e4e18 (""x86: Select HARDIRQS_SW_RESEND on x86"")";"(""x86: Select HARDIRQS_SW_RESEND on x86"")";fix whitespace in pr_fmt() to align log entries;align log entries;Similar;0.6780551671981812
"Fixes: 17e5888e4e18 (""x86: Select HARDIRQS_SW_RESEND on x86"")";"(""x86: Select HARDIRQS_SW_RESEND on x86"")";libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;Similar;0.7596862316131592
"Fixes: 17e5888e4e18 (""x86: Select HARDIRQS_SW_RESEND on x86"")";"(""x86: Select HARDIRQS_SW_RESEND on x86"")";assume the user will use the internal keyboard before this timeout expires;logind only checks the lid switch value after a timeout;Similar;0.5591903924942017
"Fixes: 17e5888e4e18 (""x86: Select HARDIRQS_SW_RESEND on x86"")";"(""x86: Select HARDIRQS_SW_RESEND on x86"")";Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;Similar;0.6331785917282104
"Fixes: 17e5888e4e18 (""x86: Select HARDIRQS_SW_RESEND on x86"")";"(""x86: Select HARDIRQS_SW_RESEND on x86"")";Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);Similar;0.589557409286499
"Fixes: 17e5888e4e18 (""x86: Select HARDIRQS_SW_RESEND on x86"")";"(""x86: Select HARDIRQS_SW_RESEND on x86"")";have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;Similar;0.5679402351379395
"Fixes: 17e5888e4e18 (""x86: Select HARDIRQS_SW_RESEND on x86"")";"(""x86: Select HARDIRQS_SW_RESEND on x86"")";This patch adds a mechanism to insert lid events as a compensation for the platform triggered ones to form a complete event switches  ;in order to make sure that the platform triggered events can always be reliably delivered to the userspace;Similar;0.6257323026657104
"Fixes: 17e5888e4e18 (""x86: Select HARDIRQS_SW_RESEND on x86"")";"(""x86: Select HARDIRQS_SW_RESEND on x86"")";Use key event type to implement ACPI lid events;Another approach;Similar;0.5063780546188354
"Fixes: 17e5888e4e18 (""x86: Select HARDIRQS_SW_RESEND on x86"")";"(""x86: Select HARDIRQS_SW_RESEND on x86"")";Remove pointer to old lid_sysfs on unbind;ACPI / button;Similar;0.6427344083786011
"Fixes: 17e5888e4e18 (""x86: Select HARDIRQS_SW_RESEND on x86"")";"(""x86: Select HARDIRQS_SW_RESEND on x86"")";When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;Similar;0.5372150540351868
"Fixes: 17e5888e4e18 (""x86: Select HARDIRQS_SW_RESEND on x86"")";"(""x86: Select HARDIRQS_SW_RESEND on x86"")";"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;Similar;0.5719891786575317
"Fixes: 17e5888e4e18 (""x86: Select HARDIRQS_SW_RESEND on x86"")";"(""x86: Select HARDIRQS_SW_RESEND on x86"")";Add ACPI Button event via netlink routine;-;Similar;0.5982463359832764
"Fixes: 17e5888e4e18 (""x86: Select HARDIRQS_SW_RESEND on x86"")";"(""x86: Select HARDIRQS_SW_RESEND on x86"")";removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;Similar;0.5272290706634521
"Fixes: 17e5888e4e18 (""x86: Select HARDIRQS_SW_RESEND on x86"")";"(""x86: Select HARDIRQS_SW_RESEND on x86"")";add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;Similar;0.6389434337615967
"Fixes: 17e5888e4e18 (""x86: Select HARDIRQS_SW_RESEND on x86"")";"(""x86: Select HARDIRQS_SW_RESEND on x86"")";fix button driver compile error when CONFIG_PM_SLEEP is undefined;CONFIG_PM_SLEEP is undefined;Similar;0.6485134363174438
"Fixes: 17e5888e4e18 (""x86: Select HARDIRQS_SW_RESEND on x86"")";"(""x86: Select HARDIRQS_SW_RESEND on x86"")";Fix enabling button GPEs twice;Fix;Similar;0.6146726608276367
"Fixes: 17e5888e4e18 (""x86: Select HARDIRQS_SW_RESEND on x86"")";"(""x86: Select HARDIRQS_SW_RESEND on x86"")";Button GPEs have been enabled in the acpi_wake_device_init() during boot;the button driver enables them for the second time;Similar;0.6486760973930359
"Fixes: 17e5888e4e18 (""x86: Select HARDIRQS_SW_RESEND on x86"")";"(""x86: Select HARDIRQS_SW_RESEND on x86"")";remove the GPE enabling code from the button driver;to avoid the problem;Similar;0.5400180816650391
"Fixes: 17e5888e4e18 (""x86: Select HARDIRQS_SW_RESEND on x86"")";"(""x86: Select HARDIRQS_SW_RESEND on x86"")";Clean up inclusions of ACPI header files;ACPI;Similar;0.5531451106071472
"Fixes: 17e5888e4e18 (""x86: Select HARDIRQS_SW_RESEND on x86"")";"(""x86: Select HARDIRQS_SW_RESEND on x86"")";Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;Similar;0.6068363189697266
"Fixes: 17e5888e4e18 (""x86: Select HARDIRQS_SW_RESEND on x86"")";"(""x86: Select HARDIRQS_SW_RESEND on x86"")";<acpi/acpi_bus.h> be included prior to <acpi/acpi_drivers.h>;so that the acpi_pci_root declarations the latter depends on are always there;Similar;0.5262697339057922
"Fixes: 17e5888e4e18 (""x86: Select HARDIRQS_SW_RESEND on x86"")";"(""x86: Select HARDIRQS_SW_RESEND on x86"")";Use the patch to replace the origin code;provide a better solution;Similar;0.5775727033615112
"Fixes: 17e5888e4e18 (""x86: Select HARDIRQS_SW_RESEND on x86"")";"(""x86: Select HARDIRQS_SW_RESEND on x86"")";Fix unused function warnings for CONFIG_PM_SLEEP;unused function warnings;Similar;0.5495374202728271
"Fixes: 17e5888e4e18 (""x86: Select HARDIRQS_SW_RESEND on x86"")";"(""x86: Select HARDIRQS_SW_RESEND on x86"")";Remove unused ACPI button procfs interface;unused;Similar;0.5290366411209106
"Fixes: 17e5888e4e18 (""x86: Select HARDIRQS_SW_RESEND on x86"")";"(""x86: Select HARDIRQS_SW_RESEND on x86"")";Use GPE reference counting to support shared GPEs  ;the wakeup enable mask bits of GPEs are set as soon as the GPEs are enabled to wake up the system;Similar;0.5204199552536011
"Fixes: 17e5888e4e18 (""x86: Select HARDIRQS_SW_RESEND on x86"")";"(""x86: Select HARDIRQS_SW_RESEND on x86"")";Update gfp.h and slab.h includes  ;prepare for breaking implicit slab.h inclusion from percpu.h;Similar;0.5183871388435364
"Fixes: 17e5888e4e18 (""x86: Select HARDIRQS_SW_RESEND on x86"")";"(""x86: Select HARDIRQS_SW_RESEND on x86"")";prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;Similar;0.5804415941238403
"Fixes: 17e5888e4e18 (""x86: Select HARDIRQS_SW_RESEND on x86"")";"(""x86: Select HARDIRQS_SW_RESEND on x86"")";Introduce a new wake-up flag, always_enabled, for marking devices that should be permanently enabled to generate run-time events  ;devices that should be permanently enabled to generate run-time events;Similar;0.5468027591705322
"Fixes: 17e5888e4e18 (""x86: Select HARDIRQS_SW_RESEND on x86"")";"(""x86: Select HARDIRQS_SW_RESEND on x86"")";Introduce a reference counter for run-wake devices and a function that will initialize all of the run-time wake-up fields for given device.;-;Similar;0.5305105447769165
"Fixes: 17e5888e4e18 (""x86: Select HARDIRQS_SW_RESEND on x86"")";"(""x86: Select HARDIRQS_SW_RESEND on x86"")";Add an API to allow devices to indicate whether or not they want their devices GPE to be enabled for both runtime and wakeup events;to allow devices to indicate whether or not they want their devices GPE to be enabled;Similar;0.550998866558075
"Fixes: 17e5888e4e18 (""x86: Select HARDIRQS_SW_RESEND on x86"")";"(""x86: Select HARDIRQS_SW_RESEND on x86"")";we could install either a fixed event handler or a notify handler, but the Linux/ACPI code now handles that for us;We previously needed that so we dont need to worry about it;Similar;0.5692620277404785
"Fixes: 17e5888e4e18 (""x86: Select HARDIRQS_SW_RESEND on x86"")";"(""x86: Select HARDIRQS_SW_RESEND on x86"")";Remove button->device pointer;button;Similar;0.5344712734222412
"Fixes: 17e5888e4e18 (""x86: Select HARDIRQS_SW_RESEND on x86"")";"(""x86: Select HARDIRQS_SW_RESEND on x86"")";This patch adds temporaries to cache the acpi_device_hid(), acpi_device_name(), and acpi_device_class() pointers;so we dont have to clutter the code with so many uses of those interfaces;Similar;0.7074214220046997
"Fixes: 17e5888e4e18 (""x86: Select HARDIRQS_SW_RESEND on x86"")";"(""x86: Select HARDIRQS_SW_RESEND on x86"")";changes a bit of whitespace to follow Linux conventions;follow Linux conventions;Similar;0.6160256862640381
"Fixes: 17e5888e4e18 (""x86: Select HARDIRQS_SW_RESEND on x86"")";"(""x86: Select HARDIRQS_SW_RESEND on x86"")";The presence of .notify() causes Linux/ACPI to manage event handlers and notify handlers on our behalf  ;so we dont have to install and remove them ourselves;Similar;0.5005199909210205
"Fixes: 17e5888e4e18 (""x86: Select HARDIRQS_SW_RESEND on x86"")";"(""x86: Select HARDIRQS_SW_RESEND on x86"")";convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.6003241539001465
"Fixes: 17e5888e4e18 (""x86: Select HARDIRQS_SW_RESEND on x86"")";"(""x86: Select HARDIRQS_SW_RESEND on x86"")";start using GPE from userspace;GPE is already disabled in interrupt context;Similar;0.5042077302932739
"Fixes: 17e5888e4e18 (""x86: Select HARDIRQS_SW_RESEND on x86"")";"(""x86: Select HARDIRQS_SW_RESEND on x86"")";Move all the component definitions for drivers to a single shared place, include/acpi/acpi_drivers.h  ;to have a single shared place;Similar;0.5050886273384094
"Fixes: 17e5888e4e18 (""x86: Select HARDIRQS_SW_RESEND on x86"")";"(""x86: Select HARDIRQS_SW_RESEND on x86"")";"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.5572734475135803
"Fixes: 17e5888e4e18 (""x86: Select HARDIRQS_SW_RESEND on x86"")";"(""x86: Select HARDIRQS_SW_RESEND on x86"")";Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;Similar;0.6497485041618347
"Fixes: 17e5888e4e18 (""x86: Select HARDIRQS_SW_RESEND on x86"")";"(""x86: Select HARDIRQS_SW_RESEND on x86"")";Use proc_create()/proc_create_data() to make sure that ->proc_fops and ->data be setup;before gluing PDE to main tree;Similar;0.5189868807792664
"Fixes: 17e5888e4e18 (""x86: Select HARDIRQS_SW_RESEND on x86"")";"(""x86: Select HARDIRQS_SW_RESEND on x86"")";Add correct ->owner to proc_fops to fix reading/module unloading race  ;fix reading/module unloading race;Similar;0.5719295144081116
"Fixes: 17e5888e4e18 (""x86: Select HARDIRQS_SW_RESEND on x86"")";"(""x86: Select HARDIRQS_SW_RESEND on x86"")";get rid of input BIT* duplicate defines;duplicate;Similar;0.5059531927108765
"Fixes: 17e5888e4e18 (""x86: Select HARDIRQS_SW_RESEND on x86"")";"(""x86: Select HARDIRQS_SW_RESEND on x86"")";Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;Similar;0.5196791887283325
"Fixes: 17e5888e4e18 (""x86: Select HARDIRQS_SW_RESEND on x86"")";"(""x86: Select HARDIRQS_SW_RESEND on x86"")";Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;Similar;0.6116779446601868
"Fixes: 17e5888e4e18 (""x86: Select HARDIRQS_SW_RESEND on x86"")";"(""x86: Select HARDIRQS_SW_RESEND on x86"")";Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.5857012271881104
"Fixes: 17e5888e4e18 (""x86: Select HARDIRQS_SW_RESEND on x86"")";"(""x86: Select HARDIRQS_SW_RESEND on x86"")";fix acpi_driver.name usage;fix;Similar;0.5797740817070007
"Fixes: 17e5888e4e18 (""x86: Select HARDIRQS_SW_RESEND on x86"")";"(""x86: Select HARDIRQS_SW_RESEND on x86"")";"Make ""module name"" actually match the file name";cosmetic only;Similar;0.5299367904663086
"Fixes: 17e5888e4e18 (""x86: Select HARDIRQS_SW_RESEND on x86"")";"(""x86: Select HARDIRQS_SW_RESEND on x86"")";un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.5415248870849609
"Fixes: 17e5888e4e18 (""x86: Select HARDIRQS_SW_RESEND on x86"")";"(""x86: Select HARDIRQS_SW_RESEND on x86"")";restore /proc/acpi/button/ (ala 2.6.12)  ;[ACPI];Similar;0.6543526649475098
"
The problem here is the accesses to the PBCG and HMCG
";"
these are the pinconf0 registers for the power";adds the BYT_TRIG_LVL flag to this;so now it is turned into a level interrupt which fires both when low and high, iow it simply always fires leading to an interrupt storm, the tablet immediately waking up from suspend again, etc;Similar;0.5427971482276917
"
The problem here is the accesses to the PBCG and HMCG
";"
these are the pinconf0 registers for the power";This commit adds a quirk for this;as no lid-switch function is better then the interrupt storm;Similar;0.6012569069862366
"
The problem here is the accesses to the PBCG and HMCG
";"
these are the pinconf0 registers for the power";Remove unused acpi_lid_notifier_[un]register() functions;unused;Similar;0.5569425821304321
"
The problem here is the accesses to the PBCG and HMCG
";"
these are the pinconf0 registers for the power"; the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;Similar;0.5698328614234924
"
The problem here is the accesses to the PBCG and HMCG
";"
these are the pinconf0 registers for the power";"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;Similar;0.5389569997787476
"
The problem here is the accesses to the PBCG and HMCG
";"
these are the pinconf0 registers for the power";re-using the existing option;keeps things simple and it will make it much easier to add DMI quirks which can either disable the LID completely or set another non-default lid_init_state value, both of which are necessary on some devices;Similar;0.5539113283157349
"
The problem here is the accesses to the PBCG and HMCG
";"
these are the pinconf0 registers for the power";[ an action or a change that has been made, including a description of the patch behaviour ];[ the reason for a decision or value judgment ];Similar;0.5746487975120544
"
The problem here is the accesses to the PBCG and HMCG
";"
these are the pinconf0 registers for the power";adds an acpi_handle_debug call  ;to help debugging this;Similar;0.5906570553779602
"
The problem here is the accesses to the PBCG and HMCG
";"
these are the pinconf0 registers for the power";Fix function prototypes for module_param_call();-;Similar;0.5272087454795837
"
The problem here is the accesses to the PBCG and HMCG
";"
these are the pinconf0 registers for the power";"the ""open"" choice is worse";"the ""method"" operation mode implementation can be buggy on some platforms";Similar;0.586820125579834
"
The problem here is the accesses to the PBCG and HMCG
";"
these are the pinconf0 registers for the power";It breaks docking stations basically;there is no way to have a user-space hwdb to fix that;Similar;0.5107556581497192
"
The problem here is the accesses to the PBCG and HMCG
";"
these are the pinconf0 registers for the power";Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;Similar;0.5449320077896118
"
The problem here is the accesses to the PBCG and HMCG
";"
these are the pinconf0 registers for the power";Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);Similar;0.5592216849327087
"
The problem here is the accesses to the PBCG and HMCG
";"
these are the pinconf0 registers for the power";This patch makes it deprecated;lid_init__state=open is more useful than this mode;Similar;0.5697258114814758
"
The problem here is the accesses to the PBCG and HMCG
";"
these are the pinconf0 registers for the power";have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;Similar;0.5511420965194702
"
The problem here is the accesses to the PBCG and HMCG
";"
these are the pinconf0 registers for the power";it should not send the complement switch event for the unreliable initial lid state notification;However this mechanism is not suitable for lid_init_state=open/method;Similar;0.516352653503418
"
The problem here is the accesses to the PBCG and HMCG
";"
these are the pinconf0 registers for the power";implements this mechanism  ;only;Similar;0.5524859428405762
"
The problem here is the accesses to the PBCG and HMCG
";"
these are the pinconf0 registers for the power";Use key event type to implement ACPI lid events;Another approach;Similar;0.6552941203117371
"
The problem here is the accesses to the PBCG and HMCG
";"
these are the pinconf0 registers for the power";Remove pointer to old lid_sysfs on unbind;ACPI / button;Similar;0.5480154156684875
"
The problem here is the accesses to the PBCG and HMCG
";"
these are the pinconf0 registers for the power";When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;Similar;0.5701818466186523
"
The problem here is the accesses to the PBCG and HMCG
";"
these are the pinconf0 registers for the power";Correct a wrong macro usage;This patch simplies the code by merging some redundant code;Similar;0.5837876200675964
"
The problem here is the accesses to the PBCG and HMCG
";"
these are the pinconf0 registers for the power";This caused ACPI shutdown regression on gentoo;VirtualBox;Similar;0.5216137170791626
"
The problem here is the accesses to the PBCG and HMCG
";"
these are the pinconf0 registers for the power";compile error;CONFIG_PM_SLEEP is undefined;Similar;0.6083303093910217
"
The problem here is the accesses to the PBCG and HMCG
";"
these are the pinconf0 registers for the power";Clean up inclusions of ACPI header files;ACPI;Similar;0.5077615976333618
"
The problem here is the accesses to the PBCG and HMCG
";"
these are the pinconf0 registers for the power";Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;Similar;0.5204971432685852
"
The problem here is the accesses to the PBCG and HMCG
";"
these are the pinconf0 registers for the power";<acpi/acpi_bus.h> be included prior to <acpi/acpi_drivers.h>;so that the acpi_pci_root declarations the latter depends on are always there;Similar;0.5335487723350525
"
The problem here is the accesses to the PBCG and HMCG
";"
these are the pinconf0 registers for the power";remove unused procfs I/F;unused;Similar;0.5212394595146179
"
The problem here is the accesses to the PBCG and HMCG
";"
these are the pinconf0 registers for the power";Use device wakeup flags for handling ACPI wakeup devices;for handling ACPI wakeup devices;Similar;0.5397615432739258
"
The problem here is the accesses to the PBCG and HMCG
";"
these are the pinconf0 registers for the power";Use GPE reference counting to support shared GPEs  ;the wakeup enable mask bits of GPEs are set as soon as the GPEs are enabled to wake up the system;Similar;0.5702683925628662
"
The problem here is the accesses to the PBCG and HMCG
";"
these are the pinconf0 registers for the power";Update gfp.h and slab.h includes  ;prepare for breaking implicit slab.h inclusion from percpu.h;Similar;0.5224835276603699
"
The problem here is the accesses to the PBCG and HMCG
";"
these are the pinconf0 registers for the power";the following script is used as the basis of conversion;As this conversion needs to touch a large number of source files;Similar;0.562654972076416
"
The problem here is the accesses to the PBCG and HMCG
";"
these are the pinconf0 registers for the power";only the necessary includes are there;necessary;Similar;0.558180034160614
"
The problem here is the accesses to the PBCG and HMCG
";"
these are the pinconf0 registers for the power";description of the patch behaviour;an action or a change;Similar;0.5360828638076782
"
The problem here is the accesses to the PBCG and HMCG
";"
these are the pinconf0 registers for the power";percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;Similar;0.5832444429397583
"
The problem here is the accesses to the PBCG and HMCG
";"
these are the pinconf0 registers for the power";complain the following warning message;"will

";Similar;0.5352376699447632
"
The problem here is the accesses to the PBCG and HMCG
";"
these are the pinconf0 registers for the power";return -ENODEV;theres no lid device present;Similar;0.5126194953918457
"
The problem here is the accesses to the PBCG and HMCG
";"
these are the pinconf0 registers for the power";Some drivers need to know when a lid event occurs and get the current status;-;Similar;0.5322303175926208
"
The problem here is the accesses to the PBCG and HMCG
";"
these are the pinconf0 registers for the power";not all ACPI drivers use/want it;they should not have to #undef PREFIX to define their own;Similar;0.5161982178688049
"
The problem here is the accesses to the PBCG and HMCG
";"
these are the pinconf0 registers for the power";whitespace fix  ;This does not change any actual console output;Similar;0.5604552030563354
"
The problem here is the accesses to the PBCG and HMCG
";"
these are the pinconf0 registers for the power";Remove button->device pointer;button;Similar;0.5405006408691406
"
The problem here is the accesses to the PBCG and HMCG
";"
these are the pinconf0 registers for the power";use .notify method instead of installing handler directly  ;-;Similar;0.5348646640777588
"
The problem here is the accesses to the PBCG and HMCG
";"
these are the pinconf0 registers for the power";Setting ->owner as done currently (pde->owner = THIS_MODULE) is racy;as correctly noted at bug #12454;Similar;0.5874292850494385
"
The problem here is the accesses to the PBCG and HMCG
";"
these are the pinconf0 registers for the power";"proc_fops is declared as ""const""";should give some thoughts;Similar;0.6300338506698608
"
The problem here is the accesses to the PBCG and HMCG
";"
these are the pinconf0 registers for the power";dont want such modular code;definitely;Similar;0.5129435062408447
"
The problem here is the accesses to the PBCG and HMCG
";"
these are the pinconf0 registers for the power";start using GPE from userspace;GPE is already disabled in interrupt context;Similar;0.5624985098838806
"
The problem here is the accesses to the PBCG and HMCG
";"
these are the pinconf0 registers for the power";"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.5489809513092041
"
The problem here is the accesses to the PBCG and HMCG
";"
these are the pinconf0 registers for the power";use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Similar;0.525468111038208
"
The problem here is the accesses to the PBCG and HMCG
";"
these are the pinconf0 registers for the power";get rid of input BIT* duplicate defines;duplicate;Similar;0.5596967935562134
"
The problem here is the accesses to the PBCG and HMCG
";"
these are the pinconf0 registers for the power";Define the macro temporarily in a local manner;all those local definitions will be removed further in this patchset (to not break bisecting);Similar;0.5255244970321655
"
The problem here is the accesses to the PBCG and HMCG
";"
these are the pinconf0 registers for the power";fix acpi_driver.name usage;fix;Similar;0.5136286020278931
"
The problem here is the accesses to the PBCG and HMCG
";"
these are the pinconf0 registers for the power";ls bus/acpi/drivers  ;Display the list of ACPI drivers.;Similar;0.5329076051712036
"
The problem here is the accesses to the PBCG and HMCG
";"
these are the pinconf0 registers for the power";"Invoke with ; as leaving it off confuses Lindent  ";gcc doesnt care;Similar;0.6338727474212646
"
The problem here is the accesses to the PBCG and HMCG
";"
these are the pinconf0 registers for the power";Fix indentation where Lindent did get confused  ;Lindent did get confused;Similar;0.6955423355102539
"
The problem here is the accesses to the PBCG and HMCG
";"
these are the pinconf0 registers for the power";Remove unneeded acpi_handle from driver;unneeded;Similar;0.5477242469787598
"
The problem here is the accesses to the PBCG and HMCG
";"
these are the pinconf0 registers for the power";Use acpi_devices handle instead of drivers  ;-;Similar;0.5562658905982971
"
The problem here is the accesses to the PBCG and HMCG
";"
these are the pinconf0 registers for the power";un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.529721736907959
"
The problem here is the accesses to the PBCG and HMCG
";"
these are the pinconf0 registers for the power";"Create a separate ""historical"" git archive";about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated;Similar;0.6272590756416321
adds the BYT_TRIG_LVL flag to this;so now it is turned into a level interrupt which fires both when low and high, iow it simply always fires leading to an interrupt storm, the tablet immediately waking up from suspend again, etc;This commit adds a quirk for this;as no lid-switch function is better then the interrupt storm;Similar;0.533753514289856
adds the BYT_TRIG_LVL flag to this;so now it is turned into a level interrupt which fires both when low and high, iow it simply always fires leading to an interrupt storm, the tablet immediately waking up from suspend again, etc;Remove unused acpi_lid_notifier_[un]register() functions;unused;Similar;0.5907683372497559
adds the BYT_TRIG_LVL flag to this;so now it is turned into a level interrupt which fires both when low and high, iow it simply always fires leading to an interrupt storm, the tablet immediately waking up from suspend again, etc;Setting lid_init_state to ACPI_BUTTON_LID_INIT_OPEN on the T200TA  ;fixes the unwanted behavior, adds a DMI based quirk;Similar;0.6204913258552551
adds the BYT_TRIG_LVL flag to this;so now it is turned into a level interrupt which fires both when low and high, iow it simply always fires leading to an interrupt storm, the tablet immediately waking up from suspend again, etc; the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;Similar;0.6777081489562988
adds the BYT_TRIG_LVL flag to this;so now it is turned into a level interrupt which fires both when low and high, iow it simply always fires leading to an interrupt storm, the tablet immediately waking up from suspend again, etc;Turn lid_blacklst DMI table into a generic quirk table;ACPI: button;Similar;0.5092043876647949
adds the BYT_TRIG_LVL flag to this;so now it is turned into a level interrupt which fires both when low and high, iow it simply always fires leading to an interrupt storm, the tablet immediately waking up from suspend again, etc;"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;Similar;0.6367771625518799
adds the BYT_TRIG_LVL flag to this;so now it is turned into a level interrupt which fires both when low and high, iow it simply always fires leading to an interrupt storm, the tablet immediately waking up from suspend again, etc;re-using the existing option;keeps things simple and it will make it much easier to add DMI quirks which can either disable the LID completely or set another non-default lid_init_state value, both of which are necessary on some devices;Similar;0.6135208606719971
adds the BYT_TRIG_LVL flag to this;so now it is turned into a level interrupt which fires both when low and high, iow it simply always fires leading to an interrupt storm, the tablet immediately waking up from suspend again, etc;[ an action or a change that has been made, including a description of the patch behaviour ];[ the reason for a decision or value judgment ];Similar;0.5988098382949829
adds the BYT_TRIG_LVL flag to this;so now it is turned into a level interrupt which fires both when low and high, iow it simply always fires leading to an interrupt storm, the tablet immediately waking up from suspend again, etc;Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;Similar;0.6923888921737671
adds the BYT_TRIG_LVL flag to this;so now it is turned into a level interrupt which fires both when low and high, iow it simply always fires leading to an interrupt storm, the tablet immediately waking up from suspend again, etc;adds an acpi_handle_debug call  ;to help debugging this;Similar;0.7872052192687988
adds the BYT_TRIG_LVL flag to this;so now it is turned into a level interrupt which fires both when low and high, iow it simply always fires leading to an interrupt storm, the tablet immediately waking up from suspend again, etc;Fix function prototypes for module_param_call();-;Similar;0.7034106850624084
adds the BYT_TRIG_LVL flag to this;so now it is turned into a level interrupt which fires both when low and high, iow it simply always fires leading to an interrupt storm, the tablet immediately waking up from suspend again, etc;fix whitespace in pr_fmt() to align log entries;align log entries;Similar;0.670576274394989
adds the BYT_TRIG_LVL flag to this;so now it is turned into a level interrupt which fires both when low and high, iow it simply always fires leading to an interrupt storm, the tablet immediately waking up from suspend again, etc;libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;Similar;0.5699955224990845
adds the BYT_TRIG_LVL flag to this;so now it is turned into a level interrupt which fires both when low and high, iow it simply always fires leading to an interrupt storm, the tablet immediately waking up from suspend again, etc;Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;Similar;0.7423232793807983
adds the BYT_TRIG_LVL flag to this;so now it is turned into a level interrupt which fires both when low and high, iow it simply always fires leading to an interrupt storm, the tablet immediately waking up from suspend again, etc;Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);Similar;0.6725658178329468
adds the BYT_TRIG_LVL flag to this;so now it is turned into a level interrupt which fires both when low and high, iow it simply always fires leading to an interrupt storm, the tablet immediately waking up from suspend again, etc;have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;Similar;0.5273377895355225
adds the BYT_TRIG_LVL flag to this;so now it is turned into a level interrupt which fires both when low and high, iow it simply always fires leading to an interrupt storm, the tablet immediately waking up from suspend again, etc;This patch adds a mechanism to insert lid events as a compensation for the platform triggered ones to form a complete event switches  ;in order to make sure that the platform triggered events can always be reliably delivered to the userspace;Similar;0.5356853008270264
adds the BYT_TRIG_LVL flag to this;so now it is turned into a level interrupt which fires both when low and high, iow it simply always fires leading to an interrupt storm, the tablet immediately waking up from suspend again, etc;implements this mechanism  ;only;Similar;0.5980066657066345
adds the BYT_TRIG_LVL flag to this;so now it is turned into a level interrupt which fires both when low and high, iow it simply always fires leading to an interrupt storm, the tablet immediately waking up from suspend again, etc;Use key event type to implement ACPI lid events;Another approach;Similar;0.6582648754119873
adds the BYT_TRIG_LVL flag to this;so now it is turned into a level interrupt which fires both when low and high, iow it simply always fires leading to an interrupt storm, the tablet immediately waking up from suspend again, etc;Remove pointer to old lid_sysfs on unbind;ACPI / button;Similar;0.5736364126205444
adds the BYT_TRIG_LVL flag to this;so now it is turned into a level interrupt which fires both when low and high, iow it simply always fires leading to an interrupt storm, the tablet immediately waking up from suspend again, etc;Add ACPI Button event via netlink routine;-;Similar;0.6897749900817871
adds the BYT_TRIG_LVL flag to this;so now it is turned into a level interrupt which fires both when low and high, iow it simply always fires leading to an interrupt storm, the tablet immediately waking up from suspend again, etc;add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;Similar;0.6804633140563965
adds the BYT_TRIG_LVL flag to this;so now it is turned into a level interrupt which fires both when low and high, iow it simply always fires leading to an interrupt storm, the tablet immediately waking up from suspend again, etc;compile error;CONFIG_PM_SLEEP is undefined;Similar;0.5877656936645508
adds the BYT_TRIG_LVL flag to this;so now it is turned into a level interrupt which fires both when low and high, iow it simply always fires leading to an interrupt storm, the tablet immediately waking up from suspend again, etc;Fix enabling button GPEs twice;Fix;Similar;0.5148221850395203
adds the BYT_TRIG_LVL flag to this;so now it is turned into a level interrupt which fires both when low and high, iow it simply always fires leading to an interrupt storm, the tablet immediately waking up from suspend again, etc;Button GPEs have been enabled in the acpi_wake_device_init() during boot;the button driver enables them for the second time;Similar;0.5698068141937256
adds the BYT_TRIG_LVL flag to this;so now it is turned into a level interrupt which fires both when low and high, iow it simply always fires leading to an interrupt storm, the tablet immediately waking up from suspend again, etc;Clean up inclusions of ACPI header files;ACPI;Similar;0.5833245515823364
adds the BYT_TRIG_LVL flag to this;so now it is turned into a level interrupt which fires both when low and high, iow it simply always fires leading to an interrupt storm, the tablet immediately waking up from suspend again, etc;<acpi/acpi_bus.h> be included prior to <acpi/acpi_drivers.h>;so that the acpi_pci_root declarations the latter depends on are always there;Similar;0.6824543476104736
adds the BYT_TRIG_LVL flag to this;so now it is turned into a level interrupt which fires both when low and high, iow it simply always fires leading to an interrupt storm, the tablet immediately waking up from suspend again, etc;Use the patch to replace the origin code;provide a better solution;Similar;0.561265230178833
adds the BYT_TRIG_LVL flag to this;so now it is turned into a level interrupt which fires both when low and high, iow it simply always fires leading to an interrupt storm, the tablet immediately waking up from suspend again, etc;remove unused procfs I/F;unused;Similar;0.511372983455658
adds the BYT_TRIG_LVL flag to this;so now it is turned into a level interrupt which fires both when low and high, iow it simply always fires leading to an interrupt storm, the tablet immediately waking up from suspend again, etc;Use device wakeup flags for handling ACPI wakeup devices;for handling ACPI wakeup devices;Similar;0.6996248960494995
adds the BYT_TRIG_LVL flag to this;so now it is turned into a level interrupt which fires both when low and high, iow it simply always fires leading to an interrupt storm, the tablet immediately waking up from suspend again, etc;use standard device wakeup flags instead of the special ACPI flags for handling those devices;address this problem;Similar;0.5335192084312439
adds the BYT_TRIG_LVL flag to this;so now it is turned into a level interrupt which fires both when low and high, iow it simply always fires leading to an interrupt storm, the tablet immediately waking up from suspend again, etc;Use GPE reference counting to support shared GPEs  ;the wakeup enable mask bits of GPEs are set as soon as the GPEs are enabled to wake up the system;Similar;0.6606996059417725
adds the BYT_TRIG_LVL flag to this;so now it is turned into a level interrupt which fires both when low and high, iow it simply always fires leading to an interrupt storm, the tablet immediately waking up from suspend again, etc;Update gfp.h and slab.h includes  ;prepare for breaking implicit slab.h inclusion from percpu.h;Similar;0.6948180198669434
adds the BYT_TRIG_LVL flag to this;so now it is turned into a level interrupt which fires both when low and high, iow it simply always fires leading to an interrupt storm, the tablet immediately waking up from suspend again, etc;Prepare for this change by updating users of gfp and slab facilities;include those headers directly instead of assuming availability;Similar;0.5921392440795898
adds the BYT_TRIG_LVL flag to this;so now it is turned into a level interrupt which fires both when low and high, iow it simply always fires leading to an interrupt storm, the tablet immediately waking up from suspend again, etc;the following script is used as the basis of conversion;As this conversion needs to touch a large number of source files;Similar;0.6561518907546997
adds the BYT_TRIG_LVL flag to this;so now it is turned into a level interrupt which fires both when low and high, iow it simply always fires leading to an interrupt storm, the tablet immediately waking up from suspend again, etc;put the new include  ;its order conforms to its surrounding;Similar;0.6318449974060059
adds the BYT_TRIG_LVL flag to this;so now it is turned into a level interrupt which fires both when low and high, iow it simply always fires leading to an interrupt storm, the tablet immediately waking up from suspend again, etc;prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;Similar;0.5784493684768677
adds the BYT_TRIG_LVL flag to this;so now it is turned into a level interrupt which fires both when low and high, iow it simply always fires leading to an interrupt storm, the tablet immediately waking up from suspend again, etc;The script was run again  ;to make sure no file was left behind;Similar;0.5362454652786255
adds the BYT_TRIG_LVL flag to this;so now it is turned into a level interrupt which fires both when low and high, iow it simply always fires leading to an interrupt storm, the tablet immediately waking up from suspend again, etc;description of the patch behaviour;an action or a change;Similar;0.5167596340179443
adds the BYT_TRIG_LVL flag to this;so now it is turned into a level interrupt which fires both when low and high, iow it simply always fires leading to an interrupt storm, the tablet immediately waking up from suspend again, etc;percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;Similar;0.6466950178146362
adds the BYT_TRIG_LVL flag to this;so now it is turned into a level interrupt which fires both when low and high, iow it simply always fires leading to an interrupt storm, the tablet immediately waking up from suspend again, etc;Add more run-time wake-up fields;Add more;Similar;0.5197120308876038
adds the BYT_TRIG_LVL flag to this;so now it is turned into a level interrupt which fires both when low and high, iow it simply always fires leading to an interrupt storm, the tablet immediately waking up from suspend again, etc;Introduce a new wake-up flag, always_enabled, for marking devices that should be permanently enabled to generate run-time events  ;devices that should be permanently enabled to generate run-time events;Similar;0.5702664852142334
adds the BYT_TRIG_LVL flag to this;so now it is turned into a level interrupt which fires both when low and high, iow it simply always fires leading to an interrupt storm, the tablet immediately waking up from suspend again, etc;Introduce a reference counter for run-wake devices and a function that will initialize all of the run-time wake-up fields for given device.;-;Similar;0.6569867134094238
adds the BYT_TRIG_LVL flag to this;so now it is turned into a level interrupt which fires both when low and high, iow it simply always fires leading to an interrupt storm, the tablet immediately waking up from suspend again, etc;Add an API to allow devices to indicate whether or not they want their devices GPE to be enabled for both runtime and wakeup events;to allow devices to indicate whether or not they want their devices GPE to be enabled;Similar;0.5907925963401794
adds the BYT_TRIG_LVL flag to this;so now it is turned into a level interrupt which fires both when low and high, iow it simply always fires leading to an interrupt storm, the tablet immediately waking up from suspend again, etc;complain the following warning message;"will

";Similar;0.5563628077507019
adds the BYT_TRIG_LVL flag to this;so now it is turned into a level interrupt which fires both when low and high, iow it simply always fires leading to an interrupt storm, the tablet immediately waking up from suspend again, etc;return -ENODEV;theres no lid device present;Similar;0.6545069217681885
adds the BYT_TRIG_LVL flag to this;so now it is turned into a level interrupt which fires both when low and high, iow it simply always fires leading to an interrupt storm, the tablet immediately waking up from suspend again, etc;whitespace fix  ;This does not change any actual console output;Similar;0.5728229284286499
adds the BYT_TRIG_LVL flag to this;so now it is turned into a level interrupt which fires both when low and high, iow it simply always fires leading to an interrupt storm, the tablet immediately waking up from suspend again, etc;type: Power Button;I dont think theres anything meaningful user-space can do by knowing whether a button is a control method or a fixed hardware button;Similar;0.510613739490509
adds the BYT_TRIG_LVL flag to this;so now it is turned into a level interrupt which fires both when low and high, iow it simply always fires leading to an interrupt storm, the tablet immediately waking up from suspend again, etc;Remove button->device pointer;button;Similar;0.5953985452651978
adds the BYT_TRIG_LVL flag to this;so now it is turned into a level interrupt which fires both when low and high, iow it simply always fires leading to an interrupt storm, the tablet immediately waking up from suspend again, etc;This patch adds temporaries to cache the acpi_device_hid(), acpi_device_name(), and acpi_device_class() pointers;so we dont have to clutter the code with so many uses of those interfaces;Similar;0.5790639519691467
adds the BYT_TRIG_LVL flag to this;so now it is turned into a level interrupt which fires both when low and high, iow it simply always fires leading to an interrupt storm, the tablet immediately waking up from suspend again, etc;changes a bit of whitespace to follow Linux conventions;follow Linux conventions;Similar;0.5752615928649902
adds the BYT_TRIG_LVL flag to this;so now it is turned into a level interrupt which fires both when low and high, iow it simply always fires leading to an interrupt storm, the tablet immediately waking up from suspend again, etc;use .notify method instead of installing handler directly  ;-;Similar;0.5707790851593018
adds the BYT_TRIG_LVL flag to this;so now it is turned into a level interrupt which fires both when low and high, iow it simply always fires leading to an interrupt storm, the tablet immediately waking up from suspend again, etc;convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.6986748576164246
adds the BYT_TRIG_LVL flag to this;so now it is turned into a level interrupt which fires both when low and high, iow it simply always fires leading to an interrupt storm, the tablet immediately waking up from suspend again, etc;"proc_fops is declared as ""const""";should give some thoughts;Similar;0.7084385752677917
adds the BYT_TRIG_LVL flag to this;so now it is turned into a level interrupt which fires both when low and high, iow it simply always fires leading to an interrupt storm, the tablet immediately waking up from suspend again, etc;start using GPE from userspace;GPE is already disabled in interrupt context;Similar;0.7265276908874512
adds the BYT_TRIG_LVL flag to this;so now it is turned into a level interrupt which fires both when low and high, iow it simply always fires leading to an interrupt storm, the tablet immediately waking up from suspend again, etc;Move all the component definitions for drivers to a single shared place, include/acpi/acpi_drivers.h  ;to have a single shared place;Similar;0.6710320711135864
adds the BYT_TRIG_LVL flag to this;so now it is turned into a level interrupt which fires both when low and high, iow it simply always fires leading to an interrupt storm, the tablet immediately waking up from suspend again, etc;"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.5504972338676453
adds the BYT_TRIG_LVL flag to this;so now it is turned into a level interrupt which fires both when low and high, iow it simply always fires leading to an interrupt storm, the tablet immediately waking up from suspend again, etc;Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;Similar;0.6812212467193604
adds the BYT_TRIG_LVL flag to this;so now it is turned into a level interrupt which fires both when low and high, iow it simply always fires leading to an interrupt storm, the tablet immediately waking up from suspend again, etc;use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Similar;0.6330078840255737
adds the BYT_TRIG_LVL flag to this;so now it is turned into a level interrupt which fires both when low and high, iow it simply always fires leading to an interrupt storm, the tablet immediately waking up from suspend again, etc;Use proc_create()/proc_create_data() to make sure that ->proc_fops and ->data be setup;before gluing PDE to main tree;Similar;0.6558630466461182
adds the BYT_TRIG_LVL flag to this;so now it is turned into a level interrupt which fires both when low and high, iow it simply always fires leading to an interrupt storm, the tablet immediately waking up from suspend again, etc;get rid of input BIT* duplicate defines;duplicate;Similar;0.6098345518112183
adds the BYT_TRIG_LVL flag to this;so now it is turned into a level interrupt which fires both when low and high, iow it simply always fires leading to an interrupt storm, the tablet immediately waking up from suspend again, etc;Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;Similar;0.5046558976173401
adds the BYT_TRIG_LVL flag to this;so now it is turned into a level interrupt which fires both when low and high, iow it simply always fires leading to an interrupt storm, the tablet immediately waking up from suspend again, etc;Define the macro temporarily in a local manner;all those local definitions will be removed further in this patchset (to not break bisecting);Similar;0.5393177270889282
adds the BYT_TRIG_LVL flag to this;so now it is turned into a level interrupt which fires both when low and high, iow it simply always fires leading to an interrupt storm, the tablet immediately waking up from suspend again, etc;Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;Similar;0.7851114273071289
adds the BYT_TRIG_LVL flag to this;so now it is turned into a level interrupt which fires both when low and high, iow it simply always fires leading to an interrupt storm, the tablet immediately waking up from suspend again, etc;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.5894805192947388
adds the BYT_TRIG_LVL flag to this;so now it is turned into a level interrupt which fires both when low and high, iow it simply always fires leading to an interrupt storm, the tablet immediately waking up from suspend again, etc;fix acpi_driver.name usage;fix;Similar;0.6675771474838257
adds the BYT_TRIG_LVL flag to this;so now it is turned into a level interrupt which fires both when low and high, iow it simply always fires leading to an interrupt storm, the tablet immediately waking up from suspend again, etc;ls bus/acpi/drivers  ;Display the list of ACPI drivers.;Similar;0.5201497077941895
adds the BYT_TRIG_LVL flag to this;so now it is turned into a level interrupt which fires both when low and high, iow it simply always fires leading to an interrupt storm, the tablet immediately waking up from suspend again, etc;"Make ""module name"" actually match the file name";cosmetic only;Similar;0.5681241750717163
adds the BYT_TRIG_LVL flag to this;so now it is turned into a level interrupt which fires both when low and high, iow it simply always fires leading to an interrupt storm, the tablet immediately waking up from suspend again, etc;Use acpi_devices handle instead of drivers  ;-;Similar;0.536314845085144
adds the BYT_TRIG_LVL flag to this;so now it is turned into a level interrupt which fires both when low and high, iow it simply always fires leading to an interrupt storm, the tablet immediately waking up from suspend again, etc;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.6277817487716675
adds the BYT_TRIG_LVL flag to this;so now it is turned into a level interrupt which fires both when low and high, iow it simply always fires leading to an interrupt storm, the tablet immediately waking up from suspend again, etc;restore /proc/acpi/button/ (ala 2.6.12)  ;[ACPI];Similar;0.6202297210693359
adds the BYT_TRIG_LVL flag to this;so now it is turned into a level interrupt which fires both when low and high, iow it simply always fires leading to an interrupt storm, the tablet immediately waking up from suspend again, etc;"Create a separate ""historical"" git archive";about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated;Similar;0.5777472257614136
This commit adds a quirk for this;as no lid-switch function is better then the interrupt storm; the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;Similar;0.5174340605735779
This commit adds a quirk for this;as no lid-switch function is better then the interrupt storm;"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;Similar;0.5092371702194214
This commit adds a quirk for this;as no lid-switch function is better then the interrupt storm;re-using the existing option;keeps things simple and it will make it much easier to add DMI quirks which can either disable the LID completely or set another non-default lid_init_state value, both of which are necessary on some devices;Similar;0.7128103971481323
This commit adds a quirk for this;as no lid-switch function is better then the interrupt storm;[ an action or a change that has been made, including a description of the patch behaviour ];[ the reason for a decision or value judgment ];Similar;0.7176603078842163
This commit adds a quirk for this;as no lid-switch function is better then the interrupt storm;Increment wakeup count only when notified;-;Similar;0.5195488929748535
This commit adds a quirk for this;as no lid-switch function is better then the interrupt storm;adds an acpi_handle_debug call  ;to help debugging this;Similar;0.571556806564331
This commit adds a quirk for this;as no lid-switch function is better then the interrupt storm;Fix function prototypes for module_param_call();-;Similar;0.5187613368034363
This commit adds a quirk for this;as no lid-switch function is better then the interrupt storm;"the ""open"" choice is worse";"the ""method"" operation mode implementation can be buggy on some platforms";Similar;0.6105966567993164
This commit adds a quirk for this;as no lid-switch function is better then the interrupt storm;Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;Similar;0.5247482657432556
This commit adds a quirk for this;as no lid-switch function is better then the interrupt storm;This patch makes it deprecated;lid_init__state=open is more useful than this mode;Similar;0.6331790089607239
This commit adds a quirk for this;as no lid-switch function is better then the interrupt storm;implements this mechanism  ;only;Similar;0.7617400884628296
This commit adds a quirk for this;as no lid-switch function is better then the interrupt storm;Use key event type to implement ACPI lid events;Another approach;Similar;0.6741021871566772
This commit adds a quirk for this;as no lid-switch function is better then the interrupt storm;Correct a wrong macro usage;This patch simplies the code by merging some redundant code;Similar;0.6255391836166382
This commit adds a quirk for this;as no lid-switch function is better then the interrupt storm;compile error;CONFIG_PM_SLEEP is undefined;Similar;0.6885656118392944
This commit adds a quirk for this;as no lid-switch function is better then the interrupt storm;Use the patch to replace the origin code;provide a better solution;Similar;0.5012497901916504
This commit adds a quirk for this;as no lid-switch function is better then the interrupt storm;Avoid disabling wakeup unnecessarily on remove;-;Similar;0.547446608543396
This commit adds a quirk for this;as no lid-switch function is better then the interrupt storm;Use GPE reference counting to support shared GPEs  ;the wakeup enable mask bits of GPEs are set as soon as the GPEs are enabled to wake up the system;Similar;0.5246378183364868
This commit adds a quirk for this;as no lid-switch function is better then the interrupt storm;This will allow us to simplify the GPE handling code quite a bit;that change is too intrusive for 2.6.35;Similar;0.5805319547653198
This commit adds a quirk for this;as no lid-switch function is better then the interrupt storm;the following script is used as the basis of conversion;As this conversion needs to touch a large number of source files;Similar;0.6166713237762451
This commit adds a quirk for this;as no lid-switch function is better then the interrupt storm;only the necessary includes are there;necessary;Similar;0.6661656498908997
This commit adds a quirk for this;as no lid-switch function is better then the interrupt storm;put the new include  ;its order conforms to its surrounding;Similar;0.6312212944030762
This commit adds a quirk for this;as no lid-switch function is better then the interrupt storm;prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;Similar;0.5201891660690308
This commit adds a quirk for this;as no lid-switch function is better then the interrupt storm;The script was run again  ;to make sure no file was left behind;Similar;0.5737078189849854
This commit adds a quirk for this;as no lid-switch function is better then the interrupt storm;description of the patch behaviour;an action or a change;Similar;0.6503850221633911
This commit adds a quirk for this;as no lid-switch function is better then the interrupt storm;failures were fixed;Build tests were done on the following configurations;Similar;0.6473115086555481
This commit adds a quirk for this;as no lid-switch function is better then the interrupt storm;percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;Similar;0.5914644002914429
This commit adds a quirk for this;as no lid-switch function is better then the interrupt storm;Im fairly confident about the coverage of this conversion patch  ;Given the fact that I had only a couple of failures from tests on step 6;Similar;0.5117211937904358
This commit adds a quirk for this;as no lid-switch function is better then the interrupt storm;complain the following warning message;"will

";Similar;0.6992162466049194
This commit adds a quirk for this;as no lid-switch function is better then the interrupt storm;"This patch is to eliminate the above warning message
";Device PNP0C0D:00 failed to resume: error 1;Similar;0.5460141897201538
This commit adds a quirk for this;as no lid-switch function is better then the interrupt storm;return -ENODEV;theres no lid device present;Similar;0.6731385588645935
This commit adds a quirk for this;as no lid-switch function is better then the interrupt storm;whitespace fix  ;This does not change any actual console output;Similar;0.6251974105834961
This commit adds a quirk for this;as no lid-switch function is better then the interrupt storm;type: Power Button;I dont think theres anything meaningful user-space can do by knowing whether a button is a control method or a fixed hardware button;Similar;0.5330604314804077
This commit adds a quirk for this;as no lid-switch function is better then the interrupt storm;Remove button->device pointer;button;Similar;0.5282195210456848
This commit adds a quirk for this;as no lid-switch function is better then the interrupt storm;Setting ->owner as done currently (pde->owner = THIS_MODULE) is racy;as correctly noted at bug #12454;Similar;0.6261657476425171
This commit adds a quirk for this;as no lid-switch function is better then the interrupt storm;"proc_fops is declared as ""const""";should give some thoughts;Similar;0.6461780071258545
This commit adds a quirk for this;as no lid-switch function is better then the interrupt storm;start using GPE from userspace;GPE is already disabled in interrupt context;Similar;0.501752495765686
This commit adds a quirk for this;as no lid-switch function is better then the interrupt storm;"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.5772801637649536
This commit adds a quirk for this;as no lid-switch function is better then the interrupt storm;use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Similar;0.5386095643043518
This commit adds a quirk for this;as no lid-switch function is better then the interrupt storm;Use proc_create()/proc_create_data() to make sure that ->proc_fops and ->data be setup;before gluing PDE to main tree;Similar;0.5346977114677429
This commit adds a quirk for this;as no lid-switch function is better then the interrupt storm;get rid of input BIT* duplicate defines;duplicate;Similar;0.5630555152893066
This commit adds a quirk for this;as no lid-switch function is better then the interrupt storm;Define the macro temporarily in a local manner;all those local definitions will be removed further in this patchset (to not break bisecting);Similar;0.5622165203094482
This commit adds a quirk for this;as no lid-switch function is better then the interrupt storm;"Make ""module name"" actually match the file name";cosmetic only;Similar;0.519714891910553
This commit adds a quirk for this;as no lid-switch function is better then the interrupt storm;"Invoke with ; as leaving it off confuses Lindent  ";gcc doesnt care;Similar;0.664711058139801
This commit adds a quirk for this;as no lid-switch function is better then the interrupt storm;Fix indentation where Lindent did get confused  ;Lindent did get confused;Similar;0.7252585887908936
Remove unused acpi_lid_notifier_[un]register() functions;unused;Setting lid_init_state to ACPI_BUTTON_LID_INIT_OPEN on the T200TA  ;fixes the unwanted behavior, adds a DMI based quirk;Similar;0.5178030729293823
Remove unused acpi_lid_notifier_[un]register() functions;unused; the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;Similar;0.5770934820175171
Remove unused acpi_lid_notifier_[un]register() functions;unused;Turn lid_blacklst DMI table into a generic quirk table;ACPI: button;Similar;0.634992241859436
Remove unused acpi_lid_notifier_[un]register() functions;unused;"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;Similar;0.7210644483566284
Remove unused acpi_lid_notifier_[un]register() functions;unused;re-using the existing option;keeps things simple and it will make it much easier to add DMI quirks which can either disable the LID completely or set another non-default lid_init_state value, both of which are necessary on some devices;Similar;0.541569709777832
Remove unused acpi_lid_notifier_[un]register() functions;unused;update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;Similar;0.5395908355712891
Remove unused acpi_lid_notifier_[un]register() functions;unused;Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;Similar;0.7831925749778748
Remove unused acpi_lid_notifier_[un]register() functions;unused;Fix a build warning in the ACPI button driver when CONFIG_PROC_FS is not enabled by marking the unused function as __maybe_unused;not enabled, unused;Similar;0.6033467650413513
Remove unused acpi_lid_notifier_[un]register() functions;unused;only trigger acpi_pm_wakeup_event() in the acpi_button_notify() path and dont do that in the acpi_lid_initialize_state() path;To avoid the confusion;Similar;0.5943593382835388
Remove unused acpi_lid_notifier_[un]register() functions;unused;Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;Similar;0.5820348858833313
Remove unused acpi_lid_notifier_[un]register() functions;unused;"The only solution is to add a DMI based blacklist and ignore the LID device on these tablets.
";There is nothing the ACPI button driver (or the gpio code) can do to fix this.;Similar;0.5233908295631409
Remove unused acpi_lid_notifier_[un]register() functions;unused;adds an acpi_handle_debug call  ;to help debugging this;Similar;0.7078785300254822
Remove unused acpi_lid_notifier_[un]register() functions;unused;Fix function prototypes for module_param_call();-;Similar;0.6600990295410156
Remove unused acpi_lid_notifier_[un]register() functions;unused;fix whitespace in pr_fmt() to align log entries;align log entries;Similar;0.6144570112228394
Remove unused acpi_lid_notifier_[un]register() functions;unused;It breaks docking stations basically;there is no way to have a user-space hwdb to fix that;Similar;0.5707268118858337
Remove unused acpi_lid_notifier_[un]register() functions;unused;libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;Similar;0.5230844020843506
Remove unused acpi_lid_notifier_[un]register() functions;unused;"userspace requires to see ""close"" event after the system is resumed";so that it can determine whether the internal display should remain dark and the external display should be lit on;Similar;0.5913845896720886
Remove unused acpi_lid_notifier_[un]register() functions;unused;Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;Similar;0.7156486511230469
Remove unused acpi_lid_notifier_[un]register() functions;unused;Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);Similar;0.8566288948059082
Remove unused acpi_lid_notifier_[un]register() functions;unused;This patch makes it deprecated;lid_init__state=open is more useful than this mode;Similar;0.5820246934890747
Remove unused acpi_lid_notifier_[un]register() functions;unused;have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;Similar;0.8139975666999817
Remove unused acpi_lid_notifier_[un]register() functions;unused;it should not send the complement switch event for the unreliable initial lid state notification;However this mechanism is not suitable for lid_init_state=open/method;Similar;0.5818719267845154
Remove unused acpi_lid_notifier_[un]register() functions;unused;Use key event type to implement ACPI lid events;Another approach;Similar;0.5138645172119141
Remove unused acpi_lid_notifier_[un]register() functions;unused;Remove pointer to old lid_sysfs on unbind;ACPI / button;Similar;0.8895823955535889
Remove unused acpi_lid_notifier_[un]register() functions;unused;When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;Similar;0.7486950159072876
Remove unused acpi_lid_notifier_[un]register() functions;unused;Correct a wrong macro usage;This patch simplies the code by merging some redundant code;Similar;0.6222031116485596
Remove unused acpi_lid_notifier_[un]register() functions;unused;this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;Similar;0.7569127082824707
Remove unused acpi_lid_notifier_[un]register() functions;unused;There is no need to carry potentially outdated Free Software Foundation mailing address in file headers;since the COPYING file includes it;Similar;0.5276378393173218
Remove unused acpi_lid_notifier_[un]register() functions;unused;"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;Similar;0.6283569931983948
Remove unused acpi_lid_notifier_[un]register() functions;unused;Add ACPI Button event via netlink routine;-;Similar;0.5099381804466248
Remove unused acpi_lid_notifier_[un]register() functions;unused;removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;Similar;0.7511986494064331
Remove unused acpi_lid_notifier_[un]register() functions;unused;This caused ACPI shutdown regression on gentoo;VirtualBox;Similar;0.7866597175598145
Remove unused acpi_lid_notifier_[un]register() functions;unused;add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;Similar;0.5482965707778931
Remove unused acpi_lid_notifier_[un]register() functions;unused;fix button driver compile error when CONFIG_PM_SLEEP is undefined;CONFIG_PM_SLEEP is undefined;Similar;0.5835078954696655
Remove unused acpi_lid_notifier_[un]register() functions;unused;compile error;CONFIG_PM_SLEEP is undefined;Similar;0.6251553297042847
Remove unused acpi_lid_notifier_[un]register() functions;unused;remove the GPE enabling code from the button driver;to avoid the problem;Similar;0.7852272987365723
Remove unused acpi_lid_notifier_[un]register() functions;unused;Clean up inclusions of ACPI header files;ACPI;Similar;0.636611819267273
Remove unused acpi_lid_notifier_[un]register() functions;unused;Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;Similar;0.7557265758514404
Remove unused acpi_lid_notifier_[un]register() functions;unused;<acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> should not be included directly from any files that are built for CONFIG_ACPI unset;because that generally leads to build warnings about undefined symbols in !CONFIG_ACPI builds;Similar;0.5981752276420593
Remove unused acpi_lid_notifier_[un]register() functions;unused;<acpi/acpi_bus.h> be included prior to <acpi/acpi_drivers.h>;so that the acpi_pci_root declarations the latter depends on are always there;Similar;0.5049777030944824
Remove unused acpi_lid_notifier_[un]register() functions;unused;Use the patch to replace the origin code;provide a better solution;Similar;0.6365472078323364
Remove unused acpi_lid_notifier_[un]register() functions;unused;Remove useless type argument of driver .remove() operation;useless;Similar;0.822012186050415
Remove unused acpi_lid_notifier_[un]register() functions;unused;"The second argument of ACPI driver .remove() operation is only used by the ACPI processor driver
";the value passed to that driver through it is always available from the given struct acpi_device objects removal_type field;Similar;0.6437445878982544
Remove unused acpi_lid_notifier_[un]register() functions;unused;drop the second ACPI driver .remove() argument  ;the second ACPI driver .remove() argument is in fact useless;Similar;0.8156611919403076
Remove unused acpi_lid_notifier_[un]register() functions;unused;Fix unused function warnings for CONFIG_PM_SLEEP;unused function warnings;Similar;0.6882566213607788
Remove unused acpi_lid_notifier_[un]register() functions;unused;add #ifdefs to prevent them from being built in that case  ;several suspend/resume functions in ACPI drivers are not used for CONFIG_PM_SLEEP unset;Similar;0.6239405274391174
Remove unused acpi_lid_notifier_[un]register() functions;unused;remove unused procfs I/F;unused;Similar;0.8759138584136963
Remove unused acpi_lid_notifier_[un]register() functions;unused;Remove unused ACPI button procfs interface;unused;Similar;0.8617091774940491
Remove unused acpi_lid_notifier_[un]register() functions;unused;Avoid disabling wakeup unnecessarily on remove;-;Similar;0.6168138980865479
Remove unused acpi_lid_notifier_[un]register() functions;unused;use standard device wakeup flags instead of the special ACPI flags for handling those devices;address this problem;Similar;0.5638189315795898
Remove unused acpi_lid_notifier_[un]register() functions;unused;Update gfp.h and slab.h includes  ;prepare for breaking implicit slab.h inclusion from percpu.h;Similar;0.5251099467277527
Remove unused acpi_lid_notifier_[un]register() functions;unused;prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;Similar;0.5031881332397461
Remove unused acpi_lid_notifier_[un]register() functions;unused;CONFIG_GCOV_KERNEL was turned off for all tests and a few more options had to be turned off depending on archs to make things build;my distributed build env didnt work with gcov compiles, like ipr on powerpc/64 which failed due to missing writeq;Similar;0.5396690964698792
Remove unused acpi_lid_notifier_[un]register() functions;unused;percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;Similar;0.6823282241821289
Remove unused acpi_lid_notifier_[un]register() functions;unused;Remove the old GPE type handling entirely  ;Gets rid of various quirks, like the implicit disabling with GPE type setting;Similar;0.7580289840698242
Remove unused acpi_lid_notifier_[un]register() functions;unused;"This patch is to eliminate the above warning message
";Device PNP0C0D:00 failed to resume: error 1;Similar;0.6670854687690735
Remove unused acpi_lid_notifier_[un]register() functions;unused;dont try to use a non-existent lid device;non-existent;Similar;0.5996953248977661
Remove unused acpi_lid_notifier_[un]register() functions;unused;return -ENODEV;theres no lid device present;Similar;0.5340065360069275
Remove unused acpi_lid_notifier_[un]register() functions;unused;whitespace fix  ;This does not change any actual console output;Similar;0.6202358603477478
Remove unused acpi_lid_notifier_[un]register() functions;unused;Remove button->device pointer;button;Similar;0.8291540145874023
Remove unused acpi_lid_notifier_[un]register() functions;unused;We no longer need a pointer from struct acpi_button back to the struct acpi_device;no longer need;Similar;0.7598243951797485
Remove unused acpi_lid_notifier_[un]register() functions;unused;This patch adds temporaries to cache the acpi_device_hid(), acpi_device_name(), and acpi_device_class() pointers;so we dont have to clutter the code with so many uses of those interfaces;Similar;0.5317853689193726
Remove unused acpi_lid_notifier_[un]register() functions;unused;changes a bit of whitespace to follow Linux conventions;follow Linux conventions;Similar;0.5216545462608337
Remove unused acpi_lid_notifier_[un]register() functions;unused;use .notify method instead of installing handler directly  ;-;Similar;0.6773338913917542
Remove unused acpi_lid_notifier_[un]register() functions;unused;convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.685025691986084
Remove unused acpi_lid_notifier_[un]register() functions;unused;Setting ->owner as done currently (pde->owner = THIS_MODULE) is racy;as correctly noted at bug #12454;Similar;0.5548413991928101
Remove unused acpi_lid_notifier_[un]register() functions;unused;"proc_fops is declared as ""const""";should give some thoughts;Similar;0.6564916372299194
Remove unused acpi_lid_notifier_[un]register() functions;unused;"rmmoded directories will be empty and return ""."" and "".."" -- no harm";no harm;Similar;0.5853898525238037
Remove unused acpi_lid_notifier_[un]register() functions;unused;Move all the component definitions for drivers to a single shared place, include/acpi/acpi_drivers.h  ;to have a single shared place;Similar;0.5329729914665222
Remove unused acpi_lid_notifier_[un]register() functions;unused;"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.5711929798126221
Remove unused acpi_lid_notifier_[un]register() functions;unused;Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;Similar;0.6543025970458984
Remove unused acpi_lid_notifier_[un]register() functions;unused;use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Similar;0.7002788782119751
Remove unused acpi_lid_notifier_[un]register() functions;unused;get rid of input BIT* duplicate defines;duplicate;Similar;0.862663984298706
Remove unused acpi_lid_notifier_[un]register() functions;unused;Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;Similar;0.8250961303710938
Remove unused acpi_lid_notifier_[un]register() functions;unused;Define the macro temporarily in a local manner;all those local definitions will be removed further in this patchset (to not break bisecting);Similar;0.5447992086410522
Remove unused acpi_lid_notifier_[un]register() functions;unused;Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;Similar;0.6525581479072571
Remove unused acpi_lid_notifier_[un]register() functions;unused;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.8576558828353882
Remove unused acpi_lid_notifier_[un]register() functions;unused;fix acpi_driver.name usage;fix;Similar;0.6625680923461914
Remove unused acpi_lid_notifier_[un]register() functions;unused;"Invoke with ; as leaving it off confuses Lindent  ";gcc doesnt care;Similar;0.6364732980728149
Remove unused acpi_lid_notifier_[un]register() functions;unused;Fix indentation where Lindent did get confused  ;Lindent did get confused;Similar;0.5795161724090576
Remove unused acpi_lid_notifier_[un]register() functions;unused;remove unnecessary casts and variable initializations, clean up formatting;unnecessary;Similar;0.6528837084770203
Remove unused acpi_lid_notifier_[un]register() functions;unused;Remove unneeded acpi_handle from driver;unneeded;Similar;0.8088442087173462
Remove unused acpi_lid_notifier_[un]register() functions;unused;Use acpi_devices handle instead of drivers  ;-;Similar;0.7445847392082214
Remove unused acpi_lid_notifier_[un]register() functions;unused;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.8023233413696289
Remove unused acpi_lid_notifier_[un]register() functions;unused;restore /proc/acpi/button/ (ala 2.6.12)  ;[ACPI];Similar;0.5185471773147583
Remove unused acpi_lid_notifier_[un]register() functions;unused;"Create a separate ""historical"" git archive";about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated;Similar;0.7461610436439514
Setting lid_init_state to ACPI_BUTTON_LID_INIT_OPEN on the T200TA  ;fixes the unwanted behavior, adds a DMI based quirk; the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;Similar;0.8589924573898315
Setting lid_init_state to ACPI_BUTTON_LID_INIT_OPEN on the T200TA  ;fixes the unwanted behavior, adds a DMI based quirk;Turn lid_blacklst DMI table into a generic quirk table;ACPI: button;Similar;0.5728804469108582
Setting lid_init_state to ACPI_BUTTON_LID_INIT_OPEN on the T200TA  ;fixes the unwanted behavior, adds a DMI based quirk;"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;Similar;0.6452236175537109
Setting lid_init_state to ACPI_BUTTON_LID_INIT_OPEN on the T200TA  ;fixes the unwanted behavior, adds a DMI based quirk;update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;Similar;0.6504782438278198
Setting lid_init_state to ACPI_BUTTON_LID_INIT_OPEN on the T200TA  ;fixes the unwanted behavior, adds a DMI based quirk;Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;Similar;0.6543572545051575
Setting lid_init_state to ACPI_BUTTON_LID_INIT_OPEN on the T200TA  ;fixes the unwanted behavior, adds a DMI based quirk;Fix a build warning in the ACPI button driver when CONFIG_PROC_FS is not enabled by marking the unused function as __maybe_unused;not enabled, unused;Similar;0.597423791885376
Setting lid_init_state to ACPI_BUTTON_LID_INIT_OPEN on the T200TA  ;fixes the unwanted behavior, adds a DMI based quirk;only trigger acpi_pm_wakeup_event() in the acpi_button_notify() path and dont do that in the acpi_lid_initialize_state() path;To avoid the confusion;Similar;0.6329075694084167
Setting lid_init_state to ACPI_BUTTON_LID_INIT_OPEN on the T200TA  ;fixes the unwanted behavior, adds a DMI based quirk;Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;Similar;0.7267392873764038
Setting lid_init_state to ACPI_BUTTON_LID_INIT_OPEN on the T200TA  ;fixes the unwanted behavior, adds a DMI based quirk;making the ACPI button driver loadable as a module even if not booted in ACPI mode;to fix the asymmetry and provide the acpi_lid_open() symbol;Similar;0.624998927116394
Setting lid_init_state to ACPI_BUTTON_LID_INIT_OPEN on the T200TA  ;fixes the unwanted behavior, adds a DMI based quirk;adds an acpi_handle_debug call  ;to help debugging this;Similar;0.6695876121520996
Setting lid_init_state to ACPI_BUTTON_LID_INIT_OPEN on the T200TA  ;fixes the unwanted behavior, adds a DMI based quirk;Fix function prototypes for module_param_call();-;Similar;0.589622974395752
Setting lid_init_state to ACPI_BUTTON_LID_INIT_OPEN on the T200TA  ;fixes the unwanted behavior, adds a DMI based quirk;fix whitespace in pr_fmt() to align log entries;align log entries;Similar;0.6457180976867676
Setting lid_init_state to ACPI_BUTTON_LID_INIT_OPEN on the T200TA  ;fixes the unwanted behavior, adds a DMI based quirk;The ->sync hook allows all of the relevant event queues to be flushed;to prevent events from being missed due to race conditions;Similar;0.5645029544830322
Setting lid_init_state to ACPI_BUTTON_LID_INIT_OPEN on the T200TA  ;fixes the unwanted behavior, adds a DMI based quirk;libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;Similar;0.7103474736213684
Setting lid_init_state to ACPI_BUTTON_LID_INIT_OPEN on the T200TA  ;fixes the unwanted behavior, adds a DMI based quirk;assume the user will use the internal keyboard before this timeout expires;logind only checks the lid switch value after a timeout;Similar;0.5701004266738892
Setting lid_init_state to ACPI_BUTTON_LID_INIT_OPEN on the T200TA  ;fixes the unwanted behavior, adds a DMI based quirk;Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;Similar;0.8063229918479919
Setting lid_init_state to ACPI_BUTTON_LID_INIT_OPEN on the T200TA  ;fixes the unwanted behavior, adds a DMI based quirk;Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);Similar;0.6081960201263428
Setting lid_init_state to ACPI_BUTTON_LID_INIT_OPEN on the T200TA  ;fixes the unwanted behavior, adds a DMI based quirk;The ->sync hook allows all of the relevant event queues to be flushed;to prevent events from being missed due to race conditions;Similar;0.5645029544830322
Setting lid_init_state to ACPI_BUTTON_LID_INIT_OPEN on the T200TA  ;fixes the unwanted behavior, adds a DMI based quirk;have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;Similar;0.5220029354095459
Setting lid_init_state to ACPI_BUTTON_LID_INIT_OPEN on the T200TA  ;fixes the unwanted behavior, adds a DMI based quirk;This patch adds a mechanism to insert lid events as a compensation for the platform triggered ones to form a complete event switches  ;in order to make sure that the platform triggered events can always be reliably delivered to the userspace;Similar;0.642221212387085
Setting lid_init_state to ACPI_BUTTON_LID_INIT_OPEN on the T200TA  ;fixes the unwanted behavior, adds a DMI based quirk;Use key event type to implement ACPI lid events;Another approach;Similar;0.572019100189209
Setting lid_init_state to ACPI_BUTTON_LID_INIT_OPEN on the T200TA  ;fixes the unwanted behavior, adds a DMI based quirk;Remove pointer to old lid_sysfs on unbind;ACPI / button;Similar;0.5721988677978516
Setting lid_init_state to ACPI_BUTTON_LID_INIT_OPEN on the T200TA  ;fixes the unwanted behavior, adds a DMI based quirk;"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;Similar;0.644752025604248
Setting lid_init_state to ACPI_BUTTON_LID_INIT_OPEN on the T200TA  ;fixes the unwanted behavior, adds a DMI based quirk;Add ACPI Button event via netlink routine;-;Similar;0.7701094150543213
Setting lid_init_state to ACPI_BUTTON_LID_INIT_OPEN on the T200TA  ;fixes the unwanted behavior, adds a DMI based quirk;removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;Similar;0.5836164355278015
Setting lid_init_state to ACPI_BUTTON_LID_INIT_OPEN on the T200TA  ;fixes the unwanted behavior, adds a DMI based quirk;This caused ACPI shutdown regression on gentoo;VirtualBox;Similar;0.5004298090934753
Setting lid_init_state to ACPI_BUTTON_LID_INIT_OPEN on the T200TA  ;fixes the unwanted behavior, adds a DMI based quirk;add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;Similar;0.7469149827957153
Setting lid_init_state to ACPI_BUTTON_LID_INIT_OPEN on the T200TA  ;fixes the unwanted behavior, adds a DMI based quirk;fix button driver compile error when CONFIG_PM_SLEEP is undefined;CONFIG_PM_SLEEP is undefined;Similar;0.5984306931495667
Setting lid_init_state to ACPI_BUTTON_LID_INIT_OPEN on the T200TA  ;fixes the unwanted behavior, adds a DMI based quirk;Fix enabling button GPEs twice;Fix;Similar;0.59610915184021
Setting lid_init_state to ACPI_BUTTON_LID_INIT_OPEN on the T200TA  ;fixes the unwanted behavior, adds a DMI based quirk;Button GPEs have been enabled in the acpi_wake_device_init() during boot;the button driver enables them for the second time;Similar;0.7512153387069702
Setting lid_init_state to ACPI_BUTTON_LID_INIT_OPEN on the T200TA  ;fixes the unwanted behavior, adds a DMI based quirk;remove the GPE enabling code from the button driver;to avoid the problem;Similar;0.5853928327560425
Setting lid_init_state to ACPI_BUTTON_LID_INIT_OPEN on the T200TA  ;fixes the unwanted behavior, adds a DMI based quirk;Clean up inclusions of ACPI header files;ACPI;Similar;0.5444601774215698
Setting lid_init_state to ACPI_BUTTON_LID_INIT_OPEN on the T200TA  ;fixes the unwanted behavior, adds a DMI based quirk;Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;Similar;0.5411432981491089
Setting lid_init_state to ACPI_BUTTON_LID_INIT_OPEN on the T200TA  ;fixes the unwanted behavior, adds a DMI based quirk;<acpi/acpi_bus.h> be included prior to <acpi/acpi_drivers.h>;so that the acpi_pci_root declarations the latter depends on are always there;Similar;0.5984474420547485
Setting lid_init_state to ACPI_BUTTON_LID_INIT_OPEN on the T200TA  ;fixes the unwanted behavior, adds a DMI based quirk;Fix unused function warnings for CONFIG_PM_SLEEP;unused function warnings;Similar;0.5115047097206116
Setting lid_init_state to ACPI_BUTTON_LID_INIT_OPEN on the T200TA  ;fixes the unwanted behavior, adds a DMI based quirk;Remove unused ACPI button procfs interface;unused;Similar;0.6051498651504517
Setting lid_init_state to ACPI_BUTTON_LID_INIT_OPEN on the T200TA  ;fixes the unwanted behavior, adds a DMI based quirk;Use device wakeup flags for handling ACPI wakeup devices;for handling ACPI wakeup devices;Similar;0.6253464221954346
Setting lid_init_state to ACPI_BUTTON_LID_INIT_OPEN on the T200TA  ;fixes the unwanted behavior, adds a DMI based quirk;use standard device wakeup flags instead of the special ACPI flags for handling those devices;address this problem;Similar;0.5565916299819946
Setting lid_init_state to ACPI_BUTTON_LID_INIT_OPEN on the T200TA  ;fixes the unwanted behavior, adds a DMI based quirk;Prepare for this change by updating users of gfp and slab facilities;include those headers directly instead of assuming availability;Similar;0.5005198121070862
Setting lid_init_state to ACPI_BUTTON_LID_INIT_OPEN on the T200TA  ;fixes the unwanted behavior, adds a DMI based quirk;prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;Similar;0.5192609429359436
Setting lid_init_state to ACPI_BUTTON_LID_INIT_OPEN on the T200TA  ;fixes the unwanted behavior, adds a DMI based quirk;Introduce a new wake-up flag, always_enabled, for marking devices that should be permanently enabled to generate run-time events  ;devices that should be permanently enabled to generate run-time events;Similar;0.6061015129089355
Setting lid_init_state to ACPI_BUTTON_LID_INIT_OPEN on the T200TA  ;fixes the unwanted behavior, adds a DMI based quirk;Introduce a reference counter for run-wake devices and a function that will initialize all of the run-time wake-up fields for given device.;-;Similar;0.5677435994148254
Setting lid_init_state to ACPI_BUTTON_LID_INIT_OPEN on the T200TA  ;fixes the unwanted behavior, adds a DMI based quirk;Add an API to allow devices to indicate whether or not they want their devices GPE to be enabled for both runtime and wakeup events;to allow devices to indicate whether or not they want their devices GPE to be enabled;Similar;0.625588595867157
Setting lid_init_state to ACPI_BUTTON_LID_INIT_OPEN on the T200TA  ;fixes the unwanted behavior, adds a DMI based quirk;we could install either a fixed event handler or a notify handler, but the Linux/ACPI code now handles that for us;We previously needed that so we dont need to worry about it;Similar;0.5960440635681152
Setting lid_init_state to ACPI_BUTTON_LID_INIT_OPEN on the T200TA  ;fixes the unwanted behavior, adds a DMI based quirk;type: Power Button;I dont think theres anything meaningful user-space can do by knowing whether a button is a control method or a fixed hardware button;Similar;0.6399919986724854
Setting lid_init_state to ACPI_BUTTON_LID_INIT_OPEN on the T200TA  ;fixes the unwanted behavior, adds a DMI based quirk;Remove button->device pointer;button;Similar;0.5872201919555664
Setting lid_init_state to ACPI_BUTTON_LID_INIT_OPEN on the T200TA  ;fixes the unwanted behavior, adds a DMI based quirk;This patch adds temporaries to cache the acpi_device_hid(), acpi_device_name(), and acpi_device_class() pointers;so we dont have to clutter the code with so many uses of those interfaces;Similar;0.6439290642738342
Setting lid_init_state to ACPI_BUTTON_LID_INIT_OPEN on the T200TA  ;fixes the unwanted behavior, adds a DMI based quirk;changes a bit of whitespace to follow Linux conventions;follow Linux conventions;Similar;0.6156108379364014
Setting lid_init_state to ACPI_BUTTON_LID_INIT_OPEN on the T200TA  ;fixes the unwanted behavior, adds a DMI based quirk;The presence of .notify() causes Linux/ACPI to manage event handlers and notify handlers on our behalf  ;so we dont have to install and remove them ourselves;Similar;0.5525068640708923
Setting lid_init_state to ACPI_BUTTON_LID_INIT_OPEN on the T200TA  ;fixes the unwanted behavior, adds a DMI based quirk;convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.7933380007743835
Setting lid_init_state to ACPI_BUTTON_LID_INIT_OPEN on the T200TA  ;fixes the unwanted behavior, adds a DMI based quirk;start using GPE from userspace;GPE is already disabled in interrupt context;Similar;0.5679134130477905
Setting lid_init_state to ACPI_BUTTON_LID_INIT_OPEN on the T200TA  ;fixes the unwanted behavior, adds a DMI based quirk;Move all the component definitions for drivers to a single shared place, include/acpi/acpi_drivers.h  ;to have a single shared place;Similar;0.5950330495834351
Setting lid_init_state to ACPI_BUTTON_LID_INIT_OPEN on the T200TA  ;fixes the unwanted behavior, adds a DMI based quirk;"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.6047348976135254
Setting lid_init_state to ACPI_BUTTON_LID_INIT_OPEN on the T200TA  ;fixes the unwanted behavior, adds a DMI based quirk;Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;Similar;0.6419116854667664
Setting lid_init_state to ACPI_BUTTON_LID_INIT_OPEN on the T200TA  ;fixes the unwanted behavior, adds a DMI based quirk;Use proc_create()/proc_create_data() to make sure that ->proc_fops and ->data be setup;before gluing PDE to main tree;Similar;0.5079081058502197
Setting lid_init_state to ACPI_BUTTON_LID_INIT_OPEN on the T200TA  ;fixes the unwanted behavior, adds a DMI based quirk;Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;Similar;0.6370572447776794
Setting lid_init_state to ACPI_BUTTON_LID_INIT_OPEN on the T200TA  ;fixes the unwanted behavior, adds a DMI based quirk;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.5390166640281677
Setting lid_init_state to ACPI_BUTTON_LID_INIT_OPEN on the T200TA  ;fixes the unwanted behavior, adds a DMI based quirk;fix acpi_driver.name usage;fix;Similar;0.5690433979034424
Setting lid_init_state to ACPI_BUTTON_LID_INIT_OPEN on the T200TA  ;fixes the unwanted behavior, adds a DMI based quirk;"Make ""module name"" actually match the file name";cosmetic only;Similar;0.5165432691574097
Setting lid_init_state to ACPI_BUTTON_LID_INIT_OPEN on the T200TA  ;fixes the unwanted behavior, adds a DMI based quirk;Remove unneeded acpi_handle from driver;unneeded;Similar;0.5029630661010742
Setting lid_init_state to ACPI_BUTTON_LID_INIT_OPEN on the T200TA  ;fixes the unwanted behavior, adds a DMI based quirk;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.5685089826583862
Setting lid_init_state to ACPI_BUTTON_LID_INIT_OPEN on the T200TA  ;fixes the unwanted behavior, adds a DMI based quirk;restore /proc/acpi/button/ (ala 2.6.12)  ;[ACPI];Similar;0.7807402610778809
 the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;Turn lid_blacklst DMI table into a generic quirk table;ACPI: button;Similar;0.5559192895889282
 the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;Similar;0.6960983276367188
 the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;re-using the existing option;keeps things simple and it will make it much easier to add DMI quirks which can either disable the LID completely or set another non-default lid_init_state value, both of which are necessary on some devices;Similar;0.5393669605255127
 the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;[ an action or a change that has been made, including a description of the patch behaviour ];[ the reason for a decision or value judgment ];Similar;0.5380296111106873
 the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;Similar;0.654654860496521
 the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;Similar;0.7067800760269165
 the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;Fix a build warning in the ACPI button driver when CONFIG_PROC_FS is not enabled by marking the unused function as __maybe_unused;not enabled, unused;Similar;0.6167870759963989
 the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;Increment wakeup count only when notified;-;Similar;0.5592093467712402
 the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;only trigger acpi_pm_wakeup_event() in the acpi_button_notify() path and dont do that in the acpi_lid_initialize_state() path;To avoid the confusion;Similar;0.6711158752441406
 the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;Similar;0.7052332162857056
 the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;making the ACPI button driver loadable as a module even if not booted in ACPI mode;to fix the asymmetry and provide the acpi_lid_open() symbol;Similar;0.5943043231964111
 the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;adds an acpi_handle_debug call  ;to help debugging this;Similar;0.7473011016845703
 the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;Fix function prototypes for module_param_call();-;Similar;0.698390007019043
 the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;fix whitespace in pr_fmt() to align log entries;align log entries;Similar;0.6901140213012695
 the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;The ->sync hook allows all of the relevant event queues to be flushed;to prevent events from being missed due to race conditions;Similar;0.5296913385391235
 the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;Similar;0.7185724973678589
 the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;assume the user will use the internal keyboard before this timeout expires;logind only checks the lid switch value after a timeout;Similar;0.6301057934761047
 the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;"userspace requires to see ""close"" event after the system is resumed";so that it can determine whether the internal display should remain dark and the external display should be lit on;Similar;0.532093346118927
 the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;Similar;0.8428410291671753
 the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);Similar;0.6723933219909668
 the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;The ->sync hook allows all of the relevant event queues to be flushed;to prevent events from being missed due to race conditions;Similar;0.5296913385391235
 the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;Similar;0.592070460319519
 the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;This patch adds a mechanism to insert lid events as a compensation for the platform triggered ones to form a complete event switches  ;in order to make sure that the platform triggered events can always be reliably delivered to the userspace;Similar;0.6513562202453613
 the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;it should not send the complement switch event for the unreliable initial lid state notification;However this mechanism is not suitable for lid_init_state=open/method;Similar;0.5271032452583313
 the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;implements this mechanism  ;only;Similar;0.5044090747833252
 the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;Use key event type to implement ACPI lid events;Another approach;Similar;0.7402322292327881
 the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;Remove pointer to old lid_sysfs on unbind;ACPI / button;Similar;0.6326656937599182
 the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;Similar;0.5203669667243958
 the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;Similar;0.5162374973297119
 the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;Similar;0.6573641300201416
 the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;Add ACPI Button event via netlink routine;-;Similar;0.7811537384986877
 the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;Similar;0.5965026617050171
 the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;This caused ACPI shutdown regression on gentoo;VirtualBox;Similar;0.5242274403572083
 the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;Similar;0.7407249212265015
 the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;fix button driver compile error when CONFIG_PM_SLEEP is undefined;CONFIG_PM_SLEEP is undefined;Similar;0.609138548374176
 the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;compile error;CONFIG_PM_SLEEP is undefined;Similar;0.5318066477775574
 the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;Fix enabling button GPEs twice;Fix;Similar;0.6337196826934814
 the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;Button GPEs have been enabled in the acpi_wake_device_init() during boot;the button driver enables them for the second time;Similar;0.6941273808479309
 the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;remove the GPE enabling code from the button driver;to avoid the problem;Similar;0.6302411556243896
 the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;Clean up inclusions of ACPI header files;ACPI;Similar;0.5968853235244751
 the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;Similar;0.567680299282074
 the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;<acpi/acpi_bus.h> be included prior to <acpi/acpi_drivers.h>;so that the acpi_pci_root declarations the latter depends on are always there;Similar;0.6608349084854126
 the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;Use the patch to replace the origin code;provide a better solution;Similar;0.519757866859436
 the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;Fix unused function warnings for CONFIG_PM_SLEEP;unused function warnings;Similar;0.5356930494308472
 the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;Remove unused ACPI button procfs interface;unused;Similar;0.601691722869873
 the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;Use device wakeup flags for handling ACPI wakeup devices;for handling ACPI wakeup devices;Similar;0.6803667545318604
 the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;use standard device wakeup flags instead of the special ACPI flags for handling those devices;address this problem;Similar;0.5648582577705383
 the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;Use GPE reference counting to support shared GPEs  ;the wakeup enable mask bits of GPEs are set as soon as the GPEs are enabled to wake up the system;Similar;0.5459283590316772
 the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;Update gfp.h and slab.h includes  ;prepare for breaking implicit slab.h inclusion from percpu.h;Similar;0.5882725715637207
 the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;Prepare for this change by updating users of gfp and slab facilities;include those headers directly instead of assuming availability;Similar;0.5905900597572327
 the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;the following script is used as the basis of conversion;As this conversion needs to touch a large number of source files;Similar;0.6068440675735474
 the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;put the new include  ;its order conforms to its surrounding;Similar;0.5153892636299133
 the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;Similar;0.6359865069389343
 the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;Similar;0.5772507786750793
 the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;Introduce a new wake-up flag, always_enabled, for marking devices that should be permanently enabled to generate run-time events  ;devices that should be permanently enabled to generate run-time events;Similar;0.6319378018379211
 the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;Introduce a reference counter for run-wake devices and a function that will initialize all of the run-time wake-up fields for given device.;-;Similar;0.6167426109313965
 the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;Add an API to allow devices to indicate whether or not they want their devices GPE to be enabled for both runtime and wakeup events;to allow devices to indicate whether or not they want their devices GPE to be enabled;Similar;0.6561360359191895
 the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;complain the following warning message;"will

";Similar;0.5475092530250549
 the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;return -ENODEV;theres no lid device present;Similar;0.5460682511329651
 the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;Some drivers need to know when a lid event occurs and get the current status;-;Similar;0.560397744178772
 the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;whitespace fix  ;This does not change any actual console output;Similar;0.5577610731124878
 the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;we could install either a fixed event handler or a notify handler, but the Linux/ACPI code now handles that for us;We previously needed that so we dont need to worry about it;Similar;0.5705989003181458
 the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;type: Power Button;I dont think theres anything meaningful user-space can do by knowing whether a button is a control method or a fixed hardware button;Similar;0.695054292678833
 the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;Remove button->device pointer;button;Similar;0.6855591535568237
 the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;We no longer need a pointer from struct acpi_button back to the struct acpi_device;no longer need;Similar;0.5226606726646423
 the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;This patch adds temporaries to cache the acpi_device_hid(), acpi_device_name(), and acpi_device_class() pointers;so we dont have to clutter the code with so many uses of those interfaces;Similar;0.6142711639404297
 the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;changes a bit of whitespace to follow Linux conventions;follow Linux conventions;Similar;0.6019772887229919
 the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;use .notify method instead of installing handler directly  ;-;Similar;0.5339169502258301
 the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;The presence of .notify() causes Linux/ACPI to manage event handlers and notify handlers on our behalf  ;so we dont have to install and remove them ourselves;Similar;0.5600563287734985
 the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.8027684688568115
 the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;Setting ->owner as done currently (pde->owner = THIS_MODULE) is racy;as correctly noted at bug #12454;Similar;0.5104405879974365
 the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;"proc_fops is declared as ""const""";should give some thoughts;Similar;0.6289546489715576
 the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;start using GPE from userspace;GPE is already disabled in interrupt context;Similar;0.6264783143997192
 the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;Move all the component definitions for drivers to a single shared place, include/acpi/acpi_drivers.h  ;to have a single shared place;Similar;0.6109048128128052
 the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.7098912000656128
 the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;Similar;0.6977885365486145
 the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Similar;0.546787679195404
 the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;Use proc_create()/proc_create_data() to make sure that ->proc_fops and ->data be setup;before gluing PDE to main tree;Similar;0.6669435501098633
 the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;Add correct ->owner to proc_fops to fix reading/module unloading race  ;fix reading/module unloading race;Similar;0.5043092966079712
 the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;get rid of input BIT* duplicate defines;duplicate;Similar;0.5734239816665649
 the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;Similar;0.5301229953765869
 the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;Similar;0.6950592994689941
 the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.5988130569458008
 the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;fix acpi_driver.name usage;fix;Similar;0.6297677755355835
 the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;"Make ""module name"" actually match the file name";cosmetic only;Similar;0.5809192657470703
 the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;Fix indentation where Lindent did get confused  ;Lindent did get confused;Similar;0.5412527322769165
 the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;Remove unneeded acpi_handle from driver;unneeded;Similar;0.5306642651557922
 the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;Use acpi_devices handle instead of drivers  ;-;Similar;0.5224918127059937
 the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.6190180778503418
 the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;restore /proc/acpi/button/ (ala 2.6.12)  ;[ACPI];Similar;0.7156214714050293
 the lid_init_state selection needs to be set to ACPI_BUTTON_LID_INIT_OPEN  ;In order for the Linux LID code to work properly with this implementation;"Create a separate ""historical"" git archive";about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated;Similar;0.507180392742157
Turn lid_blacklst DMI table into a generic quirk table;ACPI: button;"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;Similar;0.6723454594612122
Turn lid_blacklst DMI table into a generic quirk table;ACPI: button;Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;Similar;0.5907946825027466
Turn lid_blacklst DMI table into a generic quirk table;ACPI: button;Fix a build warning in the ACPI button driver when CONFIG_PROC_FS is not enabled by marking the unused function as __maybe_unused;not enabled, unused;Similar;0.5297768712043762
Turn lid_blacklst DMI table into a generic quirk table;ACPI: button;Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;Similar;0.6028934717178345
Turn lid_blacklst DMI table into a generic quirk table;ACPI: button;"The only solution is to add a DMI based blacklist and ignore the LID device on these tablets.
";There is nothing the ACPI button driver (or the gpio code) can do to fix this.;Similar;0.5432290434837341
Turn lid_blacklst DMI table into a generic quirk table;ACPI: button;adds an acpi_handle_debug call  ;to help debugging this;Similar;0.6052983999252319
Turn lid_blacklst DMI table into a generic quirk table;ACPI: button;Fix function prototypes for module_param_call();-;Similar;0.5410784482955933
Turn lid_blacklst DMI table into a generic quirk table;ACPI: button;fix whitespace in pr_fmt() to align log entries;align log entries;Similar;0.5869630575180054
Turn lid_blacklst DMI table into a generic quirk table;ACPI: button;libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;Similar;0.5450229644775391
Turn lid_blacklst DMI table into a generic quirk table;ACPI: button;Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;Similar;0.6177606582641602
Turn lid_blacklst DMI table into a generic quirk table;ACPI: button;Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);Similar;0.6828365325927734
Turn lid_blacklst DMI table into a generic quirk table;ACPI: button;have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;Similar;0.6813791990280151
Turn lid_blacklst DMI table into a generic quirk table;ACPI: button;This patch adds a mechanism to insert lid events as a compensation for the platform triggered ones to form a complete event switches  ;in order to make sure that the platform triggered events can always be reliably delivered to the userspace;Similar;0.536545991897583
Turn lid_blacklst DMI table into a generic quirk table;ACPI: button;Remove pointer to old lid_sysfs on unbind;ACPI / button;Similar;0.657639741897583
Turn lid_blacklst DMI table into a generic quirk table;ACPI: button;this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;Similar;0.5329750776290894
Turn lid_blacklst DMI table into a generic quirk table;ACPI: button;Add ACPI Button event via netlink routine;-;Similar;0.5610198974609375
Turn lid_blacklst DMI table into a generic quirk table;ACPI: button;removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;Similar;0.5796271562576294
Turn lid_blacklst DMI table into a generic quirk table;ACPI: button;This caused ACPI shutdown regression on gentoo;VirtualBox;Similar;0.5506837368011475
Turn lid_blacklst DMI table into a generic quirk table;ACPI: button;add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;Similar;0.5600316524505615
Turn lid_blacklst DMI table into a generic quirk table;ACPI: button;fix button driver compile error when CONFIG_PM_SLEEP is undefined;CONFIG_PM_SLEEP is undefined;Similar;0.558479905128479
Turn lid_blacklst DMI table into a generic quirk table;ACPI: button;remove the GPE enabling code from the button driver;to avoid the problem;Similar;0.6196212768554688
Turn lid_blacklst DMI table into a generic quirk table;ACPI: button;Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;Similar;0.6065930128097534
Turn lid_blacklst DMI table into a generic quirk table;ACPI: button;Use the patch to replace the origin code;provide a better solution;Similar;0.5237336158752441
Turn lid_blacklst DMI table into a generic quirk table;ACPI: button;Remove useless type argument of driver .remove() operation;useless;Similar;0.5350278615951538
Turn lid_blacklst DMI table into a generic quirk table;ACPI: button;"The second argument of ACPI driver .remove() operation is only used by the ACPI processor driver
";the value passed to that driver through it is always available from the given struct acpi_device objects removal_type field;Similar;0.538410484790802
Turn lid_blacklst DMI table into a generic quirk table;ACPI: button;drop the second ACPI driver .remove() argument  ;the second ACPI driver .remove() argument is in fact useless;Similar;0.5472970008850098
Turn lid_blacklst DMI table into a generic quirk table;ACPI: button;Fix unused function warnings for CONFIG_PM_SLEEP;unused function warnings;Similar;0.5175125002861023
Turn lid_blacklst DMI table into a generic quirk table;ACPI: button;remove unused procfs I/F;unused;Similar;0.5031471252441406
Turn lid_blacklst DMI table into a generic quirk table;ACPI: button;Remove unused ACPI button procfs interface;unused;Similar;0.6313499212265015
Turn lid_blacklst DMI table into a generic quirk table;ACPI: button;Remove the old GPE type handling entirely  ;Gets rid of various quirks, like the implicit disabling with GPE type setting;Similar;0.5142849087715149
Turn lid_blacklst DMI table into a generic quirk table;ACPI: button;Remove button->device pointer;button;Similar;0.6105877161026001
Turn lid_blacklst DMI table into a generic quirk table;ACPI: button;This patch adds temporaries to cache the acpi_device_hid(), acpi_device_name(), and acpi_device_class() pointers;so we dont have to clutter the code with so many uses of those interfaces;Similar;0.6211833357810974
Turn lid_blacklst DMI table into a generic quirk table;ACPI: button;changes a bit of whitespace to follow Linux conventions;follow Linux conventions;Similar;0.5394980907440186
Turn lid_blacklst DMI table into a generic quirk table;ACPI: button;convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.5341929197311401
Turn lid_blacklst DMI table into a generic quirk table;ACPI: button;Setting ->owner as done currently (pde->owner = THIS_MODULE) is racy;as correctly noted at bug #12454;Similar;0.5097616910934448
Turn lid_blacklst DMI table into a generic quirk table;ACPI: button;"proc_fops is declared as ""const""";should give some thoughts;Similar;0.5245287418365479
Turn lid_blacklst DMI table into a generic quirk table;ACPI: button;Move all the component definitions for drivers to a single shared place, include/acpi/acpi_drivers.h  ;to have a single shared place;Similar;0.506949782371521
Turn lid_blacklst DMI table into a generic quirk table;ACPI: button;Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;Similar;0.5722270011901855
Turn lid_blacklst DMI table into a generic quirk table;ACPI: button;use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Similar;0.5122433304786682
Turn lid_blacklst DMI table into a generic quirk table;ACPI: button;get rid of input BIT* duplicate defines;duplicate;Similar;0.574522852897644
Turn lid_blacklst DMI table into a generic quirk table;ACPI: button;Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;Similar;0.5599731206893921
Turn lid_blacklst DMI table into a generic quirk table;ACPI: button;Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;Similar;0.535504937171936
Turn lid_blacklst DMI table into a generic quirk table;ACPI: button;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.6333048939704895
Turn lid_blacklst DMI table into a generic quirk table;ACPI: button;fix acpi_driver.name usage;fix;Similar;0.5570515990257263
Turn lid_blacklst DMI table into a generic quirk table;ACPI: button;Remove unneeded acpi_handle from driver;unneeded;Similar;0.5459198951721191
Turn lid_blacklst DMI table into a generic quirk table;ACPI: button;Use acpi_devices handle instead of drivers  ;-;Similar;0.5426064729690552
Turn lid_blacklst DMI table into a generic quirk table;ACPI: button;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.558457612991333
Turn lid_blacklst DMI table into a generic quirk table;ACPI: button;"Create a separate ""historical"" git archive";about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated;Similar;0.5398249626159668
"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;re-using the existing option;keeps things simple and it will make it much easier to add DMI quirks which can either disable the LID completely or set another non-default lid_init_state value, both of which are necessary on some devices;Similar;0.5502160787582397
"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;[ an action or a change that has been made, including a description of the patch behaviour ];[ the reason for a decision or value judgment ];Similar;0.6054425239562988
"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;Similar;0.549843430519104
"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;Similar;0.7374239563941956
"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;Fix a build warning in the ACPI button driver when CONFIG_PROC_FS is not enabled by marking the unused function as __maybe_unused;not enabled, unused;Similar;0.7410911321640015
"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;only trigger acpi_pm_wakeup_event() in the acpi_button_notify() path and dont do that in the acpi_lid_initialize_state() path;To avoid the confusion;Similar;0.5721316337585449
"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;Similar;0.6765091419219971
"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;making the ACPI button driver loadable as a module even if not booted in ACPI mode;to fix the asymmetry and provide the acpi_lid_open() symbol;Similar;0.5173935890197754
"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;"The only solution is to add a DMI based blacklist and ignore the LID device on these tablets.
";There is nothing the ACPI button driver (or the gpio code) can do to fix this.;Similar;0.5085492134094238
"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;adds an acpi_handle_debug call  ;to help debugging this;Similar;0.7387598752975464
"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;Fix function prototypes for module_param_call();-;Similar;0.7645612955093384
"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;fix whitespace in pr_fmt() to align log entries;align log entries;Similar;0.6555547714233398
"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;It breaks docking stations basically;there is no way to have a user-space hwdb to fix that;Similar;0.5308838486671448
"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;Similar;0.6817613244056702
"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;assume the user will use the internal keyboard before this timeout expires;logind only checks the lid switch value after a timeout;Similar;0.5106173157691956
"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;Similar;0.7040997743606567
"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);Similar;0.705376148223877
"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;This patch makes it deprecated;lid_init__state=open is more useful than this mode;Similar;0.5687500834465027
"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;Similar;0.8217902183532715
"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;This patch adds a mechanism to insert lid events as a compensation for the platform triggered ones to form a complete event switches  ;in order to make sure that the platform triggered events can always be reliably delivered to the userspace;Similar;0.6738952398300171
"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;it should not send the complement switch event for the unreliable initial lid state notification;However this mechanism is not suitable for lid_init_state=open/method;Similar;0.5059885382652283
"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;Use key event type to implement ACPI lid events;Another approach;Similar;0.5452446937561035
"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;Remove pointer to old lid_sysfs on unbind;ACPI / button;Similar;0.7163604497909546
"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;Similar;0.6607705354690552
"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;Correct a wrong macro usage;This patch simplies the code by merging some redundant code;Similar;0.6223722696304321
"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;Similar;0.6683070659637451
"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;Similar;0.6320019364356995
"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;Add ACPI Button event via netlink routine;-;Similar;0.6572723388671875
"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;Similar;0.7223079800605774
"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;This caused ACPI shutdown regression on gentoo;VirtualBox;Similar;0.6624063849449158
"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;Similar;0.6683652400970459
"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;fix button driver compile error when CONFIG_PM_SLEEP is undefined;CONFIG_PM_SLEEP is undefined;Similar;0.6746196746826172
"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;compile error;CONFIG_PM_SLEEP is undefined;Similar;0.5383355617523193
"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;Fix enabling button GPEs twice;Fix;Similar;0.589328408241272
"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;Button GPEs have been enabled in the acpi_wake_device_init() during boot;the button driver enables them for the second time;Similar;0.7081246972084045
"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;remove the GPE enabling code from the button driver;to avoid the problem;Similar;0.7577997446060181
"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;Clean up inclusions of ACPI header files;ACPI;Similar;0.5495721101760864
"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;Similar;0.7189900875091553
"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;<acpi/acpi_bus.h> be included prior to <acpi/acpi_drivers.h>;so that the acpi_pci_root declarations the latter depends on are always there;Similar;0.5220209956169128
"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;Use the patch to replace the origin code;provide a better solution;Similar;0.762580394744873
"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;Remove useless type argument of driver .remove() operation;useless;Similar;0.6079661846160889
"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;"The second argument of ACPI driver .remove() operation is only used by the ACPI processor driver
";the value passed to that driver through it is always available from the given struct acpi_device objects removal_type field;Similar;0.640843391418457
"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;drop the second ACPI driver .remove() argument  ;the second ACPI driver .remove() argument is in fact useless;Similar;0.6501978635787964
"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;Fix unused function warnings for CONFIG_PM_SLEEP;unused function warnings;Similar;0.632431149482727
"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;add #ifdefs to prevent them from being built in that case  ;several suspend/resume functions in ACPI drivers are not used for CONFIG_PM_SLEEP unset;Similar;0.5946991443634033
"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;remove unused procfs I/F;unused;Similar;0.6080324649810791
"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;Remove unused ACPI button procfs interface;unused;Similar;0.7368930578231812
"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;Use device wakeup flags for handling ACPI wakeup devices;for handling ACPI wakeup devices;Similar;0.52683424949646
"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;use standard device wakeup flags instead of the special ACPI flags for handling those devices;address this problem;Similar;0.5398728847503662
"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;Update gfp.h and slab.h includes  ;prepare for breaking implicit slab.h inclusion from percpu.h;Similar;0.55094313621521
"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;Prepare for this change by updating users of gfp and slab facilities;include those headers directly instead of assuming availability;Similar;0.5258611440658569
"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;the following script is used as the basis of conversion;As this conversion needs to touch a large number of source files;Similar;0.5091871619224548
"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;put the new include  ;its order conforms to its surrounding;Similar;0.5017502307891846
"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;Similar;0.6440070867538452
"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;CONFIG_GCOV_KERNEL was turned off for all tests and a few more options had to be turned off depending on archs to make things build;my distributed build env didnt work with gcov compiles, like ipr on powerpc/64 which failed due to missing writeq;Similar;0.5353401899337769
"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;Similar;0.6295640468597412
"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;Introduce a new wake-up flag, always_enabled, for marking devices that should be permanently enabled to generate run-time events  ;devices that should be permanently enabled to generate run-time events;Similar;0.5088831186294556
"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;Introduce a reference counter for run-wake devices and a function that will initialize all of the run-time wake-up fields for given device.;-;Similar;0.5288254618644714
"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;Add an API to allow devices to indicate whether or not they want their devices GPE to be enabled for both runtime and wakeup events;to allow devices to indicate whether or not they want their devices GPE to be enabled;Similar;0.5749545693397522
"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;Remove the old GPE type handling entirely  ;Gets rid of various quirks, like the implicit disabling with GPE type setting;Similar;0.5075589418411255
"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;"This patch is to eliminate the above warning message
";Device PNP0C0D:00 failed to resume: error 1;Similar;0.5944875478744507
"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;whitespace fix  ;This does not change any actual console output;Similar;0.596541166305542
"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;we could install either a fixed event handler or a notify handler, but the Linux/ACPI code now handles that for us;We previously needed that so we dont need to worry about it;Similar;0.6090235710144043
"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;Remove button->device pointer;button;Similar;0.7377880811691284
"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;We no longer need a pointer from struct acpi_button back to the struct acpi_device;no longer need;Similar;0.5884526968002319
"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;This patch adds temporaries to cache the acpi_device_hid(), acpi_device_name(), and acpi_device_class() pointers;so we dont have to clutter the code with so many uses of those interfaces;Similar;0.7434880137443542
"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;Better to oops and learn about a bug;than to silently cover it up;Similar;0.523796796798706
"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;changes a bit of whitespace to follow Linux conventions;follow Linux conventions;Similar;0.633493185043335
"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;use .notify method instead of installing handler directly  ;-;Similar;0.5265049338340759
"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.7091972827911377
"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;Setting ->owner as done currently (pde->owner = THIS_MODULE) is racy;as correctly noted at bug #12454;Similar;0.5347799062728882
"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;"proc_fops is declared as ""const""";should give some thoughts;Similar;0.5489181280136108
"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;start using GPE from userspace;GPE is already disabled in interrupt context;Similar;0.5483289957046509
"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;Move all the component definitions for drivers to a single shared place, include/acpi/acpi_drivers.h  ;to have a single shared place;Similar;0.5357917547225952
"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.5361292958259583
"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;Similar;0.6869922876358032
"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Similar;0.5732977390289307
"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;Use proc_create()/proc_create_data() to make sure that ->proc_fops and ->data be setup;before gluing PDE to main tree;Similar;0.5221568942070007
"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;Add correct ->owner to proc_fops to fix reading/module unloading race  ;fix reading/module unloading race;Similar;0.5329686403274536
"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;get rid of input BIT* duplicate defines;duplicate;Similar;0.65755295753479
"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;Similar;0.6880658864974976
"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;Define the macro temporarily in a local manner;all those local definitions will be removed further in this patchset (to not break bisecting);Similar;0.5359913110733032
"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;Similar;0.6870144605636597
"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.7615804672241211
"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;fix acpi_driver.name usage;fix;Similar;0.672607421875
"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;"Make ""module name"" actually match the file name";cosmetic only;Similar;0.5244144201278687
"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;Fix indentation where Lindent did get confused  ;Lindent did get confused;Similar;0.5767011046409607
"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;remove unnecessary casts and variable initializations, clean up formatting;unnecessary;Similar;0.5050932168960571
"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;Remove unneeded acpi_handle from driver;unneeded;Similar;0.6381168961524963
"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;Use acpi_devices handle instead of drivers  ;-;Similar;0.5821452140808105
"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.6102328300476074
"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;restore /proc/acpi/button/ (ala 2.6.12)  ;[ACPI];Similar;0.5857163071632385
"Add a new ""disabled"" value for the lid_init_state module option";can be used to disable LID support on devices where it is completely broken;"Create a separate ""historical"" git archive";about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated;Similar;0.6477617621421814
re-using the existing option;keeps things simple and it will make it much easier to add DMI quirks which can either disable the LID completely or set another non-default lid_init_state value, both of which are necessary on some devices;[ an action or a change that has been made, including a description of the patch behaviour ];[ the reason for a decision or value judgment ];Similar;0.7624119520187378
re-using the existing option;keeps things simple and it will make it much easier to add DMI quirks which can either disable the LID completely or set another non-default lid_init_state value, both of which are necessary on some devices;Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;Similar;0.5070458650588989
re-using the existing option;keeps things simple and it will make it much easier to add DMI quirks which can either disable the LID completely or set another non-default lid_init_state value, both of which are necessary on some devices;Increment wakeup count only when notified;-;Similar;0.530289351940155
re-using the existing option;keeps things simple and it will make it much easier to add DMI quirks which can either disable the LID completely or set another non-default lid_init_state value, both of which are necessary on some devices;adds an acpi_handle_debug call  ;to help debugging this;Similar;0.6201601624488831
re-using the existing option;keeps things simple and it will make it much easier to add DMI quirks which can either disable the LID completely or set another non-default lid_init_state value, both of which are necessary on some devices;Fix function prototypes for module_param_call();-;Similar;0.6253064274787903
re-using the existing option;keeps things simple and it will make it much easier to add DMI quirks which can either disable the LID completely or set another non-default lid_init_state value, both of which are necessary on some devices;"userspace requires to see ""close"" event after the system is resumed";so that it can determine whether the internal display should remain dark and the external display should be lit on;Similar;0.5472162961959839
re-using the existing option;keeps things simple and it will make it much easier to add DMI quirks which can either disable the LID completely or set another non-default lid_init_state value, both of which are necessary on some devices;Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;Similar;0.6388533711433411
re-using the existing option;keeps things simple and it will make it much easier to add DMI quirks which can either disable the LID completely or set another non-default lid_init_state value, both of which are necessary on some devices;Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);Similar;0.6071684956550598
re-using the existing option;keeps things simple and it will make it much easier to add DMI quirks which can either disable the LID completely or set another non-default lid_init_state value, both of which are necessary on some devices;have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;Similar;0.5037568807601929
re-using the existing option;keeps things simple and it will make it much easier to add DMI quirks which can either disable the LID completely or set another non-default lid_init_state value, both of which are necessary on some devices;implements this mechanism  ;only;Similar;0.80223548412323
re-using the existing option;keeps things simple and it will make it much easier to add DMI quirks which can either disable the LID completely or set another non-default lid_init_state value, both of which are necessary on some devices;Use key event type to implement ACPI lid events;Another approach;Similar;0.6693803071975708
re-using the existing option;keeps things simple and it will make it much easier to add DMI quirks which can either disable the LID completely or set another non-default lid_init_state value, both of which are necessary on some devices;Remove pointer to old lid_sysfs on unbind;ACPI / button;Similar;0.5559166669845581
re-using the existing option;keeps things simple and it will make it much easier to add DMI quirks which can either disable the LID completely or set another non-default lid_init_state value, both of which are necessary on some devices;When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;Similar;0.5613867044448853
re-using the existing option;keeps things simple and it will make it much easier to add DMI quirks which can either disable the LID completely or set another non-default lid_init_state value, both of which are necessary on some devices;Add ACPI Button event via netlink routine;-;Similar;0.5451870560646057
re-using the existing option;keeps things simple and it will make it much easier to add DMI quirks which can either disable the LID completely or set another non-default lid_init_state value, both of which are necessary on some devices;removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;Similar;0.5254222750663757
re-using the existing option;keeps things simple and it will make it much easier to add DMI quirks which can either disable the LID completely or set another non-default lid_init_state value, both of which are necessary on some devices;add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;Similar;0.5634719133377075
re-using the existing option;keeps things simple and it will make it much easier to add DMI quirks which can either disable the LID completely or set another non-default lid_init_state value, both of which are necessary on some devices;compile error;CONFIG_PM_SLEEP is undefined;Similar;0.6363245248794556
re-using the existing option;keeps things simple and it will make it much easier to add DMI quirks which can either disable the LID completely or set another non-default lid_init_state value, both of which are necessary on some devices;Fix enabling button GPEs twice;Fix;Similar;0.5555859208106995
re-using the existing option;keeps things simple and it will make it much easier to add DMI quirks which can either disable the LID completely or set another non-default lid_init_state value, both of which are necessary on some devices;<acpi/acpi_bus.h> be included prior to <acpi/acpi_drivers.h>;so that the acpi_pci_root declarations the latter depends on are always there;Similar;0.5880981683731079
re-using the existing option;keeps things simple and it will make it much easier to add DMI quirks which can either disable the LID completely or set another non-default lid_init_state value, both of which are necessary on some devices;Use the patch to replace the origin code;provide a better solution;Similar;0.5796756744384766
re-using the existing option;keeps things simple and it will make it much easier to add DMI quirks which can either disable the LID completely or set another non-default lid_init_state value, both of which are necessary on some devices;remove unused procfs I/F;unused;Similar;0.6477255821228027
re-using the existing option;keeps things simple and it will make it much easier to add DMI quirks which can either disable the LID completely or set another non-default lid_init_state value, both of which are necessary on some devices;Avoid disabling wakeup unnecessarily on remove;-;Similar;0.5166261196136475
re-using the existing option;keeps things simple and it will make it much easier to add DMI quirks which can either disable the LID completely or set another non-default lid_init_state value, both of which are necessary on some devices;Use device wakeup flags for handling ACPI wakeup devices;for handling ACPI wakeup devices;Similar;0.5512309074401855
re-using the existing option;keeps things simple and it will make it much easier to add DMI quirks which can either disable the LID completely or set another non-default lid_init_state value, both of which are necessary on some devices;Use GPE reference counting to support shared GPEs  ;the wakeup enable mask bits of GPEs are set as soon as the GPEs are enabled to wake up the system;Similar;0.560265064239502
re-using the existing option;keeps things simple and it will make it much easier to add DMI quirks which can either disable the LID completely or set another non-default lid_init_state value, both of which are necessary on some devices;This will allow us to simplify the GPE handling code quite a bit;that change is too intrusive for 2.6.35;Similar;0.5591845512390137
re-using the existing option;keeps things simple and it will make it much easier to add DMI quirks which can either disable the LID completely or set another non-default lid_init_state value, both of which are necessary on some devices;Update gfp.h and slab.h includes  ;prepare for breaking implicit slab.h inclusion from percpu.h;Similar;0.6178619861602783
re-using the existing option;keeps things simple and it will make it much easier to add DMI quirks which can either disable the LID completely or set another non-default lid_init_state value, both of which are necessary on some devices;Prepare for this change by updating users of gfp and slab facilities;include those headers directly instead of assuming availability;Similar;0.5524474382400513
re-using the existing option;keeps things simple and it will make it much easier to add DMI quirks which can either disable the LID completely or set another non-default lid_init_state value, both of which are necessary on some devices;the following script is used as the basis of conversion;As this conversion needs to touch a large number of source files;Similar;0.6652159690856934
re-using the existing option;keeps things simple and it will make it much easier to add DMI quirks which can either disable the LID completely or set another non-default lid_init_state value, both of which are necessary on some devices;only the necessary includes are there;necessary;Similar;0.5618786811828613
re-using the existing option;keeps things simple and it will make it much easier to add DMI quirks which can either disable the LID completely or set another non-default lid_init_state value, both of which are necessary on some devices;put the new include  ;its order conforms to its surrounding;Similar;0.6920725703239441
re-using the existing option;keeps things simple and it will make it much easier to add DMI quirks which can either disable the LID completely or set another non-default lid_init_state value, both of which are necessary on some devices;prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;Similar;0.5046119689941406
re-using the existing option;keeps things simple and it will make it much easier to add DMI quirks which can either disable the LID completely or set another non-default lid_init_state value, both of which are necessary on some devices;The script was run again  ;to make sure no file was left behind;Similar;0.7053209543228149
re-using the existing option;keeps things simple and it will make it much easier to add DMI quirks which can either disable the LID completely or set another non-default lid_init_state value, both of which are necessary on some devices;description of the patch behaviour;an action or a change;Similar;0.6469175815582275
re-using the existing option;keeps things simple and it will make it much easier to add DMI quirks which can either disable the LID completely or set another non-default lid_init_state value, both of which are necessary on some devices;failures were fixed;Build tests were done on the following configurations;Similar;0.6267396211624146
re-using the existing option;keeps things simple and it will make it much easier to add DMI quirks which can either disable the LID completely or set another non-default lid_init_state value, both of which are necessary on some devices;percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;Similar;0.7861925363540649
re-using the existing option;keeps things simple and it will make it much easier to add DMI quirks which can either disable the LID completely or set another non-default lid_init_state value, both of which are necessary on some devices;Im fairly confident about the coverage of this conversion patch  ;Given the fact that I had only a couple of failures from tests on step 6;Similar;0.5008783936500549
re-using the existing option;keeps things simple and it will make it much easier to add DMI quirks which can either disable the LID completely or set another non-default lid_init_state value, both of which are necessary on some devices;Add more run-time wake-up fields;Add more;Similar;0.5321722030639648
re-using the existing option;keeps things simple and it will make it much easier to add DMI quirks which can either disable the LID completely or set another non-default lid_init_state value, both of which are necessary on some devices;Introduce a reference counter for run-wake devices and a function that will initialize all of the run-time wake-up fields for given device.;-;Similar;0.532174825668335
re-using the existing option;keeps things simple and it will make it much easier to add DMI quirks which can either disable the LID completely or set another non-default lid_init_state value, both of which are necessary on some devices;Add an API to allow devices to indicate whether or not they want their devices GPE to be enabled for both runtime and wakeup events;to allow devices to indicate whether or not they want their devices GPE to be enabled;Similar;0.5250877737998962
re-using the existing option;keeps things simple and it will make it much easier to add DMI quirks which can either disable the LID completely or set another non-default lid_init_state value, both of which are necessary on some devices;Remove the old GPE type handling entirely  ;Gets rid of various quirks, like the implicit disabling with GPE type setting;Similar;0.5737477540969849
re-using the existing option;keeps things simple and it will make it much easier to add DMI quirks which can either disable the LID completely or set another non-default lid_init_state value, both of which are necessary on some devices;complain the following warning message;"will

";Similar;0.6304442882537842
re-using the existing option;keeps things simple and it will make it much easier to add DMI quirks which can either disable the LID completely or set another non-default lid_init_state value, both of which are necessary on some devices;"This patch is to eliminate the above warning message
";Device PNP0C0D:00 failed to resume: error 1;Similar;0.5623935461044312
re-using the existing option;keeps things simple and it will make it much easier to add DMI quirks which can either disable the LID completely or set another non-default lid_init_state value, both of which are necessary on some devices;return -ENODEV;theres no lid device present;Similar;0.7707338333129883
re-using the existing option;keeps things simple and it will make it much easier to add DMI quirks which can either disable the LID completely or set another non-default lid_init_state value, both of which are necessary on some devices;Some drivers need to know when a lid event occurs and get the current status;-;Similar;0.5006759166717529
re-using the existing option;keeps things simple and it will make it much easier to add DMI quirks which can either disable the LID completely or set another non-default lid_init_state value, both of which are necessary on some devices;whitespace fix  ;This does not change any actual console output;Similar;0.6711832284927368
re-using the existing option;keeps things simple and it will make it much easier to add DMI quirks which can either disable the LID completely or set another non-default lid_init_state value, both of which are necessary on some devices;type: Power Button;I dont think theres anything meaningful user-space can do by knowing whether a button is a control method or a fixed hardware button;Similar;0.5430805683135986
re-using the existing option;keeps things simple and it will make it much easier to add DMI quirks which can either disable the LID completely or set another non-default lid_init_state value, both of which are necessary on some devices;Remove button->device pointer;button;Similar;0.6086037158966064
re-using the existing option;keeps things simple and it will make it much easier to add DMI quirks which can either disable the LID completely or set another non-default lid_init_state value, both of which are necessary on some devices;We no longer need a pointer from struct acpi_button back to the struct acpi_device;no longer need;Similar;0.5127043724060059
re-using the existing option;keeps things simple and it will make it much easier to add DMI quirks which can either disable the LID completely or set another non-default lid_init_state value, both of which are necessary on some devices;use .notify method instead of installing handler directly  ;-;Similar;0.6690759658813477
re-using the existing option;keeps things simple and it will make it much easier to add DMI quirks which can either disable the LID completely or set another non-default lid_init_state value, both of which are necessary on some devices;convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.5652172565460205
re-using the existing option;keeps things simple and it will make it much easier to add DMI quirks which can either disable the LID completely or set another non-default lid_init_state value, both of which are necessary on some devices;Setting ->owner as done currently (pde->owner = THIS_MODULE) is racy;as correctly noted at bug #12454;Similar;0.5753452777862549
re-using the existing option;keeps things simple and it will make it much easier to add DMI quirks which can either disable the LID completely or set another non-default lid_init_state value, both of which are necessary on some devices;"proc_fops is declared as ""const""";should give some thoughts;Similar;0.6814349889755249
re-using the existing option;keeps things simple and it will make it much easier to add DMI quirks which can either disable the LID completely or set another non-default lid_init_state value, both of which are necessary on some devices;start using GPE from userspace;GPE is already disabled in interrupt context;Similar;0.5841444730758667
re-using the existing option;keeps things simple and it will make it much easier to add DMI quirks which can either disable the LID completely or set another non-default lid_init_state value, both of which are necessary on some devices;"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.648053765296936
re-using the existing option;keeps things simple and it will make it much easier to add DMI quirks which can either disable the LID completely or set another non-default lid_init_state value, both of which are necessary on some devices;Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;Similar;0.564243495464325
re-using the existing option;keeps things simple and it will make it much easier to add DMI quirks which can either disable the LID completely or set another non-default lid_init_state value, both of which are necessary on some devices;use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Similar;0.6772516965866089
re-using the existing option;keeps things simple and it will make it much easier to add DMI quirks which can either disable the LID completely or set another non-default lid_init_state value, both of which are necessary on some devices;Use proc_create()/proc_create_data() to make sure that ->proc_fops and ->data be setup;before gluing PDE to main tree;Similar;0.5813149213790894
re-using the existing option;keeps things simple and it will make it much easier to add DMI quirks which can either disable the LID completely or set another non-default lid_init_state value, both of which are necessary on some devices;get rid of input BIT* duplicate defines;duplicate;Similar;0.6524211168289185
re-using the existing option;keeps things simple and it will make it much easier to add DMI quirks which can either disable the LID completely or set another non-default lid_init_state value, both of which are necessary on some devices;Define the macro temporarily in a local manner;all those local definitions will be removed further in this patchset (to not break bisecting);Similar;0.675803542137146
re-using the existing option;keeps things simple and it will make it much easier to add DMI quirks which can either disable the LID completely or set another non-default lid_init_state value, both of which are necessary on some devices;Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;Similar;0.6332111358642578
re-using the existing option;keeps things simple and it will make it much easier to add DMI quirks which can either disable the LID completely or set another non-default lid_init_state value, both of which are necessary on some devices;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.6118410229682922
re-using the existing option;keeps things simple and it will make it much easier to add DMI quirks which can either disable the LID completely or set another non-default lid_init_state value, both of which are necessary on some devices;fix acpi_driver.name usage;fix;Similar;0.5316137075424194
re-using the existing option;keeps things simple and it will make it much easier to add DMI quirks which can either disable the LID completely or set another non-default lid_init_state value, both of which are necessary on some devices;"Make ""module name"" actually match the file name";cosmetic only;Similar;0.5417771935462952
re-using the existing option;keeps things simple and it will make it much easier to add DMI quirks which can either disable the LID completely or set another non-default lid_init_state value, both of which are necessary on some devices;"Invoke with ; as leaving it off confuses Lindent  ";gcc doesnt care;Similar;0.6071991920471191
re-using the existing option;keeps things simple and it will make it much easier to add DMI quirks which can either disable the LID completely or set another non-default lid_init_state value, both of which are necessary on some devices;Fix indentation where Lindent did get confused  ;Lindent did get confused;Similar;0.6125935912132263
re-using the existing option;keeps things simple and it will make it much easier to add DMI quirks which can either disable the LID completely or set another non-default lid_init_state value, both of which are necessary on some devices;remove unnecessary casts and variable initializations, clean up formatting;unnecessary;Similar;0.5659719705581665
re-using the existing option;keeps things simple and it will make it much easier to add DMI quirks which can either disable the LID completely or set another non-default lid_init_state value, both of which are necessary on some devices;Use acpi_devices handle instead of drivers  ;-;Similar;0.5613981485366821
re-using the existing option;keeps things simple and it will make it much easier to add DMI quirks which can either disable the LID completely or set another non-default lid_init_state value, both of which are necessary on some devices;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.5218275785446167
re-using the existing option;keeps things simple and it will make it much easier to add DMI quirks which can either disable the LID completely or set another non-default lid_init_state value, both of which are necessary on some devices;restore /proc/acpi/button/ (ala 2.6.12)  ;[ACPI];Similar;0.5068895816802979
re-using the existing option;keeps things simple and it will make it much easier to add DMI quirks which can either disable the LID completely or set another non-default lid_init_state value, both of which are necessary on some devices;"Create a separate ""historical"" git archive";about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated;Similar;0.6166166663169861
[ an action or a change that has been made, including a description of the patch behaviour ];[ the reason for a decision or value judgment ];Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;Similar;0.5356040000915527
[ an action or a change that has been made, including a description of the patch behaviour ];[ the reason for a decision or value judgment ];Increment wakeup count only when notified;-;Similar;0.5137516856193542
[ an action or a change that has been made, including a description of the patch behaviour ];[ the reason for a decision or value judgment ];Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;Similar;0.5331217050552368
[ an action or a change that has been made, including a description of the patch behaviour ];[ the reason for a decision or value judgment ];adds an acpi_handle_debug call  ;to help debugging this;Similar;0.64140784740448
[ an action or a change that has been made, including a description of the patch behaviour ];[ the reason for a decision or value judgment ];Fix function prototypes for module_param_call();-;Similar;0.6740198135375977
[ an action or a change that has been made, including a description of the patch behaviour ];[ the reason for a decision or value judgment ];fix whitespace in pr_fmt() to align log entries;align log entries;Similar;0.5714640617370605
[ an action or a change that has been made, including a description of the patch behaviour ];[ the reason for a decision or value judgment ];libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;Similar;0.5587112903594971
[ an action or a change that has been made, including a description of the patch behaviour ];[ the reason for a decision or value judgment ];"userspace requires to see ""close"" event after the system is resumed";so that it can determine whether the internal display should remain dark and the external display should be lit on;Similar;0.5260872840881348
[ an action or a change that has been made, including a description of the patch behaviour ];[ the reason for a decision or value judgment ];Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;Similar;0.5624687075614929
[ an action or a change that has been made, including a description of the patch behaviour ];[ the reason for a decision or value judgment ];Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);Similar;0.526919960975647
[ an action or a change that has been made, including a description of the patch behaviour ];[ the reason for a decision or value judgment ];This patch makes it deprecated;lid_init__state=open is more useful than this mode;Similar;0.5901979804039001
[ an action or a change that has been made, including a description of the patch behaviour ];[ the reason for a decision or value judgment ];have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;Similar;0.5751864910125732
[ an action or a change that has been made, including a description of the patch behaviour ];[ the reason for a decision or value judgment ];This patch adds a mechanism to insert lid events as a compensation for the platform triggered ones to form a complete event switches  ;in order to make sure that the platform triggered events can always be reliably delivered to the userspace;Similar;0.5807911157608032
[ an action or a change that has been made, including a description of the patch behaviour ];[ the reason for a decision or value judgment ];implements this mechanism  ;only;Similar;0.741684079170227
[ an action or a change that has been made, including a description of the patch behaviour ];[ the reason for a decision or value judgment ];Use key event type to implement ACPI lid events;Another approach;Similar;0.6644004583358765
[ an action or a change that has been made, including a description of the patch behaviour ];[ the reason for a decision or value judgment ];Remove pointer to old lid_sysfs on unbind;ACPI / button;Similar;0.5224271416664124
[ an action or a change that has been made, including a description of the patch behaviour ];[ the reason for a decision or value judgment ];When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;Similar;0.560684084892273
[ an action or a change that has been made, including a description of the patch behaviour ];[ the reason for a decision or value judgment ];Correct a wrong macro usage;This patch simplies the code by merging some redundant code;Similar;0.5755394697189331
[ an action or a change that has been made, including a description of the patch behaviour ];[ the reason for a decision or value judgment ];this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;Similar;0.5292432904243469
[ an action or a change that has been made, including a description of the patch behaviour ];[ the reason for a decision or value judgment ];"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;Similar;0.5010193586349487
[ an action or a change that has been made, including a description of the patch behaviour ];[ the reason for a decision or value judgment ];Add ACPI Button event via netlink routine;-;Similar;0.5762452483177185
[ an action or a change that has been made, including a description of the patch behaviour ];[ the reason for a decision or value judgment ];add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;Similar;0.5551286339759827
[ an action or a change that has been made, including a description of the patch behaviour ];[ the reason for a decision or value judgment ];compile error;CONFIG_PM_SLEEP is undefined;Similar;0.6743205189704895
[ an action or a change that has been made, including a description of the patch behaviour ];[ the reason for a decision or value judgment ];Fix enabling button GPEs twice;Fix;Similar;0.527190089225769
[ an action or a change that has been made, including a description of the patch behaviour ];[ the reason for a decision or value judgment ];Button GPEs have been enabled in the acpi_wake_device_init() during boot;the button driver enables them for the second time;Similar;0.5185636878013611
[ an action or a change that has been made, including a description of the patch behaviour ];[ the reason for a decision or value judgment ];Clean up inclusions of ACPI header files;ACPI;Similar;0.5879217386245728
[ an action or a change that has been made, including a description of the patch behaviour ];[ the reason for a decision or value judgment ];<acpi/acpi_bus.h> be included prior to <acpi/acpi_drivers.h>;so that the acpi_pci_root declarations the latter depends on are always there;Similar;0.5453362464904785
[ an action or a change that has been made, including a description of the patch behaviour ];[ the reason for a decision or value judgment ];Use the patch to replace the origin code;provide a better solution;Similar;0.7214878797531128
[ an action or a change that has been made, including a description of the patch behaviour ];[ the reason for a decision or value judgment ];remove unused procfs I/F;unused;Similar;0.5562445521354675
[ an action or a change that has been made, including a description of the patch behaviour ];[ the reason for a decision or value judgment ];Use device wakeup flags for handling ACPI wakeup devices;for handling ACPI wakeup devices;Similar;0.6256345510482788
[ an action or a change that has been made, including a description of the patch behaviour ];[ the reason for a decision or value judgment ];use standard device wakeup flags instead of the special ACPI flags for handling those devices;address this problem;Similar;0.5007211565971375
[ an action or a change that has been made, including a description of the patch behaviour ];[ the reason for a decision or value judgment ];Use GPE reference counting to support shared GPEs  ;the wakeup enable mask bits of GPEs are set as soon as the GPEs are enabled to wake up the system;Similar;0.6368717551231384
[ an action or a change that has been made, including a description of the patch behaviour ];[ the reason for a decision or value judgment ];it is sufficient to set/unset the wakeup mask bits for them during system sleep transitions;"this means that the reference counting of ""wakeup"" GPEs doesnt really make sense";Similar;0.5005893111228943
[ an action or a change that has been made, including a description of the patch behaviour ];[ the reason for a decision or value judgment ];This will allow us to simplify the GPE handling code quite a bit;that change is too intrusive for 2.6.35;Similar;0.6633477210998535
[ an action or a change that has been made, including a description of the patch behaviour ];[ the reason for a decision or value judgment ];Update gfp.h and slab.h includes  ;prepare for breaking implicit slab.h inclusion from percpu.h;Similar;0.679882287979126
[ an action or a change that has been made, including a description of the patch behaviour ];[ the reason for a decision or value judgment ];Prepare for this change by updating users of gfp and slab facilities;include those headers directly instead of assuming availability;Similar;0.6417567729949951
[ an action or a change that has been made, including a description of the patch behaviour ];[ the reason for a decision or value judgment ];the following script is used as the basis of conversion;As this conversion needs to touch a large number of source files;Similar;0.7266268730163574
[ an action or a change that has been made, including a description of the patch behaviour ];[ the reason for a decision or value judgment ];only the necessary includes are there;necessary;Similar;0.5503305792808533
[ an action or a change that has been made, including a description of the patch behaviour ];[ the reason for a decision or value judgment ];put the new include  ;its order conforms to its surrounding;Similar;0.6521058678627014
[ an action or a change that has been made, including a description of the patch behaviour ];[ the reason for a decision or value judgment ];prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;Similar;0.6458375453948975
[ an action or a change that has been made, including a description of the patch behaviour ];[ the reason for a decision or value judgment ];The script was run again  ;to make sure no file was left behind;Similar;0.641940712928772
[ an action or a change that has been made, including a description of the patch behaviour ];[ the reason for a decision or value judgment ];description of the patch behaviour;an action or a change;Similar;0.8693506717681885
[ an action or a change that has been made, including a description of the patch behaviour ];[ the reason for a decision or value judgment ];failures were fixed;Build tests were done on the following configurations;Similar;0.6577180027961731
[ an action or a change that has been made, including a description of the patch behaviour ];[ the reason for a decision or value judgment ];percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;Similar;0.6841096878051758
[ an action or a change that has been made, including a description of the patch behaviour ];[ the reason for a decision or value judgment ];Im fairly confident about the coverage of this conversion patch  ;Given the fact that I had only a couple of failures from tests on step 6;Similar;0.5484827756881714
[ an action or a change that has been made, including a description of the patch behaviour ];[ the reason for a decision or value judgment ];Introduce a reference counter for run-wake devices and a function that will initialize all of the run-time wake-up fields for given device.;-;Similar;0.617628812789917
[ an action or a change that has been made, including a description of the patch behaviour ];[ the reason for a decision or value judgment ];Add an API to allow devices to indicate whether or not they want their devices GPE to be enabled for both runtime and wakeup events;to allow devices to indicate whether or not they want their devices GPE to be enabled;Similar;0.6110268235206604
[ an action or a change that has been made, including a description of the patch behaviour ];[ the reason for a decision or value judgment ];complain the following warning message;"will

";Similar;0.706620454788208
[ an action or a change that has been made, including a description of the patch behaviour ];[ the reason for a decision or value judgment ];"This patch is to eliminate the above warning message
";Device PNP0C0D:00 failed to resume: error 1;Similar;0.6116567850112915
[ an action or a change that has been made, including a description of the patch behaviour ];[ the reason for a decision or value judgment ];return -ENODEV;theres no lid device present;Similar;0.6076911687850952
[ an action or a change that has been made, including a description of the patch behaviour ];[ the reason for a decision or value judgment ];Some drivers need to know when a lid event occurs and get the current status;-;Similar;0.5843386054039001
[ an action or a change that has been made, including a description of the patch behaviour ];[ the reason for a decision or value judgment ];whitespace fix  ;This does not change any actual console output;Similar;0.7432857751846313
[ an action or a change that has been made, including a description of the patch behaviour ];[ the reason for a decision or value judgment ];type: Power Button;I dont think theres anything meaningful user-space can do by knowing whether a button is a control method or a fixed hardware button;Similar;0.545120120048523
[ an action or a change that has been made, including a description of the patch behaviour ];[ the reason for a decision or value judgment ];Remove button->device pointer;button;Similar;0.6105872392654419
[ an action or a change that has been made, including a description of the patch behaviour ];[ the reason for a decision or value judgment ];This patch adds temporaries to cache the acpi_device_hid(), acpi_device_name(), and acpi_device_class() pointers;so we dont have to clutter the code with so many uses of those interfaces;Similar;0.525414228439331
[ an action or a change that has been made, including a description of the patch behaviour ];[ the reason for a decision or value judgment ];Better to oops and learn about a bug;than to silently cover it up;Similar;0.5731463432312012
[ an action or a change that has been made, including a description of the patch behaviour ];[ the reason for a decision or value judgment ];changes a bit of whitespace to follow Linux conventions;follow Linux conventions;Similar;0.5864453315734863
[ an action or a change that has been made, including a description of the patch behaviour ];[ the reason for a decision or value judgment ];use .notify method instead of installing handler directly  ;-;Similar;0.5674316883087158
[ an action or a change that has been made, including a description of the patch behaviour ];[ the reason for a decision or value judgment ];convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.5601596832275391
[ an action or a change that has been made, including a description of the patch behaviour ];[ the reason for a decision or value judgment ];Setting ->owner as done currently (pde->owner = THIS_MODULE) is racy;as correctly noted at bug #12454;Similar;0.5457813739776611
[ an action or a change that has been made, including a description of the patch behaviour ];[ the reason for a decision or value judgment ];"proc_fops is declared as ""const""";should give some thoughts;Similar;0.6149470806121826
[ an action or a change that has been made, including a description of the patch behaviour ];[ the reason for a decision or value judgment ];start using GPE from userspace;GPE is already disabled in interrupt context;Similar;0.6037195920944214
[ an action or a change that has been made, including a description of the patch behaviour ];[ the reason for a decision or value judgment ];"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.6519991159439087
[ an action or a change that has been made, including a description of the patch behaviour ];[ the reason for a decision or value judgment ];Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;Similar;0.5356590747833252
[ an action or a change that has been made, including a description of the patch behaviour ];[ the reason for a decision or value judgment ];use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Similar;0.6012232303619385
[ an action or a change that has been made, including a description of the patch behaviour ];[ the reason for a decision or value judgment ];Use proc_create()/proc_create_data() to make sure that ->proc_fops and ->data be setup;before gluing PDE to main tree;Similar;0.6559203863143921
[ an action or a change that has been made, including a description of the patch behaviour ];[ the reason for a decision or value judgment ];get rid of input BIT* duplicate defines;duplicate;Similar;0.5751163363456726
[ an action or a change that has been made, including a description of the patch behaviour ];[ the reason for a decision or value judgment ];Define the macro temporarily in a local manner;all those local definitions will be removed further in this patchset (to not break bisecting);Similar;0.7143784165382385
[ an action or a change that has been made, including a description of the patch behaviour ];[ the reason for a decision or value judgment ];Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;Similar;0.5683786869049072
[ an action or a change that has been made, including a description of the patch behaviour ];[ the reason for a decision or value judgment ];Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.5730191469192505
[ an action or a change that has been made, including a description of the patch behaviour ];[ the reason for a decision or value judgment ];fix acpi_driver.name usage;fix;Similar;0.5402035713195801
[ an action or a change that has been made, including a description of the patch behaviour ];[ the reason for a decision or value judgment ];"Make ""module name"" actually match the file name";cosmetic only;Similar;0.5903973579406738
[ an action or a change that has been made, including a description of the patch behaviour ];[ the reason for a decision or value judgment ];"Invoke with ; as leaving it off confuses Lindent  ";gcc doesnt care;Similar;0.5688380002975464
[ an action or a change that has been made, including a description of the patch behaviour ];[ the reason for a decision or value judgment ];Fix indentation where Lindent did get confused  ;Lindent did get confused;Similar;0.6834776401519775
[ an action or a change that has been made, including a description of the patch behaviour ];[ the reason for a decision or value judgment ];remove unnecessary casts and variable initializations, clean up formatting;unnecessary;Similar;0.6128371953964233
[ an action or a change that has been made, including a description of the patch behaviour ];[ the reason for a decision or value judgment ];un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.5060207843780518
[ an action or a change that has been made, including a description of the patch behaviour ];[ the reason for a decision or value judgment ];"Create a separate ""historical"" git archive";about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated;Similar;0.5370978116989136
update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;Similar;0.6961710453033447
update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;Fix a build warning in the ACPI button driver when CONFIG_PROC_FS is not enabled by marking the unused function as __maybe_unused;not enabled, unused;Similar;0.682223916053772
update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;Increment wakeup count only when notified;-;Similar;0.5433632135391235
update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;only trigger acpi_pm_wakeup_event() in the acpi_button_notify() path and dont do that in the acpi_lid_initialize_state() path;To avoid the confusion;Similar;0.6618828773498535
update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;Similar;0.6922502517700195
update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;making the ACPI button driver loadable as a module even if not booted in ACPI mode;to fix the asymmetry and provide the acpi_lid_open() symbol;Similar;0.6797827482223511
update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;adds an acpi_handle_debug call  ;to help debugging this;Similar;0.7040603160858154
update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;Fix function prototypes for module_param_call();-;Similar;0.6322818994522095
update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;fix whitespace in pr_fmt() to align log entries;align log entries;Similar;0.6648581027984619
update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;The ->sync hook allows all of the relevant event queues to be flushed;to prevent events from being missed due to race conditions;Similar;0.5260503888130188
update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;Similar;0.6757885217666626
update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;assume the user will use the internal keyboard before this timeout expires;logind only checks the lid switch value after a timeout;Similar;0.6616672277450562
update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;"userspace requires to see ""close"" event after the system is resumed";so that it can determine whether the internal display should remain dark and the external display should be lit on;Similar;0.5450835227966309
update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;Similar;0.6968426704406738
update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);Similar;0.5943061113357544
update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;The ->sync hook allows all of the relevant event queues to be flushed;to prevent events from being missed due to race conditions;Similar;0.5260503888130188
update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;Similar;0.5291328430175781
update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;This patch adds a mechanism to insert lid events as a compensation for the platform triggered ones to form a complete event switches  ;in order to make sure that the platform triggered events can always be reliably delivered to the userspace;Similar;0.6546773910522461
update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;Remove pointer to old lid_sysfs on unbind;ACPI / button;Similar;0.5921878814697266
update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;Similar;0.5640995502471924
update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;Similar;0.5835909247398376
update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;Similar;0.7033014297485352
update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;Add ACPI Button event via netlink routine;-;Similar;0.7156844735145569
update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;Similar;0.63111412525177
update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;This caused ACPI shutdown regression on gentoo;VirtualBox;Similar;0.542945384979248
update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;Similar;0.7603441476821899
update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;fix button driver compile error when CONFIG_PM_SLEEP is undefined;CONFIG_PM_SLEEP is undefined;Similar;0.6857874393463135
update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;Fix enabling button GPEs twice;Fix;Similar;0.6454116106033325
update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;Button GPEs have been enabled in the acpi_wake_device_init() during boot;the button driver enables them for the second time;Similar;0.7008029222488403
update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;remove the GPE enabling code from the button driver;to avoid the problem;Similar;0.683551549911499
update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;Clean up inclusions of ACPI header files;ACPI;Similar;0.6108764410018921
update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;Similar;0.5305573344230652
update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;Use the patch to replace the origin code;provide a better solution;Similar;0.5476458072662354
update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;Remove useless type argument of driver .remove() operation;useless;Similar;0.525056004524231
update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;"The second argument of ACPI driver .remove() operation is only used by the ACPI processor driver
";the value passed to that driver through it is always available from the given struct acpi_device objects removal_type field;Similar;0.5366426110267639
update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;drop the second ACPI driver .remove() argument  ;the second ACPI driver .remove() argument is in fact useless;Similar;0.5494396686553955
update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;Fix unused function warnings for CONFIG_PM_SLEEP;unused function warnings;Similar;0.5807271003723145
update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;Remove unused ACPI button procfs interface;unused;Similar;0.6334715485572815
update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;Use device wakeup flags for handling ACPI wakeup devices;for handling ACPI wakeup devices;Similar;0.5310850143432617
update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;it is sufficient to set/unset the wakeup mask bits for them during system sleep transitions;"this means that the reference counting of ""wakeup"" GPEs doesnt really make sense";Similar;0.5317935347557068
update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;Update gfp.h and slab.h includes  ;prepare for breaking implicit slab.h inclusion from percpu.h;Similar;0.5198776721954346
update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;Prepare for this change by updating users of gfp and slab facilities;include those headers directly instead of assuming availability;Similar;0.5460761189460754
update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;Similar;0.6052200794219971
update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;The script was run again  ;to make sure no file was left behind;Similar;0.5557066202163696
update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;The script was run on all .h files but without automatically editing them;sprinkling gfp.h and slab.h inclusions around .h files could easily lead to inclusion dependency hell;Similar;0.5376750230789185
update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;CONFIG_GCOV_KERNEL was turned off for all tests and a few more options had to be turned off depending on archs to make things build;my distributed build env didnt work with gcov compiles, like ipr on powerpc/64 which failed due to missing writeq;Similar;0.544138491153717
update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;Similar;0.5376510620117188
update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;Introduce a new wake-up flag, always_enabled, for marking devices that should be permanently enabled to generate run-time events  ;devices that should be permanently enabled to generate run-time events;Similar;0.7000283002853394
update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;Introduce a reference counter for run-wake devices and a function that will initialize all of the run-time wake-up fields for given device.;-;Similar;0.5954095125198364
update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;Add an API to allow devices to indicate whether or not they want their devices GPE to be enabled for both runtime and wakeup events;to allow devices to indicate whether or not they want their devices GPE to be enabled;Similar;0.6110455393791199
update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;we could install either a fixed event handler or a notify handler, but the Linux/ACPI code now handles that for us;We previously needed that so we dont need to worry about it;Similar;0.592144787311554
update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;Remove button->device pointer;button;Similar;0.618198037147522
update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;We no longer need a pointer from struct acpi_button back to the struct acpi_device;no longer need;Similar;0.5391268730163574
update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;This patch adds temporaries to cache the acpi_device_hid(), acpi_device_name(), and acpi_device_class() pointers;so we dont have to clutter the code with so many uses of those interfaces;Similar;0.6467256546020508
update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;changes a bit of whitespace to follow Linux conventions;follow Linux conventions;Similar;0.5590825080871582
update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;use .notify method instead of installing handler directly  ;-;Similar;0.5863405466079712
update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;The presence of .notify() causes Linux/ACPI to manage event handlers and notify handlers on our behalf  ;so we dont have to install and remove them ourselves;Similar;0.6148020625114441
update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.7531180381774902
update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;"rmmoded directories will be empty and return ""."" and "".."" -- no harm";no harm;Similar;0.5025994777679443
update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;start using GPE from userspace;GPE is already disabled in interrupt context;Similar;0.5311434268951416
update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;Move all the component definitions for drivers to a single shared place, include/acpi/acpi_drivers.h  ;to have a single shared place;Similar;0.6006419658660889
update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.6909699440002441
update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;Similar;0.6056681275367737
update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Similar;0.5684292316436768
update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;Use proc_create()/proc_create_data() to make sure that ->proc_fops and ->data be setup;before gluing PDE to main tree;Similar;0.5634548664093018
update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;Add correct ->owner to proc_fops to fix reading/module unloading race  ;fix reading/module unloading race;Similar;0.6685588359832764
update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;get rid of input BIT* duplicate defines;duplicate;Similar;0.5537397861480713
update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;Similar;0.5253891348838806
update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;Similar;0.5516926646232605
update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.6210566163063049
update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;fix acpi_driver.name usage;fix;Similar;0.6414886713027954
update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;"Make ""module name"" actually match the file name";cosmetic only;Similar;0.5326414108276367
update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;remove unnecessary casts and variable initializations, clean up formatting;unnecessary;Similar;0.5638270378112793
update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;Remove unneeded acpi_handle from driver;unneeded;Similar;0.5935115814208984
update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.628532886505127
update Lid state unconditionally in the button driver .resume() callback  ;overlooked the resume case;restore /proc/acpi/button/ (ala 2.6.12)  ;[ACPI];Similar;0.7071941494941711
Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;Fix a build warning in the ACPI button driver when CONFIG_PROC_FS is not enabled by marking the unused function as __maybe_unused;not enabled, unused;Similar;0.7958998680114746
Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;only trigger acpi_pm_wakeup_event() in the acpi_button_notify() path and dont do that in the acpi_lid_initialize_state() path;To avoid the confusion;Similar;0.7005424499511719
Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;Similar;0.5851935744285583
Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;making the ACPI button driver loadable as a module even if not booted in ACPI mode;to fix the asymmetry and provide the acpi_lid_open() symbol;Similar;0.619430422782898
Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;"The only solution is to add a DMI based blacklist and ignore the LID device on these tablets.
";There is nothing the ACPI button driver (or the gpio code) can do to fix this.;Similar;0.5464436411857605
Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;evemu-record after noticing a spurious suspend is too late to detect;a LID closed event is the (probable) cause of this;Similar;0.5227159261703491
Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;adds an acpi_handle_debug call  ;to help debugging this;Similar;0.7179237604141235
Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;Fix function prototypes for module_param_call();-;Similar;0.7013735771179199
Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;fix whitespace in pr_fmt() to align log entries;align log entries;Similar;0.6497377753257751
Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;"the ""open"" choice is worse";"the ""method"" operation mode implementation can be buggy on some platforms";Similar;0.5116495490074158
Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;It breaks docking stations basically;there is no way to have a user-space hwdb to fix that;Similar;0.5476527214050293
Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;Similar;0.6509217619895935
Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;assume the user will use the internal keyboard before this timeout expires;logind only checks the lid switch value after a timeout;Similar;0.6351733207702637
Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;"userspace requires to see ""close"" event after the system is resumed";so that it can determine whether the internal display should remain dark and the external display should be lit on;Similar;0.6225609183311462
Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;Similar;0.7841354608535767
Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);Similar;0.7686223983764648
Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;This patch makes it deprecated;lid_init__state=open is more useful than this mode;Similar;0.5993456840515137
Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;Similar;0.7787225246429443
Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;This patch adds a mechanism to insert lid events as a compensation for the platform triggered ones to form a complete event switches  ;in order to make sure that the platform triggered events can always be reliably delivered to the userspace;Similar;0.5715253949165344
Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;it should not send the complement switch event for the unreliable initial lid state notification;However this mechanism is not suitable for lid_init_state=open/method;Similar;0.6277469396591187
Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;Use key event type to implement ACPI lid events;Another approach;Similar;0.5277367830276489
Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;Remove pointer to old lid_sysfs on unbind;ACPI / button;Similar;0.7788118124008179
Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;Similar;0.7477154731750488
Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;Correct a wrong macro usage;This patch simplies the code by merging some redundant code;Similar;0.6635066270828247
Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;Similar;0.7971791625022888
Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;Similar;0.7517688274383545
Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;Add ACPI Button event via netlink routine;-;Similar;0.6557188034057617
Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;Similar;0.7628926038742065
Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;This caused ACPI shutdown regression on gentoo;VirtualBox;Similar;0.7472628951072693
Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;Similar;0.6640584468841553
Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;fix button driver compile error when CONFIG_PM_SLEEP is undefined;CONFIG_PM_SLEEP is undefined;Similar;0.7900902032852173
Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;compile error;CONFIG_PM_SLEEP is undefined;Similar;0.6262614727020264
Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;Fix enabling button GPEs twice;Fix;Similar;0.5997509360313416
Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;Button GPEs have been enabled in the acpi_wake_device_init() during boot;the button driver enables them for the second time;Similar;0.6382255554199219
Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;remove the GPE enabling code from the button driver;to avoid the problem;Similar;0.8430756330490112
Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;Clean up inclusions of ACPI header files;ACPI;Similar;0.5959205627441406
Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;Similar;0.7193667888641357
Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;<acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> should not be included directly from any files that are built for CONFIG_ACPI unset;because that generally leads to build warnings about undefined symbols in !CONFIG_ACPI builds;Similar;0.526818037033081
Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;Use the patch to replace the origin code;provide a better solution;Similar;0.6673392057418823
Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;Remove useless type argument of driver .remove() operation;useless;Similar;0.7589181661605835
Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;"The second argument of ACPI driver .remove() operation is only used by the ACPI processor driver
";the value passed to that driver through it is always available from the given struct acpi_device objects removal_type field;Similar;0.6249421834945679
Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;drop the second ACPI driver .remove() argument  ;the second ACPI driver .remove() argument is in fact useless;Similar;0.7338438034057617
Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;Fix unused function warnings for CONFIG_PM_SLEEP;unused function warnings;Similar;0.7382585406303406
Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;add #ifdefs to prevent them from being built in that case  ;several suspend/resume functions in ACPI drivers are not used for CONFIG_PM_SLEEP unset;Similar;0.6901777386665344
Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;remove unused procfs I/F;unused;Similar;0.7173548936843872
Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;Remove unused ACPI button procfs interface;unused;Similar;0.8334183692932129
Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;Avoid disabling wakeup unnecessarily on remove;-;Similar;0.6357921361923218
Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;Use device wakeup flags for handling ACPI wakeup devices;for handling ACPI wakeup devices;Similar;0.500696063041687
Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;use standard device wakeup flags instead of the special ACPI flags for handling those devices;address this problem;Similar;0.5517970323562622
Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;Similar;0.6153066158294678
Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;failures were fixed;Build tests were done on the following configurations;Similar;0.5503512620925903
Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;CONFIG_GCOV_KERNEL was turned off for all tests and a few more options had to be turned off depending on archs to make things build;my distributed build env didnt work with gcov compiles, like ipr on powerpc/64 which failed due to missing writeq;Similar;0.564902663230896
Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;Similar;0.600386381149292
Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;Remove the old GPE type handling entirely  ;Gets rid of various quirks, like the implicit disabling with GPE type setting;Similar;0.58945631980896
Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;complain the following warning message;"will

";Similar;0.5025703310966492
Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;"This patch is to eliminate the above warning message
";Device PNP0C0D:00 failed to resume: error 1;Similar;0.6932581663131714
Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;dont try to use a non-existent lid device;non-existent;Similar;0.5372228622436523
Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;whitespace fix  ;This does not change any actual console output;Similar;0.6564650535583496
Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;we could install either a fixed event handler or a notify handler, but the Linux/ACPI code now handles that for us;We previously needed that so we dont need to worry about it;Similar;0.5316257476806641
Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;type: Power Button;I dont think theres anything meaningful user-space can do by knowing whether a button is a control method or a fixed hardware button;Similar;0.5759681463241577
Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;Remove button->device pointer;button;Similar;0.8494284152984619
Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;We no longer need a pointer from struct acpi_button back to the struct acpi_device;no longer need;Similar;0.7384586334228516
Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;This patch adds temporaries to cache the acpi_device_hid(), acpi_device_name(), and acpi_device_class() pointers;so we dont have to clutter the code with so many uses of those interfaces;Similar;0.584521472454071
Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;Better to oops and learn about a bug;than to silently cover it up;Similar;0.5300568342208862
Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;changes a bit of whitespace to follow Linux conventions;follow Linux conventions;Similar;0.5677790641784668
Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;use .notify method instead of installing handler directly  ;-;Similar;0.6510897874832153
Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.7851555347442627
Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;Setting ->owner as done currently (pde->owner = THIS_MODULE) is racy;as correctly noted at bug #12454;Similar;0.5450084209442139
Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;"proc_fops is declared as ""const""";should give some thoughts;Similar;0.5907120704650879
Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;dont want such modular code;definitely;Similar;0.5154950022697449
Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.6060619354248047
Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;Similar;0.656624972820282
Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Similar;0.6417702436447144
Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;get rid of input BIT* duplicate defines;duplicate;Similar;0.7581249475479126
Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;Similar;0.7091459035873413
Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;Define the macro temporarily in a local manner;all those local definitions will be removed further in this patchset (to not break bisecting);Similar;0.5637813806533813
Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;Similar;0.6020838618278503
Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.7747592329978943
Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;fix acpi_driver.name usage;fix;Similar;0.6746163368225098
Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;"Invoke with ; as leaving it off confuses Lindent  ";gcc doesnt care;Similar;0.6123226881027222
Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;Fix indentation where Lindent did get confused  ;Lindent did get confused;Similar;0.6512800455093384
Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;remove unnecessary casts and variable initializations, clean up formatting;unnecessary;Similar;0.619705080986023
Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;Remove unneeded acpi_handle from driver;unneeded;Similar;0.772566020488739
Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;Use acpi_devices handle instead of drivers  ;-;Similar;0.6781649589538574
Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.7692043781280518
Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;restore /proc/acpi/button/ (ala 2.6.12)  ;[ACPI];Similar;0.6151238679885864
Fix an issue in button.lid_init_state=ignore mode;Reported-and-tested-by: Zhao Lijian <lijian.zhao@intel.com>;"Create a separate ""historical"" git archive";about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated;Similar;0.5765078067779541
Fix a build warning in the ACPI button driver when CONFIG_PROC_FS is not enabled by marking the unused function as __maybe_unused;not enabled, unused;only trigger acpi_pm_wakeup_event() in the acpi_button_notify() path and dont do that in the acpi_lid_initialize_state() path;To avoid the confusion;Similar;0.668840765953064
Fix a build warning in the ACPI button driver when CONFIG_PROC_FS is not enabled by marking the unused function as __maybe_unused;not enabled, unused;Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;Similar;0.616309404373169
Fix a build warning in the ACPI button driver when CONFIG_PROC_FS is not enabled by marking the unused function as __maybe_unused;not enabled, unused;making the ACPI button driver loadable as a module even if not booted in ACPI mode;to fix the asymmetry and provide the acpi_lid_open() symbol;Similar;0.6630873680114746
Fix a build warning in the ACPI button driver when CONFIG_PROC_FS is not enabled by marking the unused function as __maybe_unused;not enabled, unused;"The only solution is to add a DMI based blacklist and ignore the LID device on these tablets.
";There is nothing the ACPI button driver (or the gpio code) can do to fix this.;Similar;0.633150041103363
Fix a build warning in the ACPI button driver when CONFIG_PROC_FS is not enabled by marking the unused function as __maybe_unused;not enabled, unused;adds an acpi_handle_debug call  ;to help debugging this;Similar;0.6382675170898438
Fix a build warning in the ACPI button driver when CONFIG_PROC_FS is not enabled by marking the unused function as __maybe_unused;not enabled, unused;Fix function prototypes for module_param_call();-;Similar;0.6566886901855469
Fix a build warning in the ACPI button driver when CONFIG_PROC_FS is not enabled by marking the unused function as __maybe_unused;not enabled, unused;fix whitespace in pr_fmt() to align log entries;align log entries;Similar;0.6184651851654053
Fix a build warning in the ACPI button driver when CONFIG_PROC_FS is not enabled by marking the unused function as __maybe_unused;not enabled, unused;libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;Similar;0.6901184916496277
Fix a build warning in the ACPI button driver when CONFIG_PROC_FS is not enabled by marking the unused function as __maybe_unused;not enabled, unused;assume the user will use the internal keyboard before this timeout expires;logind only checks the lid switch value after a timeout;Similar;0.5986276268959045
Fix a build warning in the ACPI button driver when CONFIG_PROC_FS is not enabled by marking the unused function as __maybe_unused;not enabled, unused;"userspace requires to see ""close"" event after the system is resumed";so that it can determine whether the internal display should remain dark and the external display should be lit on;Similar;0.51505047082901
Fix a build warning in the ACPI button driver when CONFIG_PROC_FS is not enabled by marking the unused function as __maybe_unused;not enabled, unused;Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;Similar;0.5812612175941467
Fix a build warning in the ACPI button driver when CONFIG_PROC_FS is not enabled by marking the unused function as __maybe_unused;not enabled, unused;Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);Similar;0.5255823135375977
Fix a build warning in the ACPI button driver when CONFIG_PROC_FS is not enabled by marking the unused function as __maybe_unused;not enabled, unused;have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;Similar;0.7056447863578796
Fix a build warning in the ACPI button driver when CONFIG_PROC_FS is not enabled by marking the unused function as __maybe_unused;not enabled, unused;This patch adds a mechanism to insert lid events as a compensation for the platform triggered ones to form a complete event switches  ;in order to make sure that the platform triggered events can always be reliably delivered to the userspace;Similar;0.6219773292541504
Fix a build warning in the ACPI button driver when CONFIG_PROC_FS is not enabled by marking the unused function as __maybe_unused;not enabled, unused;it should not send the complement switch event for the unreliable initial lid state notification;However this mechanism is not suitable for lid_init_state=open/method;Similar;0.5769904851913452
Fix a build warning in the ACPI button driver when CONFIG_PROC_FS is not enabled by marking the unused function as __maybe_unused;not enabled, unused;Remove pointer to old lid_sysfs on unbind;ACPI / button;Similar;0.6412754058837891
Fix a build warning in the ACPI button driver when CONFIG_PROC_FS is not enabled by marking the unused function as __maybe_unused;not enabled, unused;When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;Similar;0.6891739964485168
Fix a build warning in the ACPI button driver when CONFIG_PROC_FS is not enabled by marking the unused function as __maybe_unused;not enabled, unused;Correct a wrong macro usage;This patch simplies the code by merging some redundant code;Similar;0.5538444519042969
Fix a build warning in the ACPI button driver when CONFIG_PROC_FS is not enabled by marking the unused function as __maybe_unused;not enabled, unused;this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;Similar;0.7320832014083862
Fix a build warning in the ACPI button driver when CONFIG_PROC_FS is not enabled by marking the unused function as __maybe_unused;not enabled, unused;"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;Similar;0.7418713569641113
Fix a build warning in the ACPI button driver when CONFIG_PROC_FS is not enabled by marking the unused function as __maybe_unused;not enabled, unused;Add ACPI Button event via netlink routine;-;Similar;0.6127474308013916
Fix a build warning in the ACPI button driver when CONFIG_PROC_FS is not enabled by marking the unused function as __maybe_unused;not enabled, unused;removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;Similar;0.7234793901443481
Fix a build warning in the ACPI button driver when CONFIG_PROC_FS is not enabled by marking the unused function as __maybe_unused;not enabled, unused;This caused ACPI shutdown regression on gentoo;VirtualBox;Similar;0.632267951965332
Fix a build warning in the ACPI button driver when CONFIG_PROC_FS is not enabled by marking the unused function as __maybe_unused;not enabled, unused;add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;Similar;0.6389105319976807
Fix a build warning in the ACPI button driver when CONFIG_PROC_FS is not enabled by marking the unused function as __maybe_unused;not enabled, unused;fix button driver compile error when CONFIG_PM_SLEEP is undefined;CONFIG_PM_SLEEP is undefined;Similar;0.8544233441352844
Fix a build warning in the ACPI button driver when CONFIG_PROC_FS is not enabled by marking the unused function as __maybe_unused;not enabled, unused;Fix enabling button GPEs twice;Fix;Similar;0.5603951215744019
Fix a build warning in the ACPI button driver when CONFIG_PROC_FS is not enabled by marking the unused function as __maybe_unused;not enabled, unused;Button GPEs have been enabled in the acpi_wake_device_init() during boot;the button driver enables them for the second time;Similar;0.6753471493721008
Fix a build warning in the ACPI button driver when CONFIG_PROC_FS is not enabled by marking the unused function as __maybe_unused;not enabled, unused;remove the GPE enabling code from the button driver;to avoid the problem;Similar;0.8085322380065918
Fix a build warning in the ACPI button driver when CONFIG_PROC_FS is not enabled by marking the unused function as __maybe_unused;not enabled, unused;Clean up inclusions of ACPI header files;ACPI;Similar;0.5180144309997559
Fix a build warning in the ACPI button driver when CONFIG_PROC_FS is not enabled by marking the unused function as __maybe_unused;not enabled, unused;Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;Similar;0.7282538414001465
Fix a build warning in the ACPI button driver when CONFIG_PROC_FS is not enabled by marking the unused function as __maybe_unused;not enabled, unused;<acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> should not be included directly from any files that are built for CONFIG_ACPI unset;because that generally leads to build warnings about undefined symbols in !CONFIG_ACPI builds;Similar;0.5477999448776245
Fix a build warning in the ACPI button driver when CONFIG_PROC_FS is not enabled by marking the unused function as __maybe_unused;not enabled, unused;Use the patch to replace the origin code;provide a better solution;Similar;0.6921459436416626
Fix a build warning in the ACPI button driver when CONFIG_PROC_FS is not enabled by marking the unused function as __maybe_unused;not enabled, unused;Remove useless type argument of driver .remove() operation;useless;Similar;0.6078075766563416
Fix a build warning in the ACPI button driver when CONFIG_PROC_FS is not enabled by marking the unused function as __maybe_unused;not enabled, unused;"The second argument of ACPI driver .remove() operation is only used by the ACPI processor driver
";the value passed to that driver through it is always available from the given struct acpi_device objects removal_type field;Similar;0.6150022745132446
Fix a build warning in the ACPI button driver when CONFIG_PROC_FS is not enabled by marking the unused function as __maybe_unused;not enabled, unused;drop the second ACPI driver .remove() argument  ;the second ACPI driver .remove() argument is in fact useless;Similar;0.609713613986969
Fix a build warning in the ACPI button driver when CONFIG_PROC_FS is not enabled by marking the unused function as __maybe_unused;not enabled, unused;Fix unused function warnings for CONFIG_PM_SLEEP;unused function warnings;Similar;0.7302958965301514
Fix a build warning in the ACPI button driver when CONFIG_PROC_FS is not enabled by marking the unused function as __maybe_unused;not enabled, unused;add #ifdefs to prevent them from being built in that case  ;several suspend/resume functions in ACPI drivers are not used for CONFIG_PM_SLEEP unset;Similar;0.7076560258865356
Fix a build warning in the ACPI button driver when CONFIG_PROC_FS is not enabled by marking the unused function as __maybe_unused;not enabled, unused;Remove unused ACPI button procfs interface;unused;Similar;0.7389320135116577
Fix a build warning in the ACPI button driver when CONFIG_PROC_FS is not enabled by marking the unused function as __maybe_unused;not enabled, unused;use standard device wakeup flags instead of the special ACPI flags for handling those devices;address this problem;Similar;0.5236712694168091
Fix a build warning in the ACPI button driver when CONFIG_PROC_FS is not enabled by marking the unused function as __maybe_unused;not enabled, unused;prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;Similar;0.6889824867248535
Fix a build warning in the ACPI button driver when CONFIG_PROC_FS is not enabled by marking the unused function as __maybe_unused;not enabled, unused;CONFIG_GCOV_KERNEL was turned off for all tests and a few more options had to be turned off depending on archs to make things build;my distributed build env didnt work with gcov compiles, like ipr on powerpc/64 which failed due to missing writeq;Similar;0.6700824499130249
Fix a build warning in the ACPI button driver when CONFIG_PROC_FS is not enabled by marking the unused function as __maybe_unused;not enabled, unused;Introduce a new wake-up flag, always_enabled, for marking devices that should be permanently enabled to generate run-time events  ;devices that should be permanently enabled to generate run-time events;Similar;0.5047011375427246
Fix a build warning in the ACPI button driver when CONFIG_PROC_FS is not enabled by marking the unused function as __maybe_unused;not enabled, unused;Add an API to allow devices to indicate whether or not they want their devices GPE to be enabled for both runtime and wakeup events;to allow devices to indicate whether or not they want their devices GPE to be enabled;Similar;0.5810390710830688
Fix a build warning in the ACPI button driver when CONFIG_PROC_FS is not enabled by marking the unused function as __maybe_unused;not enabled, unused;"This patch is to eliminate the above warning message
";Device PNP0C0D:00 failed to resume: error 1;Similar;0.5769568681716919
Fix a build warning in the ACPI button driver when CONFIG_PROC_FS is not enabled by marking the unused function as __maybe_unused;not enabled, unused;Some drivers need to know when a lid event occurs and get the current status;-;Similar;0.522815465927124
Fix a build warning in the ACPI button driver when CONFIG_PROC_FS is not enabled by marking the unused function as __maybe_unused;not enabled, unused;we could install either a fixed event handler or a notify handler, but the Linux/ACPI code now handles that for us;We previously needed that so we dont need to worry about it;Similar;0.6651754975318909
Fix a build warning in the ACPI button driver when CONFIG_PROC_FS is not enabled by marking the unused function as __maybe_unused;not enabled, unused;Remove button->device pointer;button;Similar;0.6097155809402466
Fix a build warning in the ACPI button driver when CONFIG_PROC_FS is not enabled by marking the unused function as __maybe_unused;not enabled, unused;We no longer need a pointer from struct acpi_button back to the struct acpi_device;no longer need;Similar;0.6251128315925598
Fix a build warning in the ACPI button driver when CONFIG_PROC_FS is not enabled by marking the unused function as __maybe_unused;not enabled, unused;This patch adds temporaries to cache the acpi_device_hid(), acpi_device_name(), and acpi_device_class() pointers;so we dont have to clutter the code with so many uses of those interfaces;Similar;0.6904542446136475
Fix a build warning in the ACPI button driver when CONFIG_PROC_FS is not enabled by marking the unused function as __maybe_unused;not enabled, unused;changes a bit of whitespace to follow Linux conventions;follow Linux conventions;Similar;0.5964572429656982
Fix a build warning in the ACPI button driver when CONFIG_PROC_FS is not enabled by marking the unused function as __maybe_unused;not enabled, unused;use .notify method instead of installing handler directly  ;-;Similar;0.5209330320358276
Fix a build warning in the ACPI button driver when CONFIG_PROC_FS is not enabled by marking the unused function as __maybe_unused;not enabled, unused;The presence of .notify() causes Linux/ACPI to manage event handlers and notify handlers on our behalf  ;so we dont have to install and remove them ourselves;Similar;0.5779106020927429
Fix a build warning in the ACPI button driver when CONFIG_PROC_FS is not enabled by marking the unused function as __maybe_unused;not enabled, unused;convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.6656922101974487
Fix a build warning in the ACPI button driver when CONFIG_PROC_FS is not enabled by marking the unused function as __maybe_unused;not enabled, unused;Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;Similar;0.5959105491638184
Fix a build warning in the ACPI button driver when CONFIG_PROC_FS is not enabled by marking the unused function as __maybe_unused;not enabled, unused;Add correct ->owner to proc_fops to fix reading/module unloading race  ;fix reading/module unloading race;Similar;0.6347213983535767
Fix a build warning in the ACPI button driver when CONFIG_PROC_FS is not enabled by marking the unused function as __maybe_unused;not enabled, unused;get rid of input BIT* duplicate defines;duplicate;Similar;0.5193971991539001
Fix a build warning in the ACPI button driver when CONFIG_PROC_FS is not enabled by marking the unused function as __maybe_unused;not enabled, unused;Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;Similar;0.6238949298858643
Fix a build warning in the ACPI button driver when CONFIG_PROC_FS is not enabled by marking the unused function as __maybe_unused;not enabled, unused;Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;Similar;0.5418710708618164
Fix a build warning in the ACPI button driver when CONFIG_PROC_FS is not enabled by marking the unused function as __maybe_unused;not enabled, unused;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.6573389172554016
Fix a build warning in the ACPI button driver when CONFIG_PROC_FS is not enabled by marking the unused function as __maybe_unused;not enabled, unused;fix acpi_driver.name usage;fix;Similar;0.6339020133018494
Fix a build warning in the ACPI button driver when CONFIG_PROC_FS is not enabled by marking the unused function as __maybe_unused;not enabled, unused;Remove unneeded acpi_handle from driver;unneeded;Similar;0.728763222694397
Fix a build warning in the ACPI button driver when CONFIG_PROC_FS is not enabled by marking the unused function as __maybe_unused;not enabled, unused;Use acpi_devices handle instead of drivers  ;-;Similar;0.5426581501960754
Fix a build warning in the ACPI button driver when CONFIG_PROC_FS is not enabled by marking the unused function as __maybe_unused;not enabled, unused;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.6110807657241821
Fix a build warning in the ACPI button driver when CONFIG_PROC_FS is not enabled by marking the unused function as __maybe_unused;not enabled, unused;restore /proc/acpi/button/ (ala 2.6.12)  ;[ACPI];Similar;0.5233006477355957
Increment wakeup count only when notified;-;only trigger acpi_pm_wakeup_event() in the acpi_button_notify() path and dont do that in the acpi_lid_initialize_state() path;To avoid the confusion;Similar;0.7153215408325195
Increment wakeup count only when notified;-;evemu-record after noticing a spurious suspend is too late to detect;a LID closed event is the (probable) cause of this;Similar;0.6205736398696899
Increment wakeup count only when notified;-;adds an acpi_handle_debug call  ;to help debugging this;Similar;0.561153769493103
Increment wakeup count only when notified;-;assume the user will use the internal keyboard before this timeout expires;logind only checks the lid switch value after a timeout;Similar;0.5679819583892822
Increment wakeup count only when notified;-;"userspace requires to see ""close"" event after the system is resumed";so that it can determine whether the internal display should remain dark and the external display should be lit on;Similar;0.6186896562576294
Increment wakeup count only when notified;-;Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;Similar;0.5062574744224548
Increment wakeup count only when notified;-;Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);Similar;0.508033812046051
Increment wakeup count only when notified;-;it should not send the complement switch event for the unreliable initial lid state notification;However this mechanism is not suitable for lid_init_state=open/method;Similar;0.5426335334777832
Increment wakeup count only when notified;-;implements this mechanism  ;only;Similar;0.5490014553070068
Increment wakeup count only when notified;-;Use key event type to implement ACPI lid events;Another approach;Similar;0.5499794483184814
Increment wakeup count only when notified;-;"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;Similar;0.5212773084640503
Increment wakeup count only when notified;-;Add ACPI Button event via netlink routine;-;Similar;0.5105307698249817
Increment wakeup count only when notified;-;add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;Similar;0.5043498277664185
Increment wakeup count only when notified;-;fix button driver compile error when CONFIG_PM_SLEEP is undefined;CONFIG_PM_SLEEP is undefined;Similar;0.5014981031417847
Increment wakeup count only when notified;-;<acpi/acpi_bus.h> be included prior to <acpi/acpi_drivers.h>;so that the acpi_pci_root declarations the latter depends on are always there;Similar;0.5400028228759766
Increment wakeup count only when notified;-;"The second argument of ACPI driver .remove() operation is only used by the ACPI processor driver
";the value passed to that driver through it is always available from the given struct acpi_device objects removal_type field;Similar;0.5473079085350037
Increment wakeup count only when notified;-;Fix unused function warnings for CONFIG_PM_SLEEP;unused function warnings;Similar;0.5292533040046692
Increment wakeup count only when notified;-;add #ifdefs to prevent them from being built in that case  ;several suspend/resume functions in ACPI drivers are not used for CONFIG_PM_SLEEP unset;Similar;0.5350555181503296
Increment wakeup count only when notified;-;Avoid disabling wakeup unnecessarily on remove;-;Similar;0.5706523656845093
Increment wakeup count only when notified;-;Use device wakeup flags for handling ACPI wakeup devices;for handling ACPI wakeup devices;Similar;0.5672799348831177
Increment wakeup count only when notified;-;use standard device wakeup flags instead of the special ACPI flags for handling those devices;address this problem;Similar;0.5114383101463318
Increment wakeup count only when notified;-;it is sufficient to set/unset the wakeup mask bits for them during system sleep transitions;"this means that the reference counting of ""wakeup"" GPEs doesnt really make sense";Similar;0.6030969023704529
Increment wakeup count only when notified;-;the following script is used as the basis of conversion;As this conversion needs to touch a large number of source files;Similar;0.5538109540939331
Increment wakeup count only when notified;-;only the necessary includes are there;necessary;Similar;0.643152117729187
Increment wakeup count only when notified;-;prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;Similar;0.5047991275787354
Increment wakeup count only when notified;-;percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;Similar;0.516002357006073
Increment wakeup count only when notified;-;Introduce a new wake-up flag, always_enabled, for marking devices that should be permanently enabled to generate run-time events  ;devices that should be permanently enabled to generate run-time events;Similar;0.6167652010917664
Increment wakeup count only when notified;-;Introduce a reference counter for run-wake devices and a function that will initialize all of the run-time wake-up fields for given device.;-;Similar;0.6159359812736511
Increment wakeup count only when notified;-;Add an API to allow devices to indicate whether or not they want their devices GPE to be enabled for both runtime and wakeup events;to allow devices to indicate whether or not they want their devices GPE to be enabled;Similar;0.542143702507019
Increment wakeup count only when notified;-;complain the following warning message;"will

";Similar;0.6097500920295715
Increment wakeup count only when notified;-;"This patch is to eliminate the above warning message
";Device PNP0C0D:00 failed to resume: error 1;Similar;0.5227434635162354
Increment wakeup count only when notified;-;return -ENODEV;theres no lid device present;Similar;0.5032488107681274
Increment wakeup count only when notified;-;Some drivers need to know when a lid event occurs and get the current status;-;Similar;0.5301536321640015
Increment wakeup count only when notified;-;use .notify method instead of installing handler directly  ;-;Similar;0.5535584092140198
Increment wakeup count only when notified;-;convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.5002027750015259
Increment wakeup count only when notified;-;"proc_fops is declared as ""const""";should give some thoughts;Similar;0.5662736892700195
Increment wakeup count only when notified;-;start using GPE from userspace;GPE is already disabled in interrupt context;Similar;0.529845118522644
Increment wakeup count only when notified;-;Move all the component definitions for drivers to a single shared place, include/acpi/acpi_drivers.h  ;to have a single shared place;Similar;0.5263485908508301
Increment wakeup count only when notified;-;"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.6428900957107544
Increment wakeup count only when notified;-;use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Similar;0.5398960113525391
Increment wakeup count only when notified;-;Use proc_create()/proc_create_data() to make sure that ->proc_fops and ->data be setup;before gluing PDE to main tree;Similar;0.5899180173873901
Increment wakeup count only when notified;-;get rid of input BIT* duplicate defines;duplicate;Similar;0.5164118409156799
Increment wakeup count only when notified;-;"Invoke with ; as leaving it off confuses Lindent  ";gcc doesnt care;Similar;0.5150562524795532
Increment wakeup count only when notified;-;Fix indentation where Lindent did get confused  ;Lindent did get confused;Similar;0.520539402961731
only trigger acpi_pm_wakeup_event() in the acpi_button_notify() path and dont do that in the acpi_lid_initialize_state() path;To avoid the confusion;Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;Similar;0.5566357374191284
only trigger acpi_pm_wakeup_event() in the acpi_button_notify() path and dont do that in the acpi_lid_initialize_state() path;To avoid the confusion;making the ACPI button driver loadable as a module even if not booted in ACPI mode;to fix the asymmetry and provide the acpi_lid_open() symbol;Similar;0.6725844144821167
only trigger acpi_pm_wakeup_event() in the acpi_button_notify() path and dont do that in the acpi_lid_initialize_state() path;To avoid the confusion;"The only solution is to add a DMI based blacklist and ignore the LID device on these tablets.
";There is nothing the ACPI button driver (or the gpio code) can do to fix this.;Similar;0.6805984973907471
only trigger acpi_pm_wakeup_event() in the acpi_button_notify() path and dont do that in the acpi_lid_initialize_state() path;To avoid the confusion;evemu-record after noticing a spurious suspend is too late to detect;a LID closed event is the (probable) cause of this;Similar;0.5777367353439331
only trigger acpi_pm_wakeup_event() in the acpi_button_notify() path and dont do that in the acpi_lid_initialize_state() path;To avoid the confusion;adds an acpi_handle_debug call  ;to help debugging this;Similar;0.5759249925613403
only trigger acpi_pm_wakeup_event() in the acpi_button_notify() path and dont do that in the acpi_lid_initialize_state() path;To avoid the confusion;Fix function prototypes for module_param_call();-;Similar;0.5031876564025879
only trigger acpi_pm_wakeup_event() in the acpi_button_notify() path and dont do that in the acpi_lid_initialize_state() path;To avoid the confusion;libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;Similar;0.5543556809425354
only trigger acpi_pm_wakeup_event() in the acpi_button_notify() path and dont do that in the acpi_lid_initialize_state() path;To avoid the confusion;assume the user will use the internal keyboard before this timeout expires;logind only checks the lid switch value after a timeout;Similar;0.6097357273101807
only trigger acpi_pm_wakeup_event() in the acpi_button_notify() path and dont do that in the acpi_lid_initialize_state() path;To avoid the confusion;"userspace requires to see ""close"" event after the system is resumed";so that it can determine whether the internal display should remain dark and the external display should be lit on;Similar;0.5311262607574463
only trigger acpi_pm_wakeup_event() in the acpi_button_notify() path and dont do that in the acpi_lid_initialize_state() path;To avoid the confusion;Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;Similar;0.6141752004623413
only trigger acpi_pm_wakeup_event() in the acpi_button_notify() path and dont do that in the acpi_lid_initialize_state() path;To avoid the confusion;Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);Similar;0.5740260481834412
only trigger acpi_pm_wakeup_event() in the acpi_button_notify() path and dont do that in the acpi_lid_initialize_state() path;To avoid the confusion;have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;Similar;0.5715932846069336
only trigger acpi_pm_wakeup_event() in the acpi_button_notify() path and dont do that in the acpi_lid_initialize_state() path;To avoid the confusion;This patch adds a mechanism to insert lid events as a compensation for the platform triggered ones to form a complete event switches  ;in order to make sure that the platform triggered events can always be reliably delivered to the userspace;Similar;0.5443336963653564
only trigger acpi_pm_wakeup_event() in the acpi_button_notify() path and dont do that in the acpi_lid_initialize_state() path;To avoid the confusion;it should not send the complement switch event for the unreliable initial lid state notification;However this mechanism is not suitable for lid_init_state=open/method;Similar;0.632509171962738
only trigger acpi_pm_wakeup_event() in the acpi_button_notify() path and dont do that in the acpi_lid_initialize_state() path;To avoid the confusion;Remove pointer to old lid_sysfs on unbind;ACPI / button;Similar;0.5819852948188782
only trigger acpi_pm_wakeup_event() in the acpi_button_notify() path and dont do that in the acpi_lid_initialize_state() path;To avoid the confusion;When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;Similar;0.5369812250137329
only trigger acpi_pm_wakeup_event() in the acpi_button_notify() path and dont do that in the acpi_lid_initialize_state() path;To avoid the confusion;this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;Similar;0.5831665396690369
only trigger acpi_pm_wakeup_event() in the acpi_button_notify() path and dont do that in the acpi_lid_initialize_state() path;To avoid the confusion;There is no need to carry potentially outdated Free Software Foundation mailing address in file headers;since the COPYING file includes it;Similar;0.5118081569671631
only trigger acpi_pm_wakeup_event() in the acpi_button_notify() path and dont do that in the acpi_lid_initialize_state() path;To avoid the confusion;"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;Similar;0.7029080390930176
only trigger acpi_pm_wakeup_event() in the acpi_button_notify() path and dont do that in the acpi_lid_initialize_state() path;To avoid the confusion;Add ACPI Button event via netlink routine;-;Similar;0.6021585464477539
only trigger acpi_pm_wakeup_event() in the acpi_button_notify() path and dont do that in the acpi_lid_initialize_state() path;To avoid the confusion;removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;Similar;0.5853252410888672
only trigger acpi_pm_wakeup_event() in the acpi_button_notify() path and dont do that in the acpi_lid_initialize_state() path;To avoid the confusion;This caused ACPI shutdown regression on gentoo;VirtualBox;Similar;0.5855735540390015
only trigger acpi_pm_wakeup_event() in the acpi_button_notify() path and dont do that in the acpi_lid_initialize_state() path;To avoid the confusion;add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;Similar;0.6043150424957275
only trigger acpi_pm_wakeup_event() in the acpi_button_notify() path and dont do that in the acpi_lid_initialize_state() path;To avoid the confusion;fix button driver compile error when CONFIG_PM_SLEEP is undefined;CONFIG_PM_SLEEP is undefined;Similar;0.6260161399841309
only trigger acpi_pm_wakeup_event() in the acpi_button_notify() path and dont do that in the acpi_lid_initialize_state() path;To avoid the confusion;Button GPEs have been enabled in the acpi_wake_device_init() during boot;the button driver enables them for the second time;Similar;0.5639333724975586
only trigger acpi_pm_wakeup_event() in the acpi_button_notify() path and dont do that in the acpi_lid_initialize_state() path;To avoid the confusion;remove the GPE enabling code from the button driver;to avoid the problem;Similar;0.6360816359519958
only trigger acpi_pm_wakeup_event() in the acpi_button_notify() path and dont do that in the acpi_lid_initialize_state() path;To avoid the confusion;Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;Similar;0.5916198492050171
only trigger acpi_pm_wakeup_event() in the acpi_button_notify() path and dont do that in the acpi_lid_initialize_state() path;To avoid the confusion;<acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> should not be included directly from any files that are built for CONFIG_ACPI unset;because that generally leads to build warnings about undefined symbols in !CONFIG_ACPI builds;Similar;0.6359727382659912
only trigger acpi_pm_wakeup_event() in the acpi_button_notify() path and dont do that in the acpi_lid_initialize_state() path;To avoid the confusion;Remove useless type argument of driver .remove() operation;useless;Similar;0.5387170314788818
only trigger acpi_pm_wakeup_event() in the acpi_button_notify() path and dont do that in the acpi_lid_initialize_state() path;To avoid the confusion;"The second argument of ACPI driver .remove() operation is only used by the ACPI processor driver
";the value passed to that driver through it is always available from the given struct acpi_device objects removal_type field;Similar;0.6606688499450684
only trigger acpi_pm_wakeup_event() in the acpi_button_notify() path and dont do that in the acpi_lid_initialize_state() path;To avoid the confusion;drop the second ACPI driver .remove() argument  ;the second ACPI driver .remove() argument is in fact useless;Similar;0.5418622493743896
only trigger acpi_pm_wakeup_event() in the acpi_button_notify() path and dont do that in the acpi_lid_initialize_state() path;To avoid the confusion;Fix unused function warnings for CONFIG_PM_SLEEP;unused function warnings;Similar;0.6142666339874268
only trigger acpi_pm_wakeup_event() in the acpi_button_notify() path and dont do that in the acpi_lid_initialize_state() path;To avoid the confusion;add #ifdefs to prevent them from being built in that case  ;several suspend/resume functions in ACPI drivers are not used for CONFIG_PM_SLEEP unset;Similar;0.6411495208740234
only trigger acpi_pm_wakeup_event() in the acpi_button_notify() path and dont do that in the acpi_lid_initialize_state() path;To avoid the confusion;remove unused procfs I/F;unused;Similar;0.5337347984313965
only trigger acpi_pm_wakeup_event() in the acpi_button_notify() path and dont do that in the acpi_lid_initialize_state() path;To avoid the confusion;Remove unused ACPI button procfs interface;unused;Similar;0.6429589986801147
only trigger acpi_pm_wakeup_event() in the acpi_button_notify() path and dont do that in the acpi_lid_initialize_state() path;To avoid the confusion;Avoid disabling wakeup unnecessarily on remove;-;Similar;0.5358450412750244
only trigger acpi_pm_wakeup_event() in the acpi_button_notify() path and dont do that in the acpi_lid_initialize_state() path;To avoid the confusion;Use device wakeup flags for handling ACPI wakeup devices;for handling ACPI wakeup devices;Similar;0.5058316588401794
only trigger acpi_pm_wakeup_event() in the acpi_button_notify() path and dont do that in the acpi_lid_initialize_state() path;To avoid the confusion;use standard device wakeup flags instead of the special ACPI flags for handling those devices;address this problem;Similar;0.5839673280715942
only trigger acpi_pm_wakeup_event() in the acpi_button_notify() path and dont do that in the acpi_lid_initialize_state() path;To avoid the confusion;it is sufficient to set/unset the wakeup mask bits for them during system sleep transitions;"this means that the reference counting of ""wakeup"" GPEs doesnt really make sense";Similar;0.5050125122070312
only trigger acpi_pm_wakeup_event() in the acpi_button_notify() path and dont do that in the acpi_lid_initialize_state() path;To avoid the confusion;The script was run on all .h files but without automatically editing them;sprinkling gfp.h and slab.h inclusions around .h files could easily lead to inclusion dependency hell;Similar;0.5519325733184814
only trigger acpi_pm_wakeup_event() in the acpi_button_notify() path and dont do that in the acpi_lid_initialize_state() path;To avoid the confusion;CONFIG_GCOV_KERNEL was turned off for all tests and a few more options had to be turned off depending on archs to make things build;my distributed build env didnt work with gcov compiles, like ipr on powerpc/64 which failed due to missing writeq;Similar;0.6352447867393494
only trigger acpi_pm_wakeup_event() in the acpi_button_notify() path and dont do that in the acpi_lid_initialize_state() path;To avoid the confusion;Introduce a new wake-up flag, always_enabled, for marking devices that should be permanently enabled to generate run-time events  ;devices that should be permanently enabled to generate run-time events;Similar;0.6407755017280579
only trigger acpi_pm_wakeup_event() in the acpi_button_notify() path and dont do that in the acpi_lid_initialize_state() path;To avoid the confusion;Introduce a reference counter for run-wake devices and a function that will initialize all of the run-time wake-up fields for given device.;-;Similar;0.5306175947189331
only trigger acpi_pm_wakeup_event() in the acpi_button_notify() path and dont do that in the acpi_lid_initialize_state() path;To avoid the confusion;Add an API to allow devices to indicate whether or not they want their devices GPE to be enabled for both runtime and wakeup events;to allow devices to indicate whether or not they want their devices GPE to be enabled;Similar;0.5218718647956848
only trigger acpi_pm_wakeup_event() in the acpi_button_notify() path and dont do that in the acpi_lid_initialize_state() path;To avoid the confusion;"This patch is to eliminate the above warning message
";Device PNP0C0D:00 failed to resume: error 1;Similar;0.5063319206237793
only trigger acpi_pm_wakeup_event() in the acpi_button_notify() path and dont do that in the acpi_lid_initialize_state() path;To avoid the confusion;dont try to use a non-existent lid device;non-existent;Similar;0.5193692445755005
only trigger acpi_pm_wakeup_event() in the acpi_button_notify() path and dont do that in the acpi_lid_initialize_state() path;To avoid the confusion;we could install either a fixed event handler or a notify handler, but the Linux/ACPI code now handles that for us;We previously needed that so we dont need to worry about it;Similar;0.5365473628044128
only trigger acpi_pm_wakeup_event() in the acpi_button_notify() path and dont do that in the acpi_lid_initialize_state() path;To avoid the confusion;Remove button->device pointer;button;Similar;0.5757538080215454
only trigger acpi_pm_wakeup_event() in the acpi_button_notify() path and dont do that in the acpi_lid_initialize_state() path;To avoid the confusion;We no longer need a pointer from struct acpi_button back to the struct acpi_device;no longer need;Similar;0.6778014898300171
only trigger acpi_pm_wakeup_event() in the acpi_button_notify() path and dont do that in the acpi_lid_initialize_state() path;To avoid the confusion;This patch adds temporaries to cache the acpi_device_hid(), acpi_device_name(), and acpi_device_class() pointers;so we dont have to clutter the code with so many uses of those interfaces;Similar;0.5391613245010376
only trigger acpi_pm_wakeup_event() in the acpi_button_notify() path and dont do that in the acpi_lid_initialize_state() path;To avoid the confusion;use .notify method instead of installing handler directly  ;-;Similar;0.5259354114532471
only trigger acpi_pm_wakeup_event() in the acpi_button_notify() path and dont do that in the acpi_lid_initialize_state() path;To avoid the confusion;convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.6243373155593872
only trigger acpi_pm_wakeup_event() in the acpi_button_notify() path and dont do that in the acpi_lid_initialize_state() path;To avoid the confusion;"rmmoded directories will be empty and return ""."" and "".."" -- no harm";no harm;Similar;0.5017600059509277
only trigger acpi_pm_wakeup_event() in the acpi_button_notify() path and dont do that in the acpi_lid_initialize_state() path;To avoid the confusion;Move all the component definitions for drivers to a single shared place, include/acpi/acpi_drivers.h  ;to have a single shared place;Similar;0.5383508801460266
only trigger acpi_pm_wakeup_event() in the acpi_button_notify() path and dont do that in the acpi_lid_initialize_state() path;To avoid the confusion;"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.546209454536438
only trigger acpi_pm_wakeup_event() in the acpi_button_notify() path and dont do that in the acpi_lid_initialize_state() path;To avoid the confusion;Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;Similar;0.5148532390594482
only trigger acpi_pm_wakeup_event() in the acpi_button_notify() path and dont do that in the acpi_lid_initialize_state() path;To avoid the confusion;use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Similar;0.5237440466880798
only trigger acpi_pm_wakeup_event() in the acpi_button_notify() path and dont do that in the acpi_lid_initialize_state() path;To avoid the confusion;get rid of input BIT* duplicate defines;duplicate;Similar;0.559745192527771
only trigger acpi_pm_wakeup_event() in the acpi_button_notify() path and dont do that in the acpi_lid_initialize_state() path;To avoid the confusion;Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;Similar;0.6414604187011719
only trigger acpi_pm_wakeup_event() in the acpi_button_notify() path and dont do that in the acpi_lid_initialize_state() path;To avoid the confusion;Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;Similar;0.5261659026145935
only trigger acpi_pm_wakeup_event() in the acpi_button_notify() path and dont do that in the acpi_lid_initialize_state() path;To avoid the confusion;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.5997185707092285
only trigger acpi_pm_wakeup_event() in the acpi_button_notify() path and dont do that in the acpi_lid_initialize_state() path;To avoid the confusion;Remove unneeded acpi_handle from driver;unneeded;Similar;0.6175422668457031
only trigger acpi_pm_wakeup_event() in the acpi_button_notify() path and dont do that in the acpi_lid_initialize_state() path;To avoid the confusion;Use acpi_devices handle instead of drivers  ;-;Similar;0.5493149161338806
only trigger acpi_pm_wakeup_event() in the acpi_button_notify() path and dont do that in the acpi_lid_initialize_state() path;To avoid the confusion;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.6118773818016052
only trigger acpi_pm_wakeup_event() in the acpi_button_notify() path and dont do that in the acpi_lid_initialize_state() path;To avoid the confusion;restore /proc/acpi/button/ (ala 2.6.12)  ;[ACPI];Similar;0.5734930038452148
Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;making the ACPI button driver loadable as a module even if not booted in ACPI mode;to fix the asymmetry and provide the acpi_lid_open() symbol;Similar;0.6081448793411255
Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;adds an acpi_handle_debug call  ;to help debugging this;Similar;0.7912802696228027
Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;Fix function prototypes for module_param_call();-;Similar;0.7229171991348267
Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;fix whitespace in pr_fmt() to align log entries;align log entries;Similar;0.7886555194854736
Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;The ->sync hook allows all of the relevant event queues to be flushed;to prevent events from being missed due to race conditions;Similar;0.5710305571556091
Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;Similar;0.7049424052238464
Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;assume the user will use the internal keyboard before this timeout expires;logind only checks the lid switch value after a timeout;Similar;0.5339066386222839
Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;Similar;0.7317049503326416
Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);Similar;0.65069979429245
Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;The ->sync hook allows all of the relevant event queues to be flushed;to prevent events from being missed due to race conditions;Similar;0.5710305571556091
Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;Similar;0.5923380851745605
Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;This patch adds a mechanism to insert lid events as a compensation for the platform triggered ones to form a complete event switches  ;in order to make sure that the platform triggered events can always be reliably delivered to the userspace;Similar;0.6846851110458374
Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;Use key event type to implement ACPI lid events;Another approach;Similar;0.6236716508865356
Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;Remove pointer to old lid_sysfs on unbind;ACPI / button;Similar;0.638787031173706
Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;Similar;0.5789414048194885
Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;Similar;0.5225362777709961
Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;Similar;0.6253281831741333
Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;Add ACPI Button event via netlink routine;-;Similar;0.7797735929489136
Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;Similar;0.6452581286430359
Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;This caused ACPI shutdown regression on gentoo;VirtualBox;Similar;0.5088617205619812
Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;Similar;0.803489089012146
Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;fix button driver compile error when CONFIG_PM_SLEEP is undefined;CONFIG_PM_SLEEP is undefined;Similar;0.58008873462677
Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;Fix enabling button GPEs twice;Fix;Similar;0.5966918468475342
Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;Button GPEs have been enabled in the acpi_wake_device_init() during boot;the button driver enables them for the second time;Similar;0.7060495615005493
Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;remove the GPE enabling code from the button driver;to avoid the problem;Similar;0.6278026103973389
Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;Clean up inclusions of ACPI header files;ACPI;Similar;0.6723401546478271
Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;Similar;0.623633623123169
Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;<acpi/acpi_bus.h> be included prior to <acpi/acpi_drivers.h>;so that the acpi_pci_root declarations the latter depends on are always there;Similar;0.6769662499427795
Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;Use the patch to replace the origin code;provide a better solution;Similar;0.6424385905265808
Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;"The second argument of ACPI driver .remove() operation is only used by the ACPI processor driver
";the value passed to that driver through it is always available from the given struct acpi_device objects removal_type field;Similar;0.5544463396072388
Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;Fix unused function warnings for CONFIG_PM_SLEEP;unused function warnings;Similar;0.5149911642074585
Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;Remove unused ACPI button procfs interface;unused;Similar;0.5853877067565918
Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;Use device wakeup flags for handling ACPI wakeup devices;for handling ACPI wakeup devices;Similar;0.6582316756248474
Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;use standard device wakeup flags instead of the special ACPI flags for handling those devices;address this problem;Similar;0.5707017183303833
Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;Use GPE reference counting to support shared GPEs  ;the wakeup enable mask bits of GPEs are set as soon as the GPEs are enabled to wake up the system;Similar;0.6648290753364563
Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;Update gfp.h and slab.h includes  ;prepare for breaking implicit slab.h inclusion from percpu.h;Similar;0.6534030437469482
Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;Prepare for this change by updating users of gfp and slab facilities;include those headers directly instead of assuming availability;Similar;0.638079822063446
Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;the following script is used as the basis of conversion;As this conversion needs to touch a large number of source files;Similar;0.5775830745697021
Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;Similar;0.705161452293396
Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;The script was run again  ;to make sure no file was left behind;Similar;0.5028862953186035
Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;The script was run on all .h files but without automatically editing them;sprinkling gfp.h and slab.h inclusions around .h files could easily lead to inclusion dependency hell;Similar;0.5217118263244629
Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;Similar;0.542413592338562
Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;Introduce a new wake-up flag, always_enabled, for marking devices that should be permanently enabled to generate run-time events  ;devices that should be permanently enabled to generate run-time events;Similar;0.5741517543792725
Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;Introduce a reference counter for run-wake devices and a function that will initialize all of the run-time wake-up fields for given device.;-;Similar;0.667011559009552
Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;Add an API to allow devices to indicate whether or not they want their devices GPE to be enabled for both runtime and wakeup events;to allow devices to indicate whether or not they want their devices GPE to be enabled;Similar;0.7352719306945801
Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;whitespace fix  ;This does not change any actual console output;Similar;0.5353451371192932
Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;we could install either a fixed event handler or a notify handler, but the Linux/ACPI code now handles that for us;We previously needed that so we dont need to worry about it;Similar;0.7450933456420898
Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;Remove button->device pointer;button;Similar;0.5803769826889038
Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;This patch adds temporaries to cache the acpi_device_hid(), acpi_device_name(), and acpi_device_class() pointers;so we dont have to clutter the code with so many uses of those interfaces;Similar;0.766911506652832
Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;changes a bit of whitespace to follow Linux conventions;follow Linux conventions;Similar;0.7192422151565552
Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;use .notify method instead of installing handler directly  ;-;Similar;0.6253296732902527
Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;The presence of .notify() causes Linux/ACPI to manage event handlers and notify handlers on our behalf  ;so we dont have to install and remove them ourselves;Similar;0.7559090852737427
Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.7829858064651489
Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;"proc_fops is declared as ""const""";should give some thoughts;Similar;0.5688713192939758
Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;start using GPE from userspace;GPE is already disabled in interrupt context;Similar;0.685316264629364
Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;Move all the component definitions for drivers to a single shared place, include/acpi/acpi_drivers.h  ;to have a single shared place;Similar;0.7120200395584106
Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.636219322681427
Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;Similar;0.6928960680961609
Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Similar;0.6074904799461365
Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;Use proc_create()/proc_create_data() to make sure that ->proc_fops and ->data be setup;before gluing PDE to main tree;Similar;0.6771622896194458
Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;Add correct ->owner to proc_fops to fix reading/module unloading race  ;fix reading/module unloading race;Similar;0.6104086637496948
Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;get rid of input BIT* duplicate defines;duplicate;Similar;0.5364160537719727
Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;Similar;0.556463360786438
Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;Similar;0.733802855014801
Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.6539611220359802
Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;fix acpi_driver.name usage;fix;Similar;0.7081383466720581
Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;ls bus/acpi/drivers  ;Display the list of ACPI drivers.;Similar;0.5366025567054749
Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;"Make ""module name"" actually match the file name";cosmetic only;Similar;0.6958984136581421
Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;Remove unneeded acpi_handle from driver;unneeded;Similar;0.5549283027648926
Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;Use acpi_devices handle instead of drivers  ;-;Similar;0.5824877023696899
Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.6191087365150452
Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;restore /proc/acpi/button/ (ala 2.6.12)  ;[ACPI];Similar;0.6612474918365479
Variants of proc_create{,_data} that directly take a seq_file show callback;drastically reduces the boilerplate code in the callers;"Create a separate ""historical"" git archive";about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated;Similar;0.5037215352058411
making the ACPI button driver loadable as a module even if not booted in ACPI mode;to fix the asymmetry and provide the acpi_lid_open() symbol;"The only solution is to add a DMI based blacklist and ignore the LID device on these tablets.
";There is nothing the ACPI button driver (or the gpio code) can do to fix this.;Similar;0.5451614856719971
making the ACPI button driver loadable as a module even if not booted in ACPI mode;to fix the asymmetry and provide the acpi_lid_open() symbol;adds an acpi_handle_debug call  ;to help debugging this;Similar;0.538716197013855
making the ACPI button driver loadable as a module even if not booted in ACPI mode;to fix the asymmetry and provide the acpi_lid_open() symbol;Fix function prototypes for module_param_call();-;Similar;0.5230640172958374
making the ACPI button driver loadable as a module even if not booted in ACPI mode;to fix the asymmetry and provide the acpi_lid_open() symbol;fix whitespace in pr_fmt() to align log entries;align log entries;Similar;0.5553869009017944
making the ACPI button driver loadable as a module even if not booted in ACPI mode;to fix the asymmetry and provide the acpi_lid_open() symbol;The ->sync hook allows all of the relevant event queues to be flushed;to prevent events from being missed due to race conditions;Similar;0.512669563293457
making the ACPI button driver loadable as a module even if not booted in ACPI mode;to fix the asymmetry and provide the acpi_lid_open() symbol;libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;Similar;0.6425583362579346
making the ACPI button driver loadable as a module even if not booted in ACPI mode;to fix the asymmetry and provide the acpi_lid_open() symbol;assume the user will use the internal keyboard before this timeout expires;logind only checks the lid switch value after a timeout;Similar;0.6486340761184692
making the ACPI button driver loadable as a module even if not booted in ACPI mode;to fix the asymmetry and provide the acpi_lid_open() symbol;Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;Similar;0.535138726234436
making the ACPI button driver loadable as a module even if not booted in ACPI mode;to fix the asymmetry and provide the acpi_lid_open() symbol;The ->sync hook allows all of the relevant event queues to be flushed;to prevent events from being missed due to race conditions;Similar;0.512669563293457
making the ACPI button driver loadable as a module even if not booted in ACPI mode;to fix the asymmetry and provide the acpi_lid_open() symbol;This patch adds a mechanism to insert lid events as a compensation for the platform triggered ones to form a complete event switches  ;in order to make sure that the platform triggered events can always be reliably delivered to the userspace;Similar;0.606609582901001
making the ACPI button driver loadable as a module even if not booted in ACPI mode;to fix the asymmetry and provide the acpi_lid_open() symbol;While using KEY event type, there is no such problem;no such problem;Similar;0.5078423619270325
making the ACPI button driver loadable as a module even if not booted in ACPI mode;to fix the asymmetry and provide the acpi_lid_open() symbol;Remove pointer to old lid_sysfs on unbind;ACPI / button;Similar;0.5210754871368408
making the ACPI button driver loadable as a module even if not booted in ACPI mode;to fix the asymmetry and provide the acpi_lid_open() symbol;When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;Similar;0.517133355140686
making the ACPI button driver loadable as a module even if not booted in ACPI mode;to fix the asymmetry and provide the acpi_lid_open() symbol;this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;Similar;0.5157861113548279
making the ACPI button driver loadable as a module even if not booted in ACPI mode;to fix the asymmetry and provide the acpi_lid_open() symbol;There is no need to carry potentially outdated Free Software Foundation mailing address in file headers;since the COPYING file includes it;Similar;0.5798903703689575
making the ACPI button driver loadable as a module even if not booted in ACPI mode;to fix the asymmetry and provide the acpi_lid_open() symbol;"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;Similar;0.6675532460212708
making the ACPI button driver loadable as a module even if not booted in ACPI mode;to fix the asymmetry and provide the acpi_lid_open() symbol;Add ACPI Button event via netlink routine;-;Similar;0.6237004995346069
making the ACPI button driver loadable as a module even if not booted in ACPI mode;to fix the asymmetry and provide the acpi_lid_open() symbol;removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;Similar;0.5184168815612793
making the ACPI button driver loadable as a module even if not booted in ACPI mode;to fix the asymmetry and provide the acpi_lid_open() symbol;add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;Similar;0.6118624210357666
making the ACPI button driver loadable as a module even if not booted in ACPI mode;to fix the asymmetry and provide the acpi_lid_open() symbol;fix button driver compile error when CONFIG_PM_SLEEP is undefined;CONFIG_PM_SLEEP is undefined;Similar;0.5981069803237915
making the ACPI button driver loadable as a module even if not booted in ACPI mode;to fix the asymmetry and provide the acpi_lid_open() symbol;Fix enabling button GPEs twice;Fix;Similar;0.5811886787414551
making the ACPI button driver loadable as a module even if not booted in ACPI mode;to fix the asymmetry and provide the acpi_lid_open() symbol;Button GPEs have been enabled in the acpi_wake_device_init() during boot;the button driver enables them for the second time;Similar;0.6871354579925537
making the ACPI button driver loadable as a module even if not booted in ACPI mode;to fix the asymmetry and provide the acpi_lid_open() symbol;remove the GPE enabling code from the button driver;to avoid the problem;Similar;0.5643798112869263
making the ACPI button driver loadable as a module even if not booted in ACPI mode;to fix the asymmetry and provide the acpi_lid_open() symbol;Clean up inclusions of ACPI header files;ACPI;Similar;0.5499221086502075
making the ACPI button driver loadable as a module even if not booted in ACPI mode;to fix the asymmetry and provide the acpi_lid_open() symbol;Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;Similar;0.5602151155471802
making the ACPI button driver loadable as a module even if not booted in ACPI mode;to fix the asymmetry and provide the acpi_lid_open() symbol;Use the patch to replace the origin code;provide a better solution;Similar;0.504487931728363
making the ACPI button driver loadable as a module even if not booted in ACPI mode;to fix the asymmetry and provide the acpi_lid_open() symbol;"The second argument of ACPI driver .remove() operation is only used by the ACPI processor driver
";the value passed to that driver through it is always available from the given struct acpi_device objects removal_type field;Similar;0.5351389646530151
making the ACPI button driver loadable as a module even if not booted in ACPI mode;to fix the asymmetry and provide the acpi_lid_open() symbol;Fix unused function warnings for CONFIG_PM_SLEEP;unused function warnings;Similar;0.5307546257972717
making the ACPI button driver loadable as a module even if not booted in ACPI mode;to fix the asymmetry and provide the acpi_lid_open() symbol;Remove unused ACPI button procfs interface;unused;Similar;0.5783064961433411
making the ACPI button driver loadable as a module even if not booted in ACPI mode;to fix the asymmetry and provide the acpi_lid_open() symbol;Use device wakeup flags for handling ACPI wakeup devices;for handling ACPI wakeup devices;Similar;0.5045869946479797
making the ACPI button driver loadable as a module even if not booted in ACPI mode;to fix the asymmetry and provide the acpi_lid_open() symbol;use standard device wakeup flags instead of the special ACPI flags for handling those devices;address this problem;Similar;0.5070602893829346
making the ACPI button driver loadable as a module even if not booted in ACPI mode;to fix the asymmetry and provide the acpi_lid_open() symbol;it is sufficient to set/unset the wakeup mask bits for them during system sleep transitions;"this means that the reference counting of ""wakeup"" GPEs doesnt really make sense";Similar;0.5820200443267822
making the ACPI button driver loadable as a module even if not booted in ACPI mode;to fix the asymmetry and provide the acpi_lid_open() symbol;prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;Similar;0.5264114737510681
making the ACPI button driver loadable as a module even if not booted in ACPI mode;to fix the asymmetry and provide the acpi_lid_open() symbol;The script was run on all .h files but without automatically editing them;sprinkling gfp.h and slab.h inclusions around .h files could easily lead to inclusion dependency hell;Similar;0.6405779719352722
making the ACPI button driver loadable as a module even if not booted in ACPI mode;to fix the asymmetry and provide the acpi_lid_open() symbol;Introduce a new wake-up flag, always_enabled, for marking devices that should be permanently enabled to generate run-time events  ;devices that should be permanently enabled to generate run-time events;Similar;0.6254431009292603
making the ACPI button driver loadable as a module even if not booted in ACPI mode;to fix the asymmetry and provide the acpi_lid_open() symbol;Introduce a reference counter for run-wake devices and a function that will initialize all of the run-time wake-up fields for given device.;-;Similar;0.5146418213844299
making the ACPI button driver loadable as a module even if not booted in ACPI mode;to fix the asymmetry and provide the acpi_lid_open() symbol;Add an API to allow devices to indicate whether or not they want their devices GPE to be enabled for both runtime and wakeup events;to allow devices to indicate whether or not they want their devices GPE to be enabled;Similar;0.6303541660308838
making the ACPI button driver loadable as a module even if not booted in ACPI mode;to fix the asymmetry and provide the acpi_lid_open() symbol;we could install either a fixed event handler or a notify handler, but the Linux/ACPI code now handles that for us;We previously needed that so we dont need to worry about it;Similar;0.6694318056106567
making the ACPI button driver loadable as a module even if not booted in ACPI mode;to fix the asymmetry and provide the acpi_lid_open() symbol;type: Power Button;I dont think theres anything meaningful user-space can do by knowing whether a button is a control method or a fixed hardware button;Similar;0.5670071840286255
making the ACPI button driver loadable as a module even if not booted in ACPI mode;to fix the asymmetry and provide the acpi_lid_open() symbol;We no longer need a pointer from struct acpi_button back to the struct acpi_device;no longer need;Similar;0.6240919232368469
making the ACPI button driver loadable as a module even if not booted in ACPI mode;to fix the asymmetry and provide the acpi_lid_open() symbol;This patch adds temporaries to cache the acpi_device_hid(), acpi_device_name(), and acpi_device_class() pointers;so we dont have to clutter the code with so many uses of those interfaces;Similar;0.6049480438232422
making the ACPI button driver loadable as a module even if not booted in ACPI mode;to fix the asymmetry and provide the acpi_lid_open() symbol;changes a bit of whitespace to follow Linux conventions;follow Linux conventions;Similar;0.5398924350738525
making the ACPI button driver loadable as a module even if not booted in ACPI mode;to fix the asymmetry and provide the acpi_lid_open() symbol;The presence of .notify() causes Linux/ACPI to manage event handlers and notify handlers on our behalf  ;so we dont have to install and remove them ourselves;Similar;0.6072887182235718
making the ACPI button driver loadable as a module even if not booted in ACPI mode;to fix the asymmetry and provide the acpi_lid_open() symbol;convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.5914666652679443
making the ACPI button driver loadable as a module even if not booted in ACPI mode;to fix the asymmetry and provide the acpi_lid_open() symbol;Setting ->owner as done currently (pde->owner = THIS_MODULE) is racy;as correctly noted at bug #12454;Similar;0.5296095609664917
making the ACPI button driver loadable as a module even if not booted in ACPI mode;to fix the asymmetry and provide the acpi_lid_open() symbol;Move all the component definitions for drivers to a single shared place, include/acpi/acpi_drivers.h  ;to have a single shared place;Similar;0.5547739863395691
making the ACPI button driver loadable as a module even if not booted in ACPI mode;to fix the asymmetry and provide the acpi_lid_open() symbol;"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.5258026123046875
making the ACPI button driver loadable as a module even if not booted in ACPI mode;to fix the asymmetry and provide the acpi_lid_open() symbol;Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;Similar;0.5115882158279419
making the ACPI button driver loadable as a module even if not booted in ACPI mode;to fix the asymmetry and provide the acpi_lid_open() symbol;Add correct ->owner to proc_fops to fix reading/module unloading race  ;fix reading/module unloading race;Similar;0.5023225545883179
making the ACPI button driver loadable as a module even if not booted in ACPI mode;to fix the asymmetry and provide the acpi_lid_open() symbol;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.5246970653533936
making the ACPI button driver loadable as a module even if not booted in ACPI mode;to fix the asymmetry and provide the acpi_lid_open() symbol;fix acpi_driver.name usage;fix;Similar;0.532431960105896
making the ACPI button driver loadable as a module even if not booted in ACPI mode;to fix the asymmetry and provide the acpi_lid_open() symbol;"Make ""module name"" actually match the file name";cosmetic only;Similar;0.6292908191680908
making the ACPI button driver loadable as a module even if not booted in ACPI mode;to fix the asymmetry and provide the acpi_lid_open() symbol;Remove unneeded acpi_handle from driver;unneeded;Similar;0.5394676923751831
making the ACPI button driver loadable as a module even if not booted in ACPI mode;to fix the asymmetry and provide the acpi_lid_open() symbol;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.5444613695144653
making the ACPI button driver loadable as a module even if not booted in ACPI mode;to fix the asymmetry and provide the acpi_lid_open() symbol;restore /proc/acpi/button/ (ala 2.6.12)  ;[ACPI];Similar;0.5949370861053467
"The only solution is to add a DMI based blacklist and ignore the LID device on these tablets.
";There is nothing the ACPI button driver (or the gpio code) can do to fix this.;have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;Similar;0.5329582691192627
"The only solution is to add a DMI based blacklist and ignore the LID device on these tablets.
";There is nothing the ACPI button driver (or the gpio code) can do to fix this.;Remove pointer to old lid_sysfs on unbind;ACPI / button;Similar;0.5008257627487183
"The only solution is to add a DMI based blacklist and ignore the LID device on these tablets.
";There is nothing the ACPI button driver (or the gpio code) can do to fix this.;this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;Similar;0.5940502882003784
"The only solution is to add a DMI based blacklist and ignore the LID device on these tablets.
";There is nothing the ACPI button driver (or the gpio code) can do to fix this.;There is no need to carry potentially outdated Free Software Foundation mailing address in file headers;since the COPYING file includes it;Similar;0.5857256054878235
"The only solution is to add a DMI based blacklist and ignore the LID device on these tablets.
";There is nothing the ACPI button driver (or the gpio code) can do to fix this.;"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;Similar;0.6030046939849854
"The only solution is to add a DMI based blacklist and ignore the LID device on these tablets.
";There is nothing the ACPI button driver (or the gpio code) can do to fix this.;removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;Similar;0.5429670810699463
"The only solution is to add a DMI based blacklist and ignore the LID device on these tablets.
";There is nothing the ACPI button driver (or the gpio code) can do to fix this.;This caused ACPI shutdown regression on gentoo;VirtualBox;Similar;0.5449156761169434
"The only solution is to add a DMI based blacklist and ignore the LID device on these tablets.
";There is nothing the ACPI button driver (or the gpio code) can do to fix this.;fix button driver compile error when CONFIG_PM_SLEEP is undefined;CONFIG_PM_SLEEP is undefined;Similar;0.5606539249420166
"The only solution is to add a DMI based blacklist and ignore the LID device on these tablets.
";There is nothing the ACPI button driver (or the gpio code) can do to fix this.;remove the GPE enabling code from the button driver;to avoid the problem;Similar;0.6018600463867188
"The only solution is to add a DMI based blacklist and ignore the LID device on these tablets.
";There is nothing the ACPI button driver (or the gpio code) can do to fix this.;Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;Similar;0.6156060695648193
"The only solution is to add a DMI based blacklist and ignore the LID device on these tablets.
";There is nothing the ACPI button driver (or the gpio code) can do to fix this.;<acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> should not be included directly from any files that are built for CONFIG_ACPI unset;because that generally leads to build warnings about undefined symbols in !CONFIG_ACPI builds;Similar;0.596720278263092
"The only solution is to add a DMI based blacklist and ignore the LID device on these tablets.
";There is nothing the ACPI button driver (or the gpio code) can do to fix this.;Remove useless type argument of driver .remove() operation;useless;Similar;0.5283349752426147
"The only solution is to add a DMI based blacklist and ignore the LID device on these tablets.
";There is nothing the ACPI button driver (or the gpio code) can do to fix this.;"The second argument of ACPI driver .remove() operation is only used by the ACPI processor driver
";the value passed to that driver through it is always available from the given struct acpi_device objects removal_type field;Similar;0.6304015517234802
"The only solution is to add a DMI based blacklist and ignore the LID device on these tablets.
";There is nothing the ACPI button driver (or the gpio code) can do to fix this.;drop the second ACPI driver .remove() argument  ;the second ACPI driver .remove() argument is in fact useless;Similar;0.5374590158462524
"The only solution is to add a DMI based blacklist and ignore the LID device on these tablets.
";There is nothing the ACPI button driver (or the gpio code) can do to fix this.;Fix unused function warnings for CONFIG_PM_SLEEP;unused function warnings;Similar;0.5542125701904297
"The only solution is to add a DMI based blacklist and ignore the LID device on these tablets.
";There is nothing the ACPI button driver (or the gpio code) can do to fix this.;add #ifdefs to prevent them from being built in that case  ;several suspend/resume functions in ACPI drivers are not used for CONFIG_PM_SLEEP unset;Similar;0.5390931367874146
"The only solution is to add a DMI based blacklist and ignore the LID device on these tablets.
";There is nothing the ACPI button driver (or the gpio code) can do to fix this.;Remove unused ACPI button procfs interface;unused;Similar;0.6026989221572876
"The only solution is to add a DMI based blacklist and ignore the LID device on these tablets.
";There is nothing the ACPI button driver (or the gpio code) can do to fix this.;The script was run on all .h files but without automatically editing them;sprinkling gfp.h and slab.h inclusions around .h files could easily lead to inclusion dependency hell;Similar;0.6002109050750732
"The only solution is to add a DMI based blacklist and ignore the LID device on these tablets.
";There is nothing the ACPI button driver (or the gpio code) can do to fix this.;CONFIG_GCOV_KERNEL was turned off for all tests and a few more options had to be turned off depending on archs to make things build;my distributed build env didnt work with gcov compiles, like ipr on powerpc/64 which failed due to missing writeq;Similar;0.6673272848129272
"The only solution is to add a DMI based blacklist and ignore the LID device on these tablets.
";There is nothing the ACPI button driver (or the gpio code) can do to fix this.;"This patch is to eliminate the above warning message
";Device PNP0C0D:00 failed to resume: error 1;Similar;0.510688066482544
"The only solution is to add a DMI based blacklist and ignore the LID device on these tablets.
";There is nothing the ACPI button driver (or the gpio code) can do to fix this.;We no longer need a pointer from struct acpi_button back to the struct acpi_device;no longer need;Similar;0.6185986995697021
"The only solution is to add a DMI based blacklist and ignore the LID device on these tablets.
";There is nothing the ACPI button driver (or the gpio code) can do to fix this.;"rmmoded directories will be empty and return ""."" and "".."" -- no harm";no harm;Similar;0.5056304335594177
"The only solution is to add a DMI based blacklist and ignore the LID device on these tablets.
";There is nothing the ACPI button driver (or the gpio code) can do to fix this.;Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;Similar;0.6318365335464478
"The only solution is to add a DMI based blacklist and ignore the LID device on these tablets.
";There is nothing the ACPI button driver (or the gpio code) can do to fix this.;Remove unneeded acpi_handle from driver;unneeded;Similar;0.591234564781189
evemu-record after noticing a spurious suspend is too late to detect;a LID closed event is the (probable) cause of this;assume the user will use the internal keyboard before this timeout expires;logind only checks the lid switch value after a timeout;Similar;0.5990866422653198
evemu-record after noticing a spurious suspend is too late to detect;a LID closed event is the (probable) cause of this;"userspace requires to see ""close"" event after the system is resumed";so that it can determine whether the internal display should remain dark and the external display should be lit on;Similar;0.6761840581893921
evemu-record after noticing a spurious suspend is too late to detect;a LID closed event is the (probable) cause of this;This patch makes it deprecated;lid_init__state=open is more useful than this mode;Similar;0.5402347445487976
evemu-record after noticing a spurious suspend is too late to detect;a LID closed event is the (probable) cause of this;it should not send the complement switch event for the unreliable initial lid state notification;However this mechanism is not suitable for lid_init_state=open/method;Similar;0.5868837237358093
evemu-record after noticing a spurious suspend is too late to detect;a LID closed event is the (probable) cause of this;Remove pointer to old lid_sysfs on unbind;ACPI / button;Similar;0.5149214267730713
evemu-record after noticing a spurious suspend is too late to detect;a LID closed event is the (probable) cause of this;When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;Similar;0.5492035746574402
evemu-record after noticing a spurious suspend is too late to detect;a LID closed event is the (probable) cause of this;this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;Similar;0.517316460609436
evemu-record after noticing a spurious suspend is too late to detect;a LID closed event is the (probable) cause of this;"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;Similar;0.5231955051422119
evemu-record after noticing a spurious suspend is too late to detect;a LID closed event is the (probable) cause of this;This caused ACPI shutdown regression on gentoo;VirtualBox;Similar;0.5090910196304321
evemu-record after noticing a spurious suspend is too late to detect;a LID closed event is the (probable) cause of this;fix button driver compile error when CONFIG_PM_SLEEP is undefined;CONFIG_PM_SLEEP is undefined;Similar;0.5639548301696777
evemu-record after noticing a spurious suspend is too late to detect;a LID closed event is the (probable) cause of this;Fix unused function warnings for CONFIG_PM_SLEEP;unused function warnings;Similar;0.5060819387435913
evemu-record after noticing a spurious suspend is too late to detect;a LID closed event is the (probable) cause of this;add #ifdefs to prevent them from being built in that case  ;several suspend/resume functions in ACPI drivers are not used for CONFIG_PM_SLEEP unset;Similar;0.5674316883087158
evemu-record after noticing a spurious suspend is too late to detect;a LID closed event is the (probable) cause of this;Avoid disabling wakeup unnecessarily on remove;-;Similar;0.6284701824188232
evemu-record after noticing a spurious suspend is too late to detect;a LID closed event is the (probable) cause of this;CONFIG_GCOV_KERNEL was turned off for all tests and a few more options had to be turned off depending on archs to make things build;my distributed build env didnt work with gcov compiles, like ipr on powerpc/64 which failed due to missing writeq;Similar;0.5159427523612976
evemu-record after noticing a spurious suspend is too late to detect;a LID closed event is the (probable) cause of this;"This patch is to eliminate the above warning message
";Device PNP0C0D:00 failed to resume: error 1;Similar;0.5512566566467285
evemu-record after noticing a spurious suspend is too late to detect;a LID closed event is the (probable) cause of this;"Invoke with ; as leaving it off confuses Lindent  ";gcc doesnt care;Similar;0.603818416595459
evemu-record after noticing a spurious suspend is too late to detect;a LID closed event is the (probable) cause of this;Fix indentation where Lindent did get confused  ;Lindent did get confused;Similar;0.6002368330955505
adds an acpi_handle_debug call  ;to help debugging this;Fix function prototypes for module_param_call();-;Similar;0.8412418365478516
adds an acpi_handle_debug call  ;to help debugging this;fix whitespace in pr_fmt() to align log entries;align log entries;Similar;0.7624075412750244
adds an acpi_handle_debug call  ;to help debugging this;libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;Similar;0.6899923086166382
adds an acpi_handle_debug call  ;to help debugging this;assume the user will use the internal keyboard before this timeout expires;logind only checks the lid switch value after a timeout;Similar;0.5565675497055054
adds an acpi_handle_debug call  ;to help debugging this;"userspace requires to see ""close"" event after the system is resumed";so that it can determine whether the internal display should remain dark and the external display should be lit on;Similar;0.5205218195915222
adds an acpi_handle_debug call  ;to help debugging this;Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;Similar;0.8283900022506714
adds an acpi_handle_debug call  ;to help debugging this;Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);Similar;0.7854734659194946
adds an acpi_handle_debug call  ;to help debugging this;have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;Similar;0.6819605827331543
adds an acpi_handle_debug call  ;to help debugging this;This patch adds a mechanism to insert lid events as a compensation for the platform triggered ones to form a complete event switches  ;in order to make sure that the platform triggered events can always be reliably delivered to the userspace;Similar;0.6257814168930054
adds an acpi_handle_debug call  ;to help debugging this;implements this mechanism  ;only;Similar;0.6057794094085693
adds an acpi_handle_debug call  ;to help debugging this;Use key event type to implement ACPI lid events;Another approach;Similar;0.7221553325653076
adds an acpi_handle_debug call  ;to help debugging this;Remove pointer to old lid_sysfs on unbind;ACPI / button;Similar;0.7298251390457153
adds an acpi_handle_debug call  ;to help debugging this;When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;Similar;0.6458653807640076
adds an acpi_handle_debug call  ;to help debugging this;Correct a wrong macro usage;This patch simplies the code by merging some redundant code;Similar;0.5555620193481445
adds an acpi_handle_debug call  ;to help debugging this;this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;Similar;0.6023707985877991
adds an acpi_handle_debug call  ;to help debugging this;"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;Similar;0.6305510401725769
adds an acpi_handle_debug call  ;to help debugging this;Add ACPI Button event via netlink routine;-;Similar;0.798669695854187
adds an acpi_handle_debug call  ;to help debugging this;removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;Similar;0.6725668907165527
adds an acpi_handle_debug call  ;to help debugging this;This caused ACPI shutdown regression on gentoo;VirtualBox;Similar;0.6196750402450562
adds an acpi_handle_debug call  ;to help debugging this;add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;Similar;0.7926260828971863
adds an acpi_handle_debug call  ;to help debugging this;fix button driver compile error when CONFIG_PM_SLEEP is undefined;CONFIG_PM_SLEEP is undefined;Similar;0.6417028307914734
adds an acpi_handle_debug call  ;to help debugging this;compile error;CONFIG_PM_SLEEP is undefined;Similar;0.7148095369338989
adds an acpi_handle_debug call  ;to help debugging this;Fix enabling button GPEs twice;Fix;Similar;0.6133322715759277
adds an acpi_handle_debug call  ;to help debugging this;Button GPEs have been enabled in the acpi_wake_device_init() during boot;the button driver enables them for the second time;Similar;0.6856436729431152
adds an acpi_handle_debug call  ;to help debugging this;remove the GPE enabling code from the button driver;to avoid the problem;Similar;0.7132827043533325
adds an acpi_handle_debug call  ;to help debugging this;Clean up inclusions of ACPI header files;ACPI;Similar;0.7029277086257935
adds an acpi_handle_debug call  ;to help debugging this;Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;Similar;0.5819880962371826
adds an acpi_handle_debug call  ;to help debugging this;<acpi/acpi_bus.h> be included prior to <acpi/acpi_drivers.h>;so that the acpi_pci_root declarations the latter depends on are always there;Similar;0.6568946838378906
adds an acpi_handle_debug call  ;to help debugging this;Use the patch to replace the origin code;provide a better solution;Similar;0.7175699472427368
adds an acpi_handle_debug call  ;to help debugging this;Remove useless type argument of driver .remove() operation;useless;Similar;0.5646926164627075
adds an acpi_handle_debug call  ;to help debugging this;"The second argument of ACPI driver .remove() operation is only used by the ACPI processor driver
";the value passed to that driver through it is always available from the given struct acpi_device objects removal_type field;Similar;0.5862226486206055
adds an acpi_handle_debug call  ;to help debugging this;drop the second ACPI driver .remove() argument  ;the second ACPI driver .remove() argument is in fact useless;Similar;0.5971425771713257
adds an acpi_handle_debug call  ;to help debugging this;Fix unused function warnings for CONFIG_PM_SLEEP;unused function warnings;Similar;0.5929272770881653
adds an acpi_handle_debug call  ;to help debugging this;add #ifdefs to prevent them from being built in that case  ;several suspend/resume functions in ACPI drivers are not used for CONFIG_PM_SLEEP unset;Similar;0.543783962726593
adds an acpi_handle_debug call  ;to help debugging this;remove unused procfs I/F;unused;Similar;0.604659914970398
adds an acpi_handle_debug call  ;to help debugging this;Remove unused ACPI button procfs interface;unused;Similar;0.6727768778800964
adds an acpi_handle_debug call  ;to help debugging this;Use device wakeup flags for handling ACPI wakeup devices;for handling ACPI wakeup devices;Similar;0.6941497325897217
adds an acpi_handle_debug call  ;to help debugging this;use standard device wakeup flags instead of the special ACPI flags for handling those devices;address this problem;Similar;0.5299460291862488
adds an acpi_handle_debug call  ;to help debugging this;Use GPE reference counting to support shared GPEs  ;the wakeup enable mask bits of GPEs are set as soon as the GPEs are enabled to wake up the system;Similar;0.6453021168708801
adds an acpi_handle_debug call  ;to help debugging this;Update gfp.h and slab.h includes  ;prepare for breaking implicit slab.h inclusion from percpu.h;Similar;0.6200263500213623
adds an acpi_handle_debug call  ;to help debugging this;Prepare for this change by updating users of gfp and slab facilities;include those headers directly instead of assuming availability;Similar;0.58922278881073
adds an acpi_handle_debug call  ;to help debugging this;the following script is used as the basis of conversion;As this conversion needs to touch a large number of source files;Similar;0.6574977040290833
adds an acpi_handle_debug call  ;to help debugging this;put the new include  ;its order conforms to its surrounding;Similar;0.5350978970527649
adds an acpi_handle_debug call  ;to help debugging this;prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;Similar;0.7118630409240723
adds an acpi_handle_debug call  ;to help debugging this;The script was run again  ;to make sure no file was left behind;Similar;0.5931560397148132
adds an acpi_handle_debug call  ;to help debugging this;description of the patch behaviour;an action or a change;Similar;0.5652232766151428
adds an acpi_handle_debug call  ;to help debugging this;percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;Similar;0.6764882802963257
adds an acpi_handle_debug call  ;to help debugging this;Introduce a new wake-up flag, always_enabled, for marking devices that should be permanently enabled to generate run-time events  ;devices that should be permanently enabled to generate run-time events;Similar;0.5681695938110352
adds an acpi_handle_debug call  ;to help debugging this;Introduce a reference counter for run-wake devices and a function that will initialize all of the run-time wake-up fields for given device.;-;Similar;0.6570904850959778
adds an acpi_handle_debug call  ;to help debugging this;Add an API to allow devices to indicate whether or not they want their devices GPE to be enabled for both runtime and wakeup events;to allow devices to indicate whether or not they want their devices GPE to be enabled;Similar;0.6484818458557129
adds an acpi_handle_debug call  ;to help debugging this;Remove the old GPE type handling entirely  ;Gets rid of various quirks, like the implicit disabling with GPE type setting;Similar;0.5041715502738953
adds an acpi_handle_debug call  ;to help debugging this;complain the following warning message;"will

";Similar;0.6470674872398376
adds an acpi_handle_debug call  ;to help debugging this;"This patch is to eliminate the above warning message
";Device PNP0C0D:00 failed to resume: error 1;Similar;0.5225335359573364
adds an acpi_handle_debug call  ;to help debugging this;return -ENODEV;theres no lid device present;Similar;0.6182574033737183
adds an acpi_handle_debug call  ;to help debugging this;whitespace fix  ;This does not change any actual console output;Similar;0.6685799360275269
adds an acpi_handle_debug call  ;to help debugging this;we could install either a fixed event handler or a notify handler, but the Linux/ACPI code now handles that for us;We previously needed that so we dont need to worry about it;Similar;0.5871162414550781
adds an acpi_handle_debug call  ;to help debugging this;type: Power Button;I dont think theres anything meaningful user-space can do by knowing whether a button is a control method or a fixed hardware button;Similar;0.5642629861831665
adds an acpi_handle_debug call  ;to help debugging this;Remove button->device pointer;button;Similar;0.7520387172698975
adds an acpi_handle_debug call  ;to help debugging this;We no longer need a pointer from struct acpi_button back to the struct acpi_device;no longer need;Similar;0.5402997732162476
adds an acpi_handle_debug call  ;to help debugging this;This patch adds temporaries to cache the acpi_device_hid(), acpi_device_name(), and acpi_device_class() pointers;so we dont have to clutter the code with so many uses of those interfaces;Similar;0.7202868461608887
adds an acpi_handle_debug call  ;to help debugging this;Better to oops and learn about a bug;than to silently cover it up;Similar;0.5367960929870605
adds an acpi_handle_debug call  ;to help debugging this;changes a bit of whitespace to follow Linux conventions;follow Linux conventions;Similar;0.6266472935676575
adds an acpi_handle_debug call  ;to help debugging this;use .notify method instead of installing handler directly  ;-;Similar;0.7245027422904968
adds an acpi_handle_debug call  ;to help debugging this;The presence of .notify() causes Linux/ACPI to manage event handlers and notify handlers on our behalf  ;so we dont have to install and remove them ourselves;Similar;0.6309298276901245
adds an acpi_handle_debug call  ;to help debugging this;convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.8320568799972534
adds an acpi_handle_debug call  ;to help debugging this;Setting ->owner as done currently (pde->owner = THIS_MODULE) is racy;as correctly noted at bug #12454;Similar;0.5691521167755127
adds an acpi_handle_debug call  ;to help debugging this;"proc_fops is declared as ""const""";should give some thoughts;Similar;0.7478832602500916
adds an acpi_handle_debug call  ;to help debugging this;start using GPE from userspace;GPE is already disabled in interrupt context;Similar;0.7466722726821899
adds an acpi_handle_debug call  ;to help debugging this;Move all the component definitions for drivers to a single shared place, include/acpi/acpi_drivers.h  ;to have a single shared place;Similar;0.6418870687484741
adds an acpi_handle_debug call  ;to help debugging this;"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.7119971513748169
adds an acpi_handle_debug call  ;to help debugging this;Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;Similar;0.7990257740020752
adds an acpi_handle_debug call  ;to help debugging this;use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Similar;0.7032427787780762
adds an acpi_handle_debug call  ;to help debugging this;Use proc_create()/proc_create_data() to make sure that ->proc_fops and ->data be setup;before gluing PDE to main tree;Similar;0.668483555316925
adds an acpi_handle_debug call  ;to help debugging this;Add correct ->owner to proc_fops to fix reading/module unloading race  ;fix reading/module unloading race;Similar;0.5658883452415466
adds an acpi_handle_debug call  ;to help debugging this;get rid of input BIT* duplicate defines;duplicate;Similar;0.7250421047210693
adds an acpi_handle_debug call  ;to help debugging this;Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;Similar;0.6026396155357361
adds an acpi_handle_debug call  ;to help debugging this;Define the macro temporarily in a local manner;all those local definitions will be removed further in this patchset (to not break bisecting);Similar;0.6422805786132812
adds an acpi_handle_debug call  ;to help debugging this;Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;Similar;0.7600773572921753
adds an acpi_handle_debug call  ;to help debugging this;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.7428570985794067
adds an acpi_handle_debug call  ;to help debugging this;fix acpi_driver.name usage;fix;Similar;0.8144656419754028
adds an acpi_handle_debug call  ;to help debugging this;ls bus/acpi/drivers  ;Display the list of ACPI drivers.;Similar;0.5183910131454468
adds an acpi_handle_debug call  ;to help debugging this;"Make ""module name"" actually match the file name";cosmetic only;Similar;0.5864320993423462
adds an acpi_handle_debug call  ;to help debugging this;"Invoke with ; as leaving it off confuses Lindent  ";gcc doesnt care;Similar;0.525853157043457
adds an acpi_handle_debug call  ;to help debugging this;Fix indentation where Lindent did get confused  ;Lindent did get confused;Similar;0.587063729763031
adds an acpi_handle_debug call  ;to help debugging this;remove unnecessary casts and variable initializations, clean up formatting;unnecessary;Similar;0.5688892602920532
adds an acpi_handle_debug call  ;to help debugging this;Remove unneeded acpi_handle from driver;unneeded;Similar;0.6710788011550903
adds an acpi_handle_debug call  ;to help debugging this;Use acpi_devices handle instead of drivers  ;-;Similar;0.6474460363388062
adds an acpi_handle_debug call  ;to help debugging this;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.7489026188850403
adds an acpi_handle_debug call  ;to help debugging this;restore /proc/acpi/button/ (ala 2.6.12)  ;[ACPI];Similar;0.6870800852775574
adds an acpi_handle_debug call  ;to help debugging this;"Create a separate ""historical"" git archive";about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated;Similar;0.5950497388839722
Fix function prototypes for module_param_call();-;fix whitespace in pr_fmt() to align log entries;align log entries;Similar;0.8015280961990356
Fix function prototypes for module_param_call();-;libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;Similar;0.7160384654998779
Fix function prototypes for module_param_call();-;assume the user will use the internal keyboard before this timeout expires;logind only checks the lid switch value after a timeout;Similar;0.5367509126663208
Fix function prototypes for module_param_call();-;"userspace requires to see ""close"" event after the system is resumed";so that it can determine whether the internal display should remain dark and the external display should be lit on;Similar;0.5191748142242432
Fix function prototypes for module_param_call();-;Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;Similar;0.7572797536849976
Fix function prototypes for module_param_call();-;Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);Similar;0.7335861921310425
Fix function prototypes for module_param_call();-;have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;Similar;0.6614575386047363
Fix function prototypes for module_param_call();-;This patch adds a mechanism to insert lid events as a compensation for the platform triggered ones to form a complete event switches  ;in order to make sure that the platform triggered events can always be reliably delivered to the userspace;Similar;0.5967316031455994
Fix function prototypes for module_param_call();-;implements this mechanism  ;only;Similar;0.5870736241340637
Fix function prototypes for module_param_call();-;Use key event type to implement ACPI lid events;Another approach;Similar;0.6849284172058105
Fix function prototypes for module_param_call();-;Remove pointer to old lid_sysfs on unbind;ACPI / button;Similar;0.6807533502578735
Fix function prototypes for module_param_call();-;When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;Similar;0.5933203101158142
Fix function prototypes for module_param_call();-;Correct a wrong macro usage;This patch simplies the code by merging some redundant code;Similar;0.5776771306991577
Fix function prototypes for module_param_call();-;this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;Similar;0.5742001533508301
Fix function prototypes for module_param_call();-;"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;Similar;0.552219033241272
Fix function prototypes for module_param_call();-;Add ACPI Button event via netlink routine;-;Similar;0.7243202924728394
Fix function prototypes for module_param_call();-;removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;Similar;0.6038991212844849
Fix function prototypes for module_param_call();-;This caused ACPI shutdown regression on gentoo;VirtualBox;Similar;0.523373007774353
Fix function prototypes for module_param_call();-;add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;Similar;0.7150328159332275
Fix function prototypes for module_param_call();-;fix button driver compile error when CONFIG_PM_SLEEP is undefined;CONFIG_PM_SLEEP is undefined;Similar;0.6344707012176514
Fix function prototypes for module_param_call();-;compile error;CONFIG_PM_SLEEP is undefined;Similar;0.6565868854522705
Fix function prototypes for module_param_call();-;Fix enabling button GPEs twice;Fix;Similar;0.6243409514427185
Fix function prototypes for module_param_call();-;Button GPEs have been enabled in the acpi_wake_device_init() during boot;the button driver enables them for the second time;Similar;0.6286206841468811
Fix function prototypes for module_param_call();-;remove the GPE enabling code from the button driver;to avoid the problem;Similar;0.6645685434341431
Fix function prototypes for module_param_call();-;Clean up inclusions of ACPI header files;ACPI;Similar;0.672882080078125
Fix function prototypes for module_param_call();-;Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;Similar;0.5786131024360657
Fix function prototypes for module_param_call();-;<acpi/acpi_bus.h> be included prior to <acpi/acpi_drivers.h>;so that the acpi_pci_root declarations the latter depends on are always there;Similar;0.5928247570991516
Fix function prototypes for module_param_call();-;Use the patch to replace the origin code;provide a better solution;Similar;0.7819429636001587
Fix function prototypes for module_param_call();-;Remove useless type argument of driver .remove() operation;useless;Similar;0.5439528226852417
Fix function prototypes for module_param_call();-;"The second argument of ACPI driver .remove() operation is only used by the ACPI processor driver
";the value passed to that driver through it is always available from the given struct acpi_device objects removal_type field;Similar;0.5581127405166626
Fix function prototypes for module_param_call();-;drop the second ACPI driver .remove() argument  ;the second ACPI driver .remove() argument is in fact useless;Similar;0.5293337106704712
Fix function prototypes for module_param_call();-;Fix unused function warnings for CONFIG_PM_SLEEP;unused function warnings;Similar;0.6402218341827393
Fix function prototypes for module_param_call();-;add #ifdefs to prevent them from being built in that case  ;several suspend/resume functions in ACPI drivers are not used for CONFIG_PM_SLEEP unset;Similar;0.541519284248352
Fix function prototypes for module_param_call();-;remove unused procfs I/F;unused;Similar;0.5726420879364014
Fix function prototypes for module_param_call();-;Remove unused ACPI button procfs interface;unused;Similar;0.6196454167366028
Fix function prototypes for module_param_call();-;Use device wakeup flags for handling ACPI wakeup devices;for handling ACPI wakeup devices;Similar;0.6423284411430359
Fix function prototypes for module_param_call();-;use standard device wakeup flags instead of the special ACPI flags for handling those devices;address this problem;Similar;0.5176998972892761
Fix function prototypes for module_param_call();-;Use GPE reference counting to support shared GPEs  ;the wakeup enable mask bits of GPEs are set as soon as the GPEs are enabled to wake up the system;Similar;0.665657103061676
Fix function prototypes for module_param_call();-;This will allow us to simplify the GPE handling code quite a bit;that change is too intrusive for 2.6.35;Similar;0.5858771800994873
Fix function prototypes for module_param_call();-;Update gfp.h and slab.h includes  ;prepare for breaking implicit slab.h inclusion from percpu.h;Similar;0.638148307800293
Fix function prototypes for module_param_call();-;Prepare for this change by updating users of gfp and slab facilities;include those headers directly instead of assuming availability;Similar;0.6201632022857666
Fix function prototypes for module_param_call();-;the following script is used as the basis of conversion;As this conversion needs to touch a large number of source files;Similar;0.6514393091201782
Fix function prototypes for module_param_call();-;prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;Similar;0.6677433252334595
Fix function prototypes for module_param_call();-;The script was run again  ;to make sure no file was left behind;Similar;0.5296059250831604
Fix function prototypes for module_param_call();-;description of the patch behaviour;an action or a change;Similar;0.6209667921066284
Fix function prototypes for module_param_call();-;failures were fixed;Build tests were done on the following configurations;Similar;0.5158244371414185
Fix function prototypes for module_param_call();-;percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;Similar;0.6221882104873657
Fix function prototypes for module_param_call();-;Introduce a new wake-up flag, always_enabled, for marking devices that should be permanently enabled to generate run-time events  ;devices that should be permanently enabled to generate run-time events;Similar;0.5086538791656494
Fix function prototypes for module_param_call();-;Introduce a reference counter for run-wake devices and a function that will initialize all of the run-time wake-up fields for given device.;-;Similar;0.6514935493469238
Fix function prototypes for module_param_call();-;Add an API to allow devices to indicate whether or not they want their devices GPE to be enabled for both runtime and wakeup events;to allow devices to indicate whether or not they want their devices GPE to be enabled;Similar;0.6534448266029358
Fix function prototypes for module_param_call();-;complain the following warning message;"will

";Similar;0.5815736055374146
Fix function prototypes for module_param_call();-;"This patch is to eliminate the above warning message
";Device PNP0C0D:00 failed to resume: error 1;Similar;0.522802472114563
Fix function prototypes for module_param_call();-;return -ENODEV;theres no lid device present;Similar;0.5643298029899597
Fix function prototypes for module_param_call();-;Some drivers need to know when a lid event occurs and get the current status;-;Similar;0.5141453742980957
Fix function prototypes for module_param_call();-;whitespace fix  ;This does not change any actual console output;Similar;0.7117589712142944
Fix function prototypes for module_param_call();-;we could install either a fixed event handler or a notify handler, but the Linux/ACPI code now handles that for us;We previously needed that so we dont need to worry about it;Similar;0.5669262409210205
Fix function prototypes for module_param_call();-;type: Power Button;I dont think theres anything meaningful user-space can do by knowing whether a button is a control method or a fixed hardware button;Similar;0.5184851884841919
Fix function prototypes for module_param_call();-;Remove button->device pointer;button;Similar;0.7201470732688904
Fix function prototypes for module_param_call();-;We no longer need a pointer from struct acpi_button back to the struct acpi_device;no longer need;Similar;0.5337585806846619
Fix function prototypes for module_param_call();-;This patch adds temporaries to cache the acpi_device_hid(), acpi_device_name(), and acpi_device_class() pointers;so we dont have to clutter the code with so many uses of those interfaces;Similar;0.6873257160186768
Fix function prototypes for module_param_call();-;Better to oops and learn about a bug;than to silently cover it up;Similar;0.525394856929779
Fix function prototypes for module_param_call();-;changes a bit of whitespace to follow Linux conventions;follow Linux conventions;Similar;0.6228623390197754
Fix function prototypes for module_param_call();-;use .notify method instead of installing handler directly  ;-;Similar;0.6567187309265137
Fix function prototypes for module_param_call();-;The presence of .notify() causes Linux/ACPI to manage event handlers and notify handlers on our behalf  ;so we dont have to install and remove them ourselves;Similar;0.5584776401519775
Fix function prototypes for module_param_call();-;convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.7341831922531128
Fix function prototypes for module_param_call();-;Setting ->owner as done currently (pde->owner = THIS_MODULE) is racy;as correctly noted at bug #12454;Similar;0.596305787563324
Fix function prototypes for module_param_call();-;"proc_fops is declared as ""const""";should give some thoughts;Similar;0.65501868724823
Fix function prototypes for module_param_call();-;start using GPE from userspace;GPE is already disabled in interrupt context;Similar;0.6721535921096802
Fix function prototypes for module_param_call();-;Move all the component definitions for drivers to a single shared place, include/acpi/acpi_drivers.h  ;to have a single shared place;Similar;0.5839117765426636
Fix function prototypes for module_param_call();-;"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.6358323693275452
Fix function prototypes for module_param_call();-;Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;Similar;0.7710665464401245
Fix function prototypes for module_param_call();-;use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Similar;0.7006574869155884
Fix function prototypes for module_param_call();-;Use proc_create()/proc_create_data() to make sure that ->proc_fops and ->data be setup;before gluing PDE to main tree;Similar;0.7283401489257812
Fix function prototypes for module_param_call();-;Add correct ->owner to proc_fops to fix reading/module unloading race  ;fix reading/module unloading race;Similar;0.6043627858161926
Fix function prototypes for module_param_call();-;get rid of input BIT* duplicate defines;duplicate;Similar;0.6563968062400818
Fix function prototypes for module_param_call();-;Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;Similar;0.5940049290657043
Fix function prototypes for module_param_call();-;Define the macro temporarily in a local manner;all those local definitions will be removed further in this patchset (to not break bisecting);Similar;0.6665065288543701
Fix function prototypes for module_param_call();-;Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;Similar;0.7269552946090698
Fix function prototypes for module_param_call();-;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.7049432396888733
Fix function prototypes for module_param_call();-;fix acpi_driver.name usage;fix;Similar;0.8270348906517029
Fix function prototypes for module_param_call();-;"Make ""module name"" actually match the file name";cosmetic only;Similar;0.6511558890342712
Fix function prototypes for module_param_call();-;Fix indentation where Lindent did get confused  ;Lindent did get confused;Similar;0.5721917152404785
Fix function prototypes for module_param_call();-;remove unnecessary casts and variable initializations, clean up formatting;unnecessary;Similar;0.5769230723381042
Fix function prototypes for module_param_call();-;Remove unneeded acpi_handle from driver;unneeded;Similar;0.5823377966880798
Fix function prototypes for module_param_call();-;Use acpi_devices handle instead of drivers  ;-;Similar;0.6033843755722046
Fix function prototypes for module_param_call();-;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.6298911571502686
Fix function prototypes for module_param_call();-;restore /proc/acpi/button/ (ala 2.6.12)  ;[ACPI];Similar;0.621440052986145
Fix function prototypes for module_param_call();-;"Create a separate ""historical"" git archive";about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated;Similar;0.5531917810440063
fix whitespace in pr_fmt() to align log entries;align log entries;The ->sync hook allows all of the relevant event queues to be flushed;to prevent events from being missed due to race conditions;Similar;0.5348755121231079
fix whitespace in pr_fmt() to align log entries;align log entries;libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;Similar;0.7736313939094543
fix whitespace in pr_fmt() to align log entries;align log entries;assume the user will use the internal keyboard before this timeout expires;logind only checks the lid switch value after a timeout;Similar;0.5773651599884033
fix whitespace in pr_fmt() to align log entries;align log entries;"userspace requires to see ""close"" event after the system is resumed";so that it can determine whether the internal display should remain dark and the external display should be lit on;Similar;0.5369830131530762
fix whitespace in pr_fmt() to align log entries;align log entries;Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;Similar;0.730187714099884
fix whitespace in pr_fmt() to align log entries;align log entries;Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);Similar;0.6758861541748047
fix whitespace in pr_fmt() to align log entries;align log entries;The ->sync hook allows all of the relevant event queues to be flushed;to prevent events from being missed due to race conditions;Similar;0.5348755121231079
fix whitespace in pr_fmt() to align log entries;align log entries;have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;Similar;0.6123044490814209
fix whitespace in pr_fmt() to align log entries;align log entries;This patch adds a mechanism to insert lid events as a compensation for the platform triggered ones to form a complete event switches  ;in order to make sure that the platform triggered events can always be reliably delivered to the userspace;Similar;0.6773525476455688
fix whitespace in pr_fmt() to align log entries;align log entries;Use key event type to implement ACPI lid events;Another approach;Similar;0.6271417140960693
fix whitespace in pr_fmt() to align log entries;align log entries;Remove pointer to old lid_sysfs on unbind;ACPI / button;Similar;0.6894669532775879
fix whitespace in pr_fmt() to align log entries;align log entries;When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;Similar;0.5840169787406921
fix whitespace in pr_fmt() to align log entries;align log entries;this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;Similar;0.5515956878662109
fix whitespace in pr_fmt() to align log entries;align log entries;"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;Similar;0.5798426866531372
fix whitespace in pr_fmt() to align log entries;align log entries;Add ACPI Button event via netlink routine;-;Similar;0.7026922702789307
fix whitespace in pr_fmt() to align log entries;align log entries;removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;Similar;0.5482764840126038
fix whitespace in pr_fmt() to align log entries;align log entries;This caused ACPI shutdown regression on gentoo;VirtualBox;Similar;0.5124571323394775
fix whitespace in pr_fmt() to align log entries;align log entries;add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;Similar;0.7127408385276794
fix whitespace in pr_fmt() to align log entries;align log entries;fix button driver compile error when CONFIG_PM_SLEEP is undefined;CONFIG_PM_SLEEP is undefined;Similar;0.6824135780334473
fix whitespace in pr_fmt() to align log entries;align log entries;compile error;CONFIG_PM_SLEEP is undefined;Similar;0.60598224401474
fix whitespace in pr_fmt() to align log entries;align log entries;Fix enabling button GPEs twice;Fix;Similar;0.5862529873847961
fix whitespace in pr_fmt() to align log entries;align log entries;Button GPEs have been enabled in the acpi_wake_device_init() during boot;the button driver enables them for the second time;Similar;0.6678435802459717
fix whitespace in pr_fmt() to align log entries;align log entries;remove the GPE enabling code from the button driver;to avoid the problem;Similar;0.6218146681785583
fix whitespace in pr_fmt() to align log entries;align log entries;Clean up inclusions of ACPI header files;ACPI;Similar;0.7477119565010071
fix whitespace in pr_fmt() to align log entries;align log entries;Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;Similar;0.5982299447059631
fix whitespace in pr_fmt() to align log entries;align log entries;<acpi/acpi_bus.h> be included prior to <acpi/acpi_drivers.h>;so that the acpi_pci_root declarations the latter depends on are always there;Similar;0.5558555126190186
fix whitespace in pr_fmt() to align log entries;align log entries;Use the patch to replace the origin code;provide a better solution;Similar;0.6941043734550476
fix whitespace in pr_fmt() to align log entries;align log entries;Fix unused function warnings for CONFIG_PM_SLEEP;unused function warnings;Similar;0.6216632127761841
fix whitespace in pr_fmt() to align log entries;align log entries;Remove unused ACPI button procfs interface;unused;Similar;0.5510750412940979
fix whitespace in pr_fmt() to align log entries;align log entries;Use device wakeup flags for handling ACPI wakeup devices;for handling ACPI wakeup devices;Similar;0.6205613613128662
fix whitespace in pr_fmt() to align log entries;align log entries;Use GPE reference counting to support shared GPEs  ;the wakeup enable mask bits of GPEs are set as soon as the GPEs are enabled to wake up the system;Similar;0.7052650451660156
fix whitespace in pr_fmt() to align log entries;align log entries;it is sufficient to set/unset the wakeup mask bits for them during system sleep transitions;"this means that the reference counting of ""wakeup"" GPEs doesnt really make sense";Similar;0.563164472579956
fix whitespace in pr_fmt() to align log entries;align log entries;This will allow us to simplify the GPE handling code quite a bit;that change is too intrusive for 2.6.35;Similar;0.5535266399383545
fix whitespace in pr_fmt() to align log entries;align log entries;Update gfp.h and slab.h includes  ;prepare for breaking implicit slab.h inclusion from percpu.h;Similar;0.6329396963119507
fix whitespace in pr_fmt() to align log entries;align log entries;Prepare for this change by updating users of gfp and slab facilities;include those headers directly instead of assuming availability;Similar;0.6609216332435608
fix whitespace in pr_fmt() to align log entries;align log entries;the following script is used as the basis of conversion;As this conversion needs to touch a large number of source files;Similar;0.6204458475112915
fix whitespace in pr_fmt() to align log entries;align log entries;prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;Similar;0.7571158409118652
fix whitespace in pr_fmt() to align log entries;align log entries;description of the patch behaviour;an action or a change;Similar;0.5144841074943542
fix whitespace in pr_fmt() to align log entries;align log entries;percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;Similar;0.5365313291549683
fix whitespace in pr_fmt() to align log entries;align log entries;Introduce a new wake-up flag, always_enabled, for marking devices that should be permanently enabled to generate run-time events  ;devices that should be permanently enabled to generate run-time events;Similar;0.558906078338623
fix whitespace in pr_fmt() to align log entries;align log entries;Introduce a reference counter for run-wake devices and a function that will initialize all of the run-time wake-up fields for given device.;-;Similar;0.6569817066192627
fix whitespace in pr_fmt() to align log entries;align log entries;Add an API to allow devices to indicate whether or not they want their devices GPE to be enabled for both runtime and wakeup events;to allow devices to indicate whether or not they want their devices GPE to be enabled;Similar;0.6424828767776489
fix whitespace in pr_fmt() to align log entries;align log entries;Some drivers need to know when a lid event occurs and get the current status;-;Similar;0.5303076505661011
fix whitespace in pr_fmt() to align log entries;align log entries;whitespace fix  ;This does not change any actual console output;Similar;0.6361057758331299
fix whitespace in pr_fmt() to align log entries;align log entries;we could install either a fixed event handler or a notify handler, but the Linux/ACPI code now handles that for us;We previously needed that so we dont need to worry about it;Similar;0.6129504442214966
fix whitespace in pr_fmt() to align log entries;align log entries;Remove button->device pointer;button;Similar;0.6192502975463867
fix whitespace in pr_fmt() to align log entries;align log entries;This patch adds temporaries to cache the acpi_device_hid(), acpi_device_name(), and acpi_device_class() pointers;so we dont have to clutter the code with so many uses of those interfaces;Similar;0.7459473609924316
fix whitespace in pr_fmt() to align log entries;align log entries;Better to oops and learn about a bug;than to silently cover it up;Similar;0.5238810777664185
fix whitespace in pr_fmt() to align log entries;align log entries;changes a bit of whitespace to follow Linux conventions;follow Linux conventions;Similar;0.697287917137146
fix whitespace in pr_fmt() to align log entries;align log entries;use .notify method instead of installing handler directly  ;-;Similar;0.5515967607498169
fix whitespace in pr_fmt() to align log entries;align log entries;The presence of .notify() causes Linux/ACPI to manage event handlers and notify handlers on our behalf  ;so we dont have to install and remove them ourselves;Similar;0.6385078430175781
fix whitespace in pr_fmt() to align log entries;align log entries;convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.7300514578819275
fix whitespace in pr_fmt() to align log entries;align log entries;"proc_fops is declared as ""const""";should give some thoughts;Similar;0.5519634485244751
fix whitespace in pr_fmt() to align log entries;align log entries;start using GPE from userspace;GPE is already disabled in interrupt context;Similar;0.6721281409263611
fix whitespace in pr_fmt() to align log entries;align log entries;Move all the component definitions for drivers to a single shared place, include/acpi/acpi_drivers.h  ;to have a single shared place;Similar;0.6599551439285278
fix whitespace in pr_fmt() to align log entries;align log entries;"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.6787891387939453
fix whitespace in pr_fmt() to align log entries;align log entries;Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;Similar;0.7229409217834473
fix whitespace in pr_fmt() to align log entries;align log entries;use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Similar;0.6332170963287354
fix whitespace in pr_fmt() to align log entries;align log entries;Use proc_create()/proc_create_data() to make sure that ->proc_fops and ->data be setup;before gluing PDE to main tree;Similar;0.7001612186431885
fix whitespace in pr_fmt() to align log entries;align log entries;Add correct ->owner to proc_fops to fix reading/module unloading race  ;fix reading/module unloading race;Similar;0.6062924265861511
fix whitespace in pr_fmt() to align log entries;align log entries;get rid of input BIT* duplicate defines;duplicate;Similar;0.5963332653045654
fix whitespace in pr_fmt() to align log entries;align log entries;Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;Similar;0.5534862875938416
fix whitespace in pr_fmt() to align log entries;align log entries;Define the macro temporarily in a local manner;all those local definitions will be removed further in this patchset (to not break bisecting);Similar;0.5699185132980347
fix whitespace in pr_fmt() to align log entries;align log entries;Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;Similar;0.7019408941268921
fix whitespace in pr_fmt() to align log entries;align log entries;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.640345573425293
fix whitespace in pr_fmt() to align log entries;align log entries;fix acpi_driver.name usage;fix;Similar;0.759577751159668
fix whitespace in pr_fmt() to align log entries;align log entries;"Make ""module name"" actually match the file name";cosmetic only;Similar;0.6932172775268555
fix whitespace in pr_fmt() to align log entries;align log entries;Fix indentation where Lindent did get confused  ;Lindent did get confused;Similar;0.5054023265838623
fix whitespace in pr_fmt() to align log entries;align log entries;remove unnecessary casts and variable initializations, clean up formatting;unnecessary;Similar;0.6036057472229004
fix whitespace in pr_fmt() to align log entries;align log entries;Remove unneeded acpi_handle from driver;unneeded;Similar;0.5468795299530029
fix whitespace in pr_fmt() to align log entries;align log entries;Use acpi_devices handle instead of drivers  ;-;Similar;0.5280839204788208
fix whitespace in pr_fmt() to align log entries;align log entries;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.6374821662902832
fix whitespace in pr_fmt() to align log entries;align log entries;restore /proc/acpi/button/ (ala 2.6.12)  ;[ACPI];Similar;0.5796422958374023
The ->sync hook allows all of the relevant event queues to be flushed;to prevent events from being missed due to race conditions;libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;Similar;0.5294790267944336
The ->sync hook allows all of the relevant event queues to be flushed;to prevent events from being missed due to race conditions;Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;Similar;0.5080198645591736
The ->sync hook allows all of the relevant event queues to be flushed;to prevent events from being missed due to race conditions;The ->sync hook allows all of the relevant event queues to be flushed;to prevent events from being missed due to race conditions;Similar;0.9999996423721313
The ->sync hook allows all of the relevant event queues to be flushed;to prevent events from being missed due to race conditions;This patch adds a mechanism to insert lid events as a compensation for the platform triggered ones to form a complete event switches  ;in order to make sure that the platform triggered events can always be reliably delivered to the userspace;Similar;0.6648550033569336
The ->sync hook allows all of the relevant event queues to be flushed;to prevent events from being missed due to race conditions;Add ACPI Button event via netlink routine;-;Similar;0.6367901563644409
The ->sync hook allows all of the relevant event queues to be flushed;to prevent events from being missed due to race conditions;add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;Similar;0.6248071193695068
The ->sync hook allows all of the relevant event queues to be flushed;to prevent events from being missed due to race conditions;Button GPEs have been enabled in the acpi_wake_device_init() during boot;the button driver enables them for the second time;Similar;0.5542443990707397
The ->sync hook allows all of the relevant event queues to be flushed;to prevent events from being missed due to race conditions;Clean up inclusions of ACPI header files;ACPI;Similar;0.5333131551742554
The ->sync hook allows all of the relevant event queues to be flushed;to prevent events from being missed due to race conditions;Use device wakeup flags for handling ACPI wakeup devices;for handling ACPI wakeup devices;Similar;0.5369515419006348
The ->sync hook allows all of the relevant event queues to be flushed;to prevent events from being missed due to race conditions;Use GPE reference counting to support shared GPEs  ;the wakeup enable mask bits of GPEs are set as soon as the GPEs are enabled to wake up the system;Similar;0.5648998022079468
The ->sync hook allows all of the relevant event queues to be flushed;to prevent events from being missed due to race conditions;it is sufficient to set/unset the wakeup mask bits for them during system sleep transitions;"this means that the reference counting of ""wakeup"" GPEs doesnt really make sense";Similar;0.5243349075317383
The ->sync hook allows all of the relevant event queues to be flushed;to prevent events from being missed due to race conditions;Prepare for this change by updating users of gfp and slab facilities;include those headers directly instead of assuming availability;Similar;0.6107372641563416
The ->sync hook allows all of the relevant event queues to be flushed;to prevent events from being missed due to race conditions;The script was run on all .h files but without automatically editing them;sprinkling gfp.h and slab.h inclusions around .h files could easily lead to inclusion dependency hell;Similar;0.5635656118392944
The ->sync hook allows all of the relevant event queues to be flushed;to prevent events from being missed due to race conditions;Introduce a new wake-up flag, always_enabled, for marking devices that should be permanently enabled to generate run-time events  ;devices that should be permanently enabled to generate run-time events;Similar;0.6257600784301758
The ->sync hook allows all of the relevant event queues to be flushed;to prevent events from being missed due to race conditions;Introduce a reference counter for run-wake devices and a function that will initialize all of the run-time wake-up fields for given device.;-;Similar;0.7092406749725342
The ->sync hook allows all of the relevant event queues to be flushed;to prevent events from being missed due to race conditions;Add an API to allow devices to indicate whether or not they want their devices GPE to be enabled for both runtime and wakeup events;to allow devices to indicate whether or not they want their devices GPE to be enabled;Similar;0.6706266403198242
The ->sync hook allows all of the relevant event queues to be flushed;to prevent events from being missed due to race conditions;we could install either a fixed event handler or a notify handler, but the Linux/ACPI code now handles that for us;We previously needed that so we dont need to worry about it;Similar;0.5442155599594116
The ->sync hook allows all of the relevant event queues to be flushed;to prevent events from being missed due to race conditions;This patch adds temporaries to cache the acpi_device_hid(), acpi_device_name(), and acpi_device_class() pointers;so we dont have to clutter the code with so many uses of those interfaces;Similar;0.5919539928436279
The ->sync hook allows all of the relevant event queues to be flushed;to prevent events from being missed due to race conditions;The presence of .notify() causes Linux/ACPI to manage event handlers and notify handlers on our behalf  ;so we dont have to install and remove them ourselves;Similar;0.6133349537849426
The ->sync hook allows all of the relevant event queues to be flushed;to prevent events from being missed due to race conditions;convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.5539946556091309
The ->sync hook allows all of the relevant event queues to be flushed;to prevent events from being missed due to race conditions;start using GPE from userspace;GPE is already disabled in interrupt context;Similar;0.5473905205726624
The ->sync hook allows all of the relevant event queues to be flushed;to prevent events from being missed due to race conditions;Move all the component definitions for drivers to a single shared place, include/acpi/acpi_drivers.h  ;to have a single shared place;Similar;0.7136667370796204
The ->sync hook allows all of the relevant event queues to be flushed;to prevent events from being missed due to race conditions;"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.5612576007843018
The ->sync hook allows all of the relevant event queues to be flushed;to prevent events from being missed due to race conditions;Use proc_create()/proc_create_data() to make sure that ->proc_fops and ->data be setup;before gluing PDE to main tree;Similar;0.525781512260437
The ->sync hook allows all of the relevant event queues to be flushed;to prevent events from being missed due to race conditions;restore /proc/acpi/button/ (ala 2.6.12)  ;[ACPI];Similar;0.5470101833343506
"the ""open"" choice is worse";"the ""method"" operation mode implementation can be buggy on some platforms";It breaks docking stations basically;there is no way to have a user-space hwdb to fix that;Similar;0.571865975856781
"the ""open"" choice is worse";"the ""method"" operation mode implementation can be buggy on some platforms";This patch makes it deprecated;lid_init__state=open is more useful than this mode;Similar;0.7380163073539734
"the ""open"" choice is worse";"the ""method"" operation mode implementation can be buggy on some platforms";have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;Similar;0.5489720106124878
"the ""open"" choice is worse";"the ""method"" operation mode implementation can be buggy on some platforms";it should not send the complement switch event for the unreliable initial lid state notification;However this mechanism is not suitable for lid_init_state=open/method;Similar;0.6196984052658081
"the ""open"" choice is worse";"the ""method"" operation mode implementation can be buggy on some platforms";Correct a wrong macro usage;This patch simplies the code by merging some redundant code;Similar;0.6978888511657715
"the ""open"" choice is worse";"the ""method"" operation mode implementation can be buggy on some platforms";Remove useless type argument of driver .remove() operation;useless;Similar;0.5917852520942688
"the ""open"" choice is worse";"the ""method"" operation mode implementation can be buggy on some platforms";add #ifdefs to prevent them from being built in that case  ;several suspend/resume functions in ACPI drivers are not used for CONFIG_PM_SLEEP unset;Similar;0.5443835854530334
"the ""open"" choice is worse";"the ""method"" operation mode implementation can be buggy on some platforms";remove unused procfs I/F;unused;Similar;0.5172727704048157
"the ""open"" choice is worse";"the ""method"" operation mode implementation can be buggy on some platforms";Avoid disabling wakeup unnecessarily on remove;-;Similar;0.6620339155197144
"the ""open"" choice is worse";"the ""method"" operation mode implementation can be buggy on some platforms";only the necessary includes are there;necessary;Similar;0.5452331304550171
"the ""open"" choice is worse";"the ""method"" operation mode implementation can be buggy on some platforms";failures were fixed;Build tests were done on the following configurations;Similar;0.5341361165046692
"the ""open"" choice is worse";"the ""method"" operation mode implementation can be buggy on some platforms";Remove the old GPE type handling entirely  ;Gets rid of various quirks, like the implicit disabling with GPE type setting;Similar;0.5313971638679504
"the ""open"" choice is worse";"the ""method"" operation mode implementation can be buggy on some platforms";complain the following warning message;"will

";Similar;0.5777319669723511
"the ""open"" choice is worse";"the ""method"" operation mode implementation can be buggy on some platforms";"This patch is to eliminate the above warning message
";Device PNP0C0D:00 failed to resume: error 1;Similar;0.6192657947540283
"the ""open"" choice is worse";"the ""method"" operation mode implementation can be buggy on some platforms";whitespace fix  ;This does not change any actual console output;Similar;0.5011759996414185
"the ""open"" choice is worse";"the ""method"" operation mode implementation can be buggy on some platforms";Remove button->device pointer;button;Similar;0.5484628677368164
"the ""open"" choice is worse";"the ""method"" operation mode implementation can be buggy on some platforms";Setting ->owner as done currently (pde->owner = THIS_MODULE) is racy;as correctly noted at bug #12454;Similar;0.533596396446228
"the ""open"" choice is worse";"the ""method"" operation mode implementation can be buggy on some platforms";dont want such modular code;definitely;Similar;0.7267816066741943
"the ""open"" choice is worse";"the ""method"" operation mode implementation can be buggy on some platforms";"Invoke with ; as leaving it off confuses Lindent  ";gcc doesnt care;Similar;0.6875802278518677
"the ""open"" choice is worse";"the ""method"" operation mode implementation can be buggy on some platforms";Fix indentation where Lindent did get confused  ;Lindent did get confused;Similar;0.657997727394104
"the ""open"" choice is worse";"the ""method"" operation mode implementation can be buggy on some platforms";"Create a separate ""historical"" git archive";about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated;Similar;0.5060727000236511
It breaks docking stations basically;there is no way to have a user-space hwdb to fix that;Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);Similar;0.504522979259491
It breaks docking stations basically;there is no way to have a user-space hwdb to fix that;This patch makes it deprecated;lid_init__state=open is more useful than this mode;Similar;0.6876469850540161
It breaks docking stations basically;there is no way to have a user-space hwdb to fix that;have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;Similar;0.6090860366821289
It breaks docking stations basically;there is no way to have a user-space hwdb to fix that;Remove pointer to old lid_sysfs on unbind;ACPI / button;Similar;0.5465895533561707
It breaks docking stations basically;there is no way to have a user-space hwdb to fix that;When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;Similar;0.5905584096908569
It breaks docking stations basically;there is no way to have a user-space hwdb to fix that;Correct a wrong macro usage;This patch simplies the code by merging some redundant code;Similar;0.610160231590271
It breaks docking stations basically;there is no way to have a user-space hwdb to fix that;this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;Similar;0.5971052646636963
It breaks docking stations basically;there is no way to have a user-space hwdb to fix that;removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;Similar;0.5183181166648865
It breaks docking stations basically;there is no way to have a user-space hwdb to fix that;This caused ACPI shutdown regression on gentoo;VirtualBox;Similar;0.6625564098358154
It breaks docking stations basically;there is no way to have a user-space hwdb to fix that;fix button driver compile error when CONFIG_PM_SLEEP is undefined;CONFIG_PM_SLEEP is undefined;Similar;0.5018589496612549
It breaks docking stations basically;there is no way to have a user-space hwdb to fix that;compile error;CONFIG_PM_SLEEP is undefined;Similar;0.5278226733207703
It breaks docking stations basically;there is no way to have a user-space hwdb to fix that;remove the GPE enabling code from the button driver;to avoid the problem;Similar;0.573070764541626
It breaks docking stations basically;there is no way to have a user-space hwdb to fix that;Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;Similar;0.5164163112640381
It breaks docking stations basically;there is no way to have a user-space hwdb to fix that;Use the patch to replace the origin code;provide a better solution;Similar;0.5146282911300659
It breaks docking stations basically;there is no way to have a user-space hwdb to fix that;Remove useless type argument of driver .remove() operation;useless;Similar;0.6824104189872742
It breaks docking stations basically;there is no way to have a user-space hwdb to fix that;drop the second ACPI driver .remove() argument  ;the second ACPI driver .remove() argument is in fact useless;Similar;0.6231446862220764
It breaks docking stations basically;there is no way to have a user-space hwdb to fix that;add #ifdefs to prevent them from being built in that case  ;several suspend/resume functions in ACPI drivers are not used for CONFIG_PM_SLEEP unset;Similar;0.553071141242981
It breaks docking stations basically;there is no way to have a user-space hwdb to fix that;remove unused procfs I/F;unused;Similar;0.5862630009651184
It breaks docking stations basically;there is no way to have a user-space hwdb to fix that;Remove unused ACPI button procfs interface;unused;Similar;0.5504741668701172
It breaks docking stations basically;there is no way to have a user-space hwdb to fix that;Avoid disabling wakeup unnecessarily on remove;-;Similar;0.5369710326194763
It breaks docking stations basically;there is no way to have a user-space hwdb to fix that;Remove the old GPE type handling entirely  ;Gets rid of various quirks, like the implicit disabling with GPE type setting;Similar;0.6270296573638916
It breaks docking stations basically;there is no way to have a user-space hwdb to fix that;"This patch is to eliminate the above warning message
";Device PNP0C0D:00 failed to resume: error 1;Similar;0.5700066089630127
It breaks docking stations basically;there is no way to have a user-space hwdb to fix that;Remove button->device pointer;button;Similar;0.6033926010131836
It breaks docking stations basically;there is no way to have a user-space hwdb to fix that;dont want such modular code;definitely;Similar;0.5185944437980652
It breaks docking stations basically;there is no way to have a user-space hwdb to fix that;get rid of input BIT* duplicate defines;duplicate;Similar;0.5736392736434937
It breaks docking stations basically;there is no way to have a user-space hwdb to fix that;Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;Similar;0.5023722648620605
It breaks docking stations basically;there is no way to have a user-space hwdb to fix that;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.5688890218734741
It breaks docking stations basically;there is no way to have a user-space hwdb to fix that;"Invoke with ; as leaving it off confuses Lindent  ";gcc doesnt care;Similar;0.5940340757369995
It breaks docking stations basically;there is no way to have a user-space hwdb to fix that;Fix indentation where Lindent did get confused  ;Lindent did get confused;Similar;0.5987832546234131
It breaks docking stations basically;there is no way to have a user-space hwdb to fix that;Remove unneeded acpi_handle from driver;unneeded;Similar;0.575326144695282
It breaks docking stations basically;there is no way to have a user-space hwdb to fix that;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.510168194770813
It breaks docking stations basically;there is no way to have a user-space hwdb to fix that;"Create a separate ""historical"" git archive";about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated;Similar;0.5151988863945007
libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;assume the user will use the internal keyboard before this timeout expires;logind only checks the lid switch value after a timeout;Similar;0.6540216207504272
libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;"userspace requires to see ""close"" event after the system is resumed";so that it can determine whether the internal display should remain dark and the external display should be lit on;Similar;0.5420916080474854
libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;Similar;0.6800096035003662
libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);Similar;0.6009306907653809
libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;The ->sync hook allows all of the relevant event queues to be flushed;to prevent events from being missed due to race conditions;Similar;0.5294790267944336
libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;Similar;0.6211402416229248
libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;This patch adds a mechanism to insert lid events as a compensation for the platform triggered ones to form a complete event switches  ;in order to make sure that the platform triggered events can always be reliably delivered to the userspace;Similar;0.7974408864974976
libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;Use key event type to implement ACPI lid events;Another approach;Similar;0.5561662912368774
libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;Remove pointer to old lid_sysfs on unbind;ACPI / button;Similar;0.6143137216567993
libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;Similar;0.5940909385681152
libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;Similar;0.5919724702835083
libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;Similar;0.6346085071563721
libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;Add ACPI Button event via netlink routine;-;Similar;0.6902475357055664
libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;Similar;0.5753530859947205
libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;This caused ACPI shutdown regression on gentoo;VirtualBox;Similar;0.5513496398925781
libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;Similar;0.7155309915542603
libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;fix button driver compile error when CONFIG_PM_SLEEP is undefined;CONFIG_PM_SLEEP is undefined;Similar;0.7359483242034912
libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;Fix enabling button GPEs twice;Fix;Similar;0.6359387040138245
libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;Button GPEs have been enabled in the acpi_wake_device_init() during boot;the button driver enables them for the second time;Similar;0.7388260364532471
libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;remove the GPE enabling code from the button driver;to avoid the problem;Similar;0.581751823425293
libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;Clean up inclusions of ACPI header files;ACPI;Similar;0.6792691946029663
libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;Similar;0.6615475416183472
libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;<acpi/acpi_bus.h> be included prior to <acpi/acpi_drivers.h>;so that the acpi_pci_root declarations the latter depends on are always there;Similar;0.535239577293396
libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;Use the patch to replace the origin code;provide a better solution;Similar;0.675458550453186
libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;Fix unused function warnings for CONFIG_PM_SLEEP;unused function warnings;Similar;0.6337949633598328
libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;Remove unused ACPI button procfs interface;unused;Similar;0.542879581451416
libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;Use device wakeup flags for handling ACPI wakeup devices;for handling ACPI wakeup devices;Similar;0.6145870685577393
libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;use standard device wakeup flags instead of the special ACPI flags for handling those devices;address this problem;Similar;0.5399999618530273
libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;Use GPE reference counting to support shared GPEs  ;the wakeup enable mask bits of GPEs are set as soon as the GPEs are enabled to wake up the system;Similar;0.5913989543914795
libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;it is sufficient to set/unset the wakeup mask bits for them during system sleep transitions;"this means that the reference counting of ""wakeup"" GPEs doesnt really make sense";Similar;0.676857054233551
libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;This will allow us to simplify the GPE handling code quite a bit;that change is too intrusive for 2.6.35;Similar;0.6676950454711914
libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;Update gfp.h and slab.h includes  ;prepare for breaking implicit slab.h inclusion from percpu.h;Similar;0.5681835412979126
libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;Prepare for this change by updating users of gfp and slab facilities;include those headers directly instead of assuming availability;Similar;0.6392408609390259
libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;the following script is used as the basis of conversion;As this conversion needs to touch a large number of source files;Similar;0.5768970251083374
libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;Similar;0.7383692264556885
libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;The script was run again  ;to make sure no file was left behind;Similar;0.5153027772903442
libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;The script was run on all .h files but without automatically editing them;sprinkling gfp.h and slab.h inclusions around .h files could easily lead to inclusion dependency hell;Similar;0.5086069107055664
libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;Similar;0.5243231654167175
libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;Introduce a new wake-up flag, always_enabled, for marking devices that should be permanently enabled to generate run-time events  ;devices that should be permanently enabled to generate run-time events;Similar;0.6540924310684204
libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;Introduce a reference counter for run-wake devices and a function that will initialize all of the run-time wake-up fields for given device.;-;Similar;0.6985135078430176
libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;Add an API to allow devices to indicate whether or not they want their devices GPE to be enabled for both runtime and wakeup events;to allow devices to indicate whether or not they want their devices GPE to be enabled;Similar;0.7097412347793579
libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;"This patch is to eliminate the above warning message
";Device PNP0C0D:00 failed to resume: error 1;Similar;0.5007671117782593
libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;Some drivers need to know when a lid event occurs and get the current status;-;Similar;0.5616349577903748
libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;whitespace fix  ;This does not change any actual console output;Similar;0.5854414701461792
libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;we could install either a fixed event handler or a notify handler, but the Linux/ACPI code now handles that for us;We previously needed that so we dont need to worry about it;Similar;0.760775625705719
libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;Remove button->device pointer;button;Similar;0.5377856492996216
libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;This patch adds temporaries to cache the acpi_device_hid(), acpi_device_name(), and acpi_device_class() pointers;so we dont have to clutter the code with so many uses of those interfaces;Similar;0.7624721527099609
libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;Better to oops and learn about a bug;than to silently cover it up;Similar;0.5271673202514648
libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;changes a bit of whitespace to follow Linux conventions;follow Linux conventions;Similar;0.7235475778579712
libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;use .notify method instead of installing handler directly  ;-;Similar;0.5119152069091797
libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;The presence of .notify() causes Linux/ACPI to manage event handlers and notify handlers on our behalf  ;so we dont have to install and remove them ourselves;Similar;0.6584650278091431
libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.687117338180542
libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;start using GPE from userspace;GPE is already disabled in interrupt context;Similar;0.5805144309997559
libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;Move all the component definitions for drivers to a single shared place, include/acpi/acpi_drivers.h  ;to have a single shared place;Similar;0.5636909008026123
libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.710014820098877
libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;Similar;0.6812954545021057
libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;Use proc_create()/proc_create_data() to make sure that ->proc_fops and ->data be setup;before gluing PDE to main tree;Similar;0.6791864633560181
libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;Add correct ->owner to proc_fops to fix reading/module unloading race  ;fix reading/module unloading race;Similar;0.6851810812950134
libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;Similar;0.5119063854217529
libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;Similar;0.5864869356155396
libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.6175309419631958
libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;fix acpi_driver.name usage;fix;Similar;0.6021289825439453
libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;"Make ""module name"" actually match the file name";cosmetic only;Similar;0.6371253132820129
libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;Fix indentation where Lindent did get confused  ;Lindent did get confused;Similar;0.5070871710777283
libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;remove unnecessary casts and variable initializations, clean up formatting;unnecessary;Similar;0.6046203374862671
libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.5714947581291199
libinput (1.7.0+) can fix the state of the lid switch for us: you need to set the udev property LIBINPUT_ATTR_LID_SWITCH_RELIABILITY to write_open;can fix the state of the lid switch for us;restore /proc/acpi/button/ (ala 2.6.12)  ;[ACPI];Similar;0.6974296569824219
assume the user will use the internal keyboard before this timeout expires;logind only checks the lid switch value after a timeout;"userspace requires to see ""close"" event after the system is resumed";so that it can determine whether the internal display should remain dark and the external display should be lit on;Similar;0.7159453630447388
assume the user will use the internal keyboard before this timeout expires;logind only checks the lid switch value after a timeout;Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;Similar;0.5841319561004639
assume the user will use the internal keyboard before this timeout expires;logind only checks the lid switch value after a timeout;Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);Similar;0.5032239556312561
assume the user will use the internal keyboard before this timeout expires;logind only checks the lid switch value after a timeout;This patch adds a mechanism to insert lid events as a compensation for the platform triggered ones to form a complete event switches  ;in order to make sure that the platform triggered events can always be reliably delivered to the userspace;Similar;0.5155996084213257
assume the user will use the internal keyboard before this timeout expires;logind only checks the lid switch value after a timeout;Use key event type to implement ACPI lid events;Another approach;Similar;0.5076691508293152
assume the user will use the internal keyboard before this timeout expires;logind only checks the lid switch value after a timeout;Remove pointer to old lid_sysfs on unbind;ACPI / button;Similar;0.5383709073066711
assume the user will use the internal keyboard before this timeout expires;logind only checks the lid switch value after a timeout;When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;Similar;0.527422308921814
assume the user will use the internal keyboard before this timeout expires;logind only checks the lid switch value after a timeout;this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;Similar;0.5752366781234741
assume the user will use the internal keyboard before this timeout expires;logind only checks the lid switch value after a timeout;"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;Similar;0.6099826097488403
assume the user will use the internal keyboard before this timeout expires;logind only checks the lid switch value after a timeout;Add ACPI Button event via netlink routine;-;Similar;0.6107486486434937
assume the user will use the internal keyboard before this timeout expires;logind only checks the lid switch value after a timeout;removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;Similar;0.5758540034294128
assume the user will use the internal keyboard before this timeout expires;logind only checks the lid switch value after a timeout;This caused ACPI shutdown regression on gentoo;VirtualBox;Similar;0.5428577661514282
assume the user will use the internal keyboard before this timeout expires;logind only checks the lid switch value after a timeout;add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;Similar;0.6276775598526001
assume the user will use the internal keyboard before this timeout expires;logind only checks the lid switch value after a timeout;fix button driver compile error when CONFIG_PM_SLEEP is undefined;CONFIG_PM_SLEEP is undefined;Similar;0.6327767372131348
assume the user will use the internal keyboard before this timeout expires;logind only checks the lid switch value after a timeout;Fix enabling button GPEs twice;Fix;Similar;0.5837198495864868
assume the user will use the internal keyboard before this timeout expires;logind only checks the lid switch value after a timeout;Button GPEs have been enabled in the acpi_wake_device_init() during boot;the button driver enables them for the second time;Similar;0.6392951011657715
assume the user will use the internal keyboard before this timeout expires;logind only checks the lid switch value after a timeout;remove the GPE enabling code from the button driver;to avoid the problem;Similar;0.5789600610733032
assume the user will use the internal keyboard before this timeout expires;logind only checks the lid switch value after a timeout;Fix unused function warnings for CONFIG_PM_SLEEP;unused function warnings;Similar;0.5573286414146423
assume the user will use the internal keyboard before this timeout expires;logind only checks the lid switch value after a timeout;add #ifdefs to prevent them from being built in that case  ;several suspend/resume functions in ACPI drivers are not used for CONFIG_PM_SLEEP unset;Similar;0.5302560329437256
assume the user will use the internal keyboard before this timeout expires;logind only checks the lid switch value after a timeout;Remove unused ACPI button procfs interface;unused;Similar;0.5361947417259216
assume the user will use the internal keyboard before this timeout expires;logind only checks the lid switch value after a timeout;it is sufficient to set/unset the wakeup mask bits for them during system sleep transitions;"this means that the reference counting of ""wakeup"" GPEs doesnt really make sense";Similar;0.5687812566757202
assume the user will use the internal keyboard before this timeout expires;logind only checks the lid switch value after a timeout;prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;Similar;0.5697925686836243
assume the user will use the internal keyboard before this timeout expires;logind only checks the lid switch value after a timeout;Introduce a new wake-up flag, always_enabled, for marking devices that should be permanently enabled to generate run-time events  ;devices that should be permanently enabled to generate run-time events;Similar;0.5824187994003296
assume the user will use the internal keyboard before this timeout expires;logind only checks the lid switch value after a timeout;Introduce a reference counter for run-wake devices and a function that will initialize all of the run-time wake-up fields for given device.;-;Similar;0.5274142026901245
assume the user will use the internal keyboard before this timeout expires;logind only checks the lid switch value after a timeout;Add an API to allow devices to indicate whether or not they want their devices GPE to be enabled for both runtime and wakeup events;to allow devices to indicate whether or not they want their devices GPE to be enabled;Similar;0.5878857970237732
assume the user will use the internal keyboard before this timeout expires;logind only checks the lid switch value after a timeout;Some drivers need to know when a lid event occurs and get the current status;-;Similar;0.5505250692367554
assume the user will use the internal keyboard before this timeout expires;logind only checks the lid switch value after a timeout;we could install either a fixed event handler or a notify handler, but the Linux/ACPI code now handles that for us;We previously needed that so we dont need to worry about it;Similar;0.5712143182754517
assume the user will use the internal keyboard before this timeout expires;logind only checks the lid switch value after a timeout;Remove button->device pointer;button;Similar;0.5630871057510376
assume the user will use the internal keyboard before this timeout expires;logind only checks the lid switch value after a timeout;We no longer need a pointer from struct acpi_button back to the struct acpi_device;no longer need;Similar;0.5742874145507812
assume the user will use the internal keyboard before this timeout expires;logind only checks the lid switch value after a timeout;changes a bit of whitespace to follow Linux conventions;follow Linux conventions;Similar;0.5158867239952087
assume the user will use the internal keyboard before this timeout expires;logind only checks the lid switch value after a timeout;convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.5949065685272217
assume the user will use the internal keyboard before this timeout expires;logind only checks the lid switch value after a timeout;start using GPE from userspace;GPE is already disabled in interrupt context;Similar;0.5376266241073608
assume the user will use the internal keyboard before this timeout expires;logind only checks the lid switch value after a timeout;"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.6520163416862488
assume the user will use the internal keyboard before this timeout expires;logind only checks the lid switch value after a timeout;Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;Similar;0.5803930759429932
assume the user will use the internal keyboard before this timeout expires;logind only checks the lid switch value after a timeout;Use proc_create()/proc_create_data() to make sure that ->proc_fops and ->data be setup;before gluing PDE to main tree;Similar;0.5282848477363586
assume the user will use the internal keyboard before this timeout expires;logind only checks the lid switch value after a timeout;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.5512518882751465
assume the user will use the internal keyboard before this timeout expires;logind only checks the lid switch value after a timeout;"Make ""module name"" actually match the file name";cosmetic only;Similar;0.541676938533783
assume the user will use the internal keyboard before this timeout expires;logind only checks the lid switch value after a timeout;restore /proc/acpi/button/ (ala 2.6.12)  ;[ACPI];Similar;0.5423732995986938
"userspace requires to see ""close"" event after the system is resumed";so that it can determine whether the internal display should remain dark and the external display should be lit on;Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;Similar;0.513211190700531
"userspace requires to see ""close"" event after the system is resumed";so that it can determine whether the internal display should remain dark and the external display should be lit on;Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);Similar;0.593447208404541
"userspace requires to see ""close"" event after the system is resumed";so that it can determine whether the internal display should remain dark and the external display should be lit on;This patch makes it deprecated;lid_init__state=open is more useful than this mode;Similar;0.5379917621612549
"userspace requires to see ""close"" event after the system is resumed";so that it can determine whether the internal display should remain dark and the external display should be lit on;have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;Similar;0.5754561424255371
"userspace requires to see ""close"" event after the system is resumed";so that it can determine whether the internal display should remain dark and the external display should be lit on;it should not send the complement switch event for the unreliable initial lid state notification;However this mechanism is not suitable for lid_init_state=open/method;Similar;0.5300955772399902
"userspace requires to see ""close"" event after the system is resumed";so that it can determine whether the internal display should remain dark and the external display should be lit on;Use key event type to implement ACPI lid events;Another approach;Similar;0.513023853302002
"userspace requires to see ""close"" event after the system is resumed";so that it can determine whether the internal display should remain dark and the external display should be lit on;Remove pointer to old lid_sysfs on unbind;ACPI / button;Similar;0.627752423286438
"userspace requires to see ""close"" event after the system is resumed";so that it can determine whether the internal display should remain dark and the external display should be lit on;When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;Similar;0.6414743661880493
"userspace requires to see ""close"" event after the system is resumed";so that it can determine whether the internal display should remain dark and the external display should be lit on;this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;Similar;0.685621440410614
"userspace requires to see ""close"" event after the system is resumed";so that it can determine whether the internal display should remain dark and the external display should be lit on;"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;Similar;0.5807920098304749
"userspace requires to see ""close"" event after the system is resumed";so that it can determine whether the internal display should remain dark and the external display should be lit on;removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;Similar;0.5949492454528809
"userspace requires to see ""close"" event after the system is resumed";so that it can determine whether the internal display should remain dark and the external display should be lit on;This caused ACPI shutdown regression on gentoo;VirtualBox;Similar;0.672295868396759
"userspace requires to see ""close"" event after the system is resumed";so that it can determine whether the internal display should remain dark and the external display should be lit on;add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;Similar;0.519777774810791
"userspace requires to see ""close"" event after the system is resumed";so that it can determine whether the internal display should remain dark and the external display should be lit on;fix button driver compile error when CONFIG_PM_SLEEP is undefined;CONFIG_PM_SLEEP is undefined;Similar;0.603732705116272
"userspace requires to see ""close"" event after the system is resumed";so that it can determine whether the internal display should remain dark and the external display should be lit on;compile error;CONFIG_PM_SLEEP is undefined;Similar;0.5276377201080322
"userspace requires to see ""close"" event after the system is resumed";so that it can determine whether the internal display should remain dark and the external display should be lit on;Fix enabling button GPEs twice;Fix;Similar;0.5406554937362671
"userspace requires to see ""close"" event after the system is resumed";so that it can determine whether the internal display should remain dark and the external display should be lit on;remove the GPE enabling code from the button driver;to avoid the problem;Similar;0.5512368083000183
"userspace requires to see ""close"" event after the system is resumed";so that it can determine whether the internal display should remain dark and the external display should be lit on;Clean up inclusions of ACPI header files;ACPI;Similar;0.5125280022621155
"userspace requires to see ""close"" event after the system is resumed";so that it can determine whether the internal display should remain dark and the external display should be lit on;Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;Similar;0.5668429136276245
"userspace requires to see ""close"" event after the system is resumed";so that it can determine whether the internal display should remain dark and the external display should be lit on;<acpi/acpi_bus.h> be included prior to <acpi/acpi_drivers.h>;so that the acpi_pci_root declarations the latter depends on are always there;Similar;0.5274867415428162
"userspace requires to see ""close"" event after the system is resumed";so that it can determine whether the internal display should remain dark and the external display should be lit on;Use the patch to replace the origin code;provide a better solution;Similar;0.5160921812057495
"userspace requires to see ""close"" event after the system is resumed";so that it can determine whether the internal display should remain dark and the external display should be lit on;Remove useless type argument of driver .remove() operation;useless;Similar;0.572413444519043
"userspace requires to see ""close"" event after the system is resumed";so that it can determine whether the internal display should remain dark and the external display should be lit on;drop the second ACPI driver .remove() argument  ;the second ACPI driver .remove() argument is in fact useless;Similar;0.579137921333313
"userspace requires to see ""close"" event after the system is resumed";so that it can determine whether the internal display should remain dark and the external display should be lit on;Fix unused function warnings for CONFIG_PM_SLEEP;unused function warnings;Similar;0.6120571494102478
"userspace requires to see ""close"" event after the system is resumed";so that it can determine whether the internal display should remain dark and the external display should be lit on;add #ifdefs to prevent them from being built in that case  ;several suspend/resume functions in ACPI drivers are not used for CONFIG_PM_SLEEP unset;Similar;0.6211040019989014
"userspace requires to see ""close"" event after the system is resumed";so that it can determine whether the internal display should remain dark and the external display should be lit on;remove unused procfs I/F;unused;Similar;0.6286106109619141
"userspace requires to see ""close"" event after the system is resumed";so that it can determine whether the internal display should remain dark and the external display should be lit on;Remove unused ACPI button procfs interface;unused;Similar;0.5484678745269775
"userspace requires to see ""close"" event after the system is resumed";so that it can determine whether the internal display should remain dark and the external display should be lit on;Avoid disabling wakeup unnecessarily on remove;-;Similar;0.5544449090957642
"userspace requires to see ""close"" event after the system is resumed";so that it can determine whether the internal display should remain dark and the external display should be lit on;it is sufficient to set/unset the wakeup mask bits for them during system sleep transitions;"this means that the reference counting of ""wakeup"" GPEs doesnt really make sense";Similar;0.5350942611694336
"userspace requires to see ""close"" event after the system is resumed";so that it can determine whether the internal display should remain dark and the external display should be lit on;the following script is used as the basis of conversion;As this conversion needs to touch a large number of source files;Similar;0.5276853442192078
"userspace requires to see ""close"" event after the system is resumed";so that it can determine whether the internal display should remain dark and the external display should be lit on;prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;Similar;0.5593098402023315
"userspace requires to see ""close"" event after the system is resumed";so that it can determine whether the internal display should remain dark and the external display should be lit on;The script was run again  ;to make sure no file was left behind;Similar;0.5462623834609985
"userspace requires to see ""close"" event after the system is resumed";so that it can determine whether the internal display should remain dark and the external display should be lit on;failures were fixed;Build tests were done on the following configurations;Similar;0.5589792728424072
"userspace requires to see ""close"" event after the system is resumed";so that it can determine whether the internal display should remain dark and the external display should be lit on;CONFIG_GCOV_KERNEL was turned off for all tests and a few more options had to be turned off depending on archs to make things build;my distributed build env didnt work with gcov compiles, like ipr on powerpc/64 which failed due to missing writeq;Similar;0.5529935359954834
"userspace requires to see ""close"" event after the system is resumed";so that it can determine whether the internal display should remain dark and the external display should be lit on;percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;Similar;0.5950270295143127
"userspace requires to see ""close"" event after the system is resumed";so that it can determine whether the internal display should remain dark and the external display should be lit on;Remove the old GPE type handling entirely  ;Gets rid of various quirks, like the implicit disabling with GPE type setting;Similar;0.6162928342819214
"userspace requires to see ""close"" event after the system is resumed";so that it can determine whether the internal display should remain dark and the external display should be lit on;complain the following warning message;"will

";Similar;0.5252875089645386
"userspace requires to see ""close"" event after the system is resumed";so that it can determine whether the internal display should remain dark and the external display should be lit on;"This patch is to eliminate the above warning message
";Device PNP0C0D:00 failed to resume: error 1;Similar;0.637861967086792
"userspace requires to see ""close"" event after the system is resumed";so that it can determine whether the internal display should remain dark and the external display should be lit on;Some drivers need to know when a lid event occurs and get the current status;-;Similar;0.6160197257995605
"userspace requires to see ""close"" event after the system is resumed";so that it can determine whether the internal display should remain dark and the external display should be lit on;whitespace fix  ;This does not change any actual console output;Similar;0.5422869324684143
"userspace requires to see ""close"" event after the system is resumed";so that it can determine whether the internal display should remain dark and the external display should be lit on;Remove button->device pointer;button;Similar;0.602084755897522
"userspace requires to see ""close"" event after the system is resumed";so that it can determine whether the internal display should remain dark and the external display should be lit on;We no longer need a pointer from struct acpi_button back to the struct acpi_device;no longer need;Similar;0.5633639097213745
"userspace requires to see ""close"" event after the system is resumed";so that it can determine whether the internal display should remain dark and the external display should be lit on;use .notify method instead of installing handler directly  ;-;Similar;0.5268136262893677
"userspace requires to see ""close"" event after the system is resumed";so that it can determine whether the internal display should remain dark and the external display should be lit on;convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.5381810665130615
"userspace requires to see ""close"" event after the system is resumed";so that it can determine whether the internal display should remain dark and the external display should be lit on;"proc_fops is declared as ""const""";should give some thoughts;Similar;0.5477555394172668
"userspace requires to see ""close"" event after the system is resumed";so that it can determine whether the internal display should remain dark and the external display should be lit on;"rmmoded directories will be empty and return ""."" and "".."" -- no harm";no harm;Similar;0.5102787017822266
"userspace requires to see ""close"" event after the system is resumed";so that it can determine whether the internal display should remain dark and the external display should be lit on;"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.6726367473602295
"userspace requires to see ""close"" event after the system is resumed";so that it can determine whether the internal display should remain dark and the external display should be lit on;Use proc_create()/proc_create_data() to make sure that ->proc_fops and ->data be setup;before gluing PDE to main tree;Similar;0.52081698179245
"userspace requires to see ""close"" event after the system is resumed";so that it can determine whether the internal display should remain dark and the external display should be lit on;get rid of input BIT* duplicate defines;duplicate;Similar;0.5622938871383667
"userspace requires to see ""close"" event after the system is resumed";so that it can determine whether the internal display should remain dark and the external display should be lit on;Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;Similar;0.5042213201522827
"userspace requires to see ""close"" event after the system is resumed";so that it can determine whether the internal display should remain dark and the external display should be lit on;Define the macro temporarily in a local manner;all those local definitions will be removed further in this patchset (to not break bisecting);Similar;0.5680723190307617
"userspace requires to see ""close"" event after the system is resumed";so that it can determine whether the internal display should remain dark and the external display should be lit on;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.65535968542099
"userspace requires to see ""close"" event after the system is resumed";so that it can determine whether the internal display should remain dark and the external display should be lit on;"Invoke with ; as leaving it off confuses Lindent  ";gcc doesnt care;Similar;0.567776083946228
"userspace requires to see ""close"" event after the system is resumed";so that it can determine whether the internal display should remain dark and the external display should be lit on;Fix indentation where Lindent did get confused  ;Lindent did get confused;Similar;0.5575668811798096
"userspace requires to see ""close"" event after the system is resumed";so that it can determine whether the internal display should remain dark and the external display should be lit on;remove unnecessary casts and variable initializations, clean up formatting;unnecessary;Similar;0.565963864326477
"userspace requires to see ""close"" event after the system is resumed";so that it can determine whether the internal display should remain dark and the external display should be lit on;Remove unneeded acpi_handle from driver;unneeded;Similar;0.5591175556182861
"userspace requires to see ""close"" event after the system is resumed";so that it can determine whether the internal display should remain dark and the external display should be lit on;"Create a separate ""historical"" git archive";about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated;Similar;0.53693687915802
Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);Similar;0.8576885461807251
Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;The ->sync hook allows all of the relevant event queues to be flushed;to prevent events from being missed due to race conditions;Similar;0.5080198645591736
Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;Similar;0.6816117167472839
Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;This patch adds a mechanism to insert lid events as a compensation for the platform triggered ones to form a complete event switches  ;in order to make sure that the platform triggered events can always be reliably delivered to the userspace;Similar;0.6138883829116821
Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;implements this mechanism  ;only;Similar;0.5585347414016724
Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;Use key event type to implement ACPI lid events;Another approach;Similar;0.7260043621063232
Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;Remove pointer to old lid_sysfs on unbind;ACPI / button;Similar;0.7201235294342041
Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;Similar;0.6194890737533569
Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;Correct a wrong macro usage;This patch simplies the code by merging some redundant code;Similar;0.5006831288337708
Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;Similar;0.5835916996002197
Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;Similar;0.6511304974555969
Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;Add ACPI Button event via netlink routine;-;Similar;0.8003367185592651
Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;Similar;0.6901692152023315
Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;This caused ACPI shutdown regression on gentoo;VirtualBox;Similar;0.5998408794403076
Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;Similar;0.803377628326416
Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;fix button driver compile error when CONFIG_PM_SLEEP is undefined;CONFIG_PM_SLEEP is undefined;Similar;0.5960670709609985
Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;compile error;CONFIG_PM_SLEEP is undefined;Similar;0.6369904279708862
Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;Fix enabling button GPEs twice;Fix;Similar;0.6469290256500244
Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;Button GPEs have been enabled in the acpi_wake_device_init() during boot;the button driver enables them for the second time;Similar;0.6796456575393677
Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;remove the GPE enabling code from the button driver;to avoid the problem;Similar;0.7193664312362671
Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;Clean up inclusions of ACPI header files;ACPI;Similar;0.6408774852752686
Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;Similar;0.5869235992431641
Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;<acpi/acpi_bus.h> be included prior to <acpi/acpi_drivers.h>;so that the acpi_pci_root declarations the latter depends on are always there;Similar;0.6251456141471863
Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;Use the patch to replace the origin code;provide a better solution;Similar;0.5872899293899536
Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;Remove useless type argument of driver .remove() operation;useless;Similar;0.560989499092102
Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;"The second argument of ACPI driver .remove() operation is only used by the ACPI processor driver
";the value passed to that driver through it is always available from the given struct acpi_device objects removal_type field;Similar;0.5349234342575073
Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;drop the second ACPI driver .remove() argument  ;the second ACPI driver .remove() argument is in fact useless;Similar;0.5895664095878601
Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;Fix unused function warnings for CONFIG_PM_SLEEP;unused function warnings;Similar;0.564557671546936
Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;remove unused procfs I/F;unused;Similar;0.6244778037071228
Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;Remove unused ACPI button procfs interface;unused;Similar;0.7131966352462769
Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;Use device wakeup flags for handling ACPI wakeup devices;for handling ACPI wakeup devices;Similar;0.6723908185958862
Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;use standard device wakeup flags instead of the special ACPI flags for handling those devices;address this problem;Similar;0.5804296731948853
Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;Use GPE reference counting to support shared GPEs  ;the wakeup enable mask bits of GPEs are set as soon as the GPEs are enabled to wake up the system;Similar;0.5672225952148438
Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;Update gfp.h and slab.h includes  ;prepare for breaking implicit slab.h inclusion from percpu.h;Similar;0.6193362474441528
Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;Prepare for this change by updating users of gfp and slab facilities;include those headers directly instead of assuming availability;Similar;0.5504130125045776
Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;the following script is used as the basis of conversion;As this conversion needs to touch a large number of source files;Similar;0.6141562461853027
Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;put the new include  ;its order conforms to its surrounding;Similar;0.549066960811615
Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;Similar;0.570980429649353
Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;The script was run again  ;to make sure no file was left behind;Similar;0.5665671825408936
Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;Similar;0.7369287014007568
Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;Introduce a new wake-up flag, always_enabled, for marking devices that should be permanently enabled to generate run-time events  ;devices that should be permanently enabled to generate run-time events;Similar;0.5388574004173279
Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;Introduce a reference counter for run-wake devices and a function that will initialize all of the run-time wake-up fields for given device.;-;Similar;0.5881704688072205
Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;Add an API to allow devices to indicate whether or not they want their devices GPE to be enabled for both runtime and wakeup events;to allow devices to indicate whether or not they want their devices GPE to be enabled;Similar;0.5768969655036926
Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;Remove the old GPE type handling entirely  ;Gets rid of various quirks, like the implicit disabling with GPE type setting;Similar;0.5103850364685059
Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;complain the following warning message;"will

";Similar;0.5001314282417297
Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;return -ENODEV;theres no lid device present;Similar;0.6606403589248657
Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;whitespace fix  ;This does not change any actual console output;Similar;0.6655358672142029
Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;we could install either a fixed event handler or a notify handler, but the Linux/ACPI code now handles that for us;We previously needed that so we dont need to worry about it;Similar;0.5163606405258179
Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;type: Power Button;I dont think theres anything meaningful user-space can do by knowing whether a button is a control method or a fixed hardware button;Similar;0.6885702610015869
Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;Remove button->device pointer;button;Similar;0.8198971152305603
Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;We no longer need a pointer from struct acpi_button back to the struct acpi_device;no longer need;Similar;0.5957642793655396
Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;This patch adds temporaries to cache the acpi_device_hid(), acpi_device_name(), and acpi_device_class() pointers;so we dont have to clutter the code with so many uses of those interfaces;Similar;0.629602313041687
Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;changes a bit of whitespace to follow Linux conventions;follow Linux conventions;Similar;0.6279070377349854
Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;use .notify method instead of installing handler directly  ;-;Similar;0.680673360824585
Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;The presence of .notify() causes Linux/ACPI to manage event handlers and notify handlers on our behalf  ;so we dont have to install and remove them ourselves;Similar;0.5106921195983887
Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.8631254434585571
Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;Setting ->owner as done currently (pde->owner = THIS_MODULE) is racy;as correctly noted at bug #12454;Similar;0.5382015705108643
Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;"proc_fops is declared as ""const""";should give some thoughts;Similar;0.7181359529495239
Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;start using GPE from userspace;GPE is already disabled in interrupt context;Similar;0.6617699861526489
Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;Move all the component definitions for drivers to a single shared place, include/acpi/acpi_drivers.h  ;to have a single shared place;Similar;0.6360427141189575
Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.7044510841369629
Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;Similar;0.7608129978179932
Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Similar;0.6958104968070984
Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;Use proc_create()/proc_create_data() to make sure that ->proc_fops and ->data be setup;before gluing PDE to main tree;Similar;0.5980420112609863
Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;get rid of input BIT* duplicate defines;duplicate;Similar;0.7487745881080627
Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;Similar;0.5908130407333374
Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;Define the macro temporarily in a local manner;all those local definitions will be removed further in this patchset (to not break bisecting);Similar;0.592981219291687
Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;Similar;0.7540959119796753
Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.7129726409912109
Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;fix acpi_driver.name usage;fix;Similar;0.7168827056884766
Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;"Make ""module name"" actually match the file name";cosmetic only;Similar;0.5675753355026245
Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;"Invoke with ; as leaving it off confuses Lindent  ";gcc doesnt care;Similar;0.5146398544311523
Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;Fix indentation where Lindent did get confused  ;Lindent did get confused;Similar;0.5878145694732666
Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;remove unnecessary casts and variable initializations, clean up formatting;unnecessary;Similar;0.5591878890991211
Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;Remove unneeded acpi_handle from driver;unneeded;Similar;0.6137926578521729
Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;Use acpi_devices handle instead of drivers  ;-;Similar;0.66530841588974
Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.74056077003479
Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;restore /proc/acpi/button/ (ala 2.6.12)  ;[ACPI];Similar;0.7627218961715698
Reversion of button.lid_init_state=method;doing so can enter a regression loop, but facilitates users to work the reported regressions around with;"Create a separate ""historical"" git archive";about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated;Similar;0.6074455976486206
Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);This patch makes it deprecated;lid_init__state=open is more useful than this mode;Similar;0.5305277109146118
Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;Similar;0.7806436419487
Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);This patch adds a mechanism to insert lid events as a compensation for the platform triggered ones to form a complete event switches  ;in order to make sure that the platform triggered events can always be reliably delivered to the userspace;Similar;0.5408236980438232
Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);it should not send the complement switch event for the unreliable initial lid state notification;However this mechanism is not suitable for lid_init_state=open/method;Similar;0.5324326753616333
Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);implements this mechanism  ;only;Similar;0.5272506475448608
Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);Use key event type to implement ACPI lid events;Another approach;Similar;0.6466189026832581
Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);Remove pointer to old lid_sysfs on unbind;ACPI / button;Similar;0.8137568235397339
Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;Similar;0.6890174746513367
Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);Correct a wrong macro usage;This patch simplies the code by merging some redundant code;Similar;0.5803613662719727
Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;Similar;0.6792237758636475
Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;Similar;0.5459138751029968
Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);Add ACPI Button event via netlink routine;-;Similar;0.6235586404800415
Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;Similar;0.6978975534439087
Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);This caused ACPI shutdown regression on gentoo;VirtualBox;Similar;0.7112103700637817
Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;Similar;0.646764874458313
Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);fix button driver compile error when CONFIG_PM_SLEEP is undefined;CONFIG_PM_SLEEP is undefined;Similar;0.5671206116676331
Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);compile error;CONFIG_PM_SLEEP is undefined;Similar;0.6800462007522583
Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);Fix enabling button GPEs twice;Fix;Similar;0.5009704828262329
Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);Button GPEs have been enabled in the acpi_wake_device_init() during boot;the button driver enables them for the second time;Similar;0.5238900184631348
Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);remove the GPE enabling code from the button driver;to avoid the problem;Similar;0.7286680936813354
Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);Clean up inclusions of ACPI header files;ACPI;Similar;0.6365675926208496
Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;Similar;0.6749470829963684
Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);<acpi/acpi_bus.h> be included prior to <acpi/acpi_drivers.h>;so that the acpi_pci_root declarations the latter depends on are always there;Similar;0.5598269701004028
Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);Use the patch to replace the origin code;provide a better solution;Similar;0.6324978470802307
Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);Remove useless type argument of driver .remove() operation;useless;Similar;0.7489304542541504
Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);"The second argument of ACPI driver .remove() operation is only used by the ACPI processor driver
";the value passed to that driver through it is always available from the given struct acpi_device objects removal_type field;Similar;0.6127421855926514
Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);drop the second ACPI driver .remove() argument  ;the second ACPI driver .remove() argument is in fact useless;Similar;0.7315726280212402
Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);Fix unused function warnings for CONFIG_PM_SLEEP;unused function warnings;Similar;0.5995132327079773
Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);add #ifdefs to prevent them from being built in that case  ;several suspend/resume functions in ACPI drivers are not used for CONFIG_PM_SLEEP unset;Similar;0.5410005450248718
Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);remove unused procfs I/F;unused;Similar;0.7512494325637817
Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);Remove unused ACPI button procfs interface;unused;Similar;0.7516347169876099
Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);Avoid disabling wakeup unnecessarily on remove;-;Similar;0.5788527727127075
Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);Use device wakeup flags for handling ACPI wakeup devices;for handling ACPI wakeup devices;Similar;0.5493176579475403
Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);use standard device wakeup flags instead of the special ACPI flags for handling those devices;address this problem;Similar;0.5311065912246704
Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);Update gfp.h and slab.h includes  ;prepare for breaking implicit slab.h inclusion from percpu.h;Similar;0.5694625377655029
Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);the following script is used as the basis of conversion;As this conversion needs to touch a large number of source files;Similar;0.5481931567192078
Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;Similar;0.5110753774642944
Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);failures were fixed;Build tests were done on the following configurations;Similar;0.513651430606842
Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;Similar;0.7135676145553589
Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);Remove the old GPE type handling entirely  ;Gets rid of various quirks, like the implicit disabling with GPE type setting;Similar;0.6948917508125305
Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);"This patch is to eliminate the above warning message
";Device PNP0C0D:00 failed to resume: error 1;Similar;0.5993279218673706
Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);return -ENODEV;theres no lid device present;Similar;0.6288560628890991
Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);whitespace fix  ;This does not change any actual console output;Similar;0.691384494304657
Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);Remove button->device pointer;button;Similar;0.8441688418388367
Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);We no longer need a pointer from struct acpi_button back to the struct acpi_device;no longer need;Similar;0.6454346776008606
Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);This patch adds temporaries to cache the acpi_device_hid(), acpi_device_name(), and acpi_device_class() pointers;so we dont have to clutter the code with so many uses of those interfaces;Similar;0.5841023921966553
Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);changes a bit of whitespace to follow Linux conventions;follow Linux conventions;Similar;0.5738173723220825
Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);use .notify method instead of installing handler directly  ;-;Similar;0.7204779386520386
Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.7194234132766724
Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);Setting ->owner as done currently (pde->owner = THIS_MODULE) is racy;as correctly noted at bug #12454;Similar;0.6176084280014038
Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);"proc_fops is declared as ""const""";should give some thoughts;Similar;0.7434484958648682
Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);start using GPE from userspace;GPE is already disabled in interrupt context;Similar;0.5825691223144531
Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);Move all the component definitions for drivers to a single shared place, include/acpi/acpi_drivers.h  ;to have a single shared place;Similar;0.5960420966148376
Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.6393499374389648
Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;Similar;0.6763495206832886
Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Similar;0.7348597049713135
Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);Use proc_create()/proc_create_data() to make sure that ->proc_fops and ->data be setup;before gluing PDE to main tree;Similar;0.5399825572967529
Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);get rid of input BIT* duplicate defines;duplicate;Similar;0.8236989974975586
Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;Similar;0.6923363208770752
Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);Define the macro temporarily in a local manner;all those local definitions will be removed further in this patchset (to not break bisecting);Similar;0.5711256265640259
Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;Similar;0.7063271999359131
Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.8221520185470581
Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);fix acpi_driver.name usage;fix;Similar;0.7421380281448364
Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);"Make ""module name"" actually match the file name";cosmetic only;Similar;0.5217684507369995
Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);"Invoke with ; as leaving it off confuses Lindent  ";gcc doesnt care;Similar;0.5816650986671448
Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);Fix indentation where Lindent did get confused  ;Lindent did get confused;Similar;0.5865379571914673
Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);remove unnecessary casts and variable initializations, clean up formatting;unnecessary;Similar;0.6448246240615845
Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);Remove unneeded acpi_handle from driver;unneeded;Similar;0.7166242599487305
Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);Use acpi_devices handle instead of drivers  ;-;Similar;0.7236954569816589
Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.7663503289222717
Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);restore /proc/acpi/button/ (ala 2.6.12)  ;[ACPI];Similar;0.5999466180801392
Remove lid_init_state=method mode;Fixes: ecb10b694b72 (ACPI / button: Remove lid_init_state=method mode);"Create a separate ""historical"" git archive";about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated;Similar;0.7079179883003235
The ->sync hook allows all of the relevant event queues to be flushed;to prevent events from being missed due to race conditions;This patch adds a mechanism to insert lid events as a compensation for the platform triggered ones to form a complete event switches  ;in order to make sure that the platform triggered events can always be reliably delivered to the userspace;Similar;0.6648550033569336
The ->sync hook allows all of the relevant event queues to be flushed;to prevent events from being missed due to race conditions;Add ACPI Button event via netlink routine;-;Similar;0.6367901563644409
The ->sync hook allows all of the relevant event queues to be flushed;to prevent events from being missed due to race conditions;add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;Similar;0.6248071193695068
The ->sync hook allows all of the relevant event queues to be flushed;to prevent events from being missed due to race conditions;Button GPEs have been enabled in the acpi_wake_device_init() during boot;the button driver enables them for the second time;Similar;0.5542443990707397
The ->sync hook allows all of the relevant event queues to be flushed;to prevent events from being missed due to race conditions;Clean up inclusions of ACPI header files;ACPI;Similar;0.5333131551742554
The ->sync hook allows all of the relevant event queues to be flushed;to prevent events from being missed due to race conditions;Use device wakeup flags for handling ACPI wakeup devices;for handling ACPI wakeup devices;Similar;0.5369515419006348
The ->sync hook allows all of the relevant event queues to be flushed;to prevent events from being missed due to race conditions;Use GPE reference counting to support shared GPEs  ;the wakeup enable mask bits of GPEs are set as soon as the GPEs are enabled to wake up the system;Similar;0.5648998022079468
The ->sync hook allows all of the relevant event queues to be flushed;to prevent events from being missed due to race conditions;it is sufficient to set/unset the wakeup mask bits for them during system sleep transitions;"this means that the reference counting of ""wakeup"" GPEs doesnt really make sense";Similar;0.5243349075317383
The ->sync hook allows all of the relevant event queues to be flushed;to prevent events from being missed due to race conditions;Prepare for this change by updating users of gfp and slab facilities;include those headers directly instead of assuming availability;Similar;0.6107372641563416
The ->sync hook allows all of the relevant event queues to be flushed;to prevent events from being missed due to race conditions;The script was run on all .h files but without automatically editing them;sprinkling gfp.h and slab.h inclusions around .h files could easily lead to inclusion dependency hell;Similar;0.5635656118392944
The ->sync hook allows all of the relevant event queues to be flushed;to prevent events from being missed due to race conditions;Introduce a new wake-up flag, always_enabled, for marking devices that should be permanently enabled to generate run-time events  ;devices that should be permanently enabled to generate run-time events;Similar;0.6257600784301758
The ->sync hook allows all of the relevant event queues to be flushed;to prevent events from being missed due to race conditions;Introduce a reference counter for run-wake devices and a function that will initialize all of the run-time wake-up fields for given device.;-;Similar;0.7092406749725342
The ->sync hook allows all of the relevant event queues to be flushed;to prevent events from being missed due to race conditions;Add an API to allow devices to indicate whether or not they want their devices GPE to be enabled for both runtime and wakeup events;to allow devices to indicate whether or not they want their devices GPE to be enabled;Similar;0.6706266403198242
The ->sync hook allows all of the relevant event queues to be flushed;to prevent events from being missed due to race conditions;we could install either a fixed event handler or a notify handler, but the Linux/ACPI code now handles that for us;We previously needed that so we dont need to worry about it;Similar;0.5442155599594116
The ->sync hook allows all of the relevant event queues to be flushed;to prevent events from being missed due to race conditions;This patch adds temporaries to cache the acpi_device_hid(), acpi_device_name(), and acpi_device_class() pointers;so we dont have to clutter the code with so many uses of those interfaces;Similar;0.5919539928436279
The ->sync hook allows all of the relevant event queues to be flushed;to prevent events from being missed due to race conditions;The presence of .notify() causes Linux/ACPI to manage event handlers and notify handlers on our behalf  ;so we dont have to install and remove them ourselves;Similar;0.6133349537849426
The ->sync hook allows all of the relevant event queues to be flushed;to prevent events from being missed due to race conditions;convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.5539946556091309
The ->sync hook allows all of the relevant event queues to be flushed;to prevent events from being missed due to race conditions;start using GPE from userspace;GPE is already disabled in interrupt context;Similar;0.5473905205726624
The ->sync hook allows all of the relevant event queues to be flushed;to prevent events from being missed due to race conditions;Move all the component definitions for drivers to a single shared place, include/acpi/acpi_drivers.h  ;to have a single shared place;Similar;0.7136667370796204
The ->sync hook allows all of the relevant event queues to be flushed;to prevent events from being missed due to race conditions;"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.5612576007843018
The ->sync hook allows all of the relevant event queues to be flushed;to prevent events from being missed due to race conditions;Use proc_create()/proc_create_data() to make sure that ->proc_fops and ->data be setup;before gluing PDE to main tree;Similar;0.525781512260437
The ->sync hook allows all of the relevant event queues to be flushed;to prevent events from being missed due to race conditions;restore /proc/acpi/button/ (ala 2.6.12)  ;[ACPI];Similar;0.5470101833343506
This patch makes it deprecated;lid_init__state=open is more useful than this mode;have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;Similar;0.7224289774894714
This patch makes it deprecated;lid_init__state=open is more useful than this mode;Remove pointer to old lid_sysfs on unbind;ACPI / button;Similar;0.5856034755706787
This patch makes it deprecated;lid_init__state=open is more useful than this mode;When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;Similar;0.6116735935211182
This patch makes it deprecated;lid_init__state=open is more useful than this mode;Correct a wrong macro usage;This patch simplies the code by merging some redundant code;Similar;0.7394160628318787
This patch makes it deprecated;lid_init__state=open is more useful than this mode;this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;Similar;0.6837866902351379
This patch makes it deprecated;lid_init__state=open is more useful than this mode;removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;Similar;0.5100468397140503
This patch makes it deprecated;lid_init__state=open is more useful than this mode;This caused ACPI shutdown regression on gentoo;VirtualBox;Similar;0.654391884803772
This patch makes it deprecated;lid_init__state=open is more useful than this mode;fix button driver compile error when CONFIG_PM_SLEEP is undefined;CONFIG_PM_SLEEP is undefined;Similar;0.5199673175811768
This patch makes it deprecated;lid_init__state=open is more useful than this mode;compile error;CONFIG_PM_SLEEP is undefined;Similar;0.5969948172569275
This patch makes it deprecated;lid_init__state=open is more useful than this mode;remove the GPE enabling code from the button driver;to avoid the problem;Similar;0.5751591920852661
This patch makes it deprecated;lid_init__state=open is more useful than this mode;Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;Similar;0.5965169668197632
This patch makes it deprecated;lid_init__state=open is more useful than this mode;Use the patch to replace the origin code;provide a better solution;Similar;0.6026009321212769
This patch makes it deprecated;lid_init__state=open is more useful than this mode;Remove useless type argument of driver .remove() operation;useless;Similar;0.684715747833252
This patch makes it deprecated;lid_init__state=open is more useful than this mode;drop the second ACPI driver .remove() argument  ;the second ACPI driver .remove() argument is in fact useless;Similar;0.5719237923622131
This patch makes it deprecated;lid_init__state=open is more useful than this mode;add #ifdefs to prevent them from being built in that case  ;several suspend/resume functions in ACPI drivers are not used for CONFIG_PM_SLEEP unset;Similar;0.5871492624282837
This patch makes it deprecated;lid_init__state=open is more useful than this mode;remove unused procfs I/F;unused;Similar;0.587577223777771
This patch makes it deprecated;lid_init__state=open is more useful than this mode;Remove unused ACPI button procfs interface;unused;Similar;0.5382661819458008
This patch makes it deprecated;lid_init__state=open is more useful than this mode;Avoid disabling wakeup unnecessarily on remove;-;Similar;0.6374753713607788
This patch makes it deprecated;lid_init__state=open is more useful than this mode;only the necessary includes are there;necessary;Similar;0.5121833682060242
This patch makes it deprecated;lid_init__state=open is more useful than this mode;description of the patch behaviour;an action or a change;Similar;0.5770689249038696
This patch makes it deprecated;lid_init__state=open is more useful than this mode;failures were fixed;Build tests were done on the following configurations;Similar;0.626874566078186
This patch makes it deprecated;lid_init__state=open is more useful than this mode;Remove the old GPE type handling entirely  ;Gets rid of various quirks, like the implicit disabling with GPE type setting;Similar;0.650685727596283
This patch makes it deprecated;lid_init__state=open is more useful than this mode;complain the following warning message;"will

";Similar;0.5480471849441528
This patch makes it deprecated;lid_init__state=open is more useful than this mode;"This patch is to eliminate the above warning message
";Device PNP0C0D:00 failed to resume: error 1;Similar;0.7695190906524658
This patch makes it deprecated;lid_init__state=open is more useful than this mode;whitespace fix  ;This does not change any actual console output;Similar;0.5965720415115356
This patch makes it deprecated;lid_init__state=open is more useful than this mode;Remove button->device pointer;button;Similar;0.6021894216537476
This patch makes it deprecated;lid_init__state=open is more useful than this mode;Setting ->owner as done currently (pde->owner = THIS_MODULE) is racy;as correctly noted at bug #12454;Similar;0.5942232608795166
This patch makes it deprecated;lid_init__state=open is more useful than this mode;dont want such modular code;definitely;Similar;0.6289710402488708
This patch makes it deprecated;lid_init__state=open is more useful than this mode;get rid of input BIT* duplicate defines;duplicate;Similar;0.5905466079711914
This patch makes it deprecated;lid_init__state=open is more useful than this mode;Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;Similar;0.5572655200958252
This patch makes it deprecated;lid_init__state=open is more useful than this mode;Define the macro temporarily in a local manner;all those local definitions will be removed further in this patchset (to not break bisecting);Similar;0.5073164701461792
This patch makes it deprecated;lid_init__state=open is more useful than this mode;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.595158576965332
This patch makes it deprecated;lid_init__state=open is more useful than this mode;"Invoke with ; as leaving it off confuses Lindent  ";gcc doesnt care;Similar;0.7011533975601196
This patch makes it deprecated;lid_init__state=open is more useful than this mode;Fix indentation where Lindent did get confused  ;Lindent did get confused;Similar;0.758044958114624
This patch makes it deprecated;lid_init__state=open is more useful than this mode;remove unnecessary casts and variable initializations, clean up formatting;unnecessary;Similar;0.5914649367332458
This patch makes it deprecated;lid_init__state=open is more useful than this mode;Remove unneeded acpi_handle from driver;unneeded;Similar;0.5865002274513245
This patch makes it deprecated;lid_init__state=open is more useful than this mode;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.5167615413665771
This patch makes it deprecated;lid_init__state=open is more useful than this mode;"Create a separate ""historical"" git archive";about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated;Similar;0.5103884935379028
have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;This patch adds a mechanism to insert lid events as a compensation for the platform triggered ones to form a complete event switches  ;in order to make sure that the platform triggered events can always be reliably delivered to the userspace;Similar;0.6094057559967041
have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;it should not send the complement switch event for the unreliable initial lid state notification;However this mechanism is not suitable for lid_init_state=open/method;Similar;0.5856053829193115
have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;Remove pointer to old lid_sysfs on unbind;ACPI / button;Similar;0.789133608341217
have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;Similar;0.7450356483459473
have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;Correct a wrong macro usage;This patch simplies the code by merging some redundant code;Similar;0.6621127128601074
have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;Similar;0.7888224720954895
have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;Similar;0.6122370362281799
have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;Add ACPI Button event via netlink routine;-;Similar;0.5241037607192993
have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;Similar;0.7414748668670654
have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;This caused ACPI shutdown regression on gentoo;VirtualBox;Similar;0.7636963129043579
have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;Similar;0.5749523043632507
have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;fix button driver compile error when CONFIG_PM_SLEEP is undefined;CONFIG_PM_SLEEP is undefined;Similar;0.709277331829071
have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;compile error;CONFIG_PM_SLEEP is undefined;Similar;0.5848872065544128
have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;Fix enabling button GPEs twice;Fix;Similar;0.5157990455627441
have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;Button GPEs have been enabled in the acpi_wake_device_init() during boot;the button driver enables them for the second time;Similar;0.525993824005127
have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;remove the GPE enabling code from the button driver;to avoid the problem;Similar;0.7954679131507874
have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;Clean up inclusions of ACPI header files;ACPI;Similar;0.5518382787704468
have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;Similar;0.7653685808181763
have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;<acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> should not be included directly from any files that are built for CONFIG_ACPI unset;because that generally leads to build warnings about undefined symbols in !CONFIG_ACPI builds;Similar;0.5067427158355713
have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;Use the patch to replace the origin code;provide a better solution;Similar;0.7478663921356201
have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;Remove useless type argument of driver .remove() operation;useless;Similar;0.7650246620178223
have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;"The second argument of ACPI driver .remove() operation is only used by the ACPI processor driver
";the value passed to that driver through it is always available from the given struct acpi_device objects removal_type field;Similar;0.6640225648880005
have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;drop the second ACPI driver .remove() argument  ;the second ACPI driver .remove() argument is in fact useless;Similar;0.7979851365089417
have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;Fix unused function warnings for CONFIG_PM_SLEEP;unused function warnings;Similar;0.6949043273925781
have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;add #ifdefs to prevent them from being built in that case  ;several suspend/resume functions in ACPI drivers are not used for CONFIG_PM_SLEEP unset;Similar;0.6465190649032593
have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;remove unused procfs I/F;unused;Similar;0.7229717969894409
have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;Remove unused ACPI button procfs interface;unused;Similar;0.7862820625305176
have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;Avoid disabling wakeup unnecessarily on remove;-;Similar;0.6078834533691406
have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;use standard device wakeup flags instead of the special ACPI flags for handling those devices;address this problem;Similar;0.5155259370803833
have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;Similar;0.5707804560661316
have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;description of the patch behaviour;an action or a change;Similar;0.5011487603187561
have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;CONFIG_GCOV_KERNEL was turned off for all tests and a few more options had to be turned off depending on archs to make things build;my distributed build env didnt work with gcov compiles, like ipr on powerpc/64 which failed due to missing writeq;Similar;0.6250582933425903
have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;Similar;0.6574576497077942
have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;Remove the old GPE type handling entirely  ;Gets rid of various quirks, like the implicit disabling with GPE type setting;Similar;0.6447383165359497
have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;"This patch is to eliminate the above warning message
";Device PNP0C0D:00 failed to resume: error 1;Similar;0.7130304574966431
have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;whitespace fix  ;This does not change any actual console output;Similar;0.6278640031814575
have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;we could install either a fixed event handler or a notify handler, but the Linux/ACPI code now handles that for us;We previously needed that so we dont need to worry about it;Similar;0.5202013254165649
have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;Remove button->device pointer;button;Similar;0.7534788250923157
have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;We no longer need a pointer from struct acpi_button back to the struct acpi_device;no longer need;Similar;0.6338657140731812
have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;This patch adds temporaries to cache the acpi_device_hid(), acpi_device_name(), and acpi_device_class() pointers;so we dont have to clutter the code with so many uses of those interfaces;Similar;0.6467481851577759
have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;Better to oops and learn about a bug;than to silently cover it up;Similar;0.5509529113769531
have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;changes a bit of whitespace to follow Linux conventions;follow Linux conventions;Similar;0.5899389982223511
have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;use .notify method instead of installing handler directly  ;-;Similar;0.6123181581497192
have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.6495469808578491
have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;Setting ->owner as done currently (pde->owner = THIS_MODULE) is racy;as correctly noted at bug #12454;Similar;0.5382813215255737
have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;"proc_fops is declared as ""const""";should give some thoughts;Similar;0.5555704832077026
have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;dont want such modular code;definitely;Similar;0.5359017848968506
have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.5562896728515625
have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;Similar;0.6087113618850708
have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Similar;0.6204434633255005
have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;get rid of input BIT* duplicate defines;duplicate;Similar;0.7392324805259705
have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;Similar;0.7492828369140625
have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;Define the macro temporarily in a local manner;all those local definitions will be removed further in this patchset (to not break bisecting);Similar;0.5261967182159424
have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;Similar;0.596933126449585
have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.8050592541694641
have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;fix acpi_driver.name usage;fix;Similar;0.6214473843574524
have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;"Invoke with ; as leaving it off confuses Lindent  ";gcc doesnt care;Similar;0.6325490474700928
have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;Fix indentation where Lindent did get confused  ;Lindent did get confused;Similar;0.6785929203033447
have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;remove unnecessary casts and variable initializations, clean up formatting;unnecessary;Similar;0.6202694773674011
have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;Remove unneeded acpi_handle from driver;unneeded;Similar;0.7397223711013794
have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;Use acpi_devices handle instead of drivers  ;-;Similar;0.6324338912963867
have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.6943582892417908
have a separate patch to make lid_init_state=method deprecated  ;lid_init_state=method is buggy;"Create a separate ""historical"" git archive";about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated;Similar;0.7679070234298706
This patch adds a mechanism to insert lid events as a compensation for the platform triggered ones to form a complete event switches  ;in order to make sure that the platform triggered events can always be reliably delivered to the userspace;Use key event type to implement ACPI lid events;Another approach;Similar;0.5670416355133057
This patch adds a mechanism to insert lid events as a compensation for the platform triggered ones to form a complete event switches  ;in order to make sure that the platform triggered events can always be reliably delivered to the userspace;Remove pointer to old lid_sysfs on unbind;ACPI / button;Similar;0.5173195600509644
This patch adds a mechanism to insert lid events as a compensation for the platform triggered ones to form a complete event switches  ;in order to make sure that the platform triggered events can always be reliably delivered to the userspace;When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;Similar;0.5542236566543579
This patch adds a mechanism to insert lid events as a compensation for the platform triggered ones to form a complete event switches  ;in order to make sure that the platform triggered events can always be reliably delivered to the userspace;this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;Similar;0.5581560134887695
This patch adds a mechanism to insert lid events as a compensation for the platform triggered ones to form a complete event switches  ;in order to make sure that the platform triggered events can always be reliably delivered to the userspace;"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;Similar;0.6348236799240112
This patch adds a mechanism to insert lid events as a compensation for the platform triggered ones to form a complete event switches  ;in order to make sure that the platform triggered events can always be reliably delivered to the userspace;Add ACPI Button event via netlink routine;-;Similar;0.7118964791297913
This patch adds a mechanism to insert lid events as a compensation for the platform triggered ones to form a complete event switches  ;in order to make sure that the platform triggered events can always be reliably delivered to the userspace;removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;Similar;0.5555859208106995
This patch adds a mechanism to insert lid events as a compensation for the platform triggered ones to form a complete event switches  ;in order to make sure that the platform triggered events can always be reliably delivered to the userspace;This caused ACPI shutdown regression on gentoo;VirtualBox;Similar;0.5219108462333679
This patch adds a mechanism to insert lid events as a compensation for the platform triggered ones to form a complete event switches  ;in order to make sure that the platform triggered events can always be reliably delivered to the userspace;add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;Similar;0.7264236211776733
This patch adds a mechanism to insert lid events as a compensation for the platform triggered ones to form a complete event switches  ;in order to make sure that the platform triggered events can always be reliably delivered to the userspace;fix button driver compile error when CONFIG_PM_SLEEP is undefined;CONFIG_PM_SLEEP is undefined;Similar;0.6500610113143921
This patch adds a mechanism to insert lid events as a compensation for the platform triggered ones to form a complete event switches  ;in order to make sure that the platform triggered events can always be reliably delivered to the userspace;Fix enabling button GPEs twice;Fix;Similar;0.5883468389511108
This patch adds a mechanism to insert lid events as a compensation for the platform triggered ones to form a complete event switches  ;in order to make sure that the platform triggered events can always be reliably delivered to the userspace;Button GPEs have been enabled in the acpi_wake_device_init() during boot;the button driver enables them for the second time;Similar;0.7159688472747803
This patch adds a mechanism to insert lid events as a compensation for the platform triggered ones to form a complete event switches  ;in order to make sure that the platform triggered events can always be reliably delivered to the userspace;remove the GPE enabling code from the button driver;to avoid the problem;Similar;0.577865481376648
This patch adds a mechanism to insert lid events as a compensation for the platform triggered ones to form a complete event switches  ;in order to make sure that the platform triggered events can always be reliably delivered to the userspace;Clean up inclusions of ACPI header files;ACPI;Similar;0.5870441794395447
This patch adds a mechanism to insert lid events as a compensation for the platform triggered ones to form a complete event switches  ;in order to make sure that the platform triggered events can always be reliably delivered to the userspace;Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;Similar;0.607606053352356
This patch adds a mechanism to insert lid events as a compensation for the platform triggered ones to form a complete event switches  ;in order to make sure that the platform triggered events can always be reliably delivered to the userspace;Use the patch to replace the origin code;provide a better solution;Similar;0.6665436625480652
This patch adds a mechanism to insert lid events as a compensation for the platform triggered ones to form a complete event switches  ;in order to make sure that the platform triggered events can always be reliably delivered to the userspace;Fix unused function warnings for CONFIG_PM_SLEEP;unused function warnings;Similar;0.5192266702651978
This patch adds a mechanism to insert lid events as a compensation for the platform triggered ones to form a complete event switches  ;in order to make sure that the platform triggered events can always be reliably delivered to the userspace;Use device wakeup flags for handling ACPI wakeup devices;for handling ACPI wakeup devices;Similar;0.5502305030822754
This patch adds a mechanism to insert lid events as a compensation for the platform triggered ones to form a complete event switches  ;in order to make sure that the platform triggered events can always be reliably delivered to the userspace;Use GPE reference counting to support shared GPEs  ;the wakeup enable mask bits of GPEs are set as soon as the GPEs are enabled to wake up the system;Similar;0.5454443693161011
This patch adds a mechanism to insert lid events as a compensation for the platform triggered ones to form a complete event switches  ;in order to make sure that the platform triggered events can always be reliably delivered to the userspace;it is sufficient to set/unset the wakeup mask bits for them during system sleep transitions;"this means that the reference counting of ""wakeup"" GPEs doesnt really make sense";Similar;0.6163824796676636
This patch adds a mechanism to insert lid events as a compensation for the platform triggered ones to form a complete event switches  ;in order to make sure that the platform triggered events can always be reliably delivered to the userspace;This will allow us to simplify the GPE handling code quite a bit;that change is too intrusive for 2.6.35;Similar;0.6043832302093506
This patch adds a mechanism to insert lid events as a compensation for the platform triggered ones to form a complete event switches  ;in order to make sure that the platform triggered events can always be reliably delivered to the userspace;Update gfp.h and slab.h includes  ;prepare for breaking implicit slab.h inclusion from percpu.h;Similar;0.5544409155845642
This patch adds a mechanism to insert lid events as a compensation for the platform triggered ones to form a complete event switches  ;in order to make sure that the platform triggered events can always be reliably delivered to the userspace;Prepare for this change by updating users of gfp and slab facilities;include those headers directly instead of assuming availability;Similar;0.6665958762168884
This patch adds a mechanism to insert lid events as a compensation for the platform triggered ones to form a complete event switches  ;in order to make sure that the platform triggered events can always be reliably delivered to the userspace;the following script is used as the basis of conversion;As this conversion needs to touch a large number of source files;Similar;0.5283397436141968
This patch adds a mechanism to insert lid events as a compensation for the platform triggered ones to form a complete event switches  ;in order to make sure that the platform triggered events can always be reliably delivered to the userspace;prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;Similar;0.6695423126220703
This patch adds a mechanism to insert lid events as a compensation for the platform triggered ones to form a complete event switches  ;in order to make sure that the platform triggered events can always be reliably delivered to the userspace;The script was run on all .h files but without automatically editing them;sprinkling gfp.h and slab.h inclusions around .h files could easily lead to inclusion dependency hell;Similar;0.5090541243553162
This patch adds a mechanism to insert lid events as a compensation for the platform triggered ones to form a complete event switches  ;in order to make sure that the platform triggered events can always be reliably delivered to the userspace;CONFIG_GCOV_KERNEL was turned off for all tests and a few more options had to be turned off depending on archs to make things build;my distributed build env didnt work with gcov compiles, like ipr on powerpc/64 which failed due to missing writeq;Similar;0.5288490056991577
This patch adds a mechanism to insert lid events as a compensation for the platform triggered ones to form a complete event switches  ;in order to make sure that the platform triggered events can always be reliably delivered to the userspace;Introduce a new wake-up flag, always_enabled, for marking devices that should be permanently enabled to generate run-time events  ;devices that should be permanently enabled to generate run-time events;Similar;0.7020834684371948
This patch adds a mechanism to insert lid events as a compensation for the platform triggered ones to form a complete event switches  ;in order to make sure that the platform triggered events can always be reliably delivered to the userspace;Introduce a reference counter for run-wake devices and a function that will initialize all of the run-time wake-up fields for given device.;-;Similar;0.689318835735321
This patch adds a mechanism to insert lid events as a compensation for the platform triggered ones to form a complete event switches  ;in order to make sure that the platform triggered events can always be reliably delivered to the userspace;Add an API to allow devices to indicate whether or not they want their devices GPE to be enabled for both runtime and wakeup events;to allow devices to indicate whether or not they want their devices GPE to be enabled;Similar;0.6793068051338196
This patch adds a mechanism to insert lid events as a compensation for the platform triggered ones to form a complete event switches  ;in order to make sure that the platform triggered events can always be reliably delivered to the userspace;"This patch is to eliminate the above warning message
";Device PNP0C0D:00 failed to resume: error 1;Similar;0.5105728507041931
This patch adds a mechanism to insert lid events as a compensation for the platform triggered ones to form a complete event switches  ;in order to make sure that the platform triggered events can always be reliably delivered to the userspace;Some drivers need to know when a lid event occurs and get the current status;-;Similar;0.5456734895706177
This patch adds a mechanism to insert lid events as a compensation for the platform triggered ones to form a complete event switches  ;in order to make sure that the platform triggered events can always be reliably delivered to the userspace;whitespace fix  ;This does not change any actual console output;Similar;0.5211197137832642
This patch adds a mechanism to insert lid events as a compensation for the platform triggered ones to form a complete event switches  ;in order to make sure that the platform triggered events can always be reliably delivered to the userspace;we could install either a fixed event handler or a notify handler, but the Linux/ACPI code now handles that for us;We previously needed that so we dont need to worry about it;Similar;0.716863214969635
This patch adds a mechanism to insert lid events as a compensation for the platform triggered ones to form a complete event switches  ;in order to make sure that the platform triggered events can always be reliably delivered to the userspace;Remove button->device pointer;button;Similar;0.5219815969467163
This patch adds a mechanism to insert lid events as a compensation for the platform triggered ones to form a complete event switches  ;in order to make sure that the platform triggered events can always be reliably delivered to the userspace;This patch adds temporaries to cache the acpi_device_hid(), acpi_device_name(), and acpi_device_class() pointers;so we dont have to clutter the code with so many uses of those interfaces;Similar;0.8234648704528809
This patch adds a mechanism to insert lid events as a compensation for the platform triggered ones to form a complete event switches  ;in order to make sure that the platform triggered events can always be reliably delivered to the userspace;Better to oops and learn about a bug;than to silently cover it up;Similar;0.5149887800216675
This patch adds a mechanism to insert lid events as a compensation for the platform triggered ones to form a complete event switches  ;in order to make sure that the platform triggered events can always be reliably delivered to the userspace;changes a bit of whitespace to follow Linux conventions;follow Linux conventions;Similar;0.6739507913589478
This patch adds a mechanism to insert lid events as a compensation for the platform triggered ones to form a complete event switches  ;in order to make sure that the platform triggered events can always be reliably delivered to the userspace;The presence of .notify() causes Linux/ACPI to manage event handlers and notify handlers on our behalf  ;so we dont have to install and remove them ourselves;Similar;0.6518646478652954
This patch adds a mechanism to insert lid events as a compensation for the platform triggered ones to form a complete event switches  ;in order to make sure that the platform triggered events can always be reliably delivered to the userspace;convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.6355743408203125
This patch adds a mechanism to insert lid events as a compensation for the platform triggered ones to form a complete event switches  ;in order to make sure that the platform triggered events can always be reliably delivered to the userspace;start using GPE from userspace;GPE is already disabled in interrupt context;Similar;0.5349110960960388
This patch adds a mechanism to insert lid events as a compensation for the platform triggered ones to form a complete event switches  ;in order to make sure that the platform triggered events can always be reliably delivered to the userspace;Move all the component definitions for drivers to a single shared place, include/acpi/acpi_drivers.h  ;to have a single shared place;Similar;0.6395023465156555
This patch adds a mechanism to insert lid events as a compensation for the platform triggered ones to form a complete event switches  ;in order to make sure that the platform triggered events can always be reliably delivered to the userspace;"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.6721063256263733
This patch adds a mechanism to insert lid events as a compensation for the platform triggered ones to form a complete event switches  ;in order to make sure that the platform triggered events can always be reliably delivered to the userspace;Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;Similar;0.558603048324585
This patch adds a mechanism to insert lid events as a compensation for the platform triggered ones to form a complete event switches  ;in order to make sure that the platform triggered events can always be reliably delivered to the userspace;Use proc_create()/proc_create_data() to make sure that ->proc_fops and ->data be setup;before gluing PDE to main tree;Similar;0.6182794570922852
This patch adds a mechanism to insert lid events as a compensation for the platform triggered ones to form a complete event switches  ;in order to make sure that the platform triggered events can always be reliably delivered to the userspace;Add correct ->owner to proc_fops to fix reading/module unloading race  ;fix reading/module unloading race;Similar;0.6546710133552551
This patch adds a mechanism to insert lid events as a compensation for the platform triggered ones to form a complete event switches  ;in order to make sure that the platform triggered events can always be reliably delivered to the userspace;Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;Similar;0.5606600046157837
This patch adds a mechanism to insert lid events as a compensation for the platform triggered ones to form a complete event switches  ;in order to make sure that the platform triggered events can always be reliably delivered to the userspace;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.6063241958618164
This patch adds a mechanism to insert lid events as a compensation for the platform triggered ones to form a complete event switches  ;in order to make sure that the platform triggered events can always be reliably delivered to the userspace;fix acpi_driver.name usage;fix;Similar;0.544875979423523
This patch adds a mechanism to insert lid events as a compensation for the platform triggered ones to form a complete event switches  ;in order to make sure that the platform triggered events can always be reliably delivered to the userspace;"Make ""module name"" actually match the file name";cosmetic only;Similar;0.5624909400939941
This patch adds a mechanism to insert lid events as a compensation for the platform triggered ones to form a complete event switches  ;in order to make sure that the platform triggered events can always be reliably delivered to the userspace;remove unnecessary casts and variable initializations, clean up formatting;unnecessary;Similar;0.5810714364051819
This patch adds a mechanism to insert lid events as a compensation for the platform triggered ones to form a complete event switches  ;in order to make sure that the platform triggered events can always be reliably delivered to the userspace;restore /proc/acpi/button/ (ala 2.6.12)  ;[ACPI];Similar;0.6127378344535828
it should not send the complement switch event for the unreliable initial lid state notification;However this mechanism is not suitable for lid_init_state=open/method;Remove pointer to old lid_sysfs on unbind;ACPI / button;Similar;0.5709455609321594
it should not send the complement switch event for the unreliable initial lid state notification;However this mechanism is not suitable for lid_init_state=open/method;When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;Similar;0.6157419681549072
it should not send the complement switch event for the unreliable initial lid state notification;However this mechanism is not suitable for lid_init_state=open/method;Correct a wrong macro usage;This patch simplies the code by merging some redundant code;Similar;0.5516093373298645
it should not send the complement switch event for the unreliable initial lid state notification;However this mechanism is not suitable for lid_init_state=open/method;this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;Similar;0.5825879573822021
it should not send the complement switch event for the unreliable initial lid state notification;However this mechanism is not suitable for lid_init_state=open/method;There is no need to carry potentially outdated Free Software Foundation mailing address in file headers;since the COPYING file includes it;Similar;0.5412023663520813
it should not send the complement switch event for the unreliable initial lid state notification;However this mechanism is not suitable for lid_init_state=open/method;"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;Similar;0.5563923120498657
it should not send the complement switch event for the unreliable initial lid state notification;However this mechanism is not suitable for lid_init_state=open/method;removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;Similar;0.5033468008041382
it should not send the complement switch event for the unreliable initial lid state notification;However this mechanism is not suitable for lid_init_state=open/method;This caused ACPI shutdown regression on gentoo;VirtualBox;Similar;0.5462276339530945
it should not send the complement switch event for the unreliable initial lid state notification;However this mechanism is not suitable for lid_init_state=open/method;fix button driver compile error when CONFIG_PM_SLEEP is undefined;CONFIG_PM_SLEEP is undefined;Similar;0.5330691337585449
it should not send the complement switch event for the unreliable initial lid state notification;However this mechanism is not suitable for lid_init_state=open/method;remove the GPE enabling code from the button driver;to avoid the problem;Similar;0.5511709451675415
it should not send the complement switch event for the unreliable initial lid state notification;However this mechanism is not suitable for lid_init_state=open/method;Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;Similar;0.5974904894828796
it should not send the complement switch event for the unreliable initial lid state notification;However this mechanism is not suitable for lid_init_state=open/method;<acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> should not be included directly from any files that are built for CONFIG_ACPI unset;because that generally leads to build warnings about undefined symbols in !CONFIG_ACPI builds;Similar;0.7525054812431335
it should not send the complement switch event for the unreliable initial lid state notification;However this mechanism is not suitable for lid_init_state=open/method;Remove useless type argument of driver .remove() operation;useless;Similar;0.6437654495239258
it should not send the complement switch event for the unreliable initial lid state notification;However this mechanism is not suitable for lid_init_state=open/method;drop the second ACPI driver .remove() argument  ;the second ACPI driver .remove() argument is in fact useless;Similar;0.5782845616340637
it should not send the complement switch event for the unreliable initial lid state notification;However this mechanism is not suitable for lid_init_state=open/method;Fix unused function warnings for CONFIG_PM_SLEEP;unused function warnings;Similar;0.5284197330474854
it should not send the complement switch event for the unreliable initial lid state notification;However this mechanism is not suitable for lid_init_state=open/method;add #ifdefs to prevent them from being built in that case  ;several suspend/resume functions in ACPI drivers are not used for CONFIG_PM_SLEEP unset;Similar;0.7464097142219543
it should not send the complement switch event for the unreliable initial lid state notification;However this mechanism is not suitable for lid_init_state=open/method;remove unused procfs I/F;unused;Similar;0.593120276927948
it should not send the complement switch event for the unreliable initial lid state notification;However this mechanism is not suitable for lid_init_state=open/method;Remove unused ACPI button procfs interface;unused;Similar;0.5696753263473511
it should not send the complement switch event for the unreliable initial lid state notification;However this mechanism is not suitable for lid_init_state=open/method;Avoid disabling wakeup unnecessarily on remove;-;Similar;0.7579399347305298
it should not send the complement switch event for the unreliable initial lid state notification;However this mechanism is not suitable for lid_init_state=open/method;use standard device wakeup flags instead of the special ACPI flags for handling those devices;address this problem;Similar;0.5540375709533691
it should not send the complement switch event for the unreliable initial lid state notification;However this mechanism is not suitable for lid_init_state=open/method;Remove the old GPE type handling entirely  ;Gets rid of various quirks, like the implicit disabling with GPE type setting;Similar;0.512974739074707
it should not send the complement switch event for the unreliable initial lid state notification;However this mechanism is not suitable for lid_init_state=open/method;complain the following warning message;"will

";Similar;0.5136995911598206
it should not send the complement switch event for the unreliable initial lid state notification;However this mechanism is not suitable for lid_init_state=open/method;"This patch is to eliminate the above warning message
";Device PNP0C0D:00 failed to resume: error 1;Similar;0.6065362691879272
it should not send the complement switch event for the unreliable initial lid state notification;However this mechanism is not suitable for lid_init_state=open/method;dont try to use a non-existent lid device;non-existent;Similar;0.7272381782531738
it should not send the complement switch event for the unreliable initial lid state notification;However this mechanism is not suitable for lid_init_state=open/method;Remove button->device pointer;button;Similar;0.5513430833816528
it should not send the complement switch event for the unreliable initial lid state notification;However this mechanism is not suitable for lid_init_state=open/method;We no longer need a pointer from struct acpi_button back to the struct acpi_device;no longer need;Similar;0.6638538837432861
it should not send the complement switch event for the unreliable initial lid state notification;However this mechanism is not suitable for lid_init_state=open/method;use .notify method instead of installing handler directly  ;-;Similar;0.5381534099578857
it should not send the complement switch event for the unreliable initial lid state notification;However this mechanism is not suitable for lid_init_state=open/method;dont want such modular code;definitely;Similar;0.7006100416183472
it should not send the complement switch event for the unreliable initial lid state notification;However this mechanism is not suitable for lid_init_state=open/method;use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Similar;0.5794069170951843
it should not send the complement switch event for the unreliable initial lid state notification;However this mechanism is not suitable for lid_init_state=open/method;get rid of input BIT* duplicate defines;duplicate;Similar;0.5656189918518066
it should not send the complement switch event for the unreliable initial lid state notification;However this mechanism is not suitable for lid_init_state=open/method;Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;Similar;0.6087384223937988
it should not send the complement switch event for the unreliable initial lid state notification;However this mechanism is not suitable for lid_init_state=open/method;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.5098925232887268
it should not send the complement switch event for the unreliable initial lid state notification;However this mechanism is not suitable for lid_init_state=open/method;"Invoke with ; as leaving it off confuses Lindent  ";gcc doesnt care;Similar;0.6209371089935303
it should not send the complement switch event for the unreliable initial lid state notification;However this mechanism is not suitable for lid_init_state=open/method;Fix indentation where Lindent did get confused  ;Lindent did get confused;Similar;0.5513654947280884
it should not send the complement switch event for the unreliable initial lid state notification;However this mechanism is not suitable for lid_init_state=open/method;Remove unneeded acpi_handle from driver;unneeded;Similar;0.6503977179527283
it should not send the complement switch event for the unreliable initial lid state notification;However this mechanism is not suitable for lid_init_state=open/method;Use acpi_devices handle instead of drivers  ;-;Similar;0.5504571199417114
it should not send the complement switch event for the unreliable initial lid state notification;However this mechanism is not suitable for lid_init_state=open/method;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.5500656962394714
it should not send the complement switch event for the unreliable initial lid state notification;However this mechanism is not suitable for lid_init_state=open/method;"Create a separate ""historical"" git archive";about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated;Similar;0.5620033144950867
implements this mechanism  ;only;Use key event type to implement ACPI lid events;Another approach;Similar;0.6964226961135864
implements this mechanism  ;only;While using KEY event type, there is no such problem;no such problem;Similar;0.5682364702224731
implements this mechanism  ;only;Add ACPI Button event via netlink routine;-;Similar;0.5356873869895935
implements this mechanism  ;only;compile error;CONFIG_PM_SLEEP is undefined;Similar;0.6906780004501343
implements this mechanism  ;only;<acpi/acpi_bus.h> be included prior to <acpi/acpi_drivers.h>;so that the acpi_pci_root declarations the latter depends on are always there;Similar;0.5221279859542847
implements this mechanism  ;only;Use device wakeup flags for handling ACPI wakeup devices;for handling ACPI wakeup devices;Similar;0.5524934530258179
implements this mechanism  ;only;Use GPE reference counting to support shared GPEs  ;the wakeup enable mask bits of GPEs are set as soon as the GPEs are enabled to wake up the system;Similar;0.6298287510871887
implements this mechanism  ;only;This will allow us to simplify the GPE handling code quite a bit;that change is too intrusive for 2.6.35;Similar;0.5764219760894775
implements this mechanism  ;only;Update gfp.h and slab.h includes  ;prepare for breaking implicit slab.h inclusion from percpu.h;Similar;0.5892937779426575
implements this mechanism  ;only;Prepare for this change by updating users of gfp and slab facilities;include those headers directly instead of assuming availability;Similar;0.5473889112472534
implements this mechanism  ;only;the following script is used as the basis of conversion;As this conversion needs to touch a large number of source files;Similar;0.7177227735519409
implements this mechanism  ;only;only the necessary includes are there;necessary;Similar;0.6383935213088989
implements this mechanism  ;only;put the new include  ;its order conforms to its surrounding;Similar;0.6816277503967285
implements this mechanism  ;only;The script was run again  ;to make sure no file was left behind;Similar;0.6343945264816284
implements this mechanism  ;only;description of the patch behaviour;an action or a change;Similar;0.7209920883178711
implements this mechanism  ;only;failures were fixed;Build tests were done on the following configurations;Similar;0.6675065755844116
implements this mechanism  ;only;percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;Similar;0.6603162288665771
implements this mechanism  ;only;Im fairly confident about the coverage of this conversion patch  ;Given the fact that I had only a couple of failures from tests on step 6;Similar;0.6192070245742798
implements this mechanism  ;only;Introduce a reference counter for run-wake devices and a function that will initialize all of the run-time wake-up fields for given device.;-;Similar;0.5715078115463257
implements this mechanism  ;only;Add an API to allow devices to indicate whether or not they want their devices GPE to be enabled for both runtime and wakeup events;to allow devices to indicate whether or not they want their devices GPE to be enabled;Similar;0.5027233958244324
implements this mechanism  ;only;complain the following warning message;"will

";Similar;0.6623811721801758
implements this mechanism  ;only;return -ENODEV;theres no lid device present;Similar;0.7781888842582703
implements this mechanism  ;only;whitespace fix  ;This does not change any actual console output;Similar;0.6716554760932922
implements this mechanism  ;only;type: Power Button;I dont think theres anything meaningful user-space can do by knowing whether a button is a control method or a fixed hardware button;Similar;0.5900739431381226
implements this mechanism  ;only;Remove button->device pointer;button;Similar;0.5395829677581787
implements this mechanism  ;only;use .notify method instead of installing handler directly  ;-;Similar;0.545271098613739
implements this mechanism  ;only;Setting ->owner as done currently (pde->owner = THIS_MODULE) is racy;as correctly noted at bug #12454;Similar;0.5590603351593018
implements this mechanism  ;only;"proc_fops is declared as ""const""";should give some thoughts;Similar;0.7074170112609863
implements this mechanism  ;only;start using GPE from userspace;GPE is already disabled in interrupt context;Similar;0.6396207809448242
implements this mechanism  ;only;"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.6294907331466675
implements this mechanism  ;only;use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Similar;0.5998418927192688
implements this mechanism  ;only;Use proc_create()/proc_create_data() to make sure that ->proc_fops and ->data be setup;before gluing PDE to main tree;Similar;0.6401317715644836
implements this mechanism  ;only;get rid of input BIT* duplicate defines;duplicate;Similar;0.5405853986740112
implements this mechanism  ;only;Define the macro temporarily in a local manner;all those local definitions will be removed further in this patchset (to not break bisecting);Similar;0.6639502048492432
implements this mechanism  ;only;"Make ""module name"" actually match the file name";cosmetic only;Similar;0.5972944498062134
implements this mechanism  ;only;Fix indentation where Lindent did get confused  ;Lindent did get confused;Similar;0.551264762878418
Use key event type to implement ACPI lid events;Another approach;Remove pointer to old lid_sysfs on unbind;ACPI / button;Similar;0.5479466915130615
Use key event type to implement ACPI lid events;Another approach;When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;Similar;0.5080606937408447
Use key event type to implement ACPI lid events;Another approach;"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;Similar;0.5235194563865662
Use key event type to implement ACPI lid events;Another approach;Add ACPI Button event via netlink routine;-;Similar;0.7175804376602173
Use key event type to implement ACPI lid events;Another approach;add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;Similar;0.6817981004714966
Use key event type to implement ACPI lid events;Another approach;compile error;CONFIG_PM_SLEEP is undefined;Similar;0.6461471319198608
Use key event type to implement ACPI lid events;Another approach;Button GPEs have been enabled in the acpi_wake_device_init() during boot;the button driver enables them for the second time;Similar;0.5297417044639587
Use key event type to implement ACPI lid events;Another approach;Clean up inclusions of ACPI header files;ACPI;Similar;0.598953127861023
Use key event type to implement ACPI lid events;Another approach;<acpi/acpi_bus.h> be included prior to <acpi/acpi_drivers.h>;so that the acpi_pci_root declarations the latter depends on are always there;Similar;0.6745717525482178
Use key event type to implement ACPI lid events;Another approach;Use the patch to replace the origin code;provide a better solution;Similar;0.5196322202682495
Use key event type to implement ACPI lid events;Another approach;Use device wakeup flags for handling ACPI wakeup devices;for handling ACPI wakeup devices;Similar;0.7265827655792236
Use key event type to implement ACPI lid events;Another approach;use standard device wakeup flags instead of the special ACPI flags for handling those devices;address this problem;Similar;0.5593540072441101
Use key event type to implement ACPI lid events;Another approach;Use GPE reference counting to support shared GPEs  ;the wakeup enable mask bits of GPEs are set as soon as the GPEs are enabled to wake up the system;Similar;0.7033495903015137
Use key event type to implement ACPI lid events;Another approach;Update gfp.h and slab.h includes  ;prepare for breaking implicit slab.h inclusion from percpu.h;Similar;0.6008766293525696
Use key event type to implement ACPI lid events;Another approach;Prepare for this change by updating users of gfp and slab facilities;include those headers directly instead of assuming availability;Similar;0.5545988082885742
Use key event type to implement ACPI lid events;Another approach;the following script is used as the basis of conversion;As this conversion needs to touch a large number of source files;Similar;0.6598304510116577
Use key event type to implement ACPI lid events;Another approach;only the necessary includes are there;necessary;Similar;0.5157437920570374
Use key event type to implement ACPI lid events;Another approach;put the new include  ;its order conforms to its surrounding;Similar;0.5537881851196289
Use key event type to implement ACPI lid events;Another approach;prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;Similar;0.5686867237091064
Use key event type to implement ACPI lid events;Another approach;The script was run again  ;to make sure no file was left behind;Similar;0.5046595335006714
Use key event type to implement ACPI lid events;Another approach;description of the patch behaviour;an action or a change;Similar;0.5958283543586731
Use key event type to implement ACPI lid events;Another approach;failures were fixed;Build tests were done on the following configurations;Similar;0.5299320220947266
Use key event type to implement ACPI lid events;Another approach;percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;Similar;0.599259078502655
Use key event type to implement ACPI lid events;Another approach;Introduce a reference counter for run-wake devices and a function that will initialize all of the run-time wake-up fields for given device.;-;Similar;0.6074947118759155
Use key event type to implement ACPI lid events;Another approach;Add an API to allow devices to indicate whether or not they want their devices GPE to be enabled for both runtime and wakeup events;to allow devices to indicate whether or not they want their devices GPE to be enabled;Similar;0.626610517501831
Use key event type to implement ACPI lid events;Another approach;complain the following warning message;"will

";Similar;0.60478675365448
Use key event type to implement ACPI lid events;Another approach;return -ENODEV;theres no lid device present;Similar;0.6544878482818604
Use key event type to implement ACPI lid events;Another approach;Some drivers need to know when a lid event occurs and get the current status;-;Similar;0.6059108972549438
Use key event type to implement ACPI lid events;Another approach;whitespace fix  ;This does not change any actual console output;Similar;0.5915336608886719
Use key event type to implement ACPI lid events;Another approach;type: Power Button;I dont think theres anything meaningful user-space can do by knowing whether a button is a control method or a fixed hardware button;Similar;0.6419239044189453
Use key event type to implement ACPI lid events;Another approach;Remove button->device pointer;button;Similar;0.5896551012992859
Use key event type to implement ACPI lid events;Another approach;This patch adds temporaries to cache the acpi_device_hid(), acpi_device_name(), and acpi_device_class() pointers;so we dont have to clutter the code with so many uses of those interfaces;Similar;0.5281095504760742
Use key event type to implement ACPI lid events;Another approach;changes a bit of whitespace to follow Linux conventions;follow Linux conventions;Similar;0.5250893831253052
Use key event type to implement ACPI lid events;Another approach;use .notify method instead of installing handler directly  ;-;Similar;0.6117745637893677
Use key event type to implement ACPI lid events;Another approach;The presence of .notify() causes Linux/ACPI to manage event handlers and notify handlers on our behalf  ;so we dont have to install and remove them ourselves;Similar;0.5517506003379822
Use key event type to implement ACPI lid events;Another approach;convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.6246893405914307
Use key event type to implement ACPI lid events;Another approach;Setting ->owner as done currently (pde->owner = THIS_MODULE) is racy;as correctly noted at bug #12454;Similar;0.5983781814575195
Use key event type to implement ACPI lid events;Another approach;"proc_fops is declared as ""const""";should give some thoughts;Similar;0.7205865979194641
Use key event type to implement ACPI lid events;Another approach;start using GPE from userspace;GPE is already disabled in interrupt context;Similar;0.6686351895332336
Use key event type to implement ACPI lid events;Another approach;Move all the component definitions for drivers to a single shared place, include/acpi/acpi_drivers.h  ;to have a single shared place;Similar;0.6026349067687988
Use key event type to implement ACPI lid events;Another approach;"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.6718868017196655
Use key event type to implement ACPI lid events;Another approach;Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;Similar;0.6174845695495605
Use key event type to implement ACPI lid events;Another approach;use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Similar;0.6481059789657593
Use key event type to implement ACPI lid events;Another approach;Use proc_create()/proc_create_data() to make sure that ->proc_fops and ->data be setup;before gluing PDE to main tree;Similar;0.6744390726089478
Use key event type to implement ACPI lid events;Another approach;get rid of input BIT* duplicate defines;duplicate;Similar;0.5855275392532349
Use key event type to implement ACPI lid events;Another approach;Define the macro temporarily in a local manner;all those local definitions will be removed further in this patchset (to not break bisecting);Similar;0.594122052192688
Use key event type to implement ACPI lid events;Another approach;Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;Similar;0.6564275622367859
Use key event type to implement ACPI lid events;Another approach;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.5542432069778442
Use key event type to implement ACPI lid events;Another approach;fix acpi_driver.name usage;fix;Similar;0.6278555989265442
Use key event type to implement ACPI lid events;Another approach;ls bus/acpi/drivers  ;Display the list of ACPI drivers.;Similar;0.5312352180480957
Use key event type to implement ACPI lid events;Another approach;"Make ""module name"" actually match the file name";cosmetic only;Similar;0.596878170967102
Use key event type to implement ACPI lid events;Another approach;"Invoke with ; as leaving it off confuses Lindent  ";gcc doesnt care;Similar;0.5088741183280945
Use key event type to implement ACPI lid events;Another approach;Fix indentation where Lindent did get confused  ;Lindent did get confused;Similar;0.5768066644668579
Use key event type to implement ACPI lid events;Another approach;Use acpi_devices handle instead of drivers  ;-;Similar;0.5841487646102905
Use key event type to implement ACPI lid events;Another approach;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.5580137968063354
Use key event type to implement ACPI lid events;Another approach;restore /proc/acpi/button/ (ala 2.6.12)  ;[ACPI];Similar;0.5536195039749146
Use key event type to implement ACPI lid events;Another approach;"Create a separate ""historical"" git archive";about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated;Similar;0.5279413461685181
While using KEY event type, there is no such problem;no such problem;There is no need to carry potentially outdated Free Software Foundation mailing address in file headers;since the COPYING file includes it;Similar;0.638698399066925
While using KEY event type, there is no such problem;no such problem;Avoid disabling wakeup unnecessarily on remove;-;Similar;0.5254954099655151
While using KEY event type, there is no such problem;no such problem;failures were fixed;Build tests were done on the following configurations;Similar;0.629341721534729
While using KEY event type, there is no such problem;no such problem;Im fairly confident about the coverage of this conversion patch  ;Given the fact that I had only a couple of failures from tests on step 6;Similar;0.7070978879928589
While using KEY event type, there is no such problem;no such problem;dont try to use a non-existent lid device;non-existent;Similar;0.5660997033119202
While using KEY event type, there is no such problem;no such problem;We no longer need a pointer from struct acpi_button back to the struct acpi_device;no longer need;Similar;0.5694612264633179
While using KEY event type, there is no such problem;no such problem;Setting ->owner as done currently (pde->owner = THIS_MODULE) is racy;as correctly noted at bug #12454;Similar;0.5282261371612549
While using KEY event type, there is no such problem;no such problem;leave ->owner as easy-manipulative field;somebody will forget to unpin previous/pin current module when switching ->owner;Similar;0.5867142677307129
While using KEY event type, there is no such problem;no such problem;"rmmoded directories will be empty and return ""."" and "".."" -- no harm";no harm;Similar;0.6071814298629761
While using KEY event type, there is no such problem;no such problem;use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Similar;0.5541712045669556
While using KEY event type, there is no such problem;no such problem;"Make ""module name"" actually match the file name";cosmetic only;Similar;0.5098583698272705
Remove pointer to old lid_sysfs on unbind;ACPI / button;When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;Similar;0.7541792988777161
Remove pointer to old lid_sysfs on unbind;ACPI / button;Correct a wrong macro usage;This patch simplies the code by merging some redundant code;Similar;0.6341103911399841
Remove pointer to old lid_sysfs on unbind;ACPI / button;this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;Similar;0.7535289525985718
Remove pointer to old lid_sysfs on unbind;ACPI / button;There is no need to carry potentially outdated Free Software Foundation mailing address in file headers;since the COPYING file includes it;Similar;0.5001109838485718
Remove pointer to old lid_sysfs on unbind;ACPI / button;"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;Similar;0.6601303219795227
Remove pointer to old lid_sysfs on unbind;ACPI / button;Add ACPI Button event via netlink routine;-;Similar;0.5416438579559326
Remove pointer to old lid_sysfs on unbind;ACPI / button;removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;Similar;0.7459197044372559
Remove pointer to old lid_sysfs on unbind;ACPI / button;This caused ACPI shutdown regression on gentoo;VirtualBox;Similar;0.748766303062439
Remove pointer to old lid_sysfs on unbind;ACPI / button;add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;Similar;0.6057073473930359
Remove pointer to old lid_sysfs on unbind;ACPI / button;fix button driver compile error when CONFIG_PM_SLEEP is undefined;CONFIG_PM_SLEEP is undefined;Similar;0.6468794345855713
Remove pointer to old lid_sysfs on unbind;ACPI / button;compile error;CONFIG_PM_SLEEP is undefined;Similar;0.6374623775482178
Remove pointer to old lid_sysfs on unbind;ACPI / button;Fix enabling button GPEs twice;Fix;Similar;0.5315444469451904
Remove pointer to old lid_sysfs on unbind;ACPI / button;Button GPEs have been enabled in the acpi_wake_device_init() during boot;the button driver enables them for the second time;Similar;0.5372910499572754
Remove pointer to old lid_sysfs on unbind;ACPI / button;remove the GPE enabling code from the button driver;to avoid the problem;Similar;0.762540876865387
Remove pointer to old lid_sysfs on unbind;ACPI / button;Clean up inclusions of ACPI header files;ACPI;Similar;0.6828248500823975
Remove pointer to old lid_sysfs on unbind;ACPI / button;Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;Similar;0.7372735142707825
Remove pointer to old lid_sysfs on unbind;ACPI / button;<acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> should not be included directly from any files that are built for CONFIG_ACPI unset;because that generally leads to build warnings about undefined symbols in !CONFIG_ACPI builds;Similar;0.5346416234970093
Remove pointer to old lid_sysfs on unbind;ACPI / button;<acpi/acpi_bus.h> be included prior to <acpi/acpi_drivers.h>;so that the acpi_pci_root declarations the latter depends on are always there;Similar;0.5524537563323975
Remove pointer to old lid_sysfs on unbind;ACPI / button;Use the patch to replace the origin code;provide a better solution;Similar;0.6875622272491455
Remove pointer to old lid_sysfs on unbind;ACPI / button;Remove useless type argument of driver .remove() operation;useless;Similar;0.754274845123291
Remove pointer to old lid_sysfs on unbind;ACPI / button;"The second argument of ACPI driver .remove() operation is only used by the ACPI processor driver
";the value passed to that driver through it is always available from the given struct acpi_device objects removal_type field;Similar;0.5805824995040894
Remove pointer to old lid_sysfs on unbind;ACPI / button;drop the second ACPI driver .remove() argument  ;the second ACPI driver .remove() argument is in fact useless;Similar;0.7219594120979309
Remove pointer to old lid_sysfs on unbind;ACPI / button;Fix unused function warnings for CONFIG_PM_SLEEP;unused function warnings;Similar;0.7122970223426819
Remove pointer to old lid_sysfs on unbind;ACPI / button;add #ifdefs to prevent them from being built in that case  ;several suspend/resume functions in ACPI drivers are not used for CONFIG_PM_SLEEP unset;Similar;0.6076360940933228
Remove pointer to old lid_sysfs on unbind;ACPI / button;remove unused procfs I/F;unused;Similar;0.7961618900299072
Remove pointer to old lid_sysfs on unbind;ACPI / button;Remove unused ACPI button procfs interface;unused;Similar;0.8188803195953369
Remove pointer to old lid_sysfs on unbind;ACPI / button;Avoid disabling wakeup unnecessarily on remove;-;Similar;0.593020498752594
Remove pointer to old lid_sysfs on unbind;ACPI / button;Use device wakeup flags for handling ACPI wakeup devices;for handling ACPI wakeup devices;Similar;0.5097616910934448
Remove pointer to old lid_sysfs on unbind;ACPI / button;use standard device wakeup flags instead of the special ACPI flags for handling those devices;address this problem;Similar;0.570404589176178
Remove pointer to old lid_sysfs on unbind;ACPI / button;Update gfp.h and slab.h includes  ;prepare for breaking implicit slab.h inclusion from percpu.h;Similar;0.5483238697052002
Remove pointer to old lid_sysfs on unbind;ACPI / button;the following script is used as the basis of conversion;As this conversion needs to touch a large number of source files;Similar;0.5319100618362427
Remove pointer to old lid_sysfs on unbind;ACPI / button;prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;Similar;0.6032214760780334
Remove pointer to old lid_sysfs on unbind;ACPI / button;failures were fixed;Build tests were done on the following configurations;Similar;0.5299663543701172
Remove pointer to old lid_sysfs on unbind;ACPI / button;CONFIG_GCOV_KERNEL was turned off for all tests and a few more options had to be turned off depending on archs to make things build;my distributed build env didnt work with gcov compiles, like ipr on powerpc/64 which failed due to missing writeq;Similar;0.527259349822998
Remove pointer to old lid_sysfs on unbind;ACPI / button;percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;Similar;0.6723198890686035
Remove pointer to old lid_sysfs on unbind;ACPI / button;Remove the old GPE type handling entirely  ;Gets rid of various quirks, like the implicit disabling with GPE type setting;Similar;0.7570127248764038
Remove pointer to old lid_sysfs on unbind;ACPI / button;"This patch is to eliminate the above warning message
";Device PNP0C0D:00 failed to resume: error 1;Similar;0.6830635070800781
Remove pointer to old lid_sysfs on unbind;ACPI / button;dont try to use a non-existent lid device;non-existent;Similar;0.5324859619140625
Remove pointer to old lid_sysfs on unbind;ACPI / button;return -ENODEV;theres no lid device present;Similar;0.5376187562942505
Remove pointer to old lid_sysfs on unbind;ACPI / button;whitespace fix  ;This does not change any actual console output;Similar;0.61201012134552
Remove pointer to old lid_sysfs on unbind;ACPI / button;Remove button->device pointer;button;Similar;0.8067060708999634
Remove pointer to old lid_sysfs on unbind;ACPI / button;We no longer need a pointer from struct acpi_button back to the struct acpi_device;no longer need;Similar;0.7258498668670654
Remove pointer to old lid_sysfs on unbind;ACPI / button;This patch adds temporaries to cache the acpi_device_hid(), acpi_device_name(), and acpi_device_class() pointers;so we dont have to clutter the code with so many uses of those interfaces;Similar;0.5826915502548218
Remove pointer to old lid_sysfs on unbind;ACPI / button;changes a bit of whitespace to follow Linux conventions;follow Linux conventions;Similar;0.566811203956604
Remove pointer to old lid_sysfs on unbind;ACPI / button;use .notify method instead of installing handler directly  ;-;Similar;0.6634504795074463
Remove pointer to old lid_sysfs on unbind;ACPI / button;convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.7090468406677246
Remove pointer to old lid_sysfs on unbind;ACPI / button;Setting ->owner as done currently (pde->owner = THIS_MODULE) is racy;as correctly noted at bug #12454;Similar;0.592052698135376
Remove pointer to old lid_sysfs on unbind;ACPI / button;"proc_fops is declared as ""const""";should give some thoughts;Similar;0.6399991512298584
Remove pointer to old lid_sysfs on unbind;ACPI / button;"rmmoded directories will be empty and return ""."" and "".."" -- no harm";no harm;Similar;0.5708504915237427
Remove pointer to old lid_sysfs on unbind;ACPI / button;Move all the component definitions for drivers to a single shared place, include/acpi/acpi_drivers.h  ;to have a single shared place;Similar;0.5150917172431946
Remove pointer to old lid_sysfs on unbind;ACPI / button;"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.6457989811897278
Remove pointer to old lid_sysfs on unbind;ACPI / button;Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;Similar;0.6824191808700562
Remove pointer to old lid_sysfs on unbind;ACPI / button;use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Similar;0.6794955730438232
Remove pointer to old lid_sysfs on unbind;ACPI / button;get rid of input BIT* duplicate defines;duplicate;Similar;0.8220229744911194
Remove pointer to old lid_sysfs on unbind;ACPI / button;Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;Similar;0.767910361289978
Remove pointer to old lid_sysfs on unbind;ACPI / button;Define the macro temporarily in a local manner;all those local definitions will be removed further in this patchset (to not break bisecting);Similar;0.5397136211395264
Remove pointer to old lid_sysfs on unbind;ACPI / button;Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;Similar;0.6666437983512878
Remove pointer to old lid_sysfs on unbind;ACPI / button;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.8260646462440491
Remove pointer to old lid_sysfs on unbind;ACPI / button;fix acpi_driver.name usage;fix;Similar;0.6852249503135681
Remove pointer to old lid_sysfs on unbind;ACPI / button;"Make ""module name"" actually match the file name";cosmetic only;Similar;0.5344508290290833
Remove pointer to old lid_sysfs on unbind;ACPI / button;"Invoke with ; as leaving it off confuses Lindent  ";gcc doesnt care;Similar;0.6213439702987671
Remove pointer to old lid_sysfs on unbind;ACPI / button;Fix indentation where Lindent did get confused  ;Lindent did get confused;Similar;0.6125909090042114
Remove pointer to old lid_sysfs on unbind;ACPI / button;remove unnecessary casts and variable initializations, clean up formatting;unnecessary;Similar;0.6447882652282715
Remove pointer to old lid_sysfs on unbind;ACPI / button;Remove unneeded acpi_handle from driver;unneeded;Similar;0.7817996740341187
Remove pointer to old lid_sysfs on unbind;ACPI / button;Use acpi_devices handle instead of drivers  ;-;Similar;0.688711941242218
Remove pointer to old lid_sysfs on unbind;ACPI / button;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.7785235643386841
Remove pointer to old lid_sysfs on unbind;ACPI / button;restore /proc/acpi/button/ (ala 2.6.12)  ;[ACPI];Similar;0.5683283805847168
Remove pointer to old lid_sysfs on unbind;ACPI / button;"Create a separate ""historical"" git archive";about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated;Similar;0.6920422315597534
When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;Correct a wrong macro usage;This patch simplies the code by merging some redundant code;Similar;0.6400085687637329
When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;Similar;0.7636191844940186
When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;Similar;0.6894020438194275
When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;Add ACPI Button event via netlink routine;-;Similar;0.518548309803009
When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;Similar;0.7637492418289185
When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;This caused ACPI shutdown regression on gentoo;VirtualBox;Similar;0.7688636779785156
When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;Similar;0.5847839713096619
When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;fix button driver compile error when CONFIG_PM_SLEEP is undefined;CONFIG_PM_SLEEP is undefined;Similar;0.7249644994735718
When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;compile error;CONFIG_PM_SLEEP is undefined;Similar;0.6269280910491943
When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;Fix enabling button GPEs twice;Fix;Similar;0.5290353298187256
When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;Button GPEs have been enabled in the acpi_wake_device_init() during boot;the button driver enables them for the second time;Similar;0.5606940984725952
When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;remove the GPE enabling code from the button driver;to avoid the problem;Similar;0.7681359052658081
When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;Clean up inclusions of ACPI header files;ACPI;Similar;0.5627607107162476
When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;Similar;0.7572310566902161
When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;<acpi/acpi_bus.h> be included prior to <acpi/acpi_drivers.h>;so that the acpi_pci_root declarations the latter depends on are always there;Similar;0.5431911945343018
When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;Use the patch to replace the origin code;provide a better solution;Similar;0.6606475114822388
When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;Remove useless type argument of driver .remove() operation;useless;Similar;0.7671604752540588
When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;"The second argument of ACPI driver .remove() operation is only used by the ACPI processor driver
";the value passed to that driver through it is always available from the given struct acpi_device objects removal_type field;Similar;0.5933619737625122
When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;drop the second ACPI driver .remove() argument  ;the second ACPI driver .remove() argument is in fact useless;Similar;0.765356183052063
When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;Fix unused function warnings for CONFIG_PM_SLEEP;unused function warnings;Similar;0.6614562273025513
When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;add #ifdefs to prevent them from being built in that case  ;several suspend/resume functions in ACPI drivers are not used for CONFIG_PM_SLEEP unset;Similar;0.6491968035697937
When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;remove unused procfs I/F;unused;Similar;0.7266213893890381
When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;Remove unused ACPI button procfs interface;unused;Similar;0.7434309124946594
When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;Avoid disabling wakeup unnecessarily on remove;-;Similar;0.5800914168357849
When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;use standard device wakeup flags instead of the special ACPI flags for handling those devices;address this problem;Similar;0.5446204543113708
When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;Similar;0.6339352130889893
When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;The script was run again  ;to make sure no file was left behind;Similar;0.5053691864013672
When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;failures were fixed;Build tests were done on the following configurations;Similar;0.5479578971862793
When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;CONFIG_GCOV_KERNEL was turned off for all tests and a few more options had to be turned off depending on archs to make things build;my distributed build env didnt work with gcov compiles, like ipr on powerpc/64 which failed due to missing writeq;Similar;0.5592939853668213
When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;Similar;0.6673242449760437
When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;Remove the old GPE type handling entirely  ;Gets rid of various quirks, like the implicit disabling with GPE type setting;Similar;0.6553702354431152
When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;complain the following warning message;"will

";Similar;0.513690173625946
When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;"This patch is to eliminate the above warning message
";Device PNP0C0D:00 failed to resume: error 1;Similar;0.6935495734214783
When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;Some drivers need to know when a lid event occurs and get the current status;-;Similar;0.5838626623153687
When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;whitespace fix  ;This does not change any actual console output;Similar;0.5698822736740112
When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;we could install either a fixed event handler or a notify handler, but the Linux/ACPI code now handles that for us;We previously needed that so we dont need to worry about it;Similar;0.5930896997451782
When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;Remove button->device pointer;button;Similar;0.6821509599685669
When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;We no longer need a pointer from struct acpi_button back to the struct acpi_device;no longer need;Similar;0.662604808807373
When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;This patch adds temporaries to cache the acpi_device_hid(), acpi_device_name(), and acpi_device_class() pointers;so we dont have to clutter the code with so many uses of those interfaces;Similar;0.5479816198348999
When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;changes a bit of whitespace to follow Linux conventions;follow Linux conventions;Similar;0.5701884627342224
When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;use .notify method instead of installing handler directly  ;-;Similar;0.6369999051094055
When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;The presence of .notify() causes Linux/ACPI to manage event handlers and notify handlers on our behalf  ;so we dont have to install and remove them ourselves;Similar;0.5262410640716553
When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.6581442356109619
When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;Setting ->owner as done currently (pde->owner = THIS_MODULE) is racy;as correctly noted at bug #12454;Similar;0.5225985646247864
When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;"proc_fops is declared as ""const""";should give some thoughts;Similar;0.5712299346923828
When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;Move all the component definitions for drivers to a single shared place, include/acpi/acpi_drivers.h  ;to have a single shared place;Similar;0.543423056602478
When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.5702989101409912
When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;Similar;0.5530334711074829
When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Similar;0.5728922486305237
When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;get rid of input BIT* duplicate defines;duplicate;Similar;0.7041480541229248
When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;Similar;0.6587426662445068
When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;Define the macro temporarily in a local manner;all those local definitions will be removed further in this patchset (to not break bisecting);Similar;0.5546204447746277
When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;Similar;0.6232260465621948
When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.7689186334609985
When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;fix acpi_driver.name usage;fix;Similar;0.6364488005638123
When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;ls bus/acpi/drivers  ;Display the list of ACPI drivers.;Similar;0.5353783369064331
When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;"Invoke with ; as leaving it off confuses Lindent  ";gcc doesnt care;Similar;0.6669631004333496
When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;Fix indentation where Lindent did get confused  ;Lindent did get confused;Similar;0.6894065141677856
When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;remove unnecessary casts and variable initializations, clean up formatting;unnecessary;Similar;0.6009389162063599
When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;Remove unneeded acpi_handle from driver;unneeded;Similar;0.8310418128967285
When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;Use acpi_devices handle instead of drivers  ;-;Similar;0.6556236147880554
When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.6970821022987366
When we removed the procfs dir on error or if the driver is unbound;the two variables acpi_lid_dir and acpi_button_dir were not reset;"Create a separate ""historical"" git archive";about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated;Similar;0.6338791847229004
Correct a wrong macro usage;This patch simplies the code by merging some redundant code;this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;Similar;0.565014660358429
Correct a wrong macro usage;This patch simplies the code by merging some redundant code;removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;Similar;0.5073244571685791
Correct a wrong macro usage;This patch simplies the code by merging some redundant code;This caused ACPI shutdown regression on gentoo;VirtualBox;Similar;0.5671522617340088
Correct a wrong macro usage;This patch simplies the code by merging some redundant code;fix button driver compile error when CONFIG_PM_SLEEP is undefined;CONFIG_PM_SLEEP is undefined;Similar;0.5740152597427368
Correct a wrong macro usage;This patch simplies the code by merging some redundant code;compile error;CONFIG_PM_SLEEP is undefined;Similar;0.7694511413574219
Correct a wrong macro usage;This patch simplies the code by merging some redundant code;remove the GPE enabling code from the button driver;to avoid the problem;Similar;0.6101062297821045
Correct a wrong macro usage;This patch simplies the code by merging some redundant code;Clean up inclusions of ACPI header files;ACPI;Similar;0.5025995373725891
Correct a wrong macro usage;This patch simplies the code by merging some redundant code;Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;Similar;0.5541144609451294
Correct a wrong macro usage;This patch simplies the code by merging some redundant code;Use the patch to replace the origin code;provide a better solution;Similar;0.6335757970809937
Correct a wrong macro usage;This patch simplies the code by merging some redundant code;Remove useless type argument of driver .remove() operation;useless;Similar;0.6913658380508423
Correct a wrong macro usage;This patch simplies the code by merging some redundant code;drop the second ACPI driver .remove() argument  ;the second ACPI driver .remove() argument is in fact useless;Similar;0.5475493669509888
Correct a wrong macro usage;This patch simplies the code by merging some redundant code;add #ifdefs to prevent them from being built in that case  ;several suspend/resume functions in ACPI drivers are not used for CONFIG_PM_SLEEP unset;Similar;0.5830926895141602
Correct a wrong macro usage;This patch simplies the code by merging some redundant code;remove unused procfs I/F;unused;Similar;0.5885690450668335
Correct a wrong macro usage;This patch simplies the code by merging some redundant code;Remove unused ACPI button procfs interface;unused;Similar;0.5841366052627563
Correct a wrong macro usage;This patch simplies the code by merging some redundant code;Avoid disabling wakeup unnecessarily on remove;-;Similar;0.6212084293365479
Correct a wrong macro usage;This patch simplies the code by merging some redundant code;prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;Similar;0.5793047547340393
Correct a wrong macro usage;This patch simplies the code by merging some redundant code;description of the patch behaviour;an action or a change;Similar;0.5659580230712891
Correct a wrong macro usage;This patch simplies the code by merging some redundant code;failures were fixed;Build tests were done on the following configurations;Similar;0.6588495373725891
Correct a wrong macro usage;This patch simplies the code by merging some redundant code;percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;Similar;0.506719708442688
Correct a wrong macro usage;This patch simplies the code by merging some redundant code;Remove the old GPE type handling entirely  ;Gets rid of various quirks, like the implicit disabling with GPE type setting;Similar;0.5377218723297119
Correct a wrong macro usage;This patch simplies the code by merging some redundant code;complain the following warning message;"will

";Similar;0.6189643144607544
Correct a wrong macro usage;This patch simplies the code by merging some redundant code;"This patch is to eliminate the above warning message
";Device PNP0C0D:00 failed to resume: error 1;Similar;0.6687141060829163
Correct a wrong macro usage;This patch simplies the code by merging some redundant code;whitespace fix  ;This does not change any actual console output;Similar;0.6649971008300781
Correct a wrong macro usage;This patch simplies the code by merging some redundant code;Remove button->device pointer;button;Similar;0.6828838586807251
Correct a wrong macro usage;This patch simplies the code by merging some redundant code;Setting ->owner as done currently (pde->owner = THIS_MODULE) is racy;as correctly noted at bug #12454;Similar;0.6287460327148438
Correct a wrong macro usage;This patch simplies the code by merging some redundant code;"proc_fops is declared as ""const""";should give some thoughts;Similar;0.5860621929168701
Correct a wrong macro usage;This patch simplies the code by merging some redundant code;dont want such modular code;definitely;Similar;0.6412934064865112
Correct a wrong macro usage;This patch simplies the code by merging some redundant code;Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;Similar;0.5033017992973328
Correct a wrong macro usage;This patch simplies the code by merging some redundant code;use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Similar;0.5499429106712341
Correct a wrong macro usage;This patch simplies the code by merging some redundant code;get rid of input BIT* duplicate defines;duplicate;Similar;0.6464531421661377
Correct a wrong macro usage;This patch simplies the code by merging some redundant code;Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;Similar;0.5854378938674927
Correct a wrong macro usage;This patch simplies the code by merging some redundant code;Define the macro temporarily in a local manner;all those local definitions will be removed further in this patchset (to not break bisecting);Similar;0.5348185300827026
Correct a wrong macro usage;This patch simplies the code by merging some redundant code;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.5753833055496216
Correct a wrong macro usage;This patch simplies the code by merging some redundant code;fix acpi_driver.name usage;fix;Similar;0.5412997603416443
Correct a wrong macro usage;This patch simplies the code by merging some redundant code;"Invoke with ; as leaving it off confuses Lindent  ";gcc doesnt care;Similar;0.6414122581481934
Correct a wrong macro usage;This patch simplies the code by merging some redundant code;Fix indentation where Lindent did get confused  ;Lindent did get confused;Similar;0.7303206920623779
Correct a wrong macro usage;This patch simplies the code by merging some redundant code;remove unnecessary casts and variable initializations, clean up formatting;unnecessary;Similar;0.5425958633422852
Correct a wrong macro usage;This patch simplies the code by merging some redundant code;Remove unneeded acpi_handle from driver;unneeded;Similar;0.6212121248245239
Correct a wrong macro usage;This patch simplies the code by merging some redundant code;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.6162573099136353
Correct a wrong macro usage;This patch simplies the code by merging some redundant code;"Create a separate ""historical"" git archive";about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated;Similar;0.5468454957008362
this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;There is no need to carry potentially outdated Free Software Foundation mailing address in file headers;since the COPYING file includes it;Similar;0.5394657850265503
this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;Similar;0.7025110721588135
this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;Similar;0.8032214045524597
this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;This caused ACPI shutdown regression on gentoo;VirtualBox;Similar;0.8214467167854309
this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;Similar;0.5511761903762817
this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;fix button driver compile error when CONFIG_PM_SLEEP is undefined;CONFIG_PM_SLEEP is undefined;Similar;0.7128108739852905
this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;compile error;CONFIG_PM_SLEEP is undefined;Similar;0.5225213766098022
this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;Button GPEs have been enabled in the acpi_wake_device_init() during boot;the button driver enables them for the second time;Similar;0.5378878116607666
this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;remove the GPE enabling code from the button driver;to avoid the problem;Similar;0.7842373847961426
this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;Clean up inclusions of ACPI header files;ACPI;Similar;0.5722124576568604
this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;Similar;0.7506119012832642
this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;<acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> should not be included directly from any files that are built for CONFIG_ACPI unset;because that generally leads to build warnings about undefined symbols in !CONFIG_ACPI builds;Similar;0.5098769664764404
this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;Use the patch to replace the origin code;provide a better solution;Similar;0.6883180141448975
this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;Remove useless type argument of driver .remove() operation;useless;Similar;0.7523406744003296
this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;"The second argument of ACPI driver .remove() operation is only used by the ACPI processor driver
";the value passed to that driver through it is always available from the given struct acpi_device objects removal_type field;Similar;0.6309167146682739
this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;drop the second ACPI driver .remove() argument  ;the second ACPI driver .remove() argument is in fact useless;Similar;0.7811661958694458
this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;Fix unused function warnings for CONFIG_PM_SLEEP;unused function warnings;Similar;0.7313073873519897
this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;add #ifdefs to prevent them from being built in that case  ;several suspend/resume functions in ACPI drivers are not used for CONFIG_PM_SLEEP unset;Similar;0.6414518356323242
this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;remove unused procfs I/F;unused;Similar;0.7207738161087036
this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;Remove unused ACPI button procfs interface;unused;Similar;0.8025480508804321
this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;Avoid disabling wakeup unnecessarily on remove;-;Similar;0.6000931262969971
this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;use standard device wakeup flags instead of the special ACPI flags for handling those devices;address this problem;Similar;0.5335898995399475
this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;Similar;0.5586873888969421
this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;Most gfp.h inclusion directives were ignored  ;stuff from gfp.h was usually wildly available and often used in preprocessor macros;Similar;0.5269132852554321
this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;CONFIG_GCOV_KERNEL was turned off for all tests and a few more options had to be turned off depending on archs to make things build;my distributed build env didnt work with gcov compiles, like ipr on powerpc/64 which failed due to missing writeq;Similar;0.6673346757888794
this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;Similar;0.6236364841461182
this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;Remove the old GPE type handling entirely  ;Gets rid of various quirks, like the implicit disabling with GPE type setting;Similar;0.6810799837112427
this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;"This patch is to eliminate the above warning message
";Device PNP0C0D:00 failed to resume: error 1;Similar;0.7319077253341675
this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;dont try to use a non-existent lid device;non-existent;Similar;0.5019693374633789
this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;whitespace fix  ;This does not change any actual console output;Similar;0.5971606373786926
this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;we could install either a fixed event handler or a notify handler, but the Linux/ACPI code now handles that for us;We previously needed that so we dont need to worry about it;Similar;0.5741251111030579
this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;Remove button->device pointer;button;Similar;0.7058936357498169
this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;We no longer need a pointer from struct acpi_button back to the struct acpi_device;no longer need;Similar;0.7532873749732971
this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;This patch adds temporaries to cache the acpi_device_hid(), acpi_device_name(), and acpi_device_class() pointers;so we dont have to clutter the code with so many uses of those interfaces;Similar;0.5485644340515137
this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;changes a bit of whitespace to follow Linux conventions;follow Linux conventions;Similar;0.5917247533798218
this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;use .notify method instead of installing handler directly  ;-;Similar;0.6363047361373901
this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.6295380592346191
this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;"rmmoded directories will be empty and return ""."" and "".."" -- no harm";no harm;Similar;0.5359536409378052
this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.5670282244682312
this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;Similar;0.5027272701263428
this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Similar;0.5788311958312988
this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;get rid of input BIT* duplicate defines;duplicate;Similar;0.6967236995697021
this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;Similar;0.7125170230865479
this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;Define the macro temporarily in a local manner;all those local definitions will be removed further in this patchset (to not break bisecting);Similar;0.5657646656036377
this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;Similar;0.5140254497528076
this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.7644624710083008
this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;fix acpi_driver.name usage;fix;Similar;0.5576633214950562
this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;"Invoke with ; as leaving it off confuses Lindent  ";gcc doesnt care;Similar;0.5845954418182373
this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;Fix indentation where Lindent did get confused  ;Lindent did get confused;Similar;0.6226576566696167
this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;remove unnecessary casts and variable initializations, clean up formatting;unnecessary;Similar;0.6461382508277893
this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;Remove unneeded acpi_handle from driver;unneeded;Similar;0.7719581127166748
this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;Use acpi_devices handle instead of drivers  ;-;Similar;0.636040210723877
this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.6559930443763733
this patch stops sending the initial lid state to the userspace;to avoid sending the wrong lid state to the userspace to trigger such kind of wrong suspending;"Create a separate ""historical"" git archive";about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated;Similar;0.5889760851860046
There is no need to carry potentially outdated Free Software Foundation mailing address in file headers;since the COPYING file includes it;Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;Similar;0.5213642120361328
There is no need to carry potentially outdated Free Software Foundation mailing address in file headers;since the COPYING file includes it;<acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> should not be included directly from any files that are built for CONFIG_ACPI unset;because that generally leads to build warnings about undefined symbols in !CONFIG_ACPI builds;Similar;0.6905338168144226
There is no need to carry potentially outdated Free Software Foundation mailing address in file headers;since the COPYING file includes it;Remove useless type argument of driver .remove() operation;useless;Similar;0.5069158673286438
There is no need to carry potentially outdated Free Software Foundation mailing address in file headers;since the COPYING file includes it;remove unused procfs I/F;unused;Similar;0.5204790830612183
There is no need to carry potentially outdated Free Software Foundation mailing address in file headers;since the COPYING file includes it;Remove unused ACPI button procfs interface;unused;Similar;0.5686793923377991
There is no need to carry potentially outdated Free Software Foundation mailing address in file headers;since the COPYING file includes it;use standard device wakeup flags instead of the special ACPI flags for handling those devices;address this problem;Similar;0.5303744077682495
There is no need to carry potentially outdated Free Software Foundation mailing address in file headers;since the COPYING file includes it;The script was run on all .h files but without automatically editing them;sprinkling gfp.h and slab.h inclusions around .h files could easily lead to inclusion dependency hell;Similar;0.5925064086914062
There is no need to carry potentially outdated Free Software Foundation mailing address in file headers;since the COPYING file includes it;Remove the old GPE type handling entirely  ;Gets rid of various quirks, like the implicit disabling with GPE type setting;Similar;0.5082906484603882
There is no need to carry potentially outdated Free Software Foundation mailing address in file headers;since the COPYING file includes it;dont try to use a non-existent lid device;non-existent;Similar;0.6558021306991577
There is no need to carry potentially outdated Free Software Foundation mailing address in file headers;since the COPYING file includes it;We no longer need a pointer from struct acpi_button back to the struct acpi_device;no longer need;Similar;0.7530897855758667
There is no need to carry potentially outdated Free Software Foundation mailing address in file headers;since the COPYING file includes it;"rmmoded directories will be empty and return ""."" and "".."" -- no harm";no harm;Similar;0.6906991004943848
There is no need to carry potentially outdated Free Software Foundation mailing address in file headers;since the COPYING file includes it;use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Similar;0.5531226992607117
There is no need to carry potentially outdated Free Software Foundation mailing address in file headers;since the COPYING file includes it;Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;Similar;0.5974559783935547
There is no need to carry potentially outdated Free Software Foundation mailing address in file headers;since the COPYING file includes it;Remove unneeded acpi_handle from driver;unneeded;Similar;0.5452480316162109
There is no need to carry potentially outdated Free Software Foundation mailing address in file headers;since the COPYING file includes it;Use acpi_devices handle instead of drivers  ;-;Similar;0.5367156863212585
"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;Add ACPI Button event via netlink routine;-;Similar;0.6672627925872803
"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;Similar;0.7435388565063477
"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;This caused ACPI shutdown regression on gentoo;VirtualBox;Similar;0.6630786657333374
"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;Similar;0.7002651691436768
"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;fix button driver compile error when CONFIG_PM_SLEEP is undefined;CONFIG_PM_SLEEP is undefined;Similar;0.7231919169425964
"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;Fix enabling button GPEs twice;Fix;Similar;0.6072102785110474
"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;Button GPEs have been enabled in the acpi_wake_device_init() during boot;the button driver enables them for the second time;Similar;0.673762857913971
"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;remove the GPE enabling code from the button driver;to avoid the problem;Similar;0.7200367450714111
"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;Clean up inclusions of ACPI header files;ACPI;Similar;0.5993528366088867
"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;Similar;0.6603386402130127
"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;Use the patch to replace the origin code;provide a better solution;Similar;0.526090145111084
"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;Remove useless type argument of driver .remove() operation;useless;Similar;0.5389961004257202
"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;"The second argument of ACPI driver .remove() operation is only used by the ACPI processor driver
";the value passed to that driver through it is always available from the given struct acpi_device objects removal_type field;Similar;0.5545116662979126
"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;drop the second ACPI driver .remove() argument  ;the second ACPI driver .remove() argument is in fact useless;Similar;0.5930699706077576
"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;Fix unused function warnings for CONFIG_PM_SLEEP;unused function warnings;Similar;0.6840940713882446
"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;add #ifdefs to prevent them from being built in that case  ;several suspend/resume functions in ACPI drivers are not used for CONFIG_PM_SLEEP unset;Similar;0.5745226144790649
"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;remove unused procfs I/F;unused;Similar;0.5770100355148315
"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;Remove unused ACPI button procfs interface;unused;Similar;0.7455426454544067
"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;Use device wakeup flags for handling ACPI wakeup devices;for handling ACPI wakeup devices;Similar;0.6304547190666199
"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;use standard device wakeup flags instead of the special ACPI flags for handling those devices;address this problem;Similar;0.676823079586029
"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;it is sufficient to set/unset the wakeup mask bits for them during system sleep transitions;"this means that the reference counting of ""wakeup"" GPEs doesnt really make sense";Similar;0.5639557838439941
"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;Similar;0.6129676103591919
"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;The script was run on all .h files but without automatically editing them;sprinkling gfp.h and slab.h inclusions around .h files could easily lead to inclusion dependency hell;Similar;0.5556018948554993
"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;CONFIG_GCOV_KERNEL was turned off for all tests and a few more options had to be turned off depending on archs to make things build;my distributed build env didnt work with gcov compiles, like ipr on powerpc/64 which failed due to missing writeq;Similar;0.6418217420578003
"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;Similar;0.5792043209075928
"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;Introduce a new wake-up flag, always_enabled, for marking devices that should be permanently enabled to generate run-time events  ;devices that should be permanently enabled to generate run-time events;Similar;0.5892748832702637
"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;Introduce a reference counter for run-wake devices and a function that will initialize all of the run-time wake-up fields for given device.;-;Similar;0.5300267934799194
"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;Add an API to allow devices to indicate whether or not they want their devices GPE to be enabled for both runtime and wakeup events;to allow devices to indicate whether or not they want their devices GPE to be enabled;Similar;0.606390118598938
"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;"This patch is to eliminate the above warning message
";Device PNP0C0D:00 failed to resume: error 1;Similar;0.5364441275596619
"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;Some drivers need to know when a lid event occurs and get the current status;-;Similar;0.5379441976547241
"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;we could install either a fixed event handler or a notify handler, but the Linux/ACPI code now handles that for us;We previously needed that so we dont need to worry about it;Similar;0.63386070728302
"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;type: Power Button;I dont think theres anything meaningful user-space can do by knowing whether a button is a control method or a fixed hardware button;Similar;0.5325561165809631
"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;Remove button->device pointer;button;Similar;0.6476876735687256
"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;We no longer need a pointer from struct acpi_button back to the struct acpi_device;no longer need;Similar;0.6751868724822998
"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;This patch adds temporaries to cache the acpi_device_hid(), acpi_device_name(), and acpi_device_class() pointers;so we dont have to clutter the code with so many uses of those interfaces;Similar;0.5969785451889038
"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;changes a bit of whitespace to follow Linux conventions;follow Linux conventions;Similar;0.5990926623344421
"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;use .notify method instead of installing handler directly  ;-;Similar;0.5239779949188232
"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;The presence of .notify() causes Linux/ACPI to manage event handlers and notify handlers on our behalf  ;so we dont have to install and remove them ourselves;Similar;0.5618823766708374
"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.7172163724899292
"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.635769248008728
"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;Similar;0.5708550214767456
"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Similar;0.5332422852516174
"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;get rid of input BIT* duplicate defines;duplicate;Similar;0.590290367603302
"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;Similar;0.6116878986358643
"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;Similar;0.5578367114067078
"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.6666299700737
"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;fix acpi_driver.name usage;fix;Similar;0.5022258758544922
"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;Fix indentation where Lindent did get confused  ;Lindent did get confused;Similar;0.5428756475448608
"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;remove unnecessary casts and variable initializations, clean up formatting;unnecessary;Similar;0.5787152051925659
"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;Remove unneeded acpi_handle from driver;unneeded;Similar;0.6612683534622192
"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;Use acpi_devices handle instead of drivers  ;-;Similar;0.5851333141326904
"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.6514619588851929
"Mark ACPI buttons (other than the lid) as ""suspended"" during system suspend and report wakeup events on button events";To prevent propagating those events up the stack;restore /proc/acpi/button/ (ala 2.6.12)  ;[ACPI];Similar;0.6408185958862305
Add ACPI Button event via netlink routine;-;removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;Similar;0.6597375273704529
Add ACPI Button event via netlink routine;-;This caused ACPI shutdown regression on gentoo;VirtualBox;Similar;0.505962610244751
Add ACPI Button event via netlink routine;-;add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;Similar;0.9549936056137085
Add ACPI Button event via netlink routine;-;fix button driver compile error when CONFIG_PM_SLEEP is undefined;CONFIG_PM_SLEEP is undefined;Similar;0.5962469577789307
Add ACPI Button event via netlink routine;-;compile error;CONFIG_PM_SLEEP is undefined;Similar;0.5156047344207764
Add ACPI Button event via netlink routine;-;Fix enabling button GPEs twice;Fix;Similar;0.6933503150939941
Add ACPI Button event via netlink routine;-;Button GPEs have been enabled in the acpi_wake_device_init() during boot;the button driver enables them for the second time;Similar;0.7455147504806519
Add ACPI Button event via netlink routine;-;remove the GPE enabling code from the button driver;to avoid the problem;Similar;0.6546164751052856
Add ACPI Button event via netlink routine;-;Clean up inclusions of ACPI header files;ACPI;Similar;0.6187798976898193
Add ACPI Button event via netlink routine;-;<acpi/acpi_bus.h> be included prior to <acpi/acpi_drivers.h>;so that the acpi_pci_root declarations the latter depends on are always there;Similar;0.6091465950012207
Add ACPI Button event via netlink routine;-;Use the patch to replace the origin code;provide a better solution;Similar;0.6058492660522461
Add ACPI Button event via netlink routine;-;"The second argument of ACPI driver .remove() operation is only used by the ACPI processor driver
";the value passed to that driver through it is always available from the given struct acpi_device objects removal_type field;Similar;0.5105112791061401
Add ACPI Button event via netlink routine;-;Remove unused ACPI button procfs interface;unused;Similar;0.6207451820373535
Add ACPI Button event via netlink routine;-;Use device wakeup flags for handling ACPI wakeup devices;for handling ACPI wakeup devices;Similar;0.7012342214584351
Add ACPI Button event via netlink routine;-;use standard device wakeup flags instead of the special ACPI flags for handling those devices;address this problem;Similar;0.5140194892883301
Add ACPI Button event via netlink routine;-;Use GPE reference counting to support shared GPEs  ;the wakeup enable mask bits of GPEs are set as soon as the GPEs are enabled to wake up the system;Similar;0.6344655752182007
Add ACPI Button event via netlink routine;-;This will allow us to simplify the GPE handling code quite a bit;that change is too intrusive for 2.6.35;Similar;0.520330548286438
Add ACPI Button event via netlink routine;-;Update gfp.h and slab.h includes  ;prepare for breaking implicit slab.h inclusion from percpu.h;Similar;0.5987292528152466
Add ACPI Button event via netlink routine;-;Prepare for this change by updating users of gfp and slab facilities;include those headers directly instead of assuming availability;Similar;0.6896722316741943
Add ACPI Button event via netlink routine;-;the following script is used as the basis of conversion;As this conversion needs to touch a large number of source files;Similar;0.5717910528182983
Add ACPI Button event via netlink routine;-;put the new include  ;its order conforms to its surrounding;Similar;0.5497736930847168
Add ACPI Button event via netlink routine;-;prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;Similar;0.6424691677093506
Add ACPI Button event via netlink routine;-;The script was run again  ;to make sure no file was left behind;Similar;0.5591074228286743
Add ACPI Button event via netlink routine;-;percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;Similar;0.5583873987197876
Add ACPI Button event via netlink routine;-;Introduce a new wake-up flag, always_enabled, for marking devices that should be permanently enabled to generate run-time events  ;devices that should be permanently enabled to generate run-time events;Similar;0.6887298226356506
Add ACPI Button event via netlink routine;-;Introduce a reference counter for run-wake devices and a function that will initialize all of the run-time wake-up fields for given device.;-;Similar;0.7092543840408325
Add ACPI Button event via netlink routine;-;Add an API to allow devices to indicate whether or not they want their devices GPE to be enabled for both runtime and wakeup events;to allow devices to indicate whether or not they want their devices GPE to be enabled;Similar;0.7397905588150024
Add ACPI Button event via netlink routine;-;complain the following warning message;"will

";Similar;0.5164262652397156
Add ACPI Button event via netlink routine;-;return -ENODEV;theres no lid device present;Similar;0.538170337677002
Add ACPI Button event via netlink routine;-;whitespace fix  ;This does not change any actual console output;Similar;0.5859031677246094
Add ACPI Button event via netlink routine;-;we could install either a fixed event handler or a notify handler, but the Linux/ACPI code now handles that for us;We previously needed that so we dont need to worry about it;Similar;0.6507828235626221
Add ACPI Button event via netlink routine;-;type: Power Button;I dont think theres anything meaningful user-space can do by knowing whether a button is a control method or a fixed hardware button;Similar;0.6306994557380676
Add ACPI Button event via netlink routine;-;Remove button->device pointer;button;Similar;0.6611865758895874
Add ACPI Button event via netlink routine;-;This patch adds temporaries to cache the acpi_device_hid(), acpi_device_name(), and acpi_device_class() pointers;so we dont have to clutter the code with so many uses of those interfaces;Similar;0.7109099626541138
Add ACPI Button event via netlink routine;-;changes a bit of whitespace to follow Linux conventions;follow Linux conventions;Similar;0.6530725955963135
Add ACPI Button event via netlink routine;-;use .notify method instead of installing handler directly  ;-;Similar;0.5725116729736328
Add ACPI Button event via netlink routine;-;The presence of .notify() causes Linux/ACPI to manage event handlers and notify handlers on our behalf  ;so we dont have to install and remove them ourselves;Similar;0.6781103610992432
Add ACPI Button event via netlink routine;-;convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.8217678070068359
Add ACPI Button event via netlink routine;-;"proc_fops is declared as ""const""";should give some thoughts;Similar;0.5858986973762512
Add ACPI Button event via netlink routine;-;start using GPE from userspace;GPE is already disabled in interrupt context;Similar;0.7346251010894775
Add ACPI Button event via netlink routine;-;Move all the component definitions for drivers to a single shared place, include/acpi/acpi_drivers.h  ;to have a single shared place;Similar;0.6558021903038025
Add ACPI Button event via netlink routine;-;"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.6652660369873047
Add ACPI Button event via netlink routine;-;Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;Similar;0.7207326889038086
Add ACPI Button event via netlink routine;-;use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Similar;0.5905552506446838
Add ACPI Button event via netlink routine;-;Use proc_create()/proc_create_data() to make sure that ->proc_fops and ->data be setup;before gluing PDE to main tree;Similar;0.6946487426757812
Add ACPI Button event via netlink routine;-;Add correct ->owner to proc_fops to fix reading/module unloading race  ;fix reading/module unloading race;Similar;0.6037896275520325
Add ACPI Button event via netlink routine;-;get rid of input BIT* duplicate defines;duplicate;Similar;0.5566649436950684
Add ACPI Button event via netlink routine;-;Define the macro temporarily in a local manner;all those local definitions will be removed further in this patchset (to not break bisecting);Similar;0.564292311668396
Add ACPI Button event via netlink routine;-;Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;Similar;0.6859422326087952
Add ACPI Button event via netlink routine;-;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.6372742652893066
Add ACPI Button event via netlink routine;-;fix acpi_driver.name usage;fix;Similar;0.6604746580123901
Add ACPI Button event via netlink routine;-;"Make ""module name"" actually match the file name";cosmetic only;Similar;0.5728805065155029
Add ACPI Button event via netlink routine;-;Use acpi_devices handle instead of drivers  ;-;Similar;0.5166674852371216
Add ACPI Button event via netlink routine;-;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.5513970255851746
Add ACPI Button event via netlink routine;-;restore /proc/acpi/button/ (ala 2.6.12)  ;[ACPI];Similar;0.7539072036743164
removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;This caused ACPI shutdown regression on gentoo;VirtualBox;Similar;0.7689089775085449
removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;Similar;0.7184157371520996
removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;fix button driver compile error when CONFIG_PM_SLEEP is undefined;CONFIG_PM_SLEEP is undefined;Similar;0.6459746956825256
removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;Fix enabling button GPEs twice;Fix;Similar;0.5779516100883484
removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;Button GPEs have been enabled in the acpi_wake_device_init() during boot;the button driver enables them for the second time;Similar;0.6145627498626709
removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;remove the GPE enabling code from the button driver;to avoid the problem;Similar;0.8432878851890564
removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;Clean up inclusions of ACPI header files;ACPI;Similar;0.5744629502296448
removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;Similar;0.7242269515991211
removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;<acpi/acpi_bus.h> be included prior to <acpi/acpi_drivers.h>;so that the acpi_pci_root declarations the latter depends on are always there;Similar;0.5467284917831421
removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;Use the patch to replace the origin code;provide a better solution;Similar;0.6348782777786255
removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;Remove useless type argument of driver .remove() operation;useless;Similar;0.6858628988265991
removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;"The second argument of ACPI driver .remove() operation is only used by the ACPI processor driver
";the value passed to that driver through it is always available from the given struct acpi_device objects removal_type field;Similar;0.6669623851776123
removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;drop the second ACPI driver .remove() argument  ;the second ACPI driver .remove() argument is in fact useless;Similar;0.7802299857139587
removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;Fix unused function warnings for CONFIG_PM_SLEEP;unused function warnings;Similar;0.6432464122772217
removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;add #ifdefs to prevent them from being built in that case  ;several suspend/resume functions in ACPI drivers are not used for CONFIG_PM_SLEEP unset;Similar;0.5463035106658936
removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;remove unused procfs I/F;unused;Similar;0.7297471165657043
removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;Remove unused ACPI button procfs interface;unused;Similar;0.8755013942718506
removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;use standard device wakeup flags instead of the special ACPI flags for handling those devices;address this problem;Similar;0.5753332376480103
removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;Similar;0.5666389465332031
removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;The script was run again  ;to make sure no file was left behind;Similar;0.523250162601471
removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;Most gfp.h inclusion directives were ignored  ;stuff from gfp.h was usually wildly available and often used in preprocessor macros;Similar;0.5290220975875854
removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;CONFIG_GCOV_KERNEL was turned off for all tests and a few more options had to be turned off depending on archs to make things build;my distributed build env didnt work with gcov compiles, like ipr on powerpc/64 which failed due to missing writeq;Similar;0.6349345445632935
removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;Similar;0.69346022605896
removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;Add an API to allow devices to indicate whether or not they want their devices GPE to be enabled for both runtime and wakeup events;to allow devices to indicate whether or not they want their devices GPE to be enabled;Similar;0.5053119659423828
removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;Remove the old GPE type handling entirely  ;Gets rid of various quirks, like the implicit disabling with GPE type setting;Similar;0.6569387912750244
removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;"This patch is to eliminate the above warning message
";Device PNP0C0D:00 failed to resume: error 1;Similar;0.6068903207778931
removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;whitespace fix  ;This does not change any actual console output;Similar;0.5122962594032288
removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;we could install either a fixed event handler or a notify handler, but the Linux/ACPI code now handles that for us;We previously needed that so we dont need to worry about it;Similar;0.6185559034347534
removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;Remove button->device pointer;button;Similar;0.7443734407424927
removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;We no longer need a pointer from struct acpi_button back to the struct acpi_device;no longer need;Similar;0.7412564754486084
removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;This patch adds temporaries to cache the acpi_device_hid(), acpi_device_name(), and acpi_device_class() pointers;so we dont have to clutter the code with so many uses of those interfaces;Similar;0.5933398008346558
removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;changes a bit of whitespace to follow Linux conventions;follow Linux conventions;Similar;0.5804503560066223
removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;use .notify method instead of installing handler directly  ;-;Similar;0.6459630727767944
removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;The presence of .notify() causes Linux/ACPI to manage event handlers and notify handlers on our behalf  ;so we dont have to install and remove them ourselves;Similar;0.5176658034324646
removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.7545949220657349
removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;"proc_fops is declared as ""const""";should give some thoughts;Similar;0.5530617237091064
removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;start using GPE from userspace;GPE is already disabled in interrupt context;Similar;0.5004244446754456
removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;Move all the component definitions for drivers to a single shared place, include/acpi/acpi_drivers.h  ;to have a single shared place;Similar;0.5456627607345581
removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.5647623538970947
removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;Similar;0.636553168296814
removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Similar;0.5945028066635132
removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;get rid of input BIT* duplicate defines;duplicate;Similar;0.6990439295768738
removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;Similar;0.6869080066680908
removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;Define the macro temporarily in a local manner;all those local definitions will be removed further in this patchset (to not break bisecting);Similar;0.5496497750282288
removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;Similar;0.6250306963920593
removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.8383603096008301
removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;fix acpi_driver.name usage;fix;Similar;0.6101408004760742
removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;"Invoke with ; as leaving it off confuses Lindent  ";gcc doesnt care;Similar;0.5272427201271057
removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;Fix indentation where Lindent did get confused  ;Lindent did get confused;Similar;0.5822023153305054
removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;remove unnecessary casts and variable initializations, clean up formatting;unnecessary;Similar;0.5427696704864502
removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;Remove unneeded acpi_handle from driver;unneeded;Similar;0.7443564534187317
removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;Use acpi_devices handle instead of drivers  ;-;Similar;0.6778240203857422
removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.6408290863037109
removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;restore /proc/acpi/button/ (ala 2.6.12)  ;[ACPI];Similar;0.6014702916145325
removed ACPI Button event which originally was sent to userspace via /proc/acpi/event;Remove the old /proc/acpi/event interface;"Create a separate ""historical"" git archive";about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated;Similar;0.6494268178939819
This caused ACPI shutdown regression on gentoo;VirtualBox;add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;Similar;0.5582733154296875
This caused ACPI shutdown regression on gentoo;VirtualBox;fix button driver compile error when CONFIG_PM_SLEEP is undefined;CONFIG_PM_SLEEP is undefined;Similar;0.6750152111053467
This caused ACPI shutdown regression on gentoo;VirtualBox;compile error;CONFIG_PM_SLEEP is undefined;Similar;0.5515909194946289
This caused ACPI shutdown regression on gentoo;VirtualBox;Fix enabling button GPEs twice;Fix;Similar;0.5069929361343384
This caused ACPI shutdown regression on gentoo;VirtualBox;Button GPEs have been enabled in the acpi_wake_device_init() during boot;the button driver enables them for the second time;Similar;0.5493874549865723
This caused ACPI shutdown regression on gentoo;VirtualBox;remove the GPE enabling code from the button driver;to avoid the problem;Similar;0.7582317590713501
This caused ACPI shutdown regression on gentoo;VirtualBox;Clean up inclusions of ACPI header files;ACPI;Similar;0.5288925766944885
This caused ACPI shutdown regression on gentoo;VirtualBox;Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;Similar;0.7039740085601807
This caused ACPI shutdown regression on gentoo;VirtualBox;Use the patch to replace the origin code;provide a better solution;Similar;0.6049731969833374
This caused ACPI shutdown regression on gentoo;VirtualBox;Remove useless type argument of driver .remove() operation;useless;Similar;0.7663236856460571
This caused ACPI shutdown regression on gentoo;VirtualBox;"The second argument of ACPI driver .remove() operation is only used by the ACPI processor driver
";the value passed to that driver through it is always available from the given struct acpi_device objects removal_type field;Similar;0.6054461002349854
This caused ACPI shutdown regression on gentoo;VirtualBox;drop the second ACPI driver .remove() argument  ;the second ACPI driver .remove() argument is in fact useless;Similar;0.8376805186271667
This caused ACPI shutdown regression on gentoo;VirtualBox;Fix unused function warnings for CONFIG_PM_SLEEP;unused function warnings;Similar;0.7138851881027222
This caused ACPI shutdown regression on gentoo;VirtualBox;add #ifdefs to prevent them from being built in that case  ;several suspend/resume functions in ACPI drivers are not used for CONFIG_PM_SLEEP unset;Similar;0.6380960941314697
This caused ACPI shutdown regression on gentoo;VirtualBox;remove unused procfs I/F;unused;Similar;0.7434800863265991
This caused ACPI shutdown regression on gentoo;VirtualBox;Remove unused ACPI button procfs interface;unused;Similar;0.7916420698165894
This caused ACPI shutdown regression on gentoo;VirtualBox;Avoid disabling wakeup unnecessarily on remove;-;Similar;0.5651982426643372
This caused ACPI shutdown regression on gentoo;VirtualBox;prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;Similar;0.5048408508300781
This caused ACPI shutdown regression on gentoo;VirtualBox;CONFIG_GCOV_KERNEL was turned off for all tests and a few more options had to be turned off depending on archs to make things build;my distributed build env didnt work with gcov compiles, like ipr on powerpc/64 which failed due to missing writeq;Similar;0.6430221796035767
This caused ACPI shutdown regression on gentoo;VirtualBox;percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;Similar;0.6361783742904663
This caused ACPI shutdown regression on gentoo;VirtualBox;Remove the old GPE type handling entirely  ;Gets rid of various quirks, like the implicit disabling with GPE type setting;Similar;0.7364680767059326
This caused ACPI shutdown regression on gentoo;VirtualBox;"This patch is to eliminate the above warning message
";Device PNP0C0D:00 failed to resume: error 1;Similar;0.7024176716804504
This caused ACPI shutdown regression on gentoo;VirtualBox;whitespace fix  ;This does not change any actual console output;Similar;0.5495789051055908
This caused ACPI shutdown regression on gentoo;VirtualBox;we could install either a fixed event handler or a notify handler, but the Linux/ACPI code now handles that for us;We previously needed that so we dont need to worry about it;Similar;0.5059533715248108
This caused ACPI shutdown regression on gentoo;VirtualBox;Remove button->device pointer;button;Similar;0.711864709854126
This caused ACPI shutdown regression on gentoo;VirtualBox;We no longer need a pointer from struct acpi_button back to the struct acpi_device;no longer need;Similar;0.6676568984985352
This caused ACPI shutdown regression on gentoo;VirtualBox;This patch adds temporaries to cache the acpi_device_hid(), acpi_device_name(), and acpi_device_class() pointers;so we dont have to clutter the code with so many uses of those interfaces;Similar;0.5073752403259277
This caused ACPI shutdown regression on gentoo;VirtualBox;changes a bit of whitespace to follow Linux conventions;follow Linux conventions;Similar;0.5193703174591064
This caused ACPI shutdown regression on gentoo;VirtualBox;use .notify method instead of installing handler directly  ;-;Similar;0.5380265712738037
This caused ACPI shutdown regression on gentoo;VirtualBox;convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.6474910974502563
This caused ACPI shutdown regression on gentoo;VirtualBox;"proc_fops is declared as ""const""";should give some thoughts;Similar;0.5577435493469238
This caused ACPI shutdown regression on gentoo;VirtualBox;"rmmoded directories will be empty and return ""."" and "".."" -- no harm";no harm;Similar;0.5472555160522461
This caused ACPI shutdown regression on gentoo;VirtualBox;"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.5447039008140564
This caused ACPI shutdown regression on gentoo;VirtualBox;Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;Similar;0.5194098949432373
This caused ACPI shutdown regression on gentoo;VirtualBox;use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Similar;0.5014258027076721
This caused ACPI shutdown regression on gentoo;VirtualBox;get rid of input BIT* duplicate defines;duplicate;Similar;0.672222912311554
This caused ACPI shutdown regression on gentoo;VirtualBox;Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;Similar;0.6704953908920288
This caused ACPI shutdown regression on gentoo;VirtualBox;Define the macro temporarily in a local manner;all those local definitions will be removed further in this patchset (to not break bisecting);Similar;0.5128862857818604
This caused ACPI shutdown regression on gentoo;VirtualBox;Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;Similar;0.5252567529678345
This caused ACPI shutdown regression on gentoo;VirtualBox;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.8037893176078796
This caused ACPI shutdown regression on gentoo;VirtualBox;fix acpi_driver.name usage;fix;Similar;0.551101565361023
This caused ACPI shutdown regression on gentoo;VirtualBox;"Invoke with ; as leaving it off confuses Lindent  ";gcc doesnt care;Similar;0.6125104427337646
This caused ACPI shutdown regression on gentoo;VirtualBox;Fix indentation where Lindent did get confused  ;Lindent did get confused;Similar;0.5799468755722046
This caused ACPI shutdown regression on gentoo;VirtualBox;remove unnecessary casts and variable initializations, clean up formatting;unnecessary;Similar;0.5716634392738342
This caused ACPI shutdown regression on gentoo;VirtualBox;Remove unneeded acpi_handle from driver;unneeded;Similar;0.7366218566894531
This caused ACPI shutdown regression on gentoo;VirtualBox;Use acpi_devices handle instead of drivers  ;-;Similar;0.5532280206680298
This caused ACPI shutdown regression on gentoo;VirtualBox;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.651656448841095
This caused ACPI shutdown regression on gentoo;VirtualBox;"Create a separate ""historical"" git archive";about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated;Similar;0.6286156177520752
add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;fix button driver compile error when CONFIG_PM_SLEEP is undefined;CONFIG_PM_SLEEP is undefined;Similar;0.6282886266708374
add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;compile error;CONFIG_PM_SLEEP is undefined;Similar;0.5087222456932068
add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;Fix enabling button GPEs twice;Fix;Similar;0.737674355506897
add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;Button GPEs have been enabled in the acpi_wake_device_init() during boot;the button driver enables them for the second time;Similar;0.7567887306213379
add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;remove the GPE enabling code from the button driver;to avoid the problem;Similar;0.6816233396530151
add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;Clean up inclusions of ACPI header files;ACPI;Similar;0.627876877784729
add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;Similar;0.5322182178497314
add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;<acpi/acpi_bus.h> be included prior to <acpi/acpi_drivers.h>;so that the acpi_pci_root declarations the latter depends on are always there;Similar;0.6235489845275879
add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;Use the patch to replace the origin code;provide a better solution;Similar;0.6264547109603882
add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;"The second argument of ACPI driver .remove() operation is only used by the ACPI processor driver
";the value passed to that driver through it is always available from the given struct acpi_device objects removal_type field;Similar;0.5277950763702393
add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;drop the second ACPI driver .remove() argument  ;the second ACPI driver .remove() argument is in fact useless;Similar;0.5280191898345947
add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;Fix unused function warnings for CONFIG_PM_SLEEP;unused function warnings;Similar;0.5422549843788147
add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;remove unused procfs I/F;unused;Similar;0.5082002878189087
add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;Remove unused ACPI button procfs interface;unused;Similar;0.6524804830551147
add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;Use device wakeup flags for handling ACPI wakeup devices;for handling ACPI wakeup devices;Similar;0.6693369150161743
add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;use standard device wakeup flags instead of the special ACPI flags for handling those devices;address this problem;Similar;0.5281227231025696
add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;Use GPE reference counting to support shared GPEs  ;the wakeup enable mask bits of GPEs are set as soon as the GPEs are enabled to wake up the system;Similar;0.6122100949287415
add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;it is sufficient to set/unset the wakeup mask bits for them during system sleep transitions;"this means that the reference counting of ""wakeup"" GPEs doesnt really make sense";Similar;0.5151586532592773
add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;This will allow us to simplify the GPE handling code quite a bit;that change is too intrusive for 2.6.35;Similar;0.5305978059768677
add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;Update gfp.h and slab.h includes  ;prepare for breaking implicit slab.h inclusion from percpu.h;Similar;0.621237576007843
add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;Prepare for this change by updating users of gfp and slab facilities;include those headers directly instead of assuming availability;Similar;0.6667739152908325
add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;the following script is used as the basis of conversion;As this conversion needs to touch a large number of source files;Similar;0.5588734149932861
add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;put the new include  ;its order conforms to its surrounding;Similar;0.5072581768035889
add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;Similar;0.6618072986602783
add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;The script was run again  ;to make sure no file was left behind;Similar;0.6164283752441406
add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;Similar;0.619107723236084
add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;Add more run-time wake-up fields;Add more;Similar;0.5019420385360718
add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;Introduce a new wake-up flag, always_enabled, for marking devices that should be permanently enabled to generate run-time events  ;devices that should be permanently enabled to generate run-time events;Similar;0.6891922354698181
add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;Introduce a reference counter for run-wake devices and a function that will initialize all of the run-time wake-up fields for given device.;-;Similar;0.7115778923034668
add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;Add an API to allow devices to indicate whether or not they want their devices GPE to be enabled for both runtime and wakeup events;to allow devices to indicate whether or not they want their devices GPE to be enabled;Similar;0.7313600182533264
add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;complain the following warning message;"will

";Similar;0.5098978281021118
add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;return -ENODEV;theres no lid device present;Similar;0.5648562908172607
add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;whitespace fix  ;This does not change any actual console output;Similar;0.562753438949585
add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;we could install either a fixed event handler or a notify handler, but the Linux/ACPI code now handles that for us;We previously needed that so we dont need to worry about it;Similar;0.6628208160400391
add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;type: Power Button;I dont think theres anything meaningful user-space can do by knowing whether a button is a control method or a fixed hardware button;Similar;0.5592361688613892
add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;Remove button->device pointer;button;Similar;0.6587461233139038
add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;We no longer need a pointer from struct acpi_button back to the struct acpi_device;no longer need;Similar;0.5333001613616943
add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;This patch adds temporaries to cache the acpi_device_hid(), acpi_device_name(), and acpi_device_class() pointers;so we dont have to clutter the code with so many uses of those interfaces;Similar;0.7274835109710693
add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;Better to oops and learn about a bug;than to silently cover it up;Similar;0.5064002275466919
add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;changes a bit of whitespace to follow Linux conventions;follow Linux conventions;Similar;0.6670123338699341
add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;use .notify method instead of installing handler directly  ;-;Similar;0.6104387640953064
add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;The presence of .notify() causes Linux/ACPI to manage event handlers and notify handlers on our behalf  ;so we dont have to install and remove them ourselves;Similar;0.6733256578445435
add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.8535811901092529
add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;"proc_fops is declared as ""const""";should give some thoughts;Similar;0.5691790580749512
add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;start using GPE from userspace;GPE is already disabled in interrupt context;Similar;0.682065486907959
add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;Move all the component definitions for drivers to a single shared place, include/acpi/acpi_drivers.h  ;to have a single shared place;Similar;0.658983588218689
add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.6853634119033813
add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;Similar;0.7466381192207336
add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Similar;0.6018791198730469
add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;Use proc_create()/proc_create_data() to make sure that ->proc_fops and ->data be setup;before gluing PDE to main tree;Similar;0.6598565578460693
add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;Add correct ->owner to proc_fops to fix reading/module unloading race  ;fix reading/module unloading race;Similar;0.6388239860534668
add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;get rid of input BIT* duplicate defines;duplicate;Similar;0.5930279493331909
add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;Similar;0.5177563428878784
add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;Define the macro temporarily in a local manner;all those local definitions will be removed further in this patchset (to not break bisecting);Similar;0.5553792715072632
add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;Similar;0.7313660383224487
add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.6982068419456482
add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;fix acpi_driver.name usage;fix;Similar;0.652077317237854
add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;"Make ""module name"" actually match the file name";cosmetic only;Similar;0.5651893019676208
add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;remove unnecessary casts and variable initializations, clean up formatting;unnecessary;Similar;0.5140670537948608
add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;Remove unneeded acpi_handle from driver;unneeded;Similar;0.5175979733467102
add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;Use acpi_devices handle instead of drivers  ;-;Similar;0.5322815179824829
add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.572221040725708
add ACPI Button event back via netlink routine;Now ACPI events are sent to userspace via netlink;restore /proc/acpi/button/ (ala 2.6.12)  ;[ACPI];Similar;0.7654935121536255
fix button driver compile error when CONFIG_PM_SLEEP is undefined;CONFIG_PM_SLEEP is undefined;compile error;CONFIG_PM_SLEEP is undefined;Similar;0.5495176315307617
fix button driver compile error when CONFIG_PM_SLEEP is undefined;CONFIG_PM_SLEEP is undefined;Fix enabling button GPEs twice;Fix;Similar;0.5775068998336792
fix button driver compile error when CONFIG_PM_SLEEP is undefined;CONFIG_PM_SLEEP is undefined;Button GPEs have been enabled in the acpi_wake_device_init() during boot;the button driver enables them for the second time;Similar;0.6987163424491882
fix button driver compile error when CONFIG_PM_SLEEP is undefined;CONFIG_PM_SLEEP is undefined;remove the GPE enabling code from the button driver;to avoid the problem;Similar;0.7153054475784302
fix button driver compile error when CONFIG_PM_SLEEP is undefined;CONFIG_PM_SLEEP is undefined;Clean up inclusions of ACPI header files;ACPI;Similar;0.554427981376648
fix button driver compile error when CONFIG_PM_SLEEP is undefined;CONFIG_PM_SLEEP is undefined;Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;Similar;0.6847708225250244
fix button driver compile error when CONFIG_PM_SLEEP is undefined;CONFIG_PM_SLEEP is undefined;Use the patch to replace the origin code;provide a better solution;Similar;0.6645748615264893
fix button driver compile error when CONFIG_PM_SLEEP is undefined;CONFIG_PM_SLEEP is undefined;Remove useless type argument of driver .remove() operation;useless;Similar;0.5860419869422913
fix button driver compile error when CONFIG_PM_SLEEP is undefined;CONFIG_PM_SLEEP is undefined;"The second argument of ACPI driver .remove() operation is only used by the ACPI processor driver
";the value passed to that driver through it is always available from the given struct acpi_device objects removal_type field;Similar;0.5391649007797241
fix button driver compile error when CONFIG_PM_SLEEP is undefined;CONFIG_PM_SLEEP is undefined;drop the second ACPI driver .remove() argument  ;the second ACPI driver .remove() argument is in fact useless;Similar;0.6089307069778442
fix button driver compile error when CONFIG_PM_SLEEP is undefined;CONFIG_PM_SLEEP is undefined;Fix unused function warnings for CONFIG_PM_SLEEP;unused function warnings;Similar;0.8434484601020813
fix button driver compile error when CONFIG_PM_SLEEP is undefined;CONFIG_PM_SLEEP is undefined;add #ifdefs to prevent them from being built in that case  ;several suspend/resume functions in ACPI drivers are not used for CONFIG_PM_SLEEP unset;Similar;0.6012899875640869
fix button driver compile error when CONFIG_PM_SLEEP is undefined;CONFIG_PM_SLEEP is undefined;Remove unused ACPI button procfs interface;unused;Similar;0.650955080986023
fix button driver compile error when CONFIG_PM_SLEEP is undefined;CONFIG_PM_SLEEP is undefined;it is sufficient to set/unset the wakeup mask bits for them during system sleep transitions;"this means that the reference counting of ""wakeup"" GPEs doesnt really make sense";Similar;0.5891796946525574
fix button driver compile error when CONFIG_PM_SLEEP is undefined;CONFIG_PM_SLEEP is undefined;prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;Similar;0.7116298675537109
fix button driver compile error when CONFIG_PM_SLEEP is undefined;CONFIG_PM_SLEEP is undefined;CONFIG_GCOV_KERNEL was turned off for all tests and a few more options had to be turned off depending on archs to make things build;my distributed build env didnt work with gcov compiles, like ipr on powerpc/64 which failed due to missing writeq;Similar;0.6271541118621826
fix button driver compile error when CONFIG_PM_SLEEP is undefined;CONFIG_PM_SLEEP is undefined;Introduce a new wake-up flag, always_enabled, for marking devices that should be permanently enabled to generate run-time events  ;devices that should be permanently enabled to generate run-time events;Similar;0.545229971408844
fix button driver compile error when CONFIG_PM_SLEEP is undefined;CONFIG_PM_SLEEP is undefined;Add an API to allow devices to indicate whether or not they want their devices GPE to be enabled for both runtime and wakeup events;to allow devices to indicate whether or not they want their devices GPE to be enabled;Similar;0.550595223903656
fix button driver compile error when CONFIG_PM_SLEEP is undefined;CONFIG_PM_SLEEP is undefined;"This patch is to eliminate the above warning message
";Device PNP0C0D:00 failed to resume: error 1;Similar;0.5773901343345642
fix button driver compile error when CONFIG_PM_SLEEP is undefined;CONFIG_PM_SLEEP is undefined;Some drivers need to know when a lid event occurs and get the current status;-;Similar;0.5591605305671692
fix button driver compile error when CONFIG_PM_SLEEP is undefined;CONFIG_PM_SLEEP is undefined;whitespace fix  ;This does not change any actual console output;Similar;0.5082492828369141
fix button driver compile error when CONFIG_PM_SLEEP is undefined;CONFIG_PM_SLEEP is undefined;we could install either a fixed event handler or a notify handler, but the Linux/ACPI code now handles that for us;We previously needed that so we dont need to worry about it;Similar;0.6226381063461304
fix button driver compile error when CONFIG_PM_SLEEP is undefined;CONFIG_PM_SLEEP is undefined;Remove button->device pointer;button;Similar;0.5952857732772827
fix button driver compile error when CONFIG_PM_SLEEP is undefined;CONFIG_PM_SLEEP is undefined;We no longer need a pointer from struct acpi_button back to the struct acpi_device;no longer need;Similar;0.5149964094161987
fix button driver compile error when CONFIG_PM_SLEEP is undefined;CONFIG_PM_SLEEP is undefined;This patch adds temporaries to cache the acpi_device_hid(), acpi_device_name(), and acpi_device_class() pointers;so we dont have to clutter the code with so many uses of those interfaces;Similar;0.6859506368637085
fix button driver compile error when CONFIG_PM_SLEEP is undefined;CONFIG_PM_SLEEP is undefined;Better to oops and learn about a bug;than to silently cover it up;Similar;0.5482221841812134
fix button driver compile error when CONFIG_PM_SLEEP is undefined;CONFIG_PM_SLEEP is undefined;changes a bit of whitespace to follow Linux conventions;follow Linux conventions;Similar;0.6183204650878906
fix button driver compile error when CONFIG_PM_SLEEP is undefined;CONFIG_PM_SLEEP is undefined;The presence of .notify() causes Linux/ACPI to manage event handlers and notify handlers on our behalf  ;so we dont have to install and remove them ourselves;Similar;0.5657138824462891
fix button driver compile error when CONFIG_PM_SLEEP is undefined;CONFIG_PM_SLEEP is undefined;convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.6637006402015686
fix button driver compile error when CONFIG_PM_SLEEP is undefined;CONFIG_PM_SLEEP is undefined;"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.5578391551971436
fix button driver compile error when CONFIG_PM_SLEEP is undefined;CONFIG_PM_SLEEP is undefined;Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;Similar;0.5679930448532104
fix button driver compile error when CONFIG_PM_SLEEP is undefined;CONFIG_PM_SLEEP is undefined;Add correct ->owner to proc_fops to fix reading/module unloading race  ;fix reading/module unloading race;Similar;0.6533609628677368
fix button driver compile error when CONFIG_PM_SLEEP is undefined;CONFIG_PM_SLEEP is undefined;get rid of input BIT* duplicate defines;duplicate;Similar;0.5334326028823853
fix button driver compile error when CONFIG_PM_SLEEP is undefined;CONFIG_PM_SLEEP is undefined;Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;Similar;0.5501681566238403
fix button driver compile error when CONFIG_PM_SLEEP is undefined;CONFIG_PM_SLEEP is undefined;Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;Similar;0.5393287539482117
fix button driver compile error when CONFIG_PM_SLEEP is undefined;CONFIG_PM_SLEEP is undefined;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.6296645998954773
fix button driver compile error when CONFIG_PM_SLEEP is undefined;CONFIG_PM_SLEEP is undefined;fix acpi_driver.name usage;fix;Similar;0.6355641484260559
fix button driver compile error when CONFIG_PM_SLEEP is undefined;CONFIG_PM_SLEEP is undefined;Fix indentation where Lindent did get confused  ;Lindent did get confused;Similar;0.5847295522689819
fix button driver compile error when CONFIG_PM_SLEEP is undefined;CONFIG_PM_SLEEP is undefined;remove unnecessary casts and variable initializations, clean up formatting;unnecessary;Similar;0.5338777303695679
fix button driver compile error when CONFIG_PM_SLEEP is undefined;CONFIG_PM_SLEEP is undefined;Remove unneeded acpi_handle from driver;unneeded;Similar;0.6912791728973389
fix button driver compile error when CONFIG_PM_SLEEP is undefined;CONFIG_PM_SLEEP is undefined;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.6351884007453918
fix button driver compile error when CONFIG_PM_SLEEP is undefined;CONFIG_PM_SLEEP is undefined;restore /proc/acpi/button/ (ala 2.6.12)  ;[ACPI];Similar;0.5267581343650818
compile error;CONFIG_PM_SLEEP is undefined;remove the GPE enabling code from the button driver;to avoid the problem;Similar;0.5369364023208618
compile error;CONFIG_PM_SLEEP is undefined;Clean up inclusions of ACPI header files;ACPI;Similar;0.6232788562774658
compile error;CONFIG_PM_SLEEP is undefined;Use the patch to replace the origin code;provide a better solution;Similar;0.6354119181632996
compile error;CONFIG_PM_SLEEP is undefined;Remove useless type argument of driver .remove() operation;useless;Similar;0.6102546453475952
compile error;CONFIG_PM_SLEEP is undefined;drop the second ACPI driver .remove() argument  ;the second ACPI driver .remove() argument is in fact useless;Similar;0.5184095501899719
compile error;CONFIG_PM_SLEEP is undefined;add #ifdefs to prevent them from being built in that case  ;several suspend/resume functions in ACPI drivers are not used for CONFIG_PM_SLEEP unset;Similar;0.5159655213356018
compile error;CONFIG_PM_SLEEP is undefined;remove unused procfs I/F;unused;Similar;0.6315951943397522
compile error;CONFIG_PM_SLEEP is undefined;Remove unused ACPI button procfs interface;unused;Similar;0.5225359797477722
compile error;CONFIG_PM_SLEEP is undefined;Avoid disabling wakeup unnecessarily on remove;-;Similar;0.5596408843994141
compile error;CONFIG_PM_SLEEP is undefined;Use device wakeup flags for handling ACPI wakeup devices;for handling ACPI wakeup devices;Similar;0.5286043286323547
compile error;CONFIG_PM_SLEEP is undefined;Use GPE reference counting to support shared GPEs  ;the wakeup enable mask bits of GPEs are set as soon as the GPEs are enabled to wake up the system;Similar;0.546852707862854
compile error;CONFIG_PM_SLEEP is undefined;Update gfp.h and slab.h includes  ;prepare for breaking implicit slab.h inclusion from percpu.h;Similar;0.5271604061126709
compile error;CONFIG_PM_SLEEP is undefined;the following script is used as the basis of conversion;As this conversion needs to touch a large number of source files;Similar;0.6794236898422241
compile error;CONFIG_PM_SLEEP is undefined;only the necessary includes are there;necessary;Similar;0.5002398490905762
compile error;CONFIG_PM_SLEEP is undefined;put the new include  ;its order conforms to its surrounding;Similar;0.5205456018447876
compile error;CONFIG_PM_SLEEP is undefined;prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;Similar;0.6656683683395386
compile error;CONFIG_PM_SLEEP is undefined;The script was run again  ;to make sure no file was left behind;Similar;0.5724105834960938
compile error;CONFIG_PM_SLEEP is undefined;description of the patch behaviour;an action or a change;Similar;0.6678755879402161
compile error;CONFIG_PM_SLEEP is undefined;failures were fixed;Build tests were done on the following configurations;Similar;0.6765245199203491
compile error;CONFIG_PM_SLEEP is undefined;percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;Similar;0.6524174809455872
compile error;CONFIG_PM_SLEEP is undefined;Remove the old GPE type handling entirely  ;Gets rid of various quirks, like the implicit disabling with GPE type setting;Similar;0.5154129266738892
compile error;CONFIG_PM_SLEEP is undefined;complain the following warning message;"will

";Similar;0.7068606019020081
compile error;CONFIG_PM_SLEEP is undefined;"This patch is to eliminate the above warning message
";Device PNP0C0D:00 failed to resume: error 1;Similar;0.5924643874168396
compile error;CONFIG_PM_SLEEP is undefined;return -ENODEV;theres no lid device present;Similar;0.6652796268463135
compile error;CONFIG_PM_SLEEP is undefined;whitespace fix  ;This does not change any actual console output;Similar;0.7464959025382996
compile error;CONFIG_PM_SLEEP is undefined;type: Power Button;I dont think theres anything meaningful user-space can do by knowing whether a button is a control method or a fixed hardware button;Similar;0.521719217300415
compile error;CONFIG_PM_SLEEP is undefined;Remove button->device pointer;button;Similar;0.7013593316078186
compile error;CONFIG_PM_SLEEP is undefined;changes a bit of whitespace to follow Linux conventions;follow Linux conventions;Similar;0.5250614881515503
compile error;CONFIG_PM_SLEEP is undefined;use .notify method instead of installing handler directly  ;-;Similar;0.615591287612915
compile error;CONFIG_PM_SLEEP is undefined;convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.5894646048545837
compile error;CONFIG_PM_SLEEP is undefined;Setting ->owner as done currently (pde->owner = THIS_MODULE) is racy;as correctly noted at bug #12454;Similar;0.5619332790374756
compile error;CONFIG_PM_SLEEP is undefined;"proc_fops is declared as ""const""";should give some thoughts;Similar;0.7597788572311401
compile error;CONFIG_PM_SLEEP is undefined;start using GPE from userspace;GPE is already disabled in interrupt context;Similar;0.5562731027603149
compile error;CONFIG_PM_SLEEP is undefined;"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.6209853887557983
compile error;CONFIG_PM_SLEEP is undefined;Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;Similar;0.58542799949646
compile error;CONFIG_PM_SLEEP is undefined;use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Similar;0.6872850656509399
compile error;CONFIG_PM_SLEEP is undefined;Use proc_create()/proc_create_data() to make sure that ->proc_fops and ->data be setup;before gluing PDE to main tree;Similar;0.527775228023529
compile error;CONFIG_PM_SLEEP is undefined;get rid of input BIT* duplicate defines;duplicate;Similar;0.7347625494003296
compile error;CONFIG_PM_SLEEP is undefined;Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;Similar;0.5278102159500122
compile error;CONFIG_PM_SLEEP is undefined;Define the macro temporarily in a local manner;all those local definitions will be removed further in this patchset (to not break bisecting);Similar;0.629767894744873
compile error;CONFIG_PM_SLEEP is undefined;Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;Similar;0.5460774302482605
compile error;CONFIG_PM_SLEEP is undefined;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.6007063984870911
compile error;CONFIG_PM_SLEEP is undefined;fix acpi_driver.name usage;fix;Similar;0.6182138323783875
compile error;CONFIG_PM_SLEEP is undefined;"Make ""module name"" actually match the file name";cosmetic only;Similar;0.5022571086883545
compile error;CONFIG_PM_SLEEP is undefined;"Invoke with ; as leaving it off confuses Lindent  ";gcc doesnt care;Similar;0.6502357721328735
compile error;CONFIG_PM_SLEEP is undefined;Fix indentation where Lindent did get confused  ;Lindent did get confused;Similar;0.7110899686813354
compile error;CONFIG_PM_SLEEP is undefined;remove unnecessary casts and variable initializations, clean up formatting;unnecessary;Similar;0.6086164712905884
compile error;CONFIG_PM_SLEEP is undefined;Remove unneeded acpi_handle from driver;unneeded;Similar;0.5812711119651794
compile error;CONFIG_PM_SLEEP is undefined;Use acpi_devices handle instead of drivers  ;-;Similar;0.5479618906974792
compile error;CONFIG_PM_SLEEP is undefined;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.7155767679214478
compile error;CONFIG_PM_SLEEP is undefined;"Create a separate ""historical"" git archive";about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated;Similar;0.5924898386001587
Fix enabling button GPEs twice;Fix;Button GPEs have been enabled in the acpi_wake_device_init() during boot;the button driver enables them for the second time;Similar;0.6912715435028076
Fix enabling button GPEs twice;Fix;remove the GPE enabling code from the button driver;to avoid the problem;Similar;0.5874617099761963
Fix enabling button GPEs twice;Fix;Use the patch to replace the origin code;provide a better solution;Similar;0.5416526794433594
Fix enabling button GPEs twice;Fix;Fix unused function warnings for CONFIG_PM_SLEEP;unused function warnings;Similar;0.500243604183197
Fix enabling button GPEs twice;Fix;Remove unused ACPI button procfs interface;unused;Similar;0.5586857199668884
Fix enabling button GPEs twice;Fix;This will allow us to simplify the GPE handling code quite a bit;that change is too intrusive for 2.6.35;Similar;0.5723922252655029
Fix enabling button GPEs twice;Fix;Update gfp.h and slab.h includes  ;prepare for breaking implicit slab.h inclusion from percpu.h;Similar;0.5898339748382568
Fix enabling button GPEs twice;Fix;Prepare for this change by updating users of gfp and slab facilities;include those headers directly instead of assuming availability;Similar;0.5666342973709106
Fix enabling button GPEs twice;Fix;prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;Similar;0.5350192785263062
Fix enabling button GPEs twice;Fix;The script was run again  ;to make sure no file was left behind;Similar;0.6921481490135193
Fix enabling button GPEs twice;Fix;percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;Similar;0.5997573137283325
Fix enabling button GPEs twice;Fix;Introduce a new wake-up flag, always_enabled, for marking devices that should be permanently enabled to generate run-time events  ;devices that should be permanently enabled to generate run-time events;Similar;0.5988410115242004
Fix enabling button GPEs twice;Fix;Introduce a reference counter for run-wake devices and a function that will initialize all of the run-time wake-up fields for given device.;-;Similar;0.5921217203140259
Fix enabling button GPEs twice;Fix;Add an API to allow devices to indicate whether or not they want their devices GPE to be enabled for both runtime and wakeup events;to allow devices to indicate whether or not they want their devices GPE to be enabled;Similar;0.6201682090759277
Fix enabling button GPEs twice;Fix;return -ENODEV;theres no lid device present;Similar;0.5108636617660522
Fix enabling button GPEs twice;Fix;whitespace fix  ;This does not change any actual console output;Similar;0.538402795791626
Fix enabling button GPEs twice;Fix;we could install either a fixed event handler or a notify handler, but the Linux/ACPI code now handles that for us;We previously needed that so we dont need to worry about it;Similar;0.558645486831665
Fix enabling button GPEs twice;Fix;type: Power Button;I dont think theres anything meaningful user-space can do by knowing whether a button is a control method or a fixed hardware button;Similar;0.5746460556983948
Fix enabling button GPEs twice;Fix;Remove button->device pointer;button;Similar;0.5962931513786316
Fix enabling button GPEs twice;Fix;This patch adds temporaries to cache the acpi_device_hid(), acpi_device_name(), and acpi_device_class() pointers;so we dont have to clutter the code with so many uses of those interfaces;Similar;0.6087354421615601
Fix enabling button GPEs twice;Fix;changes a bit of whitespace to follow Linux conventions;follow Linux conventions;Similar;0.555175244808197
Fix enabling button GPEs twice;Fix;convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.6826522350311279
Fix enabling button GPEs twice;Fix;start using GPE from userspace;GPE is already disabled in interrupt context;Similar;0.5082356929779053
Fix enabling button GPEs twice;Fix;Move all the component definitions for drivers to a single shared place, include/acpi/acpi_drivers.h  ;to have a single shared place;Similar;0.5100521445274353
Fix enabling button GPEs twice;Fix;"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.6256371140480042
Fix enabling button GPEs twice;Fix;Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;Similar;0.6486819982528687
Fix enabling button GPEs twice;Fix;Use proc_create()/proc_create_data() to make sure that ->proc_fops and ->data be setup;before gluing PDE to main tree;Similar;0.5213781595230103
Fix enabling button GPEs twice;Fix;Add correct ->owner to proc_fops to fix reading/module unloading race  ;fix reading/module unloading race;Similar;0.5737684369087219
Fix enabling button GPEs twice;Fix;get rid of input BIT* duplicate defines;duplicate;Similar;0.5090903043746948
Fix enabling button GPEs twice;Fix;Define the macro temporarily in a local manner;all those local definitions will be removed further in this patchset (to not break bisecting);Similar;0.537530243396759
Fix enabling button GPEs twice;Fix;Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;Similar;0.5662418603897095
Fix enabling button GPEs twice;Fix;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.5858174562454224
Fix enabling button GPEs twice;Fix;fix acpi_driver.name usage;fix;Similar;0.5540524125099182
Fix enabling button GPEs twice;Fix;"Make ""module name"" actually match the file name";cosmetic only;Similar;0.5098569393157959
Fix enabling button GPEs twice;Fix;restore /proc/acpi/button/ (ala 2.6.12)  ;[ACPI];Similar;0.7087389230728149
Button GPEs have been enabled in the acpi_wake_device_init() during boot;the button driver enables them for the second time;remove the GPE enabling code from the button driver;to avoid the problem;Similar;0.6356986165046692
Button GPEs have been enabled in the acpi_wake_device_init() during boot;the button driver enables them for the second time;Clean up inclusions of ACPI header files;ACPI;Similar;0.5351320505142212
Button GPEs have been enabled in the acpi_wake_device_init() during boot;the button driver enables them for the second time;Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;Similar;0.5407751798629761
Button GPEs have been enabled in the acpi_wake_device_init() during boot;the button driver enables them for the second time;<acpi/acpi_bus.h> be included prior to <acpi/acpi_drivers.h>;so that the acpi_pci_root declarations the latter depends on are always there;Similar;0.5883450508117676
Button GPEs have been enabled in the acpi_wake_device_init() during boot;the button driver enables them for the second time;Use the patch to replace the origin code;provide a better solution;Similar;0.5786789655685425
Button GPEs have been enabled in the acpi_wake_device_init() during boot;the button driver enables them for the second time;"The second argument of ACPI driver .remove() operation is only used by the ACPI processor driver
";the value passed to that driver through it is always available from the given struct acpi_device objects removal_type field;Similar;0.5071324110031128
Button GPEs have been enabled in the acpi_wake_device_init() during boot;the button driver enables them for the second time;Fix unused function warnings for CONFIG_PM_SLEEP;unused function warnings;Similar;0.6131671667098999
Button GPEs have been enabled in the acpi_wake_device_init() during boot;the button driver enables them for the second time;Remove unused ACPI button procfs interface;unused;Similar;0.568231999874115
Button GPEs have been enabled in the acpi_wake_device_init() during boot;the button driver enables them for the second time;Use device wakeup flags for handling ACPI wakeup devices;for handling ACPI wakeup devices;Similar;0.6310990452766418
Button GPEs have been enabled in the acpi_wake_device_init() during boot;the button driver enables them for the second time;Use GPE reference counting to support shared GPEs  ;the wakeup enable mask bits of GPEs are set as soon as the GPEs are enabled to wake up the system;Similar;0.5642789602279663
Button GPEs have been enabled in the acpi_wake_device_init() during boot;the button driver enables them for the second time;it is sufficient to set/unset the wakeup mask bits for them during system sleep transitions;"this means that the reference counting of ""wakeup"" GPEs doesnt really make sense";Similar;0.6147034168243408
Button GPEs have been enabled in the acpi_wake_device_init() during boot;the button driver enables them for the second time;This will allow us to simplify the GPE handling code quite a bit;that change is too intrusive for 2.6.35;Similar;0.5507907867431641
Button GPEs have been enabled in the acpi_wake_device_init() during boot;the button driver enables them for the second time;Update gfp.h and slab.h includes  ;prepare for breaking implicit slab.h inclusion from percpu.h;Similar;0.5683875679969788
Button GPEs have been enabled in the acpi_wake_device_init() during boot;the button driver enables them for the second time;Prepare for this change by updating users of gfp and slab facilities;include those headers directly instead of assuming availability;Similar;0.6107397079467773
Button GPEs have been enabled in the acpi_wake_device_init() during boot;the button driver enables them for the second time;prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;Similar;0.6081736087799072
Button GPEs have been enabled in the acpi_wake_device_init() during boot;the button driver enables them for the second time;The script was run again  ;to make sure no file was left behind;Similar;0.5119494199752808
Button GPEs have been enabled in the acpi_wake_device_init() during boot;the button driver enables them for the second time;percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;Similar;0.5368423461914062
Button GPEs have been enabled in the acpi_wake_device_init() during boot;the button driver enables them for the second time;Introduce a new wake-up flag, always_enabled, for marking devices that should be permanently enabled to generate run-time events  ;devices that should be permanently enabled to generate run-time events;Similar;0.6733508110046387
Button GPEs have been enabled in the acpi_wake_device_init() during boot;the button driver enables them for the second time;Introduce a reference counter for run-wake devices and a function that will initialize all of the run-time wake-up fields for given device.;-;Similar;0.6534085273742676
Button GPEs have been enabled in the acpi_wake_device_init() during boot;the button driver enables them for the second time;Add an API to allow devices to indicate whether or not they want their devices GPE to be enabled for both runtime and wakeup events;to allow devices to indicate whether or not they want their devices GPE to be enabled;Similar;0.7629274129867554
Button GPEs have been enabled in the acpi_wake_device_init() during boot;the button driver enables them for the second time;Some drivers need to know when a lid event occurs and get the current status;-;Similar;0.5391254425048828
Button GPEs have been enabled in the acpi_wake_device_init() during boot;the button driver enables them for the second time;whitespace fix  ;This does not change any actual console output;Similar;0.5182967782020569
Button GPEs have been enabled in the acpi_wake_device_init() during boot;the button driver enables them for the second time;we could install either a fixed event handler or a notify handler, but the Linux/ACPI code now handles that for us;We previously needed that so we dont need to worry about it;Similar;0.7312620878219604
Button GPEs have been enabled in the acpi_wake_device_init() during boot;the button driver enables them for the second time;type: Power Button;I dont think theres anything meaningful user-space can do by knowing whether a button is a control method or a fixed hardware button;Similar;0.5739401578903198
Button GPEs have been enabled in the acpi_wake_device_init() during boot;the button driver enables them for the second time;Remove button->device pointer;button;Similar;0.5659779906272888
Button GPEs have been enabled in the acpi_wake_device_init() during boot;the button driver enables them for the second time;This patch adds temporaries to cache the acpi_device_hid(), acpi_device_name(), and acpi_device_class() pointers;so we dont have to clutter the code with so many uses of those interfaces;Similar;0.7672643661499023
Button GPEs have been enabled in the acpi_wake_device_init() during boot;the button driver enables them for the second time;changes a bit of whitespace to follow Linux conventions;follow Linux conventions;Similar;0.699764609336853
Button GPEs have been enabled in the acpi_wake_device_init() during boot;the button driver enables them for the second time;The presence of .notify() causes Linux/ACPI to manage event handlers and notify handlers on our behalf  ;so we dont have to install and remove them ourselves;Similar;0.6593515872955322
Button GPEs have been enabled in the acpi_wake_device_init() during boot;the button driver enables them for the second time;convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.7427302002906799
Button GPEs have been enabled in the acpi_wake_device_init() during boot;the button driver enables them for the second time;start using GPE from userspace;GPE is already disabled in interrupt context;Similar;0.6462829113006592
Button GPEs have been enabled in the acpi_wake_device_init() during boot;the button driver enables them for the second time;Move all the component definitions for drivers to a single shared place, include/acpi/acpi_drivers.h  ;to have a single shared place;Similar;0.6163386702537537
Button GPEs have been enabled in the acpi_wake_device_init() during boot;the button driver enables them for the second time;"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.5826407074928284
Button GPEs have been enabled in the acpi_wake_device_init() during boot;the button driver enables them for the second time;Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;Similar;0.6121830940246582
Button GPEs have been enabled in the acpi_wake_device_init() during boot;the button driver enables them for the second time;Use proc_create()/proc_create_data() to make sure that ->proc_fops and ->data be setup;before gluing PDE to main tree;Similar;0.5510457754135132
Button GPEs have been enabled in the acpi_wake_device_init() during boot;the button driver enables them for the second time;Add correct ->owner to proc_fops to fix reading/module unloading race  ;fix reading/module unloading race;Similar;0.6149935722351074
Button GPEs have been enabled in the acpi_wake_device_init() during boot;the button driver enables them for the second time;Define the macro temporarily in a local manner;all those local definitions will be removed further in this patchset (to not break bisecting);Similar;0.5554823279380798
Button GPEs have been enabled in the acpi_wake_device_init() during boot;the button driver enables them for the second time;Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;Similar;0.6219804286956787
Button GPEs have been enabled in the acpi_wake_device_init() during boot;the button driver enables them for the second time;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.5696969032287598
Button GPEs have been enabled in the acpi_wake_device_init() during boot;the button driver enables them for the second time;fix acpi_driver.name usage;fix;Similar;0.6241855621337891
Button GPEs have been enabled in the acpi_wake_device_init() during boot;the button driver enables them for the second time;"Make ""module name"" actually match the file name";cosmetic only;Similar;0.5510151982307434
Button GPEs have been enabled in the acpi_wake_device_init() during boot;the button driver enables them for the second time;Remove unneeded acpi_handle from driver;unneeded;Similar;0.5095334053039551
Button GPEs have been enabled in the acpi_wake_device_init() during boot;the button driver enables them for the second time;restore /proc/acpi/button/ (ala 2.6.12)  ;[ACPI];Similar;0.7127904891967773
remove the GPE enabling code from the button driver;to avoid the problem;Clean up inclusions of ACPI header files;ACPI;Similar;0.5696902275085449
remove the GPE enabling code from the button driver;to avoid the problem;Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;Similar;0.7234557867050171
remove the GPE enabling code from the button driver;to avoid the problem;<acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> should not be included directly from any files that are built for CONFIG_ACPI unset;because that generally leads to build warnings about undefined symbols in !CONFIG_ACPI builds;Similar;0.5138821601867676
remove the GPE enabling code from the button driver;to avoid the problem;Use the patch to replace the origin code;provide a better solution;Similar;0.7095504999160767
remove the GPE enabling code from the button driver;to avoid the problem;Remove useless type argument of driver .remove() operation;useless;Similar;0.7860485315322876
remove the GPE enabling code from the button driver;to avoid the problem;"The second argument of ACPI driver .remove() operation is only used by the ACPI processor driver
";the value passed to that driver through it is always available from the given struct acpi_device objects removal_type field;Similar;0.700774610042572
remove the GPE enabling code from the button driver;to avoid the problem;drop the second ACPI driver .remove() argument  ;the second ACPI driver .remove() argument is in fact useless;Similar;0.7895909547805786
remove the GPE enabling code from the button driver;to avoid the problem;Fix unused function warnings for CONFIG_PM_SLEEP;unused function warnings;Similar;0.6718213558197021
remove the GPE enabling code from the button driver;to avoid the problem;add #ifdefs to prevent them from being built in that case  ;several suspend/resume functions in ACPI drivers are not used for CONFIG_PM_SLEEP unset;Similar;0.6773368120193481
remove the GPE enabling code from the button driver;to avoid the problem;remove unused procfs I/F;unused;Similar;0.7135281562805176
remove the GPE enabling code from the button driver;to avoid the problem;Remove unused ACPI button procfs interface;unused;Similar;0.8864560723304749
remove the GPE enabling code from the button driver;to avoid the problem;Avoid disabling wakeup unnecessarily on remove;-;Similar;0.5276970863342285
remove the GPE enabling code from the button driver;to avoid the problem;use standard device wakeup flags instead of the special ACPI flags for handling those devices;address this problem;Similar;0.5130481719970703
remove the GPE enabling code from the button driver;to avoid the problem;prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;Similar;0.6095724105834961
remove the GPE enabling code from the button driver;to avoid the problem;CONFIG_GCOV_KERNEL was turned off for all tests and a few more options had to be turned off depending on archs to make things build;my distributed build env didnt work with gcov compiles, like ipr on powerpc/64 which failed due to missing writeq;Similar;0.6310009956359863
remove the GPE enabling code from the button driver;to avoid the problem;percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;Similar;0.6087585687637329
remove the GPE enabling code from the button driver;to avoid the problem;Remove the old GPE type handling entirely  ;Gets rid of various quirks, like the implicit disabling with GPE type setting;Similar;0.6339112520217896
remove the GPE enabling code from the button driver;to avoid the problem;"This patch is to eliminate the above warning message
";Device PNP0C0D:00 failed to resume: error 1;Similar;0.643185019493103
remove the GPE enabling code from the button driver;to avoid the problem;whitespace fix  ;This does not change any actual console output;Similar;0.5485842227935791
remove the GPE enabling code from the button driver;to avoid the problem;we could install either a fixed event handler or a notify handler, but the Linux/ACPI code now handles that for us;We previously needed that so we dont need to worry about it;Similar;0.566223680973053
remove the GPE enabling code from the button driver;to avoid the problem;type: Power Button;I dont think theres anything meaningful user-space can do by knowing whether a button is a control method or a fixed hardware button;Similar;0.5072295665740967
remove the GPE enabling code from the button driver;to avoid the problem;Remove button->device pointer;button;Similar;0.828407883644104
remove the GPE enabling code from the button driver;to avoid the problem;We no longer need a pointer from struct acpi_button back to the struct acpi_device;no longer need;Similar;0.7322900295257568
remove the GPE enabling code from the button driver;to avoid the problem;This patch adds temporaries to cache the acpi_device_hid(), acpi_device_name(), and acpi_device_class() pointers;so we dont have to clutter the code with so many uses of those interfaces;Similar;0.6296009421348572
remove the GPE enabling code from the button driver;to avoid the problem;changes a bit of whitespace to follow Linux conventions;follow Linux conventions;Similar;0.5830031633377075
remove the GPE enabling code from the button driver;to avoid the problem;use .notify method instead of installing handler directly  ;-;Similar;0.6168359518051147
remove the GPE enabling code from the button driver;to avoid the problem;convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.7466342449188232
remove the GPE enabling code from the button driver;to avoid the problem;"proc_fops is declared as ""const""";should give some thoughts;Similar;0.5346081852912903
remove the GPE enabling code from the button driver;to avoid the problem;start using GPE from userspace;GPE is already disabled in interrupt context;Similar;0.5247579216957092
remove the GPE enabling code from the button driver;to avoid the problem;Move all the component definitions for drivers to a single shared place, include/acpi/acpi_drivers.h  ;to have a single shared place;Similar;0.5327419638633728
remove the GPE enabling code from the button driver;to avoid the problem;"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.5288805961608887
remove the GPE enabling code from the button driver;to avoid the problem;Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;Similar;0.6605807542800903
remove the GPE enabling code from the button driver;to avoid the problem;use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Similar;0.5969816446304321
remove the GPE enabling code from the button driver;to avoid the problem;Add correct ->owner to proc_fops to fix reading/module unloading race  ;fix reading/module unloading race;Similar;0.5141329765319824
remove the GPE enabling code from the button driver;to avoid the problem;get rid of input BIT* duplicate defines;duplicate;Similar;0.7307710647583008
remove the GPE enabling code from the button driver;to avoid the problem;Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;Similar;0.7381482124328613
remove the GPE enabling code from the button driver;to avoid the problem;Define the macro temporarily in a local manner;all those local definitions will be removed further in this patchset (to not break bisecting);Similar;0.5177968740463257
remove the GPE enabling code from the button driver;to avoid the problem;Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;Similar;0.5974984765052795
remove the GPE enabling code from the button driver;to avoid the problem;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.7946427464485168
remove the GPE enabling code from the button driver;to avoid the problem;fix acpi_driver.name usage;fix;Similar;0.6983168125152588
remove the GPE enabling code from the button driver;to avoid the problem;"Invoke with ; as leaving it off confuses Lindent  ";gcc doesnt care;Similar;0.5379600524902344
remove the GPE enabling code from the button driver;to avoid the problem;Fix indentation where Lindent did get confused  ;Lindent did get confused;Similar;0.5760193467140198
remove the GPE enabling code from the button driver;to avoid the problem;remove unnecessary casts and variable initializations, clean up formatting;unnecessary;Similar;0.5578479766845703
remove the GPE enabling code from the button driver;to avoid the problem;Remove unneeded acpi_handle from driver;unneeded;Similar;0.8245996236801147
remove the GPE enabling code from the button driver;to avoid the problem;Use acpi_devices handle instead of drivers  ;-;Similar;0.6843236684799194
remove the GPE enabling code from the button driver;to avoid the problem;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.6793832778930664
remove the GPE enabling code from the button driver;to avoid the problem;restore /proc/acpi/button/ (ala 2.6.12)  ;[ACPI];Similar;0.5400893688201904
remove the GPE enabling code from the button driver;to avoid the problem;"Create a separate ""historical"" git archive";about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated;Similar;0.6263835430145264
Clean up inclusions of ACPI header files;ACPI;Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;Similar;0.6394306421279907
Clean up inclusions of ACPI header files;ACPI;<acpi/acpi_bus.h> be included prior to <acpi/acpi_drivers.h>;so that the acpi_pci_root declarations the latter depends on are always there;Similar;0.5284504890441895
Clean up inclusions of ACPI header files;ACPI;Use the patch to replace the origin code;provide a better solution;Similar;0.6389105319976807
Clean up inclusions of ACPI header files;ACPI;Fix unused function warnings for CONFIG_PM_SLEEP;unused function warnings;Similar;0.5385318994522095
Clean up inclusions of ACPI header files;ACPI;remove unused procfs I/F;unused;Similar;0.5481055974960327
Clean up inclusions of ACPI header files;ACPI;Remove unused ACPI button procfs interface;unused;Similar;0.6229006052017212
Clean up inclusions of ACPI header files;ACPI;Use device wakeup flags for handling ACPI wakeup devices;for handling ACPI wakeup devices;Similar;0.6956546902656555
Clean up inclusions of ACPI header files;ACPI;use standard device wakeup flags instead of the special ACPI flags for handling those devices;address this problem;Similar;0.5844656229019165
Clean up inclusions of ACPI header files;ACPI;Use GPE reference counting to support shared GPEs  ;the wakeup enable mask bits of GPEs are set as soon as the GPEs are enabled to wake up the system;Similar;0.605444073677063
Clean up inclusions of ACPI header files;ACPI;it is sufficient to set/unset the wakeup mask bits for them during system sleep transitions;"this means that the reference counting of ""wakeup"" GPEs doesnt really make sense";Similar;0.5633848905563354
Clean up inclusions of ACPI header files;ACPI;This will allow us to simplify the GPE handling code quite a bit;that change is too intrusive for 2.6.35;Similar;0.5735052824020386
Clean up inclusions of ACPI header files;ACPI;Update gfp.h and slab.h includes  ;prepare for breaking implicit slab.h inclusion from percpu.h;Similar;0.640174388885498
Clean up inclusions of ACPI header files;ACPI;Prepare for this change by updating users of gfp and slab facilities;include those headers directly instead of assuming availability;Similar;0.5946252346038818
Clean up inclusions of ACPI header files;ACPI;the following script is used as the basis of conversion;As this conversion needs to touch a large number of source files;Similar;0.6178677678108215
Clean up inclusions of ACPI header files;ACPI;prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;Similar;0.7054651975631714
Clean up inclusions of ACPI header files;ACPI;The script was run again  ;to make sure no file was left behind;Similar;0.5420427322387695
Clean up inclusions of ACPI header files;ACPI;description of the patch behaviour;an action or a change;Similar;0.5406068563461304
Clean up inclusions of ACPI header files;ACPI;failures were fixed;Build tests were done on the following configurations;Similar;0.5174350738525391
Clean up inclusions of ACPI header files;ACPI;percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;Similar;0.5657416582107544
Clean up inclusions of ACPI header files;ACPI;Introduce a reference counter for run-wake devices and a function that will initialize all of the run-time wake-up fields for given device.;-;Similar;0.6035496592521667
Clean up inclusions of ACPI header files;ACPI;Add an API to allow devices to indicate whether or not they want their devices GPE to be enabled for both runtime and wakeup events;to allow devices to indicate whether or not they want their devices GPE to be enabled;Similar;0.5616940855979919
Clean up inclusions of ACPI header files;ACPI;Remove the old GPE type handling entirely  ;Gets rid of various quirks, like the implicit disabling with GPE type setting;Similar;0.5221272706985474
Clean up inclusions of ACPI header files;ACPI;"This patch is to eliminate the above warning message
";Device PNP0C0D:00 failed to resume: error 1;Similar;0.5148557424545288
Clean up inclusions of ACPI header files;ACPI;whitespace fix  ;This does not change any actual console output;Similar;0.6241042017936707
Clean up inclusions of ACPI header files;ACPI;we could install either a fixed event handler or a notify handler, but the Linux/ACPI code now handles that for us;We previously needed that so we dont need to worry about it;Similar;0.548907995223999
Clean up inclusions of ACPI header files;ACPI;Remove button->device pointer;button;Similar;0.6193106174468994
Clean up inclusions of ACPI header files;ACPI;We no longer need a pointer from struct acpi_button back to the struct acpi_device;no longer need;Similar;0.5101879835128784
Clean up inclusions of ACPI header files;ACPI;This patch adds temporaries to cache the acpi_device_hid(), acpi_device_name(), and acpi_device_class() pointers;so we dont have to clutter the code with so many uses of those interfaces;Similar;0.6274179220199585
Clean up inclusions of ACPI header files;ACPI;Better to oops and learn about a bug;than to silently cover it up;Similar;0.50529944896698
Clean up inclusions of ACPI header files;ACPI;changes a bit of whitespace to follow Linux conventions;follow Linux conventions;Similar;0.6380095481872559
Clean up inclusions of ACPI header files;ACPI;use .notify method instead of installing handler directly  ;-;Similar;0.5406533479690552
Clean up inclusions of ACPI header files;ACPI;The presence of .notify() causes Linux/ACPI to manage event handlers and notify handlers on our behalf  ;so we dont have to install and remove them ourselves;Similar;0.5590223073959351
Clean up inclusions of ACPI header files;ACPI;convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.6768093109130859
Clean up inclusions of ACPI header files;ACPI;"proc_fops is declared as ""const""";should give some thoughts;Similar;0.5485295057296753
Clean up inclusions of ACPI header files;ACPI;start using GPE from userspace;GPE is already disabled in interrupt context;Similar;0.5857982635498047
Clean up inclusions of ACPI header files;ACPI;Move all the component definitions for drivers to a single shared place, include/acpi/acpi_drivers.h  ;to have a single shared place;Similar;0.597724199295044
Clean up inclusions of ACPI header files;ACPI;"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.6669973731040955
Clean up inclusions of ACPI header files;ACPI;Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;Similar;0.6143368482589722
Clean up inclusions of ACPI header files;ACPI;use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Similar;0.6091742515563965
Clean up inclusions of ACPI header files;ACPI;Use proc_create()/proc_create_data() to make sure that ->proc_fops and ->data be setup;before gluing PDE to main tree;Similar;0.6050429344177246
Clean up inclusions of ACPI header files;ACPI;get rid of input BIT* duplicate defines;duplicate;Similar;0.6306554079055786
Clean up inclusions of ACPI header files;ACPI;Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;Similar;0.5673441886901855
Clean up inclusions of ACPI header files;ACPI;Define the macro temporarily in a local manner;all those local definitions will be removed further in this patchset (to not break bisecting);Similar;0.5397583246231079
Clean up inclusions of ACPI header files;ACPI;Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;Similar;0.558133065700531
Clean up inclusions of ACPI header files;ACPI;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.6332617402076721
Clean up inclusions of ACPI header files;ACPI;fix acpi_driver.name usage;fix;Similar;0.6371848583221436
Clean up inclusions of ACPI header files;ACPI;"Make ""module name"" actually match the file name";cosmetic only;Similar;0.6335262060165405
Clean up inclusions of ACPI header files;ACPI;Fix indentation where Lindent did get confused  ;Lindent did get confused;Similar;0.5131067037582397
Clean up inclusions of ACPI header files;ACPI;remove unnecessary casts and variable initializations, clean up formatting;unnecessary;Similar;0.7514864206314087
Clean up inclusions of ACPI header files;ACPI;Remove unneeded acpi_handle from driver;unneeded;Similar;0.5574790835380554
Clean up inclusions of ACPI header files;ACPI;Use acpi_devices handle instead of drivers  ;-;Similar;0.5160374641418457
Clean up inclusions of ACPI header files;ACPI;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.6698148250579834
Clean up inclusions of ACPI header files;ACPI;restore /proc/acpi/button/ (ala 2.6.12)  ;[ACPI];Similar;0.5808545351028442
Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;<acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> should not be included directly from any files that are built for CONFIG_ACPI unset;because that generally leads to build warnings about undefined symbols in !CONFIG_ACPI builds;Similar;0.6630341410636902
Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;<acpi/acpi_bus.h> be included prior to <acpi/acpi_drivers.h>;so that the acpi_pci_root declarations the latter depends on are always there;Similar;0.5252925753593445
Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;Use the patch to replace the origin code;provide a better solution;Similar;0.6570274233818054
Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;Remove useless type argument of driver .remove() operation;useless;Similar;0.7026786804199219
Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;"The second argument of ACPI driver .remove() operation is only used by the ACPI processor driver
";the value passed to that driver through it is always available from the given struct acpi_device objects removal_type field;Similar;0.6362069845199585
Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;drop the second ACPI driver .remove() argument  ;the second ACPI driver .remove() argument is in fact useless;Similar;0.7103946208953857
Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;Fix unused function warnings for CONFIG_PM_SLEEP;unused function warnings;Similar;0.6474513411521912
Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;add #ifdefs to prevent them from being built in that case  ;several suspend/resume functions in ACPI drivers are not used for CONFIG_PM_SLEEP unset;Similar;0.6424024105072021
Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;remove unused procfs I/F;unused;Similar;0.669623613357544
Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;Remove unused ACPI button procfs interface;unused;Similar;0.749668538570404
Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;Avoid disabling wakeup unnecessarily on remove;-;Similar;0.5504118800163269
Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;use standard device wakeup flags instead of the special ACPI flags for handling those devices;address this problem;Similar;0.6231321692466736
Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;Update gfp.h and slab.h includes  ;prepare for breaking implicit slab.h inclusion from percpu.h;Similar;0.530440092086792
Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;Similar;0.6038074493408203
Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;CONFIG_GCOV_KERNEL was turned off for all tests and a few more options had to be turned off depending on archs to make things build;my distributed build env didnt work with gcov compiles, like ipr on powerpc/64 which failed due to missing writeq;Similar;0.6721734404563904
Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;Similar;0.5515143871307373
Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;Remove the old GPE type handling entirely  ;Gets rid of various quirks, like the implicit disabling with GPE type setting;Similar;0.6137207746505737
Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;"This patch is to eliminate the above warning message
";Device PNP0C0D:00 failed to resume: error 1;Similar;0.6362301111221313
Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;whitespace fix  ;This does not change any actual console output;Similar;0.5321333408355713
Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;we could install either a fixed event handler or a notify handler, but the Linux/ACPI code now handles that for us;We previously needed that so we dont need to worry about it;Similar;0.687645673751831
Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;Remove button->device pointer;button;Similar;0.6630123853683472
Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;We no longer need a pointer from struct acpi_button back to the struct acpi_device;no longer need;Similar;0.6735395193099976
Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;This patch adds temporaries to cache the acpi_device_hid(), acpi_device_name(), and acpi_device_class() pointers;so we dont have to clutter the code with so many uses of those interfaces;Similar;0.6738933324813843
Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;Better to oops and learn about a bug;than to silently cover it up;Similar;0.5024093389511108
Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;changes a bit of whitespace to follow Linux conventions;follow Linux conventions;Similar;0.6924233436584473
Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;use .notify method instead of installing handler directly  ;-;Similar;0.5579329133033752
Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;The presence of .notify() causes Linux/ACPI to manage event handlers and notify handlers on our behalf  ;so we dont have to install and remove them ourselves;Similar;0.5709118247032166
Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.608099102973938
Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;dont want such modular code;definitely;Similar;0.5269456505775452
Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;Move all the component definitions for drivers to a single shared place, include/acpi/acpi_drivers.h  ;to have a single shared place;Similar;0.5714477300643921
Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.521385133266449
Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;Similar;0.547279953956604
Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Similar;0.504045844078064
Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;get rid of input BIT* duplicate defines;duplicate;Similar;0.636218786239624
Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;Similar;0.7308502197265625
Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;Similar;0.6075321435928345
Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.7620986700057983
Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;fix acpi_driver.name usage;fix;Similar;0.5856146812438965
Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;ls bus/acpi/drivers  ;Display the list of ACPI drivers.;Similar;0.5001813173294067
Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;Fix indentation where Lindent did get confused  ;Lindent did get confused;Similar;0.5575960874557495
Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;remove unnecessary casts and variable initializations, clean up formatting;unnecessary;Similar;0.6511286497116089
Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;Remove unneeded acpi_handle from driver;unneeded;Similar;0.7425323128700256
Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;Use acpi_devices handle instead of drivers  ;-;Similar;0.6269066333770752
Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.6626609563827515
Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;restore /proc/acpi/button/ (ala 2.6.12)  ;[ACPI];Similar;0.5079795122146606
Replace direct inclusions of <acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> with <linux/acpi.h> inclusions and remove some inclusions of those files that arent necessary;incorrect, not necessary;"Create a separate ""historical"" git archive";about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated;Similar;0.5734664797782898
<acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> should not be included directly from any files that are built for CONFIG_ACPI unset;because that generally leads to build warnings about undefined symbols in !CONFIG_ACPI builds;Remove useless type argument of driver .remove() operation;useless;Similar;0.544292688369751
<acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> should not be included directly from any files that are built for CONFIG_ACPI unset;because that generally leads to build warnings about undefined symbols in !CONFIG_ACPI builds;"The second argument of ACPI driver .remove() operation is only used by the ACPI processor driver
";the value passed to that driver through it is always available from the given struct acpi_device objects removal_type field;Similar;0.5363209247589111
<acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> should not be included directly from any files that are built for CONFIG_ACPI unset;because that generally leads to build warnings about undefined symbols in !CONFIG_ACPI builds;drop the second ACPI driver .remove() argument  ;the second ACPI driver .remove() argument is in fact useless;Similar;0.5241357088088989
<acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> should not be included directly from any files that are built for CONFIG_ACPI unset;because that generally leads to build warnings about undefined symbols in !CONFIG_ACPI builds;add #ifdefs to prevent them from being built in that case  ;several suspend/resume functions in ACPI drivers are not used for CONFIG_PM_SLEEP unset;Similar;0.6390891075134277
<acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> should not be included directly from any files that are built for CONFIG_ACPI unset;because that generally leads to build warnings about undefined symbols in !CONFIG_ACPI builds;remove unused procfs I/F;unused;Similar;0.5464667081832886
<acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> should not be included directly from any files that are built for CONFIG_ACPI unset;because that generally leads to build warnings about undefined symbols in !CONFIG_ACPI builds;Remove unused ACPI button procfs interface;unused;Similar;0.5928725004196167
<acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> should not be included directly from any files that are built for CONFIG_ACPI unset;because that generally leads to build warnings about undefined symbols in !CONFIG_ACPI builds;Avoid disabling wakeup unnecessarily on remove;-;Similar;0.5155513286590576
<acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> should not be included directly from any files that are built for CONFIG_ACPI unset;because that generally leads to build warnings about undefined symbols in !CONFIG_ACPI builds;use standard device wakeup flags instead of the special ACPI flags for handling those devices;address this problem;Similar;0.5329423546791077
<acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> should not be included directly from any files that are built for CONFIG_ACPI unset;because that generally leads to build warnings about undefined symbols in !CONFIG_ACPI builds;CONFIG_GCOV_KERNEL was turned off for all tests and a few more options had to be turned off depending on archs to make things build;my distributed build env didnt work with gcov compiles, like ipr on powerpc/64 which failed due to missing writeq;Similar;0.5453225374221802
<acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> should not be included directly from any files that are built for CONFIG_ACPI unset;because that generally leads to build warnings about undefined symbols in !CONFIG_ACPI builds;dont try to use a non-existent lid device;non-existent;Similar;0.6923221945762634
<acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> should not be included directly from any files that are built for CONFIG_ACPI unset;because that generally leads to build warnings about undefined symbols in !CONFIG_ACPI builds;not all ACPI drivers use/want it;they should not have to #undef PREFIX to define their own;Similar;0.5152802467346191
<acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> should not be included directly from any files that are built for CONFIG_ACPI unset;because that generally leads to build warnings about undefined symbols in !CONFIG_ACPI builds;We no longer need a pointer from struct acpi_button back to the struct acpi_device;no longer need;Similar;0.6828756332397461
<acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> should not be included directly from any files that are built for CONFIG_ACPI unset;because that generally leads to build warnings about undefined symbols in !CONFIG_ACPI builds;dont want such modular code;definitely;Similar;0.5871930122375488
<acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> should not be included directly from any files that are built for CONFIG_ACPI unset;because that generally leads to build warnings about undefined symbols in !CONFIG_ACPI builds;Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;Similar;0.6283025741577148
<acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> should not be included directly from any files that are built for CONFIG_ACPI unset;because that generally leads to build warnings about undefined symbols in !CONFIG_ACPI builds;Remove unneeded acpi_handle from driver;unneeded;Similar;0.6357085704803467
<acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> should not be included directly from any files that are built for CONFIG_ACPI unset;because that generally leads to build warnings about undefined symbols in !CONFIG_ACPI builds;Use acpi_devices handle instead of drivers  ;-;Similar;0.5848859548568726
<acpi/acpi.h>, <acpi/acpi_bus.h> and <acpi/acpi_drivers.h> should not be included directly from any files that are built for CONFIG_ACPI unset;because that generally leads to build warnings about undefined symbols in !CONFIG_ACPI builds;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.5345401167869568
<acpi/acpi_bus.h> be included prior to <acpi/acpi_drivers.h>;so that the acpi_pci_root declarations the latter depends on are always there;Use device wakeup flags for handling ACPI wakeup devices;for handling ACPI wakeup devices;Similar;0.6451033353805542
<acpi/acpi_bus.h> be included prior to <acpi/acpi_drivers.h>;so that the acpi_pci_root declarations the latter depends on are always there;use standard device wakeup flags instead of the special ACPI flags for handling those devices;address this problem;Similar;0.5703885555267334
<acpi/acpi_bus.h> be included prior to <acpi/acpi_drivers.h>;so that the acpi_pci_root declarations the latter depends on are always there;Use GPE reference counting to support shared GPEs  ;the wakeup enable mask bits of GPEs are set as soon as the GPEs are enabled to wake up the system;Similar;0.6091439723968506
<acpi/acpi_bus.h> be included prior to <acpi/acpi_drivers.h>;so that the acpi_pci_root declarations the latter depends on are always there;Update gfp.h and slab.h includes  ;prepare for breaking implicit slab.h inclusion from percpu.h;Similar;0.650535523891449
<acpi/acpi_bus.h> be included prior to <acpi/acpi_drivers.h>;so that the acpi_pci_root declarations the latter depends on are always there;Prepare for this change by updating users of gfp and slab facilities;include those headers directly instead of assuming availability;Similar;0.5447646975517273
<acpi/acpi_bus.h> be included prior to <acpi/acpi_drivers.h>;so that the acpi_pci_root declarations the latter depends on are always there;the following script is used as the basis of conversion;As this conversion needs to touch a large number of source files;Similar;0.6179327964782715
<acpi/acpi_bus.h> be included prior to <acpi/acpi_drivers.h>;so that the acpi_pci_root declarations the latter depends on are always there;put the new include  ;its order conforms to its surrounding;Similar;0.5203849077224731
<acpi/acpi_bus.h> be included prior to <acpi/acpi_drivers.h>;so that the acpi_pci_root declarations the latter depends on are always there;prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;Similar;0.5316914319992065
<acpi/acpi_bus.h> be included prior to <acpi/acpi_drivers.h>;so that the acpi_pci_root declarations the latter depends on are always there;percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;Similar;0.5714212656021118
<acpi/acpi_bus.h> be included prior to <acpi/acpi_drivers.h>;so that the acpi_pci_root declarations the latter depends on are always there;Introduce a reference counter for run-wake devices and a function that will initialize all of the run-time wake-up fields for given device.;-;Similar;0.5866029262542725
<acpi/acpi_bus.h> be included prior to <acpi/acpi_drivers.h>;so that the acpi_pci_root declarations the latter depends on are always there;Add an API to allow devices to indicate whether or not they want their devices GPE to be enabled for both runtime and wakeup events;to allow devices to indicate whether or not they want their devices GPE to be enabled;Similar;0.6466978788375854
<acpi/acpi_bus.h> be included prior to <acpi/acpi_drivers.h>;so that the acpi_pci_root declarations the latter depends on are always there;complain the following warning message;"will

";Similar;0.5202298164367676
<acpi/acpi_bus.h> be included prior to <acpi/acpi_drivers.h>;so that the acpi_pci_root declarations the latter depends on are always there;return -ENODEV;theres no lid device present;Similar;0.5492812395095825
<acpi/acpi_bus.h> be included prior to <acpi/acpi_drivers.h>;so that the acpi_pci_root declarations the latter depends on are always there;Some drivers need to know when a lid event occurs and get the current status;-;Similar;0.5222475528717041
<acpi/acpi_bus.h> be included prior to <acpi/acpi_drivers.h>;so that the acpi_pci_root declarations the latter depends on are always there;we could install either a fixed event handler or a notify handler, but the Linux/ACPI code now handles that for us;We previously needed that so we dont need to worry about it;Similar;0.5689085721969604
<acpi/acpi_bus.h> be included prior to <acpi/acpi_drivers.h>;so that the acpi_pci_root declarations the latter depends on are always there;This patch adds temporaries to cache the acpi_device_hid(), acpi_device_name(), and acpi_device_class() pointers;so we dont have to clutter the code with so many uses of those interfaces;Similar;0.5128960609436035
<acpi/acpi_bus.h> be included prior to <acpi/acpi_drivers.h>;so that the acpi_pci_root declarations the latter depends on are always there;changes a bit of whitespace to follow Linux conventions;follow Linux conventions;Similar;0.5344047546386719
<acpi/acpi_bus.h> be included prior to <acpi/acpi_drivers.h>;so that the acpi_pci_root declarations the latter depends on are always there;use .notify method instead of installing handler directly  ;-;Similar;0.61878901720047
<acpi/acpi_bus.h> be included prior to <acpi/acpi_drivers.h>;so that the acpi_pci_root declarations the latter depends on are always there;The presence of .notify() causes Linux/ACPI to manage event handlers and notify handlers on our behalf  ;so we dont have to install and remove them ourselves;Similar;0.5931532382965088
<acpi/acpi_bus.h> be included prior to <acpi/acpi_drivers.h>;so that the acpi_pci_root declarations the latter depends on are always there;convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.649490475654602
<acpi/acpi_bus.h> be included prior to <acpi/acpi_drivers.h>;so that the acpi_pci_root declarations the latter depends on are always there;"proc_fops is declared as ""const""";should give some thoughts;Similar;0.6372921466827393
<acpi/acpi_bus.h> be included prior to <acpi/acpi_drivers.h>;so that the acpi_pci_root declarations the latter depends on are always there;start using GPE from userspace;GPE is already disabled in interrupt context;Similar;0.6597366333007812
<acpi/acpi_bus.h> be included prior to <acpi/acpi_drivers.h>;so that the acpi_pci_root declarations the latter depends on are always there;Move all the component definitions for drivers to a single shared place, include/acpi/acpi_drivers.h  ;to have a single shared place;Similar;0.6958249807357788
<acpi/acpi_bus.h> be included prior to <acpi/acpi_drivers.h>;so that the acpi_pci_root declarations the latter depends on are always there;"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.5743952989578247
<acpi/acpi_bus.h> be included prior to <acpi/acpi_drivers.h>;so that the acpi_pci_root declarations the latter depends on are always there;Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;Similar;0.5578433275222778
<acpi/acpi_bus.h> be included prior to <acpi/acpi_drivers.h>;so that the acpi_pci_root declarations the latter depends on are always there;use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Similar;0.5214402675628662
<acpi/acpi_bus.h> be included prior to <acpi/acpi_drivers.h>;so that the acpi_pci_root declarations the latter depends on are always there;Use proc_create()/proc_create_data() to make sure that ->proc_fops and ->data be setup;before gluing PDE to main tree;Similar;0.5839183330535889
<acpi/acpi_bus.h> be included prior to <acpi/acpi_drivers.h>;so that the acpi_pci_root declarations the latter depends on are always there;get rid of input BIT* duplicate defines;duplicate;Similar;0.5136569738388062
<acpi/acpi_bus.h> be included prior to <acpi/acpi_drivers.h>;so that the acpi_pci_root declarations the latter depends on are always there;Define the macro temporarily in a local manner;all those local definitions will be removed further in this patchset (to not break bisecting);Similar;0.5372812747955322
<acpi/acpi_bus.h> be included prior to <acpi/acpi_drivers.h>;so that the acpi_pci_root declarations the latter depends on are always there;Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;Similar;0.7652425765991211
<acpi/acpi_bus.h> be included prior to <acpi/acpi_drivers.h>;so that the acpi_pci_root declarations the latter depends on are always there;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.5555065870285034
<acpi/acpi_bus.h> be included prior to <acpi/acpi_drivers.h>;so that the acpi_pci_root declarations the latter depends on are always there;fix acpi_driver.name usage;fix;Similar;0.615147590637207
<acpi/acpi_bus.h> be included prior to <acpi/acpi_drivers.h>;so that the acpi_pci_root declarations the latter depends on are always there;ls bus/acpi/drivers  ;Display the list of ACPI drivers.;Similar;0.6853100061416626
<acpi/acpi_bus.h> be included prior to <acpi/acpi_drivers.h>;so that the acpi_pci_root declarations the latter depends on are always there;"Make ""module name"" actually match the file name";cosmetic only;Similar;0.5646014213562012
<acpi/acpi_bus.h> be included prior to <acpi/acpi_drivers.h>;so that the acpi_pci_root declarations the latter depends on are always there;Use acpi_devices handle instead of drivers  ;-;Similar;0.5736929178237915
<acpi/acpi_bus.h> be included prior to <acpi/acpi_drivers.h>;so that the acpi_pci_root declarations the latter depends on are always there;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.5398061275482178
<acpi/acpi_bus.h> be included prior to <acpi/acpi_drivers.h>;so that the acpi_pci_root declarations the latter depends on are always there;restore /proc/acpi/button/ (ala 2.6.12)  ;[ACPI];Similar;0.6081000566482544
<acpi/acpi_bus.h> be included prior to <acpi/acpi_drivers.h>;so that the acpi_pci_root declarations the latter depends on are always there;"Create a separate ""historical"" git archive";about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated;Similar;0.5264122486114502
Use the patch to replace the origin code;provide a better solution;Remove useless type argument of driver .remove() operation;useless;Similar;0.5978206992149353
Use the patch to replace the origin code;provide a better solution;"The second argument of ACPI driver .remove() operation is only used by the ACPI processor driver
";the value passed to that driver through it is always available from the given struct acpi_device objects removal_type field;Similar;0.5895272493362427
Use the patch to replace the origin code;provide a better solution;drop the second ACPI driver .remove() argument  ;the second ACPI driver .remove() argument is in fact useless;Similar;0.5900890827178955
Use the patch to replace the origin code;provide a better solution;Fix unused function warnings for CONFIG_PM_SLEEP;unused function warnings;Similar;0.6432643532752991
Use the patch to replace the origin code;provide a better solution;add #ifdefs to prevent them from being built in that case  ;several suspend/resume functions in ACPI drivers are not used for CONFIG_PM_SLEEP unset;Similar;0.5971089601516724
Use the patch to replace the origin code;provide a better solution;remove unused procfs I/F;unused;Similar;0.5816859006881714
Use the patch to replace the origin code;provide a better solution;Remove unused ACPI button procfs interface;unused;Similar;0.6479012966156006
Use the patch to replace the origin code;provide a better solution;Use GPE reference counting to support shared GPEs  ;the wakeup enable mask bits of GPEs are set as soon as the GPEs are enabled to wake up the system;Similar;0.5571706891059875
Use the patch to replace the origin code;provide a better solution;This will allow us to simplify the GPE handling code quite a bit;that change is too intrusive for 2.6.35;Similar;0.5360156297683716
Use the patch to replace the origin code;provide a better solution;Update gfp.h and slab.h includes  ;prepare for breaking implicit slab.h inclusion from percpu.h;Similar;0.5451710224151611
Use the patch to replace the origin code;provide a better solution;Prepare for this change by updating users of gfp and slab facilities;include those headers directly instead of assuming availability;Similar;0.5336220860481262
Use the patch to replace the origin code;provide a better solution;the following script is used as the basis of conversion;As this conversion needs to touch a large number of source files;Similar;0.6040709614753723
Use the patch to replace the origin code;provide a better solution;prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;Similar;0.7304762601852417
Use the patch to replace the origin code;provide a better solution;The script was run again  ;to make sure no file was left behind;Similar;0.5145347714424133
Use the patch to replace the origin code;provide a better solution;description of the patch behaviour;an action or a change;Similar;0.6901564002037048
Use the patch to replace the origin code;provide a better solution;failures were fixed;Build tests were done on the following configurations;Similar;0.5057260990142822
Use the patch to replace the origin code;provide a better solution;percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;Similar;0.5755127668380737
Use the patch to replace the origin code;provide a better solution;Introduce a reference counter for run-wake devices and a function that will initialize all of the run-time wake-up fields for given device.;-;Similar;0.5369569063186646
Use the patch to replace the origin code;provide a better solution;Add an API to allow devices to indicate whether or not they want their devices GPE to be enabled for both runtime and wakeup events;to allow devices to indicate whether or not they want their devices GPE to be enabled;Similar;0.5410680770874023
Use the patch to replace the origin code;provide a better solution;Remove the old GPE type handling entirely  ;Gets rid of various quirks, like the implicit disabling with GPE type setting;Similar;0.5004503130912781
Use the patch to replace the origin code;provide a better solution;complain the following warning message;"will

";Similar;0.5556829571723938
Use the patch to replace the origin code;provide a better solution;"This patch is to eliminate the above warning message
";Device PNP0C0D:00 failed to resume: error 1;Similar;0.69614177942276
Use the patch to replace the origin code;provide a better solution;whitespace fix  ;This does not change any actual console output;Similar;0.708605945110321
Use the patch to replace the origin code;provide a better solution;we could install either a fixed event handler or a notify handler, but the Linux/ACPI code now handles that for us;We previously needed that so we dont need to worry about it;Similar;0.6039447784423828
Use the patch to replace the origin code;provide a better solution;Remove button->device pointer;button;Similar;0.6625694036483765
Use the patch to replace the origin code;provide a better solution;This patch adds temporaries to cache the acpi_device_hid(), acpi_device_name(), and acpi_device_class() pointers;so we dont have to clutter the code with so many uses of those interfaces;Similar;0.7243084907531738
Use the patch to replace the origin code;provide a better solution;Better to oops and learn about a bug;than to silently cover it up;Similar;0.5542057156562805
Use the patch to replace the origin code;provide a better solution;changes a bit of whitespace to follow Linux conventions;follow Linux conventions;Similar;0.6458656787872314
Use the patch to replace the origin code;provide a better solution;use .notify method instead of installing handler directly  ;-;Similar;0.6079690456390381
Use the patch to replace the origin code;provide a better solution;The presence of .notify() causes Linux/ACPI to manage event handlers and notify handlers on our behalf  ;so we dont have to install and remove them ourselves;Similar;0.5333362817764282
Use the patch to replace the origin code;provide a better solution;convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.6311866641044617
Use the patch to replace the origin code;provide a better solution;Setting ->owner as done currently (pde->owner = THIS_MODULE) is racy;as correctly noted at bug #12454;Similar;0.51223224401474
Use the patch to replace the origin code;provide a better solution;"proc_fops is declared as ""const""";should give some thoughts;Similar;0.5303064584732056
Use the patch to replace the origin code;provide a better solution;start using GPE from userspace;GPE is already disabled in interrupt context;Similar;0.5563430786132812
Use the patch to replace the origin code;provide a better solution;Move all the component definitions for drivers to a single shared place, include/acpi/acpi_drivers.h  ;to have a single shared place;Similar;0.5278216600418091
Use the patch to replace the origin code;provide a better solution;"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.542547881603241
Use the patch to replace the origin code;provide a better solution;Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;Similar;0.6173111200332642
Use the patch to replace the origin code;provide a better solution;use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Similar;0.5953787565231323
Use the patch to replace the origin code;provide a better solution;Use proc_create()/proc_create_data() to make sure that ->proc_fops and ->data be setup;before gluing PDE to main tree;Similar;0.5911051034927368
Use the patch to replace the origin code;provide a better solution;Add correct ->owner to proc_fops to fix reading/module unloading race  ;fix reading/module unloading race;Similar;0.5819540023803711
Use the patch to replace the origin code;provide a better solution;get rid of input BIT* duplicate defines;duplicate;Similar;0.6405621767044067
Use the patch to replace the origin code;provide a better solution;Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;Similar;0.6158478260040283
Use the patch to replace the origin code;provide a better solution;Define the macro temporarily in a local manner;all those local definitions will be removed further in this patchset (to not break bisecting);Similar;0.605316162109375
Use the patch to replace the origin code;provide a better solution;Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;Similar;0.6219450235366821
Use the patch to replace the origin code;provide a better solution;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.720587968826294
Use the patch to replace the origin code;provide a better solution;fix acpi_driver.name usage;fix;Similar;0.72813880443573
Use the patch to replace the origin code;provide a better solution;"Make ""module name"" actually match the file name";cosmetic only;Similar;0.5828066468238831
Use the patch to replace the origin code;provide a better solution;Fix indentation where Lindent did get confused  ;Lindent did get confused;Similar;0.5714703798294067
Use the patch to replace the origin code;provide a better solution;remove unnecessary casts and variable initializations, clean up formatting;unnecessary;Similar;0.5852262377738953
Use the patch to replace the origin code;provide a better solution;Remove unneeded acpi_handle from driver;unneeded;Similar;0.5983110666275024
Use the patch to replace the origin code;provide a better solution;Use acpi_devices handle instead of drivers  ;-;Similar;0.5264869928359985
Use the patch to replace the origin code;provide a better solution;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.5982678532600403
Use the patch to replace the origin code;provide a better solution;"Create a separate ""historical"" git archive";about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated;Similar;0.573928713798523
Remove useless type argument of driver .remove() operation;useless;"The second argument of ACPI driver .remove() operation is only used by the ACPI processor driver
";the value passed to that driver through it is always available from the given struct acpi_device objects removal_type field;Similar;0.6705026030540466
Remove useless type argument of driver .remove() operation;useless;drop the second ACPI driver .remove() argument  ;the second ACPI driver .remove() argument is in fact useless;Similar;0.8664847612380981
Remove useless type argument of driver .remove() operation;useless;Fix unused function warnings for CONFIG_PM_SLEEP;unused function warnings;Similar;0.5969405770301819
Remove useless type argument of driver .remove() operation;useless;add #ifdefs to prevent them from being built in that case  ;several suspend/resume functions in ACPI drivers are not used for CONFIG_PM_SLEEP unset;Similar;0.6812146306037903
Remove useless type argument of driver .remove() operation;useless;remove unused procfs I/F;unused;Similar;0.831093966960907
Remove useless type argument of driver .remove() operation;useless;Remove unused ACPI button procfs interface;unused;Similar;0.7858115434646606
Remove useless type argument of driver .remove() operation;useless;Avoid disabling wakeup unnecessarily on remove;-;Similar;0.6969397068023682
Remove useless type argument of driver .remove() operation;useless;Most gfp.h inclusion directives were ignored  ;stuff from gfp.h was usually wildly available and often used in preprocessor macros;Similar;0.5048124194145203
Remove useless type argument of driver .remove() operation;useless;failures were fixed;Build tests were done on the following configurations;Similar;0.5411041378974915
Remove useless type argument of driver .remove() operation;useless;CONFIG_GCOV_KERNEL was turned off for all tests and a few more options had to be turned off depending on archs to make things build;my distributed build env didnt work with gcov compiles, like ipr on powerpc/64 which failed due to missing writeq;Similar;0.5513920783996582
Remove useless type argument of driver .remove() operation;useless;percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;Similar;0.591157078742981
Remove useless type argument of driver .remove() operation;useless;Remove the old GPE type handling entirely  ;Gets rid of various quirks, like the implicit disabling with GPE type setting;Similar;0.785374641418457
Remove useless type argument of driver .remove() operation;useless;"This patch is to eliminate the above warning message
";Device PNP0C0D:00 failed to resume: error 1;Similar;0.7676957845687866
Remove useless type argument of driver .remove() operation;useless;dont try to use a non-existent lid device;non-existent;Similar;0.6257939338684082
Remove useless type argument of driver .remove() operation;useless;whitespace fix  ;This does not change any actual console output;Similar;0.5891638994216919
Remove useless type argument of driver .remove() operation;useless;Remove button->device pointer;button;Similar;0.7949603796005249
Remove useless type argument of driver .remove() operation;useless;We no longer need a pointer from struct acpi_button back to the struct acpi_device;no longer need;Similar;0.7060161828994751
Remove useless type argument of driver .remove() operation;useless;use .notify method instead of installing handler directly  ;-;Similar;0.6286138296127319
Remove useless type argument of driver .remove() operation;useless;convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.5411641001701355
Remove useless type argument of driver .remove() operation;useless;Setting ->owner as done currently (pde->owner = THIS_MODULE) is racy;as correctly noted at bug #12454;Similar;0.5579292178153992
Remove useless type argument of driver .remove() operation;useless;"proc_fops is declared as ""const""";should give some thoughts;Similar;0.5728514194488525
Remove useless type argument of driver .remove() operation;useless;"rmmoded directories will be empty and return ""."" and "".."" -- no harm";no harm;Similar;0.5975571870803833
Remove useless type argument of driver .remove() operation;useless;dont want such modular code;definitely;Similar;0.6057237386703491
Remove useless type argument of driver .remove() operation;useless;use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Similar;0.6168648600578308
Remove useless type argument of driver .remove() operation;useless;get rid of input BIT* duplicate defines;duplicate;Similar;0.7763895392417908
Remove useless type argument of driver .remove() operation;useless;Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;Similar;0.7342182993888855
Remove useless type argument of driver .remove() operation;useless;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.7663216590881348
Remove useless type argument of driver .remove() operation;useless;fix acpi_driver.name usage;fix;Similar;0.6023262739181519
Remove useless type argument of driver .remove() operation;useless;"Invoke with ; as leaving it off confuses Lindent  ";gcc doesnt care;Similar;0.688606321811676
Remove useless type argument of driver .remove() operation;useless;Fix indentation where Lindent did get confused  ;Lindent did get confused;Similar;0.5987792015075684
Remove useless type argument of driver .remove() operation;useless;remove unnecessary casts and variable initializations, clean up formatting;unnecessary;Similar;0.6468473672866821
Remove useless type argument of driver .remove() operation;useless;Remove unneeded acpi_handle from driver;unneeded;Similar;0.8486064672470093
Remove useless type argument of driver .remove() operation;useless;Use acpi_devices handle instead of drivers  ;-;Similar;0.6748477816581726
Remove useless type argument of driver .remove() operation;useless;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.6967031955718994
Remove useless type argument of driver .remove() operation;useless;"Create a separate ""historical"" git archive";about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated;Similar;0.6743630170822144
"The second argument of ACPI driver .remove() operation is only used by the ACPI processor driver
";the value passed to that driver through it is always available from the given struct acpi_device objects removal_type field;drop the second ACPI driver .remove() argument  ;the second ACPI driver .remove() argument is in fact useless;Similar;0.6989850997924805
"The second argument of ACPI driver .remove() operation is only used by the ACPI processor driver
";the value passed to that driver through it is always available from the given struct acpi_device objects removal_type field;Fix unused function warnings for CONFIG_PM_SLEEP;unused function warnings;Similar;0.5210361480712891
"The second argument of ACPI driver .remove() operation is only used by the ACPI processor driver
";the value passed to that driver through it is always available from the given struct acpi_device objects removal_type field;add #ifdefs to prevent them from being built in that case  ;several suspend/resume functions in ACPI drivers are not used for CONFIG_PM_SLEEP unset;Similar;0.5699136257171631
"The second argument of ACPI driver .remove() operation is only used by the ACPI processor driver
";the value passed to that driver through it is always available from the given struct acpi_device objects removal_type field;remove unused procfs I/F;unused;Similar;0.6022135019302368
"The second argument of ACPI driver .remove() operation is only used by the ACPI processor driver
";the value passed to that driver through it is always available from the given struct acpi_device objects removal_type field;Remove unused ACPI button procfs interface;unused;Similar;0.6591945886611938
"The second argument of ACPI driver .remove() operation is only used by the ACPI processor driver
";the value passed to that driver through it is always available from the given struct acpi_device objects removal_type field;CONFIG_GCOV_KERNEL was turned off for all tests and a few more options had to be turned off depending on archs to make things build;my distributed build env didnt work with gcov compiles, like ipr on powerpc/64 which failed due to missing writeq;Similar;0.5862041711807251
"The second argument of ACPI driver .remove() operation is only used by the ACPI processor driver
";the value passed to that driver through it is always available from the given struct acpi_device objects removal_type field;Remove the old GPE type handling entirely  ;Gets rid of various quirks, like the implicit disabling with GPE type setting;Similar;0.531528651714325
"The second argument of ACPI driver .remove() operation is only used by the ACPI processor driver
";the value passed to that driver through it is always available from the given struct acpi_device objects removal_type field;"This patch is to eliminate the above warning message
";Device PNP0C0D:00 failed to resume: error 1;Similar;0.5579102039337158
"The second argument of ACPI driver .remove() operation is only used by the ACPI processor driver
";the value passed to that driver through it is always available from the given struct acpi_device objects removal_type field;we could install either a fixed event handler or a notify handler, but the Linux/ACPI code now handles that for us;We previously needed that so we dont need to worry about it;Similar;0.5810854434967041
"The second argument of ACPI driver .remove() operation is only used by the ACPI processor driver
";the value passed to that driver through it is always available from the given struct acpi_device objects removal_type field;Remove button->device pointer;button;Similar;0.600702166557312
"The second argument of ACPI driver .remove() operation is only used by the ACPI processor driver
";the value passed to that driver through it is always available from the given struct acpi_device objects removal_type field;We no longer need a pointer from struct acpi_button back to the struct acpi_device;no longer need;Similar;0.644690752029419
"The second argument of ACPI driver .remove() operation is only used by the ACPI processor driver
";the value passed to that driver through it is always available from the given struct acpi_device objects removal_type field;This patch adds temporaries to cache the acpi_device_hid(), acpi_device_name(), and acpi_device_class() pointers;so we dont have to clutter the code with so many uses of those interfaces;Similar;0.5448218584060669
"The second argument of ACPI driver .remove() operation is only used by the ACPI processor driver
";the value passed to that driver through it is always available from the given struct acpi_device objects removal_type field;use .notify method instead of installing handler directly  ;-;Similar;0.6156179904937744
"The second argument of ACPI driver .remove() operation is only used by the ACPI processor driver
";the value passed to that driver through it is always available from the given struct acpi_device objects removal_type field;The presence of .notify() causes Linux/ACPI to manage event handlers and notify handlers on our behalf  ;so we dont have to install and remove them ourselves;Similar;0.533077597618103
"The second argument of ACPI driver .remove() operation is only used by the ACPI processor driver
";the value passed to that driver through it is always available from the given struct acpi_device objects removal_type field;convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.5348079204559326
"The second argument of ACPI driver .remove() operation is only used by the ACPI processor driver
";the value passed to that driver through it is always available from the given struct acpi_device objects removal_type field;"proc_fops is declared as ""const""";should give some thoughts;Similar;0.5397688746452332
"The second argument of ACPI driver .remove() operation is only used by the ACPI processor driver
";the value passed to that driver through it is always available from the given struct acpi_device objects removal_type field;Move all the component definitions for drivers to a single shared place, include/acpi/acpi_drivers.h  ;to have a single shared place;Similar;0.5272290706634521
"The second argument of ACPI driver .remove() operation is only used by the ACPI processor driver
";the value passed to that driver through it is always available from the given struct acpi_device objects removal_type field;Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;Similar;0.5337299108505249
"The second argument of ACPI driver .remove() operation is only used by the ACPI processor driver
";the value passed to that driver through it is always available from the given struct acpi_device objects removal_type field;use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Similar;0.5726982951164246
"The second argument of ACPI driver .remove() operation is only used by the ACPI processor driver
";the value passed to that driver through it is always available from the given struct acpi_device objects removal_type field;get rid of input BIT* duplicate defines;duplicate;Similar;0.5910296440124512
"The second argument of ACPI driver .remove() operation is only used by the ACPI processor driver
";the value passed to that driver through it is always available from the given struct acpi_device objects removal_type field;Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;Similar;0.7137249112129211
"The second argument of ACPI driver .remove() operation is only used by the ACPI processor driver
";the value passed to that driver through it is always available from the given struct acpi_device objects removal_type field;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.6625968217849731
"The second argument of ACPI driver .remove() operation is only used by the ACPI processor driver
";the value passed to that driver through it is always available from the given struct acpi_device objects removal_type field;fix acpi_driver.name usage;fix;Similar;0.5740347504615784
"The second argument of ACPI driver .remove() operation is only used by the ACPI processor driver
";the value passed to that driver through it is always available from the given struct acpi_device objects removal_type field;Remove unneeded acpi_handle from driver;unneeded;Similar;0.6865426898002625
"The second argument of ACPI driver .remove() operation is only used by the ACPI processor driver
";the value passed to that driver through it is always available from the given struct acpi_device objects removal_type field;Use acpi_devices handle instead of drivers  ;-;Similar;0.6546227931976318
"The second argument of ACPI driver .remove() operation is only used by the ACPI processor driver
";the value passed to that driver through it is always available from the given struct acpi_device objects removal_type field;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.5763407349586487
"The second argument of ACPI driver .remove() operation is only used by the ACPI processor driver
";the value passed to that driver through it is always available from the given struct acpi_device objects removal_type field;"Create a separate ""historical"" git archive";about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated;Similar;0.5875746011734009
drop the second ACPI driver .remove() argument  ;the second ACPI driver .remove() argument is in fact useless;Fix unused function warnings for CONFIG_PM_SLEEP;unused function warnings;Similar;0.6446686387062073
drop the second ACPI driver .remove() argument  ;the second ACPI driver .remove() argument is in fact useless;add #ifdefs to prevent them from being built in that case  ;several suspend/resume functions in ACPI drivers are not used for CONFIG_PM_SLEEP unset;Similar;0.6044567823410034
drop the second ACPI driver .remove() argument  ;the second ACPI driver .remove() argument is in fact useless;remove unused procfs I/F;unused;Similar;0.8187741041183472
drop the second ACPI driver .remove() argument  ;the second ACPI driver .remove() argument is in fact useless;Remove unused ACPI button procfs interface;unused;Similar;0.8367040157318115
drop the second ACPI driver .remove() argument  ;the second ACPI driver .remove() argument is in fact useless;Avoid disabling wakeup unnecessarily on remove;-;Similar;0.5986968874931335
drop the second ACPI driver .remove() argument  ;the second ACPI driver .remove() argument is in fact useless;CONFIG_GCOV_KERNEL was turned off for all tests and a few more options had to be turned off depending on archs to make things build;my distributed build env didnt work with gcov compiles, like ipr on powerpc/64 which failed due to missing writeq;Similar;0.5881612300872803
drop the second ACPI driver .remove() argument  ;the second ACPI driver .remove() argument is in fact useless;percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;Similar;0.6496719121932983
drop the second ACPI driver .remove() argument  ;the second ACPI driver .remove() argument is in fact useless;Remove the old GPE type handling entirely  ;Gets rid of various quirks, like the implicit disabling with GPE type setting;Similar;0.7111027240753174
drop the second ACPI driver .remove() argument  ;the second ACPI driver .remove() argument is in fact useless;"This patch is to eliminate the above warning message
";Device PNP0C0D:00 failed to resume: error 1;Similar;0.6844043135643005
drop the second ACPI driver .remove() argument  ;the second ACPI driver .remove() argument is in fact useless;dont try to use a non-existent lid device;non-existent;Similar;0.5188590288162231
drop the second ACPI driver .remove() argument  ;the second ACPI driver .remove() argument is in fact useless;whitespace fix  ;This does not change any actual console output;Similar;0.5174070596694946
drop the second ACPI driver .remove() argument  ;the second ACPI driver .remove() argument is in fact useless;Remove button->device pointer;button;Similar;0.7340189218521118
drop the second ACPI driver .remove() argument  ;the second ACPI driver .remove() argument is in fact useless;We no longer need a pointer from struct acpi_button back to the struct acpi_device;no longer need;Similar;0.7046788930892944
drop the second ACPI driver .remove() argument  ;the second ACPI driver .remove() argument is in fact useless;use .notify method instead of installing handler directly  ;-;Similar;0.6152220368385315
drop the second ACPI driver .remove() argument  ;the second ACPI driver .remove() argument is in fact useless;convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.6058146953582764
drop the second ACPI driver .remove() argument  ;the second ACPI driver .remove() argument is in fact useless;"proc_fops is declared as ""const""";should give some thoughts;Similar;0.5344642400741577
drop the second ACPI driver .remove() argument  ;the second ACPI driver .remove() argument is in fact useless;"rmmoded directories will be empty and return ""."" and "".."" -- no harm";no harm;Similar;0.563107967376709
drop the second ACPI driver .remove() argument  ;the second ACPI driver .remove() argument is in fact useless;Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;Similar;0.5310885906219482
drop the second ACPI driver .remove() argument  ;the second ACPI driver .remove() argument is in fact useless;use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Similar;0.5726601481437683
drop the second ACPI driver .remove() argument  ;the second ACPI driver .remove() argument is in fact useless;get rid of input BIT* duplicate defines;duplicate;Similar;0.7356654405593872
drop the second ACPI driver .remove() argument  ;the second ACPI driver .remove() argument is in fact useless;Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;Similar;0.7246060371398926
drop the second ACPI driver .remove() argument  ;the second ACPI driver .remove() argument is in fact useless;Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;Similar;0.5366404056549072
drop the second ACPI driver .remove() argument  ;the second ACPI driver .remove() argument is in fact useless;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.8253688812255859
drop the second ACPI driver .remove() argument  ;the second ACPI driver .remove() argument is in fact useless;fix acpi_driver.name usage;fix;Similar;0.5683735609054565
drop the second ACPI driver .remove() argument  ;the second ACPI driver .remove() argument is in fact useless;"Invoke with ; as leaving it off confuses Lindent  ";gcc doesnt care;Similar;0.6367307901382446
drop the second ACPI driver .remove() argument  ;the second ACPI driver .remove() argument is in fact useless;Fix indentation where Lindent did get confused  ;Lindent did get confused;Similar;0.5441889762878418
drop the second ACPI driver .remove() argument  ;the second ACPI driver .remove() argument is in fact useless;remove unnecessary casts and variable initializations, clean up formatting;unnecessary;Similar;0.5640291571617126
drop the second ACPI driver .remove() argument  ;the second ACPI driver .remove() argument is in fact useless;Remove unneeded acpi_handle from driver;unneeded;Similar;0.8084568977355957
drop the second ACPI driver .remove() argument  ;the second ACPI driver .remove() argument is in fact useless;Use acpi_devices handle instead of drivers  ;-;Similar;0.6642383337020874
drop the second ACPI driver .remove() argument  ;the second ACPI driver .remove() argument is in fact useless;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.6592810153961182
drop the second ACPI driver .remove() argument  ;the second ACPI driver .remove() argument is in fact useless;"Create a separate ""historical"" git archive";about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated;Similar;0.6991260051727295
Fix unused function warnings for CONFIG_PM_SLEEP;unused function warnings;add #ifdefs to prevent them from being built in that case  ;several suspend/resume functions in ACPI drivers are not used for CONFIG_PM_SLEEP unset;Similar;0.5917387008666992
Fix unused function warnings for CONFIG_PM_SLEEP;unused function warnings;remove unused procfs I/F;unused;Similar;0.6267690658569336
Fix unused function warnings for CONFIG_PM_SLEEP;unused function warnings;Remove unused ACPI button procfs interface;unused;Similar;0.7001153230667114
Fix unused function warnings for CONFIG_PM_SLEEP;unused function warnings;Avoid disabling wakeup unnecessarily on remove;-;Similar;0.5506303906440735
Fix unused function warnings for CONFIG_PM_SLEEP;unused function warnings;Use device wakeup flags for handling ACPI wakeup devices;for handling ACPI wakeup devices;Similar;0.5200766921043396
Fix unused function warnings for CONFIG_PM_SLEEP;unused function warnings;use standard device wakeup flags instead of the special ACPI flags for handling those devices;address this problem;Similar;0.5449676513671875
Fix unused function warnings for CONFIG_PM_SLEEP;unused function warnings;it is sufficient to set/unset the wakeup mask bits for them during system sleep transitions;"this means that the reference counting of ""wakeup"" GPEs doesnt really make sense";Similar;0.663180410861969
Fix unused function warnings for CONFIG_PM_SLEEP;unused function warnings;prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;Similar;0.5658081769943237
Fix unused function warnings for CONFIG_PM_SLEEP;unused function warnings;CONFIG_GCOV_KERNEL was turned off for all tests and a few more options had to be turned off depending on archs to make things build;my distributed build env didnt work with gcov compiles, like ipr on powerpc/64 which failed due to missing writeq;Similar;0.5922530889511108
Fix unused function warnings for CONFIG_PM_SLEEP;unused function warnings;percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;Similar;0.5236013531684875
Fix unused function warnings for CONFIG_PM_SLEEP;unused function warnings;Add an API to allow devices to indicate whether or not they want their devices GPE to be enabled for both runtime and wakeup events;to allow devices to indicate whether or not they want their devices GPE to be enabled;Similar;0.5271070003509521
Fix unused function warnings for CONFIG_PM_SLEEP;unused function warnings;"This patch is to eliminate the above warning message
";Device PNP0C0D:00 failed to resume: error 1;Similar;0.6101758480072021
Fix unused function warnings for CONFIG_PM_SLEEP;unused function warnings;whitespace fix  ;This does not change any actual console output;Similar;0.5128388404846191
Fix unused function warnings for CONFIG_PM_SLEEP;unused function warnings;we could install either a fixed event handler or a notify handler, but the Linux/ACPI code now handles that for us;We previously needed that so we dont need to worry about it;Similar;0.5150978565216064
Fix unused function warnings for CONFIG_PM_SLEEP;unused function warnings;Remove button->device pointer;button;Similar;0.5887343883514404
Fix unused function warnings for CONFIG_PM_SLEEP;unused function warnings;We no longer need a pointer from struct acpi_button back to the struct acpi_device;no longer need;Similar;0.6216539144515991
Fix unused function warnings for CONFIG_PM_SLEEP;unused function warnings;This patch adds temporaries to cache the acpi_device_hid(), acpi_device_name(), and acpi_device_class() pointers;so we dont have to clutter the code with so many uses of those interfaces;Similar;0.5702168345451355
Fix unused function warnings for CONFIG_PM_SLEEP;unused function warnings;changes a bit of whitespace to follow Linux conventions;follow Linux conventions;Similar;0.5342870950698853
Fix unused function warnings for CONFIG_PM_SLEEP;unused function warnings;use .notify method instead of installing handler directly  ;-;Similar;0.5456514358520508
Fix unused function warnings for CONFIG_PM_SLEEP;unused function warnings;convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.6157653331756592
Fix unused function warnings for CONFIG_PM_SLEEP;unused function warnings;"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.5218757390975952
Fix unused function warnings for CONFIG_PM_SLEEP;unused function warnings;Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;Similar;0.5280258059501648
Fix unused function warnings for CONFIG_PM_SLEEP;unused function warnings;use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Similar;0.5139584541320801
Fix unused function warnings for CONFIG_PM_SLEEP;unused function warnings;Add correct ->owner to proc_fops to fix reading/module unloading race  ;fix reading/module unloading race;Similar;0.5227809548377991
Fix unused function warnings for CONFIG_PM_SLEEP;unused function warnings;get rid of input BIT* duplicate defines;duplicate;Similar;0.606019139289856
Fix unused function warnings for CONFIG_PM_SLEEP;unused function warnings;Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;Similar;0.6048144102096558
Fix unused function warnings for CONFIG_PM_SLEEP;unused function warnings;Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;Similar;0.5617103576660156
Fix unused function warnings for CONFIG_PM_SLEEP;unused function warnings;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.6784104108810425
Fix unused function warnings for CONFIG_PM_SLEEP;unused function warnings;fix acpi_driver.name usage;fix;Similar;0.6078230142593384
Fix unused function warnings for CONFIG_PM_SLEEP;unused function warnings;Fix indentation where Lindent did get confused  ;Lindent did get confused;Similar;0.5214005708694458
Fix unused function warnings for CONFIG_PM_SLEEP;unused function warnings;remove unnecessary casts and variable initializations, clean up formatting;unnecessary;Similar;0.5156208276748657
Fix unused function warnings for CONFIG_PM_SLEEP;unused function warnings;Remove unneeded acpi_handle from driver;unneeded;Similar;0.6683506965637207
Fix unused function warnings for CONFIG_PM_SLEEP;unused function warnings;Use acpi_devices handle instead of drivers  ;-;Similar;0.5753937363624573
Fix unused function warnings for CONFIG_PM_SLEEP;unused function warnings;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.640175461769104
Fix unused function warnings for CONFIG_PM_SLEEP;unused function warnings;"Create a separate ""historical"" git archive";about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated;Similar;0.5086607933044434
add #ifdefs to prevent them from being built in that case  ;several suspend/resume functions in ACPI drivers are not used for CONFIG_PM_SLEEP unset;remove unused procfs I/F;unused;Similar;0.6200082302093506
add #ifdefs to prevent them from being built in that case  ;several suspend/resume functions in ACPI drivers are not used for CONFIG_PM_SLEEP unset;Remove unused ACPI button procfs interface;unused;Similar;0.6093267202377319
add #ifdefs to prevent them from being built in that case  ;several suspend/resume functions in ACPI drivers are not used for CONFIG_PM_SLEEP unset;Avoid disabling wakeup unnecessarily on remove;-;Similar;0.6679076552391052
add #ifdefs to prevent them from being built in that case  ;several suspend/resume functions in ACPI drivers are not used for CONFIG_PM_SLEEP unset;prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;Similar;0.5542237162590027
add #ifdefs to prevent them from being built in that case  ;several suspend/resume functions in ACPI drivers are not used for CONFIG_PM_SLEEP unset;CONFIG_GCOV_KERNEL was turned off for all tests and a few more options had to be turned off depending on archs to make things build;my distributed build env didnt work with gcov compiles, like ipr on powerpc/64 which failed due to missing writeq;Similar;0.5799163579940796
add #ifdefs to prevent them from being built in that case  ;several suspend/resume functions in ACPI drivers are not used for CONFIG_PM_SLEEP unset;Remove the old GPE type handling entirely  ;Gets rid of various quirks, like the implicit disabling with GPE type setting;Similar;0.5165014863014221
add #ifdefs to prevent them from being built in that case  ;several suspend/resume functions in ACPI drivers are not used for CONFIG_PM_SLEEP unset;complain the following warning message;"will

";Similar;0.5414396524429321
add #ifdefs to prevent them from being built in that case  ;several suspend/resume functions in ACPI drivers are not used for CONFIG_PM_SLEEP unset;"This patch is to eliminate the above warning message
";Device PNP0C0D:00 failed to resume: error 1;Similar;0.6772541403770447
add #ifdefs to prevent them from being built in that case  ;several suspend/resume functions in ACPI drivers are not used for CONFIG_PM_SLEEP unset;dont try to use a non-existent lid device;non-existent;Similar;0.5637037754058838
add #ifdefs to prevent them from being built in that case  ;several suspend/resume functions in ACPI drivers are not used for CONFIG_PM_SLEEP unset;whitespace fix  ;This does not change any actual console output;Similar;0.5072874426841736
add #ifdefs to prevent them from being built in that case  ;several suspend/resume functions in ACPI drivers are not used for CONFIG_PM_SLEEP unset;Remove button->device pointer;button;Similar;0.6185619831085205
add #ifdefs to prevent them from being built in that case  ;several suspend/resume functions in ACPI drivers are not used for CONFIG_PM_SLEEP unset;We no longer need a pointer from struct acpi_button back to the struct acpi_device;no longer need;Similar;0.6442590951919556
add #ifdefs to prevent them from being built in that case  ;several suspend/resume functions in ACPI drivers are not used for CONFIG_PM_SLEEP unset;use .notify method instead of installing handler directly  ;-;Similar;0.5274168848991394
add #ifdefs to prevent them from being built in that case  ;several suspend/resume functions in ACPI drivers are not used for CONFIG_PM_SLEEP unset;"proc_fops is declared as ""const""";should give some thoughts;Similar;0.501361608505249
add #ifdefs to prevent them from being built in that case  ;several suspend/resume functions in ACPI drivers are not used for CONFIG_PM_SLEEP unset;dont want such modular code;definitely;Similar;0.6211366057395935
add #ifdefs to prevent them from being built in that case  ;several suspend/resume functions in ACPI drivers are not used for CONFIG_PM_SLEEP unset;use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Similar;0.5598573684692383
add #ifdefs to prevent them from being built in that case  ;several suspend/resume functions in ACPI drivers are not used for CONFIG_PM_SLEEP unset;get rid of input BIT* duplicate defines;duplicate;Similar;0.5874295830726624
add #ifdefs to prevent them from being built in that case  ;several suspend/resume functions in ACPI drivers are not used for CONFIG_PM_SLEEP unset;Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;Similar;0.6313247680664062
add #ifdefs to prevent them from being built in that case  ;several suspend/resume functions in ACPI drivers are not used for CONFIG_PM_SLEEP unset;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.635051965713501
add #ifdefs to prevent them from being built in that case  ;several suspend/resume functions in ACPI drivers are not used for CONFIG_PM_SLEEP unset;"Invoke with ; as leaving it off confuses Lindent  ";gcc doesnt care;Similar;0.5839492082595825
add #ifdefs to prevent them from being built in that case  ;several suspend/resume functions in ACPI drivers are not used for CONFIG_PM_SLEEP unset;Fix indentation where Lindent did get confused  ;Lindent did get confused;Similar;0.5068127512931824
add #ifdefs to prevent them from being built in that case  ;several suspend/resume functions in ACPI drivers are not used for CONFIG_PM_SLEEP unset;Remove unneeded acpi_handle from driver;unneeded;Similar;0.6748168468475342
add #ifdefs to prevent them from being built in that case  ;several suspend/resume functions in ACPI drivers are not used for CONFIG_PM_SLEEP unset;Use acpi_devices handle instead of drivers  ;-;Similar;0.5457150936126709
add #ifdefs to prevent them from being built in that case  ;several suspend/resume functions in ACPI drivers are not used for CONFIG_PM_SLEEP unset;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.572541356086731
add #ifdefs to prevent them from being built in that case  ;several suspend/resume functions in ACPI drivers are not used for CONFIG_PM_SLEEP unset;"Create a separate ""historical"" git archive";about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated;Similar;0.5428682565689087
remove unused procfs I/F;unused;Remove unused ACPI button procfs interface;unused;Similar;0.8344510197639465
remove unused procfs I/F;unused;Avoid disabling wakeup unnecessarily on remove;-;Similar;0.6874334812164307
remove unused procfs I/F;unused;use standard device wakeup flags instead of the special ACPI flags for handling those devices;address this problem;Similar;0.5203513503074646
remove unused procfs I/F;unused;Update gfp.h and slab.h includes  ;prepare for breaking implicit slab.h inclusion from percpu.h;Similar;0.557409942150116
remove unused procfs I/F;unused;the following script is used as the basis of conversion;As this conversion needs to touch a large number of source files;Similar;0.5003409385681152
remove unused procfs I/F;unused;The script was run again  ;to make sure no file was left behind;Similar;0.5432062149047852
remove unused procfs I/F;unused;Most gfp.h inclusion directives were ignored  ;stuff from gfp.h was usually wildly available and often used in preprocessor macros;Similar;0.5633289813995361
remove unused procfs I/F;unused;description of the patch behaviour;an action or a change;Similar;0.508094072341919
remove unused procfs I/F;unused;failures were fixed;Build tests were done on the following configurations;Similar;0.5775572657585144
remove unused procfs I/F;unused;CONFIG_GCOV_KERNEL was turned off for all tests and a few more options had to be turned off depending on archs to make things build;my distributed build env didnt work with gcov compiles, like ipr on powerpc/64 which failed due to missing writeq;Similar;0.5040421485900879
remove unused procfs I/F;unused;percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;Similar;0.7547522187232971
remove unused procfs I/F;unused;Remove the old GPE type handling entirely  ;Gets rid of various quirks, like the implicit disabling with GPE type setting;Similar;0.8138864040374756
remove unused procfs I/F;unused;complain the following warning message;"will

";Similar;0.5309874415397644
remove unused procfs I/F;unused;"This patch is to eliminate the above warning message
";Device PNP0C0D:00 failed to resume: error 1;Similar;0.7284863591194153
remove unused procfs I/F;unused;dont try to use a non-existent lid device;non-existent;Similar;0.6666286587715149
remove unused procfs I/F;unused;return -ENODEV;theres no lid device present;Similar;0.6479820013046265
remove unused procfs I/F;unused;whitespace fix  ;This does not change any actual console output;Similar;0.6370338201522827
remove unused procfs I/F;unused;Remove button->device pointer;button;Similar;0.8084392547607422
remove unused procfs I/F;unused;We no longer need a pointer from struct acpi_button back to the struct acpi_device;no longer need;Similar;0.7749603986740112
remove unused procfs I/F;unused;use .notify method instead of installing handler directly  ;-;Similar;0.660855233669281
remove unused procfs I/F;unused;convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.6072177886962891
remove unused procfs I/F;unused;Setting ->owner as done currently (pde->owner = THIS_MODULE) is racy;as correctly noted at bug #12454;Similar;0.5429016351699829
remove unused procfs I/F;unused;"proc_fops is declared as ""const""";should give some thoughts;Similar;0.7006865739822388
remove unused procfs I/F;unused;"rmmoded directories will be empty and return ""."" and "".."" -- no harm";no harm;Similar;0.6720069646835327
remove unused procfs I/F;unused;dont want such modular code;definitely;Similar;0.5598224401473999
remove unused procfs I/F;unused;"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.5467947721481323
remove unused procfs I/F;unused;Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;Similar;0.5413994789123535
remove unused procfs I/F;unused;use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Similar;0.7121374607086182
remove unused procfs I/F;unused;get rid of input BIT* duplicate defines;duplicate;Similar;0.8417754173278809
remove unused procfs I/F;unused;Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;Similar;0.7555405497550964
remove unused procfs I/F;unused;Define the macro temporarily in a local manner;all those local definitions will be removed further in this patchset (to not break bisecting);Similar;0.5723741054534912
remove unused procfs I/F;unused;Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;Similar;0.5617192387580872
remove unused procfs I/F;unused;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.8276091814041138
remove unused procfs I/F;unused;fix acpi_driver.name usage;fix;Similar;0.5532218217849731
remove unused procfs I/F;unused;"Invoke with ; as leaving it off confuses Lindent  ";gcc doesnt care;Similar;0.7245645523071289
remove unused procfs I/F;unused;Fix indentation where Lindent did get confused  ;Lindent did get confused;Similar;0.5986782908439636
remove unused procfs I/F;unused;remove unnecessary casts and variable initializations, clean up formatting;unnecessary;Similar;0.6647677421569824
remove unused procfs I/F;unused;Remove unneeded acpi_handle from driver;unneeded;Similar;0.7419190406799316
remove unused procfs I/F;unused;Use acpi_devices handle instead of drivers  ;-;Similar;0.7198909521102905
remove unused procfs I/F;unused;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.7141894102096558
remove unused procfs I/F;unused;"Create a separate ""historical"" git archive";about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated;Similar;0.7428139448165894
Remove unused ACPI button procfs interface;unused;Avoid disabling wakeup unnecessarily on remove;-;Similar;0.5943605899810791
Remove unused ACPI button procfs interface;unused;use standard device wakeup flags instead of the special ACPI flags for handling those devices;address this problem;Similar;0.5885998010635376
Remove unused ACPI button procfs interface;unused;prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;Similar;0.5115761756896973
Remove unused ACPI button procfs interface;unused;CONFIG_GCOV_KERNEL was turned off for all tests and a few more options had to be turned off depending on archs to make things build;my distributed build env didnt work with gcov compiles, like ipr on powerpc/64 which failed due to missing writeq;Similar;0.5931780338287354
Remove unused ACPI button procfs interface;unused;percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;Similar;0.662269115447998
Remove unused ACPI button procfs interface;unused;Remove the old GPE type handling entirely  ;Gets rid of various quirks, like the implicit disabling with GPE type setting;Similar;0.6852338314056396
Remove unused ACPI button procfs interface;unused;"This patch is to eliminate the above warning message
";Device PNP0C0D:00 failed to resume: error 1;Similar;0.656058669090271
Remove unused ACPI button procfs interface;unused;dont try to use a non-existent lid device;non-existent;Similar;0.5699565410614014
Remove unused ACPI button procfs interface;unused;whitespace fix  ;This does not change any actual console output;Similar;0.5541151165962219
Remove unused ACPI button procfs interface;unused;we could install either a fixed event handler or a notify handler, but the Linux/ACPI code now handles that for us;We previously needed that so we dont need to worry about it;Similar;0.5118751525878906
Remove unused ACPI button procfs interface;unused;Remove button->device pointer;button;Similar;0.8324025869369507
Remove unused ACPI button procfs interface;unused;We no longer need a pointer from struct acpi_button back to the struct acpi_device;no longer need;Similar;0.8082320690155029
Remove unused ACPI button procfs interface;unused;This patch adds temporaries to cache the acpi_device_hid(), acpi_device_name(), and acpi_device_class() pointers;so we dont have to clutter the code with so many uses of those interfaces;Similar;0.5528820753097534
Remove unused ACPI button procfs interface;unused;changes a bit of whitespace to follow Linux conventions;follow Linux conventions;Similar;0.5531973838806152
Remove unused ACPI button procfs interface;unused;use .notify method instead of installing handler directly  ;-;Similar;0.6041649580001831
Remove unused ACPI button procfs interface;unused;convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.7310028076171875
Remove unused ACPI button procfs interface;unused;"proc_fops is declared as ""const""";should give some thoughts;Similar;0.585290253162384
Remove unused ACPI button procfs interface;unused;"rmmoded directories will be empty and return ""."" and "".."" -- no harm";no harm;Similar;0.556653618812561
Remove unused ACPI button procfs interface;unused;"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.5333551168441772
Remove unused ACPI button procfs interface;unused;Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;Similar;0.6203914284706116
Remove unused ACPI button procfs interface;unused;use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Similar;0.6496719121932983
Remove unused ACPI button procfs interface;unused;get rid of input BIT* duplicate defines;duplicate;Similar;0.7768634557723999
Remove unused ACPI button procfs interface;unused;Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;Similar;0.7682656049728394
Remove unused ACPI button procfs interface;unused;Define the macro temporarily in a local manner;all those local definitions will be removed further in this patchset (to not break bisecting);Similar;0.5062821507453918
Remove unused ACPI button procfs interface;unused;Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;Similar;0.5823612809181213
Remove unused ACPI button procfs interface;unused;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.8377443552017212
Remove unused ACPI button procfs interface;unused;fix acpi_driver.name usage;fix;Similar;0.6159580945968628
Remove unused ACPI button procfs interface;unused;"Invoke with ; as leaving it off confuses Lindent  ";gcc doesnt care;Similar;0.5790282487869263
Remove unused ACPI button procfs interface;unused;Fix indentation where Lindent did get confused  ;Lindent did get confused;Similar;0.5547318458557129
Remove unused ACPI button procfs interface;unused;remove unnecessary casts and variable initializations, clean up formatting;unnecessary;Similar;0.6073380708694458
Remove unused ACPI button procfs interface;unused;Remove unneeded acpi_handle from driver;unneeded;Similar;0.811384916305542
Remove unused ACPI button procfs interface;unused;Use acpi_devices handle instead of drivers  ;-;Similar;0.711066484451294
Remove unused ACPI button procfs interface;unused;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.7365658283233643
Remove unused ACPI button procfs interface;unused;restore /proc/acpi/button/ (ala 2.6.12)  ;[ACPI];Similar;0.6112803816795349
Remove unused ACPI button procfs interface;unused;"Create a separate ""historical"" git archive";about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated;Similar;0.6514508724212646
Avoid disabling wakeup unnecessarily on remove;-;use standard device wakeup flags instead of the special ACPI flags for handling those devices;address this problem;Similar;0.5007604956626892
Avoid disabling wakeup unnecessarily on remove;-;failures were fixed;Build tests were done on the following configurations;Similar;0.5670175552368164
Avoid disabling wakeup unnecessarily on remove;-;percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;Similar;0.5387581586837769
Avoid disabling wakeup unnecessarily on remove;-;Remove the old GPE type handling entirely  ;Gets rid of various quirks, like the implicit disabling with GPE type setting;Similar;0.6030806303024292
Avoid disabling wakeup unnecessarily on remove;-;complain the following warning message;"will

";Similar;0.5427716374397278
Avoid disabling wakeup unnecessarily on remove;-;"This patch is to eliminate the above warning message
";Device PNP0C0D:00 failed to resume: error 1;Similar;0.6999096870422363
Avoid disabling wakeup unnecessarily on remove;-;dont try to use a non-existent lid device;non-existent;Similar;0.7030806541442871
Avoid disabling wakeup unnecessarily on remove;-;whitespace fix  ;This does not change any actual console output;Similar;0.5377131700515747
Avoid disabling wakeup unnecessarily on remove;-;Remove button->device pointer;button;Similar;0.6251332759857178
Avoid disabling wakeup unnecessarily on remove;-;We no longer need a pointer from struct acpi_button back to the struct acpi_device;no longer need;Similar;0.6306567192077637
Avoid disabling wakeup unnecessarily on remove;-;use .notify method instead of installing handler directly  ;-;Similar;0.524827778339386
Avoid disabling wakeup unnecessarily on remove;-;Setting ->owner as done currently (pde->owner = THIS_MODULE) is racy;as correctly noted at bug #12454;Similar;0.5207492113113403
Avoid disabling wakeup unnecessarily on remove;-;"proc_fops is declared as ""const""";should give some thoughts;Similar;0.5157985687255859
Avoid disabling wakeup unnecessarily on remove;-;"rmmoded directories will be empty and return ""."" and "".."" -- no harm";no harm;Similar;0.5442237257957458
Avoid disabling wakeup unnecessarily on remove;-;dont want such modular code;definitely;Similar;0.7282549142837524
Avoid disabling wakeup unnecessarily on remove;-;use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Similar;0.6276313662528992
Avoid disabling wakeup unnecessarily on remove;-;get rid of input BIT* duplicate defines;duplicate;Similar;0.6453633308410645
Avoid disabling wakeup unnecessarily on remove;-;Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;Similar;0.589461088180542
Avoid disabling wakeup unnecessarily on remove;-;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.5544363856315613
Avoid disabling wakeup unnecessarily on remove;-;"Invoke with ; as leaving it off confuses Lindent  ";gcc doesnt care;Similar;0.7562287449836731
Avoid disabling wakeup unnecessarily on remove;-;Fix indentation where Lindent did get confused  ;Lindent did get confused;Similar;0.6677155494689941
Avoid disabling wakeup unnecessarily on remove;-;remove unnecessary casts and variable initializations, clean up formatting;unnecessary;Similar;0.64738929271698
Avoid disabling wakeup unnecessarily on remove;-;Remove unneeded acpi_handle from driver;unneeded;Similar;0.6113300323486328
Avoid disabling wakeup unnecessarily on remove;-;Use acpi_devices handle instead of drivers  ;-;Similar;0.5351809859275818
Avoid disabling wakeup unnecessarily on remove;-;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.567539393901825
Avoid disabling wakeup unnecessarily on remove;-;"Create a separate ""historical"" git archive";about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated;Similar;0.54433274269104
Use device wakeup flags for handling ACPI wakeup devices;for handling ACPI wakeup devices;use standard device wakeup flags instead of the special ACPI flags for handling those devices;address this problem;Similar;0.7201099395751953
Use device wakeup flags for handling ACPI wakeup devices;for handling ACPI wakeup devices;Use GPE reference counting to support shared GPEs  ;the wakeup enable mask bits of GPEs are set as soon as the GPEs are enabled to wake up the system;Similar;0.6490350365638733
Use device wakeup flags for handling ACPI wakeup devices;for handling ACPI wakeup devices;it is sufficient to set/unset the wakeup mask bits for them during system sleep transitions;"this means that the reference counting of ""wakeup"" GPEs doesnt really make sense";Similar;0.6475428938865662
Use device wakeup flags for handling ACPI wakeup devices;for handling ACPI wakeup devices;Update gfp.h and slab.h includes  ;prepare for breaking implicit slab.h inclusion from percpu.h;Similar;0.5991568565368652
Use device wakeup flags for handling ACPI wakeup devices;for handling ACPI wakeup devices;Prepare for this change by updating users of gfp and slab facilities;include those headers directly instead of assuming availability;Similar;0.5736147165298462
Use device wakeup flags for handling ACPI wakeup devices;for handling ACPI wakeup devices;the following script is used as the basis of conversion;As this conversion needs to touch a large number of source files;Similar;0.5960533618927002
Use device wakeup flags for handling ACPI wakeup devices;for handling ACPI wakeup devices;put the new include  ;its order conforms to its surrounding;Similar;0.5127562284469604
Use device wakeup flags for handling ACPI wakeup devices;for handling ACPI wakeup devices;prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;Similar;0.5810726881027222
Use device wakeup flags for handling ACPI wakeup devices;for handling ACPI wakeup devices;The script was run again  ;to make sure no file was left behind;Similar;0.5084267854690552
Use device wakeup flags for handling ACPI wakeup devices;for handling ACPI wakeup devices;description of the patch behaviour;an action or a change;Similar;0.5343624353408813
Use device wakeup flags for handling ACPI wakeup devices;for handling ACPI wakeup devices;percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;Similar;0.5739748477935791
Use device wakeup flags for handling ACPI wakeup devices;for handling ACPI wakeup devices;Introduce a new wake-up flag, always_enabled, for marking devices that should be permanently enabled to generate run-time events  ;devices that should be permanently enabled to generate run-time events;Similar;0.5837843418121338
Use device wakeup flags for handling ACPI wakeup devices;for handling ACPI wakeup devices;Introduce a reference counter for run-wake devices and a function that will initialize all of the run-time wake-up fields for given device.;-;Similar;0.74432373046875
Use device wakeup flags for handling ACPI wakeup devices;for handling ACPI wakeup devices;Add an API to allow devices to indicate whether or not they want their devices GPE to be enabled for both runtime and wakeup events;to allow devices to indicate whether or not they want their devices GPE to be enabled;Similar;0.7452026605606079
Use device wakeup flags for handling ACPI wakeup devices;for handling ACPI wakeup devices;complain the following warning message;"will

";Similar;0.5407630801200867
Use device wakeup flags for handling ACPI wakeup devices;for handling ACPI wakeup devices;return -ENODEV;theres no lid device present;Similar;0.5638712644577026
Use device wakeup flags for handling ACPI wakeup devices;for handling ACPI wakeup devices;Some drivers need to know when a lid event occurs and get the current status;-;Similar;0.5149074196815491
Use device wakeup flags for handling ACPI wakeup devices;for handling ACPI wakeup devices;whitespace fix  ;This does not change any actual console output;Similar;0.5306534767150879
Use device wakeup flags for handling ACPI wakeup devices;for handling ACPI wakeup devices;we could install either a fixed event handler or a notify handler, but the Linux/ACPI code now handles that for us;We previously needed that so we dont need to worry about it;Similar;0.5444548726081848
Use device wakeup flags for handling ACPI wakeup devices;for handling ACPI wakeup devices;type: Power Button;I dont think theres anything meaningful user-space can do by knowing whether a button is a control method or a fixed hardware button;Similar;0.5909678936004639
Use device wakeup flags for handling ACPI wakeup devices;for handling ACPI wakeup devices;Remove button->device pointer;button;Similar;0.5307549238204956
Use device wakeup flags for handling ACPI wakeup devices;for handling ACPI wakeup devices;This patch adds temporaries to cache the acpi_device_hid(), acpi_device_name(), and acpi_device_class() pointers;so we dont have to clutter the code with so many uses of those interfaces;Similar;0.5432534217834473
Use device wakeup flags for handling ACPI wakeup devices;for handling ACPI wakeup devices;changes a bit of whitespace to follow Linux conventions;follow Linux conventions;Similar;0.5982388257980347
Use device wakeup flags for handling ACPI wakeup devices;for handling ACPI wakeup devices;use .notify method instead of installing handler directly  ;-;Similar;0.5197492837905884
Use device wakeup flags for handling ACPI wakeup devices;for handling ACPI wakeup devices;The presence of .notify() causes Linux/ACPI to manage event handlers and notify handlers on our behalf  ;so we dont have to install and remove them ourselves;Similar;0.5787259340286255
Use device wakeup flags for handling ACPI wakeup devices;for handling ACPI wakeup devices;convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.6630671620368958
Use device wakeup flags for handling ACPI wakeup devices;for handling ACPI wakeup devices;"proc_fops is declared as ""const""";should give some thoughts;Similar;0.566658616065979
Use device wakeup flags for handling ACPI wakeup devices;for handling ACPI wakeup devices;start using GPE from userspace;GPE is already disabled in interrupt context;Similar;0.6482363939285278
Use device wakeup flags for handling ACPI wakeup devices;for handling ACPI wakeup devices;Move all the component definitions for drivers to a single shared place, include/acpi/acpi_drivers.h  ;to have a single shared place;Similar;0.5885387659072876
Use device wakeup flags for handling ACPI wakeup devices;for handling ACPI wakeup devices;"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.6157890558242798
Use device wakeup flags for handling ACPI wakeup devices;for handling ACPI wakeup devices;Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;Similar;0.5534501075744629
Use device wakeup flags for handling ACPI wakeup devices;for handling ACPI wakeup devices;use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Similar;0.5468246936798096
Use device wakeup flags for handling ACPI wakeup devices;for handling ACPI wakeup devices;Use proc_create()/proc_create_data() to make sure that ->proc_fops and ->data be setup;before gluing PDE to main tree;Similar;0.6626243591308594
Use device wakeup flags for handling ACPI wakeup devices;for handling ACPI wakeup devices;get rid of input BIT* duplicate defines;duplicate;Similar;0.503696084022522
Use device wakeup flags for handling ACPI wakeup devices;for handling ACPI wakeup devices;Define the macro temporarily in a local manner;all those local definitions will be removed further in this patchset (to not break bisecting);Similar;0.5003239512443542
Use device wakeup flags for handling ACPI wakeup devices;for handling ACPI wakeup devices;Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;Similar;0.6400116682052612
Use device wakeup flags for handling ACPI wakeup devices;for handling ACPI wakeup devices;fix acpi_driver.name usage;fix;Similar;0.5510592460632324
Use device wakeup flags for handling ACPI wakeup devices;for handling ACPI wakeup devices;ls bus/acpi/drivers  ;Display the list of ACPI drivers.;Similar;0.5610451698303223
Use device wakeup flags for handling ACPI wakeup devices;for handling ACPI wakeup devices;"Make ""module name"" actually match the file name";cosmetic only;Similar;0.547936201095581
Use device wakeup flags for handling ACPI wakeup devices;for handling ACPI wakeup devices;Use acpi_devices handle instead of drivers  ;-;Similar;0.5358988046646118
Use device wakeup flags for handling ACPI wakeup devices;for handling ACPI wakeup devices;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.5458043217658997
Use device wakeup flags for handling ACPI wakeup devices;for handling ACPI wakeup devices;restore /proc/acpi/button/ (ala 2.6.12)  ;[ACPI];Similar;0.6064938306808472
use standard device wakeup flags instead of the special ACPI flags for handling those devices;address this problem;it is sufficient to set/unset the wakeup mask bits for them during system sleep transitions;"this means that the reference counting of ""wakeup"" GPEs doesnt really make sense";Similar;0.521989107131958
use standard device wakeup flags instead of the special ACPI flags for handling those devices;address this problem;Update gfp.h and slab.h includes  ;prepare for breaking implicit slab.h inclusion from percpu.h;Similar;0.502316415309906
use standard device wakeup flags instead of the special ACPI flags for handling those devices;address this problem;percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;Similar;0.5495190620422363
use standard device wakeup flags instead of the special ACPI flags for handling those devices;address this problem;Introduce a reference counter for run-wake devices and a function that will initialize all of the run-time wake-up fields for given device.;-;Similar;0.52811598777771
use standard device wakeup flags instead of the special ACPI flags for handling those devices;address this problem;Add an API to allow devices to indicate whether or not they want their devices GPE to be enabled for both runtime and wakeup events;to allow devices to indicate whether or not they want their devices GPE to be enabled;Similar;0.577869176864624
use standard device wakeup flags instead of the special ACPI flags for handling those devices;address this problem;not all ACPI drivers use/want it;they should not have to #undef PREFIX to define their own;Similar;0.5529529452323914
use standard device wakeup flags instead of the special ACPI flags for handling those devices;address this problem;we could install either a fixed event handler or a notify handler, but the Linux/ACPI code now handles that for us;We previously needed that so we dont need to worry about it;Similar;0.5642002820968628
use standard device wakeup flags instead of the special ACPI flags for handling those devices;address this problem;type: Power Button;I dont think theres anything meaningful user-space can do by knowing whether a button is a control method or a fixed hardware button;Similar;0.502991795539856
use standard device wakeup flags instead of the special ACPI flags for handling those devices;address this problem;Remove button->device pointer;button;Similar;0.5155559778213501
use standard device wakeup flags instead of the special ACPI flags for handling those devices;address this problem;We no longer need a pointer from struct acpi_button back to the struct acpi_device;no longer need;Similar;0.6502886414527893
use standard device wakeup flags instead of the special ACPI flags for handling those devices;address this problem;This patch adds temporaries to cache the acpi_device_hid(), acpi_device_name(), and acpi_device_class() pointers;so we dont have to clutter the code with so many uses of those interfaces;Similar;0.5024889707565308
use standard device wakeup flags instead of the special ACPI flags for handling those devices;address this problem;changes a bit of whitespace to follow Linux conventions;follow Linux conventions;Similar;0.5512360334396362
use standard device wakeup flags instead of the special ACPI flags for handling those devices;address this problem;use .notify method instead of installing handler directly  ;-;Similar;0.6249292492866516
use standard device wakeup flags instead of the special ACPI flags for handling those devices;address this problem;convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.5606045126914978
use standard device wakeup flags instead of the special ACPI flags for handling those devices;address this problem;"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.512741208076477
use standard device wakeup flags instead of the special ACPI flags for handling those devices;address this problem;use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Similar;0.576216459274292
use standard device wakeup flags instead of the special ACPI flags for handling those devices;address this problem;get rid of input BIT* duplicate defines;duplicate;Similar;0.5480678081512451
use standard device wakeup flags instead of the special ACPI flags for handling those devices;address this problem;Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;Similar;0.5894773006439209
use standard device wakeup flags instead of the special ACPI flags for handling those devices;address this problem;Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;Similar;0.5442237854003906
use standard device wakeup flags instead of the special ACPI flags for handling those devices;address this problem;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.518378734588623
use standard device wakeup flags instead of the special ACPI flags for handling those devices;address this problem;remove unnecessary casts and variable initializations, clean up formatting;unnecessary;Similar;0.5274645686149597
use standard device wakeup flags instead of the special ACPI flags for handling those devices;address this problem;Remove unneeded acpi_handle from driver;unneeded;Similar;0.549877405166626
use standard device wakeup flags instead of the special ACPI flags for handling those devices;address this problem;Use acpi_devices handle instead of drivers  ;-;Similar;0.7197453379631042
use standard device wakeup flags instead of the special ACPI flags for handling those devices;address this problem;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.5974349975585938
use standard device wakeup flags instead of the special ACPI flags for handling those devices;address this problem;restore /proc/acpi/button/ (ala 2.6.12)  ;[ACPI];Similar;0.5581778287887573
Use GPE reference counting to support shared GPEs  ;the wakeup enable mask bits of GPEs are set as soon as the GPEs are enabled to wake up the system;it is sufficient to set/unset the wakeup mask bits for them during system sleep transitions;"this means that the reference counting of ""wakeup"" GPEs doesnt really make sense";Similar;0.5458105802536011
Use GPE reference counting to support shared GPEs  ;the wakeup enable mask bits of GPEs are set as soon as the GPEs are enabled to wake up the system;This will allow us to simplify the GPE handling code quite a bit;that change is too intrusive for 2.6.35;Similar;0.5849087834358215
Use GPE reference counting to support shared GPEs  ;the wakeup enable mask bits of GPEs are set as soon as the GPEs are enabled to wake up the system;Update gfp.h and slab.h includes  ;prepare for breaking implicit slab.h inclusion from percpu.h;Similar;0.6444730162620544
Use GPE reference counting to support shared GPEs  ;the wakeup enable mask bits of GPEs are set as soon as the GPEs are enabled to wake up the system;Prepare for this change by updating users of gfp and slab facilities;include those headers directly instead of assuming availability;Similar;0.6752192974090576
Use GPE reference counting to support shared GPEs  ;the wakeup enable mask bits of GPEs are set as soon as the GPEs are enabled to wake up the system;the following script is used as the basis of conversion;As this conversion needs to touch a large number of source files;Similar;0.634904682636261
Use GPE reference counting to support shared GPEs  ;the wakeup enable mask bits of GPEs are set as soon as the GPEs are enabled to wake up the system;prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;Similar;0.5942381620407104
Use GPE reference counting to support shared GPEs  ;the wakeup enable mask bits of GPEs are set as soon as the GPEs are enabled to wake up the system;The script was run again  ;to make sure no file was left behind;Similar;0.5002862811088562
Use GPE reference counting to support shared GPEs  ;the wakeup enable mask bits of GPEs are set as soon as the GPEs are enabled to wake up the system;description of the patch behaviour;an action or a change;Similar;0.5920447111129761
Use GPE reference counting to support shared GPEs  ;the wakeup enable mask bits of GPEs are set as soon as the GPEs are enabled to wake up the system;percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;Similar;0.5148429870605469
Use GPE reference counting to support shared GPEs  ;the wakeup enable mask bits of GPEs are set as soon as the GPEs are enabled to wake up the system;Im fairly confident about the coverage of this conversion patch  ;Given the fact that I had only a couple of failures from tests on step 6;Similar;0.5050399303436279
Use GPE reference counting to support shared GPEs  ;the wakeup enable mask bits of GPEs are set as soon as the GPEs are enabled to wake up the system;Introduce a reference counter for run-wake devices and a function that will initialize all of the run-time wake-up fields for given device.;-;Similar;0.6720693707466125
Use GPE reference counting to support shared GPEs  ;the wakeup enable mask bits of GPEs are set as soon as the GPEs are enabled to wake up the system;Add an API to allow devices to indicate whether or not they want their devices GPE to be enabled for both runtime and wakeup events;to allow devices to indicate whether or not they want their devices GPE to be enabled;Similar;0.7424789667129517
Use GPE reference counting to support shared GPEs  ;the wakeup enable mask bits of GPEs are set as soon as the GPEs are enabled to wake up the system;Some drivers need to know when a lid event occurs and get the current status;-;Similar;0.526939868927002
Use GPE reference counting to support shared GPEs  ;the wakeup enable mask bits of GPEs are set as soon as the GPEs are enabled to wake up the system;whitespace fix  ;This does not change any actual console output;Similar;0.5484471321105957
Use GPE reference counting to support shared GPEs  ;the wakeup enable mask bits of GPEs are set as soon as the GPEs are enabled to wake up the system;we could install either a fixed event handler or a notify handler, but the Linux/ACPI code now handles that for us;We previously needed that so we dont need to worry about it;Similar;0.5507627725601196
Use GPE reference counting to support shared GPEs  ;the wakeup enable mask bits of GPEs are set as soon as the GPEs are enabled to wake up the system;This patch adds temporaries to cache the acpi_device_hid(), acpi_device_name(), and acpi_device_class() pointers;so we dont have to clutter the code with so many uses of those interfaces;Similar;0.5992527008056641
Use GPE reference counting to support shared GPEs  ;the wakeup enable mask bits of GPEs are set as soon as the GPEs are enabled to wake up the system;changes a bit of whitespace to follow Linux conventions;follow Linux conventions;Similar;0.5809731483459473
Use GPE reference counting to support shared GPEs  ;the wakeup enable mask bits of GPEs are set as soon as the GPEs are enabled to wake up the system;use .notify method instead of installing handler directly  ;-;Similar;0.5284522175788879
Use GPE reference counting to support shared GPEs  ;the wakeup enable mask bits of GPEs are set as soon as the GPEs are enabled to wake up the system;The presence of .notify() causes Linux/ACPI to manage event handlers and notify handlers on our behalf  ;so we dont have to install and remove them ourselves;Similar;0.6386185884475708
Use GPE reference counting to support shared GPEs  ;the wakeup enable mask bits of GPEs are set as soon as the GPEs are enabled to wake up the system;convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.5494506359100342
Use GPE reference counting to support shared GPEs  ;the wakeup enable mask bits of GPEs are set as soon as the GPEs are enabled to wake up the system;"proc_fops is declared as ""const""";should give some thoughts;Similar;0.5710194110870361
Use GPE reference counting to support shared GPEs  ;the wakeup enable mask bits of GPEs are set as soon as the GPEs are enabled to wake up the system;start using GPE from userspace;GPE is already disabled in interrupt context;Similar;0.7941291332244873
Use GPE reference counting to support shared GPEs  ;the wakeup enable mask bits of GPEs are set as soon as the GPEs are enabled to wake up the system;Move all the component definitions for drivers to a single shared place, include/acpi/acpi_drivers.h  ;to have a single shared place;Similar;0.6893789768218994
Use GPE reference counting to support shared GPEs  ;the wakeup enable mask bits of GPEs are set as soon as the GPEs are enabled to wake up the system;"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.5980161428451538
Use GPE reference counting to support shared GPEs  ;the wakeup enable mask bits of GPEs are set as soon as the GPEs are enabled to wake up the system;Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;Similar;0.5678582191467285
Use GPE reference counting to support shared GPEs  ;the wakeup enable mask bits of GPEs are set as soon as the GPEs are enabled to wake up the system;use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Similar;0.5862780809402466
Use GPE reference counting to support shared GPEs  ;the wakeup enable mask bits of GPEs are set as soon as the GPEs are enabled to wake up the system;Use proc_create()/proc_create_data() to make sure that ->proc_fops and ->data be setup;before gluing PDE to main tree;Similar;0.7016561031341553
Use GPE reference counting to support shared GPEs  ;the wakeup enable mask bits of GPEs are set as soon as the GPEs are enabled to wake up the system;Define the macro temporarily in a local manner;all those local definitions will be removed further in this patchset (to not break bisecting);Similar;0.5907289385795593
Use GPE reference counting to support shared GPEs  ;the wakeup enable mask bits of GPEs are set as soon as the GPEs are enabled to wake up the system;Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;Similar;0.5862244963645935
Use GPE reference counting to support shared GPEs  ;the wakeup enable mask bits of GPEs are set as soon as the GPEs are enabled to wake up the system;fix acpi_driver.name usage;fix;Similar;0.6165871620178223
Use GPE reference counting to support shared GPEs  ;the wakeup enable mask bits of GPEs are set as soon as the GPEs are enabled to wake up the system;ls bus/acpi/drivers  ;Display the list of ACPI drivers.;Similar;0.5069743394851685
Use GPE reference counting to support shared GPEs  ;the wakeup enable mask bits of GPEs are set as soon as the GPEs are enabled to wake up the system;"Make ""module name"" actually match the file name";cosmetic only;Similar;0.6920990347862244
Use GPE reference counting to support shared GPEs  ;the wakeup enable mask bits of GPEs are set as soon as the GPEs are enabled to wake up the system;Use acpi_devices handle instead of drivers  ;-;Similar;0.5197125673294067
it is sufficient to set/unset the wakeup mask bits for them during system sleep transitions;"this means that the reference counting of ""wakeup"" GPEs doesnt really make sense";This will allow us to simplify the GPE handling code quite a bit;that change is too intrusive for 2.6.35;Similar;0.5817971229553223
it is sufficient to set/unset the wakeup mask bits for them during system sleep transitions;"this means that the reference counting of ""wakeup"" GPEs doesnt really make sense";Prepare for this change by updating users of gfp and slab facilities;include those headers directly instead of assuming availability;Similar;0.52981036901474
it is sufficient to set/unset the wakeup mask bits for them during system sleep transitions;"this means that the reference counting of ""wakeup"" GPEs doesnt really make sense";prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;Similar;0.535979688167572
it is sufficient to set/unset the wakeup mask bits for them during system sleep transitions;"this means that the reference counting of ""wakeup"" GPEs doesnt really make sense";The script was run on all .h files but without automatically editing them;sprinkling gfp.h and slab.h inclusions around .h files could easily lead to inclusion dependency hell;Similar;0.5276883840560913
it is sufficient to set/unset the wakeup mask bits for them during system sleep transitions;"this means that the reference counting of ""wakeup"" GPEs doesnt really make sense";Im fairly confident about the coverage of this conversion patch  ;Given the fact that I had only a couple of failures from tests on step 6;Similar;0.5621324181556702
it is sufficient to set/unset the wakeup mask bits for them during system sleep transitions;"this means that the reference counting of ""wakeup"" GPEs doesnt really make sense";Introduce a new wake-up flag, always_enabled, for marking devices that should be permanently enabled to generate run-time events  ;devices that should be permanently enabled to generate run-time events;Similar;0.6180602312088013
it is sufficient to set/unset the wakeup mask bits for them during system sleep transitions;"this means that the reference counting of ""wakeup"" GPEs doesnt really make sense";Introduce a reference counter for run-wake devices and a function that will initialize all of the run-time wake-up fields for given device.;-;Similar;0.6646707057952881
it is sufficient to set/unset the wakeup mask bits for them during system sleep transitions;"this means that the reference counting of ""wakeup"" GPEs doesnt really make sense";Add an API to allow devices to indicate whether or not they want their devices GPE to be enabled for both runtime and wakeup events;to allow devices to indicate whether or not they want their devices GPE to be enabled;Similar;0.6605707406997681
it is sufficient to set/unset the wakeup mask bits for them during system sleep transitions;"this means that the reference counting of ""wakeup"" GPEs doesnt really make sense";we could install either a fixed event handler or a notify handler, but the Linux/ACPI code now handles that for us;We previously needed that so we dont need to worry about it;Similar;0.5383753180503845
it is sufficient to set/unset the wakeup mask bits for them during system sleep transitions;"this means that the reference counting of ""wakeup"" GPEs doesnt really make sense";This patch adds temporaries to cache the acpi_device_hid(), acpi_device_name(), and acpi_device_class() pointers;so we dont have to clutter the code with so many uses of those interfaces;Similar;0.5407537221908569
it is sufficient to set/unset the wakeup mask bits for them during system sleep transitions;"this means that the reference counting of ""wakeup"" GPEs doesnt really make sense";changes a bit of whitespace to follow Linux conventions;follow Linux conventions;Similar;0.5144798755645752
it is sufficient to set/unset the wakeup mask bits for them during system sleep transitions;"this means that the reference counting of ""wakeup"" GPEs doesnt really make sense";The presence of .notify() causes Linux/ACPI to manage event handlers and notify handlers on our behalf  ;so we dont have to install and remove them ourselves;Similar;0.5031607747077942
it is sufficient to set/unset the wakeup mask bits for them during system sleep transitions;"this means that the reference counting of ""wakeup"" GPEs doesnt really make sense";"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.6135337352752686
it is sufficient to set/unset the wakeup mask bits for them during system sleep transitions;"this means that the reference counting of ""wakeup"" GPEs doesnt really make sense";Use proc_create()/proc_create_data() to make sure that ->proc_fops and ->data be setup;before gluing PDE to main tree;Similar;0.5694761276245117
it is sufficient to set/unset the wakeup mask bits for them during system sleep transitions;"this means that the reference counting of ""wakeup"" GPEs doesnt really make sense";"Make ""module name"" actually match the file name";cosmetic only;Similar;0.5627644062042236
it is sufficient to set/unset the wakeup mask bits for them during system sleep transitions;"this means that the reference counting of ""wakeup"" GPEs doesnt really make sense";remove unnecessary casts and variable initializations, clean up formatting;unnecessary;Similar;0.5387500524520874
This will allow us to simplify the GPE handling code quite a bit;that change is too intrusive for 2.6.35;Update gfp.h and slab.h includes  ;prepare for breaking implicit slab.h inclusion from percpu.h;Similar;0.5508054494857788
This will allow us to simplify the GPE handling code quite a bit;that change is too intrusive for 2.6.35;Prepare for this change by updating users of gfp and slab facilities;include those headers directly instead of assuming availability;Similar;0.6658517122268677
This will allow us to simplify the GPE handling code quite a bit;that change is too intrusive for 2.6.35;the following script is used as the basis of conversion;As this conversion needs to touch a large number of source files;Similar;0.5386935472488403
This will allow us to simplify the GPE handling code quite a bit;that change is too intrusive for 2.6.35;prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;Similar;0.5539225339889526
This will allow us to simplify the GPE handling code quite a bit;that change is too intrusive for 2.6.35;The script was run again  ;to make sure no file was left behind;Similar;0.6573996543884277
This will allow us to simplify the GPE handling code quite a bit;that change is too intrusive for 2.6.35;description of the patch behaviour;an action or a change;Similar;0.5521595478057861
This will allow us to simplify the GPE handling code quite a bit;that change is too intrusive for 2.6.35;failures were fixed;Build tests were done on the following configurations;Similar;0.5822807550430298
This will allow us to simplify the GPE handling code quite a bit;that change is too intrusive for 2.6.35;percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;Similar;0.5357936024665833
This will allow us to simplify the GPE handling code quite a bit;that change is too intrusive for 2.6.35;Im fairly confident about the coverage of this conversion patch  ;Given the fact that I had only a couple of failures from tests on step 6;Similar;0.6151784658432007
This will allow us to simplify the GPE handling code quite a bit;that change is too intrusive for 2.6.35;Introduce a reference counter for run-wake devices and a function that will initialize all of the run-time wake-up fields for given device.;-;Similar;0.5684687495231628
This will allow us to simplify the GPE handling code quite a bit;that change is too intrusive for 2.6.35;Add an API to allow devices to indicate whether or not they want their devices GPE to be enabled for both runtime and wakeup events;to allow devices to indicate whether or not they want their devices GPE to be enabled;Similar;0.5914770364761353
This will allow us to simplify the GPE handling code quite a bit;that change is too intrusive for 2.6.35;Some drivers need to know when a lid event occurs and get the current status;-;Similar;0.5228190422058105
This will allow us to simplify the GPE handling code quite a bit;that change is too intrusive for 2.6.35;whitespace fix  ;This does not change any actual console output;Similar;0.5899293422698975
This will allow us to simplify the GPE handling code quite a bit;that change is too intrusive for 2.6.35;we could install either a fixed event handler or a notify handler, but the Linux/ACPI code now handles that for us;We previously needed that so we dont need to worry about it;Similar;0.5382506251335144
This will allow us to simplify the GPE handling code quite a bit;that change is too intrusive for 2.6.35;This patch adds temporaries to cache the acpi_device_hid(), acpi_device_name(), and acpi_device_class() pointers;so we dont have to clutter the code with so many uses of those interfaces;Similar;0.5535253286361694
This will allow us to simplify the GPE handling code quite a bit;that change is too intrusive for 2.6.35;Better to oops and learn about a bug;than to silently cover it up;Similar;0.5000319480895996
This will allow us to simplify the GPE handling code quite a bit;that change is too intrusive for 2.6.35;changes a bit of whitespace to follow Linux conventions;follow Linux conventions;Similar;0.6035300493240356
This will allow us to simplify the GPE handling code quite a bit;that change is too intrusive for 2.6.35;start using GPE from userspace;GPE is already disabled in interrupt context;Similar;0.5264372825622559
This will allow us to simplify the GPE handling code quite a bit;that change is too intrusive for 2.6.35;"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.5698826313018799
This will allow us to simplify the GPE handling code quite a bit;that change is too intrusive for 2.6.35;Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;Similar;0.514621913433075
This will allow us to simplify the GPE handling code quite a bit;that change is too intrusive for 2.6.35;Use proc_create()/proc_create_data() to make sure that ->proc_fops and ->data be setup;before gluing PDE to main tree;Similar;0.6094691157341003
This will allow us to simplify the GPE handling code quite a bit;that change is too intrusive for 2.6.35;Define the macro temporarily in a local manner;all those local definitions will be removed further in this patchset (to not break bisecting);Similar;0.5991449356079102
This will allow us to simplify the GPE handling code quite a bit;that change is too intrusive for 2.6.35;"Make ""module name"" actually match the file name";cosmetic only;Similar;0.5815172791481018
This will allow us to simplify the GPE handling code quite a bit;that change is too intrusive for 2.6.35;Fix indentation where Lindent did get confused  ;Lindent did get confused;Similar;0.5525683760643005
This will allow us to simplify the GPE handling code quite a bit;that change is too intrusive for 2.6.35;remove unnecessary casts and variable initializations, clean up formatting;unnecessary;Similar;0.6325162649154663
Update gfp.h and slab.h includes  ;prepare for breaking implicit slab.h inclusion from percpu.h;Prepare for this change by updating users of gfp and slab facilities;include those headers directly instead of assuming availability;Similar;0.7388025522232056
Update gfp.h and slab.h includes  ;prepare for breaking implicit slab.h inclusion from percpu.h;the following script is used as the basis of conversion;As this conversion needs to touch a large number of source files;Similar;0.6859713792800903
Update gfp.h and slab.h includes  ;prepare for breaking implicit slab.h inclusion from percpu.h;put the new include  ;its order conforms to its surrounding;Similar;0.6047030687332153
Update gfp.h and slab.h includes  ;prepare for breaking implicit slab.h inclusion from percpu.h;prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;Similar;0.5800207853317261
Update gfp.h and slab.h includes  ;prepare for breaking implicit slab.h inclusion from percpu.h;The script was run again  ;to make sure no file was left behind;Similar;0.6068305969238281
Update gfp.h and slab.h includes  ;prepare for breaking implicit slab.h inclusion from percpu.h;description of the patch behaviour;an action or a change;Similar;0.5892252922058105
Update gfp.h and slab.h includes  ;prepare for breaking implicit slab.h inclusion from percpu.h;percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;Similar;0.6856520175933838
Update gfp.h and slab.h includes  ;prepare for breaking implicit slab.h inclusion from percpu.h;Im fairly confident about the coverage of this conversion patch  ;Given the fact that I had only a couple of failures from tests on step 6;Similar;0.5174602270126343
Update gfp.h and slab.h includes  ;prepare for breaking implicit slab.h inclusion from percpu.h;Add more run-time wake-up fields;Add more;Similar;0.5013629198074341
Update gfp.h and slab.h includes  ;prepare for breaking implicit slab.h inclusion from percpu.h;Introduce a new wake-up flag, always_enabled, for marking devices that should be permanently enabled to generate run-time events  ;devices that should be permanently enabled to generate run-time events;Similar;0.512226402759552
Update gfp.h and slab.h includes  ;prepare for breaking implicit slab.h inclusion from percpu.h;Introduce a reference counter for run-wake devices and a function that will initialize all of the run-time wake-up fields for given device.;-;Similar;0.6145250797271729
Update gfp.h and slab.h includes  ;prepare for breaking implicit slab.h inclusion from percpu.h;Add an API to allow devices to indicate whether or not they want their devices GPE to be enabled for both runtime and wakeup events;to allow devices to indicate whether or not they want their devices GPE to be enabled;Similar;0.5939426422119141
Update gfp.h and slab.h includes  ;prepare for breaking implicit slab.h inclusion from percpu.h;complain the following warning message;"will

";Similar;0.5483364462852478
Update gfp.h and slab.h includes  ;prepare for breaking implicit slab.h inclusion from percpu.h;return -ENODEV;theres no lid device present;Similar;0.6498658657073975
Update gfp.h and slab.h includes  ;prepare for breaking implicit slab.h inclusion from percpu.h;whitespace fix  ;This does not change any actual console output;Similar;0.6275759935379028
Update gfp.h and slab.h includes  ;prepare for breaking implicit slab.h inclusion from percpu.h;we could install either a fixed event handler or a notify handler, but the Linux/ACPI code now handles that for us;We previously needed that so we dont need to worry about it;Similar;0.5033313035964966
Update gfp.h and slab.h includes  ;prepare for breaking implicit slab.h inclusion from percpu.h;Remove button->device pointer;button;Similar;0.5747179985046387
Update gfp.h and slab.h includes  ;prepare for breaking implicit slab.h inclusion from percpu.h;This patch adds temporaries to cache the acpi_device_hid(), acpi_device_name(), and acpi_device_class() pointers;so we dont have to clutter the code with so many uses of those interfaces;Similar;0.5635679364204407
Update gfp.h and slab.h includes  ;prepare for breaking implicit slab.h inclusion from percpu.h;changes a bit of whitespace to follow Linux conventions;follow Linux conventions;Similar;0.6055445671081543
Update gfp.h and slab.h includes  ;prepare for breaking implicit slab.h inclusion from percpu.h;use .notify method instead of installing handler directly  ;-;Similar;0.5244818925857544
Update gfp.h and slab.h includes  ;prepare for breaking implicit slab.h inclusion from percpu.h;convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.6229133605957031
Update gfp.h and slab.h includes  ;prepare for breaking implicit slab.h inclusion from percpu.h;"proc_fops is declared as ""const""";should give some thoughts;Similar;0.6125254034996033
Update gfp.h and slab.h includes  ;prepare for breaking implicit slab.h inclusion from percpu.h;start using GPE from userspace;GPE is already disabled in interrupt context;Similar;0.6247515678405762
Update gfp.h and slab.h includes  ;prepare for breaking implicit slab.h inclusion from percpu.h;Move all the component definitions for drivers to a single shared place, include/acpi/acpi_drivers.h  ;to have a single shared place;Similar;0.6060032844543457
Update gfp.h and slab.h includes  ;prepare for breaking implicit slab.h inclusion from percpu.h;"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.6178462505340576
Update gfp.h and slab.h includes  ;prepare for breaking implicit slab.h inclusion from percpu.h;Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;Similar;0.535063624382019
Update gfp.h and slab.h includes  ;prepare for breaking implicit slab.h inclusion from percpu.h;use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Similar;0.5822979211807251
Update gfp.h and slab.h includes  ;prepare for breaking implicit slab.h inclusion from percpu.h;Use proc_create()/proc_create_data() to make sure that ->proc_fops and ->data be setup;before gluing PDE to main tree;Similar;0.6180661916732788
Update gfp.h and slab.h includes  ;prepare for breaking implicit slab.h inclusion from percpu.h;get rid of input BIT* duplicate defines;duplicate;Similar;0.5596868991851807
Update gfp.h and slab.h includes  ;prepare for breaking implicit slab.h inclusion from percpu.h;Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;Similar;0.5039452314376831
Update gfp.h and slab.h includes  ;prepare for breaking implicit slab.h inclusion from percpu.h;Define the macro temporarily in a local manner;all those local definitions will be removed further in this patchset (to not break bisecting);Similar;0.5746698379516602
Update gfp.h and slab.h includes  ;prepare for breaking implicit slab.h inclusion from percpu.h;Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;Similar;0.6524300575256348
Update gfp.h and slab.h includes  ;prepare for breaking implicit slab.h inclusion from percpu.h;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.6012305021286011
Update gfp.h and slab.h includes  ;prepare for breaking implicit slab.h inclusion from percpu.h;fix acpi_driver.name usage;fix;Similar;0.5667407512664795
Update gfp.h and slab.h includes  ;prepare for breaking implicit slab.h inclusion from percpu.h;"Make ""module name"" actually match the file name";cosmetic only;Similar;0.595806360244751
Update gfp.h and slab.h includes  ;prepare for breaking implicit slab.h inclusion from percpu.h;remove unnecessary casts and variable initializations, clean up formatting;unnecessary;Similar;0.5445859432220459
Update gfp.h and slab.h includes  ;prepare for breaking implicit slab.h inclusion from percpu.h;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.5301249027252197
Update gfp.h and slab.h includes  ;prepare for breaking implicit slab.h inclusion from percpu.h;restore /proc/acpi/button/ (ala 2.6.12)  ;[ACPI];Similar;0.6285356283187866
Update gfp.h and slab.h includes  ;prepare for breaking implicit slab.h inclusion from percpu.h;"Create a separate ""historical"" git archive";about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated;Similar;0.5370154976844788
Prepare for this change by updating users of gfp and slab facilities;include those headers directly instead of assuming availability;the following script is used as the basis of conversion;As this conversion needs to touch a large number of source files;Similar;0.6466844081878662
Prepare for this change by updating users of gfp and slab facilities;include those headers directly instead of assuming availability;put the new include  ;its order conforms to its surrounding;Similar;0.581234335899353
Prepare for this change by updating users of gfp and slab facilities;include those headers directly instead of assuming availability;prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;Similar;0.6131855249404907
Prepare for this change by updating users of gfp and slab facilities;include those headers directly instead of assuming availability;The script was run again  ;to make sure no file was left behind;Similar;0.6134099960327148
Prepare for this change by updating users of gfp and slab facilities;include those headers directly instead of assuming availability;description of the patch behaviour;an action or a change;Similar;0.5101505517959595
Prepare for this change by updating users of gfp and slab facilities;include those headers directly instead of assuming availability;percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;Similar;0.5562541484832764
Prepare for this change by updating users of gfp and slab facilities;include those headers directly instead of assuming availability;Im fairly confident about the coverage of this conversion patch  ;Given the fact that I had only a couple of failures from tests on step 6;Similar;0.5403422713279724
Prepare for this change by updating users of gfp and slab facilities;include those headers directly instead of assuming availability;Introduce a new wake-up flag, always_enabled, for marking devices that should be permanently enabled to generate run-time events  ;devices that should be permanently enabled to generate run-time events;Similar;0.6498147249221802
Prepare for this change by updating users of gfp and slab facilities;include those headers directly instead of assuming availability;Introduce a reference counter for run-wake devices and a function that will initialize all of the run-time wake-up fields for given device.;-;Similar;0.7233837842941284
Prepare for this change by updating users of gfp and slab facilities;include those headers directly instead of assuming availability;Add an API to allow devices to indicate whether or not they want their devices GPE to be enabled for both runtime and wakeup events;to allow devices to indicate whether or not they want their devices GPE to be enabled;Similar;0.7031832933425903
Prepare for this change by updating users of gfp and slab facilities;include those headers directly instead of assuming availability;Some drivers need to know when a lid event occurs and get the current status;-;Similar;0.5799235105514526
Prepare for this change by updating users of gfp and slab facilities;include those headers directly instead of assuming availability;whitespace fix  ;This does not change any actual console output;Similar;0.5641779899597168
Prepare for this change by updating users of gfp and slab facilities;include those headers directly instead of assuming availability;we could install either a fixed event handler or a notify handler, but the Linux/ACPI code now handles that for us;We previously needed that so we dont need to worry about it;Similar;0.5916548371315002
Prepare for this change by updating users of gfp and slab facilities;include those headers directly instead of assuming availability;This patch adds temporaries to cache the acpi_device_hid(), acpi_device_name(), and acpi_device_class() pointers;so we dont have to clutter the code with so many uses of those interfaces;Similar;0.6375132203102112
Prepare for this change by updating users of gfp and slab facilities;include those headers directly instead of assuming availability;Better to oops and learn about a bug;than to silently cover it up;Similar;0.5857824683189392
Prepare for this change by updating users of gfp and slab facilities;include those headers directly instead of assuming availability;changes a bit of whitespace to follow Linux conventions;follow Linux conventions;Similar;0.6153567433357239
Prepare for this change by updating users of gfp and slab facilities;include those headers directly instead of assuming availability;The presence of .notify() causes Linux/ACPI to manage event handlers and notify handlers on our behalf  ;so we dont have to install and remove them ourselves;Similar;0.6290159225463867
Prepare for this change by updating users of gfp and slab facilities;include those headers directly instead of assuming availability;convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.5918809175491333
Prepare for this change by updating users of gfp and slab facilities;include those headers directly instead of assuming availability;start using GPE from userspace;GPE is already disabled in interrupt context;Similar;0.7107902765274048
Prepare for this change by updating users of gfp and slab facilities;include those headers directly instead of assuming availability;Move all the component definitions for drivers to a single shared place, include/acpi/acpi_drivers.h  ;to have a single shared place;Similar;0.6337350606918335
Prepare for this change by updating users of gfp and slab facilities;include those headers directly instead of assuming availability;"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.6238371133804321
Prepare for this change by updating users of gfp and slab facilities;include those headers directly instead of assuming availability;Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;Similar;0.5099020004272461
Prepare for this change by updating users of gfp and slab facilities;include those headers directly instead of assuming availability;Use proc_create()/proc_create_data() to make sure that ->proc_fops and ->data be setup;before gluing PDE to main tree;Similar;0.7744055390357971
Prepare for this change by updating users of gfp and slab facilities;include those headers directly instead of assuming availability;Add correct ->owner to proc_fops to fix reading/module unloading race  ;fix reading/module unloading race;Similar;0.6461389660835266
Prepare for this change by updating users of gfp and slab facilities;include those headers directly instead of assuming availability;Define the macro temporarily in a local manner;all those local definitions will be removed further in this patchset (to not break bisecting);Similar;0.5503812432289124
Prepare for this change by updating users of gfp and slab facilities;include those headers directly instead of assuming availability;Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;Similar;0.558645486831665
Prepare for this change by updating users of gfp and slab facilities;include those headers directly instead of assuming availability;fix acpi_driver.name usage;fix;Similar;0.5366512537002563
Prepare for this change by updating users of gfp and slab facilities;include those headers directly instead of assuming availability;"Make ""module name"" actually match the file name";cosmetic only;Similar;0.6095823049545288
Prepare for this change by updating users of gfp and slab facilities;include those headers directly instead of assuming availability;remove unnecessary casts and variable initializations, clean up formatting;unnecessary;Similar;0.5574718713760376
Prepare for this change by updating users of gfp and slab facilities;include those headers directly instead of assuming availability;restore /proc/acpi/button/ (ala 2.6.12)  ;[ACPI];Similar;0.5254228711128235
the following script is used as the basis of conversion;As this conversion needs to touch a large number of source files;only the necessary includes are there;necessary;Similar;0.5360773205757141
the following script is used as the basis of conversion;As this conversion needs to touch a large number of source files;put the new include  ;its order conforms to its surrounding;Similar;0.5966740250587463
the following script is used as the basis of conversion;As this conversion needs to touch a large number of source files;prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;Similar;0.6696648597717285
the following script is used as the basis of conversion;As this conversion needs to touch a large number of source files;The script was run again  ;to make sure no file was left behind;Similar;0.6375275254249573
the following script is used as the basis of conversion;As this conversion needs to touch a large number of source files;description of the patch behaviour;an action or a change;Similar;0.6391336917877197
the following script is used as the basis of conversion;As this conversion needs to touch a large number of source files;failures were fixed;Build tests were done on the following configurations;Similar;0.5228791236877441
the following script is used as the basis of conversion;As this conversion needs to touch a large number of source files;percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;Similar;0.6876366138458252
the following script is used as the basis of conversion;As this conversion needs to touch a large number of source files;Im fairly confident about the coverage of this conversion patch  ;Given the fact that I had only a couple of failures from tests on step 6;Similar;0.5313110947608948
the following script is used as the basis of conversion;As this conversion needs to touch a large number of source files;Introduce a reference counter for run-wake devices and a function that will initialize all of the run-time wake-up fields for given device.;-;Similar;0.6281918287277222
the following script is used as the basis of conversion;As this conversion needs to touch a large number of source files;Add an API to allow devices to indicate whether or not they want their devices GPE to be enabled for both runtime and wakeup events;to allow devices to indicate whether or not they want their devices GPE to be enabled;Similar;0.5483814477920532
the following script is used as the basis of conversion;As this conversion needs to touch a large number of source files;complain the following warning message;"will

";Similar;0.706071138381958
the following script is used as the basis of conversion;As this conversion needs to touch a large number of source files;return -ENODEV;theres no lid device present;Similar;0.611756443977356
the following script is used as the basis of conversion;As this conversion needs to touch a large number of source files;Some drivers need to know when a lid event occurs and get the current status;-;Similar;0.5328491926193237
the following script is used as the basis of conversion;As this conversion needs to touch a large number of source files;whitespace fix  ;This does not change any actual console output;Similar;0.6307656764984131
the following script is used as the basis of conversion;As this conversion needs to touch a large number of source files;type: Power Button;I dont think theres anything meaningful user-space can do by knowing whether a button is a control method or a fixed hardware button;Similar;0.5097020864486694
the following script is used as the basis of conversion;As this conversion needs to touch a large number of source files;Remove button->device pointer;button;Similar;0.5707472562789917
the following script is used as the basis of conversion;As this conversion needs to touch a large number of source files;changes a bit of whitespace to follow Linux conventions;follow Linux conventions;Similar;0.5588176250457764
the following script is used as the basis of conversion;As this conversion needs to touch a large number of source files;use .notify method instead of installing handler directly  ;-;Similar;0.5654051303863525
the following script is used as the basis of conversion;As this conversion needs to touch a large number of source files;convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.6282119750976562
the following script is used as the basis of conversion;As this conversion needs to touch a large number of source files;"proc_fops is declared as ""const""";should give some thoughts;Similar;0.6692049503326416
the following script is used as the basis of conversion;As this conversion needs to touch a large number of source files;start using GPE from userspace;GPE is already disabled in interrupt context;Similar;0.6446558237075806
the following script is used as the basis of conversion;As this conversion needs to touch a large number of source files;Move all the component definitions for drivers to a single shared place, include/acpi/acpi_drivers.h  ;to have a single shared place;Similar;0.545795202255249
the following script is used as the basis of conversion;As this conversion needs to touch a large number of source files;"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.6894224882125854
the following script is used as the basis of conversion;As this conversion needs to touch a large number of source files;Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;Similar;0.5728306770324707
the following script is used as the basis of conversion;As this conversion needs to touch a large number of source files;use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Similar;0.590814471244812
the following script is used as the basis of conversion;As this conversion needs to touch a large number of source files;Use proc_create()/proc_create_data() to make sure that ->proc_fops and ->data be setup;before gluing PDE to main tree;Similar;0.6784685850143433
the following script is used as the basis of conversion;As this conversion needs to touch a large number of source files;get rid of input BIT* duplicate defines;duplicate;Similar;0.5656856298446655
the following script is used as the basis of conversion;As this conversion needs to touch a large number of source files;Define the macro temporarily in a local manner;all those local definitions will be removed further in this patchset (to not break bisecting);Similar;0.6101083159446716
the following script is used as the basis of conversion;As this conversion needs to touch a large number of source files;Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;Similar;0.6086699962615967
the following script is used as the basis of conversion;As this conversion needs to touch a large number of source files;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.5438649654388428
the following script is used as the basis of conversion;As this conversion needs to touch a large number of source files;fix acpi_driver.name usage;fix;Similar;0.5843526124954224
the following script is used as the basis of conversion;As this conversion needs to touch a large number of source files;"Make ""module name"" actually match the file name";cosmetic only;Similar;0.618148922920227
the following script is used as the basis of conversion;As this conversion needs to touch a large number of source files;Fix indentation where Lindent did get confused  ;Lindent did get confused;Similar;0.5940300226211548
the following script is used as the basis of conversion;As this conversion needs to touch a large number of source files;remove unnecessary casts and variable initializations, clean up formatting;unnecessary;Similar;0.5319041013717651
the following script is used as the basis of conversion;As this conversion needs to touch a large number of source files;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.5526539087295532
the following script is used as the basis of conversion;As this conversion needs to touch a large number of source files;restore /proc/acpi/button/ (ala 2.6.12)  ;[ACPI];Similar;0.5194872617721558
the following script is used as the basis of conversion;As this conversion needs to touch a large number of source files;"Create a separate ""historical"" git archive";about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated;Similar;0.5360115766525269
only the necessary includes are there;necessary;put the new include  ;its order conforms to its surrounding;Similar;0.5065445899963379
only the necessary includes are there;necessary;description of the patch behaviour;an action or a change;Similar;0.551356315612793
only the necessary includes are there;necessary;failures were fixed;Build tests were done on the following configurations;Similar;0.5634684562683105
only the necessary includes are there;necessary;complain the following warning message;"will

";Similar;0.5514253377914429
only the necessary includes are there;necessary;not all ACPI drivers use/want it;they should not have to #undef PREFIX to define their own;Similar;0.5505886077880859
only the necessary includes are there;necessary;whitespace fix  ;This does not change any actual console output;Similar;0.5319005250930786
only the necessary includes are there;necessary;Setting ->owner as done currently (pde->owner = THIS_MODULE) is racy;as correctly noted at bug #12454;Similar;0.5936862230300903
only the necessary includes are there;necessary;"proc_fops is declared as ""const""";should give some thoughts;Similar;0.5729588270187378
only the necessary includes are there;necessary;dont want such modular code;definitely;Similar;0.5344330072402954
only the necessary includes are there;necessary;"Invoke with ; as leaving it off confuses Lindent  ";gcc doesnt care;Similar;0.5438929200172424
only the necessary includes are there;necessary;Fix indentation where Lindent did get confused  ;Lindent did get confused;Similar;0.5252638459205627
put the new include  ;its order conforms to its surrounding;The script was run again  ;to make sure no file was left behind;Similar;0.5684497356414795
put the new include  ;its order conforms to its surrounding;description of the patch behaviour;an action or a change;Similar;0.5589084625244141
put the new include  ;its order conforms to its surrounding;percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;Similar;0.6164941787719727
put the new include  ;its order conforms to its surrounding;Add more run-time wake-up fields;Add more;Similar;0.5712490081787109
put the new include  ;its order conforms to its surrounding;Introduce a reference counter for run-wake devices and a function that will initialize all of the run-time wake-up fields for given device.;-;Similar;0.5284912586212158
put the new include  ;its order conforms to its surrounding;complain the following warning message;"will

";Similar;0.5928514003753662
put the new include  ;its order conforms to its surrounding;return -ENODEV;theres no lid device present;Similar;0.6757379174232483
put the new include  ;its order conforms to its surrounding;whitespace fix  ;This does not change any actual console output;Similar;0.6022257804870605
put the new include  ;its order conforms to its surrounding;type: Power Button;I dont think theres anything meaningful user-space can do by knowing whether a button is a control method or a fixed hardware button;Similar;0.5887125730514526
put the new include  ;its order conforms to its surrounding;Remove button->device pointer;button;Similar;0.5116078853607178
put the new include  ;its order conforms to its surrounding;convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.5060398578643799
put the new include  ;its order conforms to its surrounding;"proc_fops is declared as ""const""";should give some thoughts;Similar;0.5638952851295471
put the new include  ;its order conforms to its surrounding;start using GPE from userspace;GPE is already disabled in interrupt context;Similar;0.5905888676643372
put the new include  ;its order conforms to its surrounding;"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.5254381895065308
put the new include  ;its order conforms to its surrounding;Use proc_create()/proc_create_data() to make sure that ->proc_fops and ->data be setup;before gluing PDE to main tree;Similar;0.5135494470596313
put the new include  ;its order conforms to its surrounding;Define the macro temporarily in a local manner;all those local definitions will be removed further in this patchset (to not break bisecting);Similar;0.5427961945533752
put the new include  ;its order conforms to its surrounding;restore /proc/acpi/button/ (ala 2.6.12)  ;[ACPI];Similar;0.5180681347846985
prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;The script was run again  ;to make sure no file was left behind;Similar;0.5239964127540588
prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;Similar;0.5168116092681885
prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;Introduce a new wake-up flag, always_enabled, for marking devices that should be permanently enabled to generate run-time events  ;devices that should be permanently enabled to generate run-time events;Similar;0.5417659282684326
prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;Introduce a reference counter for run-wake devices and a function that will initialize all of the run-time wake-up fields for given device.;-;Similar;0.6065733432769775
prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;Add an API to allow devices to indicate whether or not they want their devices GPE to be enabled for both runtime and wakeup events;to allow devices to indicate whether or not they want their devices GPE to be enabled;Similar;0.6453984975814819
prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;complain the following warning message;"will

";Similar;0.6504300832748413
prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;"This patch is to eliminate the above warning message
";Device PNP0C0D:00 failed to resume: error 1;Similar;0.5826748013496399
prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;Some drivers need to know when a lid event occurs and get the current status;-;Similar;0.5893904566764832
prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;whitespace fix  ;This does not change any actual console output;Similar;0.5506644248962402
prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;we could install either a fixed event handler or a notify handler, but the Linux/ACPI code now handles that for us;We previously needed that so we dont need to worry about it;Similar;0.6279817819595337
prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;Remove button->device pointer;button;Similar;0.556716799736023
prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;This patch adds temporaries to cache the acpi_device_hid(), acpi_device_name(), and acpi_device_class() pointers;so we dont have to clutter the code with so many uses of those interfaces;Similar;0.6783369779586792
prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;Better to oops and learn about a bug;than to silently cover it up;Similar;0.5557835102081299
prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;changes a bit of whitespace to follow Linux conventions;follow Linux conventions;Similar;0.6355061531066895
prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;use .notify method instead of installing handler directly  ;-;Similar;0.5307478904724121
prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;The presence of .notify() causes Linux/ACPI to manage event handlers and notify handlers on our behalf  ;so we dont have to install and remove them ourselves;Similar;0.6285163760185242
prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.6895589828491211
prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;start using GPE from userspace;GPE is already disabled in interrupt context;Similar;0.5742505788803101
prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;Move all the component definitions for drivers to a single shared place, include/acpi/acpi_drivers.h  ;to have a single shared place;Similar;0.5293510556221008
prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.6370373964309692
prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;Similar;0.6408869028091431
prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Similar;0.5066992044448853
prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;Use proc_create()/proc_create_data() to make sure that ->proc_fops and ->data be setup;before gluing PDE to main tree;Similar;0.6715124249458313
prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;Add correct ->owner to proc_fops to fix reading/module unloading race  ;fix reading/module unloading race;Similar;0.5832480192184448
prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;get rid of input BIT* duplicate defines;duplicate;Similar;0.505871593952179
prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;Similar;0.5273075699806213
prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;Similar;0.5907670855522156
prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.5863921642303467
prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;fix acpi_driver.name usage;fix;Similar;0.6241955757141113
prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;"Make ""module name"" actually match the file name";cosmetic only;Similar;0.6308672428131104
prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;Fix indentation where Lindent did get confused  ;Lindent did get confused;Similar;0.5605456233024597
prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;remove unnecessary casts and variable initializations, clean up formatting;unnecessary;Similar;0.5692429542541504
prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;Remove unneeded acpi_handle from driver;unneeded;Similar;0.5507335662841797
prints out an error message indicating which .h file needs to be added to the file;the file doesnt have fitting include block;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.5994302034378052
The script was run again  ;to make sure no file was left behind;description of the patch behaviour;an action or a change;Similar;0.5239992141723633
The script was run again  ;to make sure no file was left behind;failures were fixed;Build tests were done on the following configurations;Similar;0.5515815019607544
The script was run again  ;to make sure no file was left behind;percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;Similar;0.7505702972412109
The script was run again  ;to make sure no file was left behind;Add more run-time wake-up fields;Add more;Similar;0.6051250696182251
The script was run again  ;to make sure no file was left behind;Introduce a new wake-up flag, always_enabled, for marking devices that should be permanently enabled to generate run-time events  ;devices that should be permanently enabled to generate run-time events;Similar;0.5146909952163696
The script was run again  ;to make sure no file was left behind;Introduce a reference counter for run-wake devices and a function that will initialize all of the run-time wake-up fields for given device.;-;Similar;0.5828337669372559
The script was run again  ;to make sure no file was left behind;Add an API to allow devices to indicate whether or not they want their devices GPE to be enabled for both runtime and wakeup events;to allow devices to indicate whether or not they want their devices GPE to be enabled;Similar;0.517360270023346
The script was run again  ;to make sure no file was left behind;complain the following warning message;"will

";Similar;0.5411584377288818
The script was run again  ;to make sure no file was left behind;return -ENODEV;theres no lid device present;Similar;0.6328109502792358
The script was run again  ;to make sure no file was left behind;Some drivers need to know when a lid event occurs and get the current status;-;Similar;0.5154173374176025
The script was run again  ;to make sure no file was left behind;whitespace fix  ;This does not change any actual console output;Similar;0.5942462086677551
The script was run again  ;to make sure no file was left behind;Remove button->device pointer;button;Similar;0.5540957450866699
The script was run again  ;to make sure no file was left behind;changes a bit of whitespace to follow Linux conventions;follow Linux conventions;Similar;0.5421451330184937
The script was run again  ;to make sure no file was left behind;use .notify method instead of installing handler directly  ;-;Similar;0.560692310333252
The script was run again  ;to make sure no file was left behind;convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.5673519372940063
The script was run again  ;to make sure no file was left behind;"proc_fops is declared as ""const""";should give some thoughts;Similar;0.5179785490036011
The script was run again  ;to make sure no file was left behind;start using GPE from userspace;GPE is already disabled in interrupt context;Similar;0.5408273935317993
The script was run again  ;to make sure no file was left behind;"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.6558005809783936
The script was run again  ;to make sure no file was left behind;Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;Similar;0.5384812951087952
The script was run again  ;to make sure no file was left behind;use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Similar;0.5597381591796875
The script was run again  ;to make sure no file was left behind;Use proc_create()/proc_create_data() to make sure that ->proc_fops and ->data be setup;before gluing PDE to main tree;Similar;0.5248051881790161
The script was run again  ;to make sure no file was left behind;get rid of input BIT* duplicate defines;duplicate;Similar;0.5547543168067932
The script was run again  ;to make sure no file was left behind;Define the macro temporarily in a local manner;all those local definitions will be removed further in this patchset (to not break bisecting);Similar;0.627507209777832
The script was run again  ;to make sure no file was left behind;Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;Similar;0.5164905786514282
The script was run again  ;to make sure no file was left behind;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.5408822894096375
The script was run again  ;to make sure no file was left behind;"Invoke with ; as leaving it off confuses Lindent  ";gcc doesnt care;Similar;0.5238076448440552
The script was run again  ;to make sure no file was left behind;Fix indentation where Lindent did get confused  ;Lindent did get confused;Similar;0.5829545855522156
The script was run again  ;to make sure no file was left behind;remove unnecessary casts and variable initializations, clean up formatting;unnecessary;Similar;0.6253958940505981
The script was run again  ;to make sure no file was left behind;restore /proc/acpi/button/ (ala 2.6.12)  ;[ACPI];Similar;0.5454912185668945
The script was run on all .h files but without automatically editing them;sprinkling gfp.h and slab.h inclusions around .h files could easily lead to inclusion dependency hell;CONFIG_GCOV_KERNEL was turned off for all tests and a few more options had to be turned off depending on archs to make things build;my distributed build env didnt work with gcov compiles, like ipr on powerpc/64 which failed due to missing writeq;Similar;0.6558817625045776
The script was run on all .h files but without automatically editing them;sprinkling gfp.h and slab.h inclusions around .h files could easily lead to inclusion dependency hell;Introduce a new wake-up flag, always_enabled, for marking devices that should be permanently enabled to generate run-time events  ;devices that should be permanently enabled to generate run-time events;Similar;0.5171823501586914
The script was run on all .h files but without automatically editing them;sprinkling gfp.h and slab.h inclusions around .h files could easily lead to inclusion dependency hell;we could install either a fixed event handler or a notify handler, but the Linux/ACPI code now handles that for us;We previously needed that so we dont need to worry about it;Similar;0.60210120677948
The script was run on all .h files but without automatically editing them;sprinkling gfp.h and slab.h inclusions around .h files could easily lead to inclusion dependency hell;This patch adds temporaries to cache the acpi_device_hid(), acpi_device_name(), and acpi_device_class() pointers;so we dont have to clutter the code with so many uses of those interfaces;Similar;0.5049969553947449
The script was run on all .h files but without automatically editing them;sprinkling gfp.h and slab.h inclusions around .h files could easily lead to inclusion dependency hell;The presence of .notify() causes Linux/ACPI to manage event handlers and notify handlers on our behalf  ;so we dont have to install and remove them ourselves;Similar;0.5242503881454468
The script was run on all .h files but without automatically editing them;sprinkling gfp.h and slab.h inclusions around .h files could easily lead to inclusion dependency hell;Move all the component definitions for drivers to a single shared place, include/acpi/acpi_drivers.h  ;to have a single shared place;Similar;0.5441696047782898
Most gfp.h inclusion directives were ignored  ;stuff from gfp.h was usually wildly available and often used in preprocessor macros;CONFIG_GCOV_KERNEL was turned off for all tests and a few more options had to be turned off depending on archs to make things build;my distributed build env didnt work with gcov compiles, like ipr on powerpc/64 which failed due to missing writeq;Similar;0.5353522300720215
Most gfp.h inclusion directives were ignored  ;stuff from gfp.h was usually wildly available and often used in preprocessor macros;percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;Similar;0.505788266658783
Most gfp.h inclusion directives were ignored  ;stuff from gfp.h was usually wildly available and often used in preprocessor macros;Remove the old GPE type handling entirely  ;Gets rid of various quirks, like the implicit disabling with GPE type setting;Similar;0.5524635910987854
Most gfp.h inclusion directives were ignored  ;stuff from gfp.h was usually wildly available and often used in preprocessor macros;not all ACPI drivers use/want it;they should not have to #undef PREFIX to define their own;Similar;0.6642717123031616
Most gfp.h inclusion directives were ignored  ;stuff from gfp.h was usually wildly available and often used in preprocessor macros;Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;Similar;0.5168686509132385
description of the patch behaviour;an action or a change;failures were fixed;Build tests were done on the following configurations;Similar;0.6840344071388245
description of the patch behaviour;an action or a change;percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;Similar;0.5663517713546753
description of the patch behaviour;an action or a change;Im fairly confident about the coverage of this conversion patch  ;Given the fact that I had only a couple of failures from tests on step 6;Similar;0.5909428596496582
description of the patch behaviour;an action or a change;complain the following warning message;"will

";Similar;0.6346803903579712
description of the patch behaviour;an action or a change;"This patch is to eliminate the above warning message
";Device PNP0C0D:00 failed to resume: error 1;Similar;0.5937802791595459
description of the patch behaviour;an action or a change;return -ENODEV;theres no lid device present;Similar;0.5949758887290955
description of the patch behaviour;an action or a change;whitespace fix  ;This does not change any actual console output;Similar;0.772733211517334
description of the patch behaviour;an action or a change;Remove button->device pointer;button;Similar;0.563935399055481
description of the patch behaviour;an action or a change;Better to oops and learn about a bug;than to silently cover it up;Similar;0.5241342782974243
description of the patch behaviour;an action or a change;use .notify method instead of installing handler directly  ;-;Similar;0.515586256980896
description of the patch behaviour;an action or a change;Setting ->owner as done currently (pde->owner = THIS_MODULE) is racy;as correctly noted at bug #12454;Similar;0.5744831562042236
description of the patch behaviour;an action or a change;"proc_fops is declared as ""const""";should give some thoughts;Similar;0.6148267984390259
description of the patch behaviour;an action or a change;start using GPE from userspace;GPE is already disabled in interrupt context;Similar;0.5712229013442993
description of the patch behaviour;an action or a change;"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.5412412285804749
description of the patch behaviour;an action or a change;use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Similar;0.5854457020759583
description of the patch behaviour;an action or a change;Use proc_create()/proc_create_data() to make sure that ->proc_fops and ->data be setup;before gluing PDE to main tree;Similar;0.5554777383804321
description of the patch behaviour;an action or a change;get rid of input BIT* duplicate defines;duplicate;Similar;0.5608289241790771
description of the patch behaviour;an action or a change;Define the macro temporarily in a local manner;all those local definitions will be removed further in this patchset (to not break bisecting);Similar;0.6921350955963135
description of the patch behaviour;an action or a change;fix acpi_driver.name usage;fix;Similar;0.5213552713394165
description of the patch behaviour;an action or a change;"Make ""module name"" actually match the file name";cosmetic only;Similar;0.5331239104270935
description of the patch behaviour;an action or a change;"Invoke with ; as leaving it off confuses Lindent  ";gcc doesnt care;Similar;0.5223127603530884
description of the patch behaviour;an action or a change;Fix indentation where Lindent did get confused  ;Lindent did get confused;Similar;0.6098637580871582
description of the patch behaviour;an action or a change;remove unnecessary casts and variable initializations, clean up formatting;unnecessary;Similar;0.5476645231246948
failures were fixed;Build tests were done on the following configurations;percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;Similar;0.5679507255554199
failures were fixed;Build tests were done on the following configurations;Im fairly confident about the coverage of this conversion patch  ;Given the fact that I had only a couple of failures from tests on step 6;Similar;0.5819112062454224
failures were fixed;Build tests were done on the following configurations;Remove the old GPE type handling entirely  ;Gets rid of various quirks, like the implicit disabling with GPE type setting;Similar;0.5874541997909546
failures were fixed;Build tests were done on the following configurations;complain the following warning message;"will

";Similar;0.5784704089164734
failures were fixed;Build tests were done on the following configurations;"This patch is to eliminate the above warning message
";Device PNP0C0D:00 failed to resume: error 1;Similar;0.6424832344055176
failures were fixed;Build tests were done on the following configurations;return -ENODEV;theres no lid device present;Similar;0.5493422746658325
failures were fixed;Build tests were done on the following configurations;whitespace fix  ;This does not change any actual console output;Similar;0.6974058151245117
failures were fixed;Build tests were done on the following configurations;Remove button->device pointer;button;Similar;0.5919935703277588
failures were fixed;Build tests were done on the following configurations;We no longer need a pointer from struct acpi_button back to the struct acpi_device;no longer need;Similar;0.5020965337753296
failures were fixed;Build tests were done on the following configurations;Setting ->owner as done currently (pde->owner = THIS_MODULE) is racy;as correctly noted at bug #12454;Similar;0.640582799911499
failures were fixed;Build tests were done on the following configurations;"proc_fops is declared as ""const""";should give some thoughts;Similar;0.5756765604019165
failures were fixed;Build tests were done on the following configurations;"rmmoded directories will be empty and return ""."" and "".."" -- no harm";no harm;Similar;0.5679996609687805
failures were fixed;Build tests were done on the following configurations;"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.562883198261261
failures were fixed;Build tests were done on the following configurations;use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Similar;0.5409712791442871
failures were fixed;Build tests were done on the following configurations;get rid of input BIT* duplicate defines;duplicate;Similar;0.5660126209259033
failures were fixed;Build tests were done on the following configurations;Define the macro temporarily in a local manner;all those local definitions will be removed further in this patchset (to not break bisecting);Similar;0.6161757707595825
failures were fixed;Build tests were done on the following configurations;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.5205467939376831
failures were fixed;Build tests were done on the following configurations;"Make ""module name"" actually match the file name";cosmetic only;Similar;0.5430787205696106
failures were fixed;Build tests were done on the following configurations;"Invoke with ; as leaving it off confuses Lindent  ";gcc doesnt care;Similar;0.5444672107696533
failures were fixed;Build tests were done on the following configurations;Fix indentation where Lindent did get confused  ;Lindent did get confused;Similar;0.6400642395019531
failures were fixed;Build tests were done on the following configurations;remove unnecessary casts and variable initializations, clean up formatting;unnecessary;Similar;0.660368800163269
CONFIG_GCOV_KERNEL was turned off for all tests and a few more options had to be turned off depending on archs to make things build;my distributed build env didnt work with gcov compiles, like ipr on powerpc/64 which failed due to missing writeq;Remove the old GPE type handling entirely  ;Gets rid of various quirks, like the implicit disabling with GPE type setting;Similar;0.5014914870262146
CONFIG_GCOV_KERNEL was turned off for all tests and a few more options had to be turned off depending on archs to make things build;my distributed build env didnt work with gcov compiles, like ipr on powerpc/64 which failed due to missing writeq;we could install either a fixed event handler or a notify handler, but the Linux/ACPI code now handles that for us;We previously needed that so we dont need to worry about it;Similar;0.5692012310028076
CONFIG_GCOV_KERNEL was turned off for all tests and a few more options had to be turned off depending on archs to make things build;my distributed build env didnt work with gcov compiles, like ipr on powerpc/64 which failed due to missing writeq;We no longer need a pointer from struct acpi_button back to the struct acpi_device;no longer need;Similar;0.5627597570419312
CONFIG_GCOV_KERNEL was turned off for all tests and a few more options had to be turned off depending on archs to make things build;my distributed build env didnt work with gcov compiles, like ipr on powerpc/64 which failed due to missing writeq;This patch adds temporaries to cache the acpi_device_hid(), acpi_device_name(), and acpi_device_class() pointers;so we dont have to clutter the code with so many uses of those interfaces;Similar;0.5378848314285278
CONFIG_GCOV_KERNEL was turned off for all tests and a few more options had to be turned off depending on archs to make things build;my distributed build env didnt work with gcov compiles, like ipr on powerpc/64 which failed due to missing writeq;Add correct ->owner to proc_fops to fix reading/module unloading race  ;fix reading/module unloading race;Similar;0.5015535354614258
CONFIG_GCOV_KERNEL was turned off for all tests and a few more options had to be turned off depending on archs to make things build;my distributed build env didnt work with gcov compiles, like ipr on powerpc/64 which failed due to missing writeq;Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;Similar;0.5986475944519043
CONFIG_GCOV_KERNEL was turned off for all tests and a few more options had to be turned off depending on archs to make things build;my distributed build env didnt work with gcov compiles, like ipr on powerpc/64 which failed due to missing writeq;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.5807771682739258
CONFIG_GCOV_KERNEL was turned off for all tests and a few more options had to be turned off depending on archs to make things build;my distributed build env didnt work with gcov compiles, like ipr on powerpc/64 which failed due to missing writeq;Remove unneeded acpi_handle from driver;unneeded;Similar;0.5654732584953308
percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;Introduce a reference counter for run-wake devices and a function that will initialize all of the run-time wake-up fields for given device.;-;Similar;0.5098216533660889
percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;Remove the old GPE type handling entirely  ;Gets rid of various quirks, like the implicit disabling with GPE type setting;Similar;0.63847416639328
percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;complain the following warning message;"will

";Similar;0.6057853698730469
percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;"This patch is to eliminate the above warning message
";Device PNP0C0D:00 failed to resume: error 1;Similar;0.5551044940948486
percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;return -ENODEV;theres no lid device present;Similar;0.7530803084373474
percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;Some drivers need to know when a lid event occurs and get the current status;-;Similar;0.5027822852134705
percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;whitespace fix  ;This does not change any actual console output;Similar;0.6532906293869019
percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;type: Power Button;I dont think theres anything meaningful user-space can do by knowing whether a button is a control method or a fixed hardware button;Similar;0.5144085884094238
percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;Remove button->device pointer;button;Similar;0.7302308082580566
percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;We no longer need a pointer from struct acpi_button back to the struct acpi_device;no longer need;Similar;0.5827233791351318
percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;changes a bit of whitespace to follow Linux conventions;follow Linux conventions;Similar;0.5675979256629944
percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;use .notify method instead of installing handler directly  ;-;Similar;0.6297943592071533
percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.6785404682159424
percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;"proc_fops is declared as ""const""";should give some thoughts;Similar;0.7167270183563232
percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;start using GPE from userspace;GPE is already disabled in interrupt context;Similar;0.5650704503059387
percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;Move all the component definitions for drivers to a single shared place, include/acpi/acpi_drivers.h  ;to have a single shared place;Similar;0.5214623808860779
percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.6703355312347412
percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;Similar;0.5824971795082092
percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Similar;0.6725330352783203
percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;get rid of input BIT* duplicate defines;duplicate;Similar;0.7461494207382202
percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;Similar;0.5671748518943787
percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;Define the macro temporarily in a local manner;all those local definitions will be removed further in this patchset (to not break bisecting);Similar;0.6521450281143188
percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;Similar;0.6476696729660034
percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.7034021615982056
percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;fix acpi_driver.name usage;fix;Similar;0.5767117738723755
percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;"Invoke with ; as leaving it off confuses Lindent  ";gcc doesnt care;Similar;0.6219907999038696
percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;Fix indentation where Lindent did get confused  ;Lindent did get confused;Similar;0.680622935295105
percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;remove unnecessary casts and variable initializations, clean up formatting;unnecessary;Similar;0.6357196569442749
percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;Remove unneeded acpi_handle from driver;unneeded;Similar;0.5850687026977539
percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;Use acpi_devices handle instead of drivers  ;-;Similar;0.625091552734375
percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.6224015951156616
percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;restore /proc/acpi/button/ (ala 2.6.12)  ;[ACPI];Similar;0.6135300397872925
percpu.h modifications were reverted  ;so that it could be applied as a separate patch and serve as bisection point;"Create a separate ""historical"" git archive";about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated;Similar;0.7051330804824829
Im fairly confident about the coverage of this conversion patch  ;Given the fact that I had only a couple of failures from tests on step 6;Introduce a new wake-up flag, always_enabled, for marking devices that should be permanently enabled to generate run-time events  ;devices that should be permanently enabled to generate run-time events;Similar;0.5381771326065063
Im fairly confident about the coverage of this conversion patch  ;Given the fact that I had only a couple of failures from tests on step 6;Introduce a reference counter for run-wake devices and a function that will initialize all of the run-time wake-up fields for given device.;-;Similar;0.5006999969482422
Im fairly confident about the coverage of this conversion patch  ;Given the fact that I had only a couple of failures from tests on step 6;return -ENODEV;theres no lid device present;Similar;0.5285161733627319
Im fairly confident about the coverage of this conversion patch  ;Given the fact that I had only a couple of failures from tests on step 6;whitespace fix  ;This does not change any actual console output;Similar;0.5328765511512756
Im fairly confident about the coverage of this conversion patch  ;Given the fact that I had only a couple of failures from tests on step 6;leave ->owner as easy-manipulative field;somebody will forget to unpin previous/pin current module when switching ->owner;Similar;0.6041094660758972
Im fairly confident about the coverage of this conversion patch  ;Given the fact that I had only a couple of failures from tests on step 6;"rmmoded directories will be empty and return ""."" and "".."" -- no harm";no harm;Similar;0.5461688041687012
Im fairly confident about the coverage of this conversion patch  ;Given the fact that I had only a couple of failures from tests on step 6;"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.5044199824333191
Im fairly confident about the coverage of this conversion patch  ;Given the fact that I had only a couple of failures from tests on step 6;Use proc_create()/proc_create_data() to make sure that ->proc_fops and ->data be setup;before gluing PDE to main tree;Similar;0.5687708258628845
Im fairly confident about the coverage of this conversion patch  ;Given the fact that I had only a couple of failures from tests on step 6;"Make ""module name"" actually match the file name";cosmetic only;Similar;0.548622727394104
Add more run-time wake-up fields;Add more;Introduce a new wake-up flag, always_enabled, for marking devices that should be permanently enabled to generate run-time events  ;devices that should be permanently enabled to generate run-time events;Similar;0.5955822467803955
Add more run-time wake-up fields;Add more;Introduce a reference counter for run-wake devices and a function that will initialize all of the run-time wake-up fields for given device.;-;Similar;0.5654889345169067
Add more run-time wake-up fields;Add more;return -ENODEV;theres no lid device present;Similar;0.5376470685005188
Add more run-time wake-up fields;Add more;Better to oops and learn about a bug;than to silently cover it up;Similar;0.5302114486694336
Introduce a new wake-up flag, always_enabled, for marking devices that should be permanently enabled to generate run-time events  ;devices that should be permanently enabled to generate run-time events;Introduce a reference counter for run-wake devices and a function that will initialize all of the run-time wake-up fields for given device.;-;Similar;0.7554241418838501
Introduce a new wake-up flag, always_enabled, for marking devices that should be permanently enabled to generate run-time events  ;devices that should be permanently enabled to generate run-time events;Add an API to allow devices to indicate whether or not they want their devices GPE to be enabled for both runtime and wakeup events;to allow devices to indicate whether or not they want their devices GPE to be enabled;Similar;0.6858931183815002
Introduce a new wake-up flag, always_enabled, for marking devices that should be permanently enabled to generate run-time events  ;devices that should be permanently enabled to generate run-time events;we could install either a fixed event handler or a notify handler, but the Linux/ACPI code now handles that for us;We previously needed that so we dont need to worry about it;Similar;0.5751228928565979
Introduce a new wake-up flag, always_enabled, for marking devices that should be permanently enabled to generate run-time events  ;devices that should be permanently enabled to generate run-time events;This patch adds temporaries to cache the acpi_device_hid(), acpi_device_name(), and acpi_device_class() pointers;so we dont have to clutter the code with so many uses of those interfaces;Similar;0.625852108001709
Introduce a new wake-up flag, always_enabled, for marking devices that should be permanently enabled to generate run-time events  ;devices that should be permanently enabled to generate run-time events;The presence of .notify() causes Linux/ACPI to manage event handlers and notify handlers on our behalf  ;so we dont have to install and remove them ourselves;Similar;0.5670067071914673
Introduce a new wake-up flag, always_enabled, for marking devices that should be permanently enabled to generate run-time events  ;devices that should be permanently enabled to generate run-time events;convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.6170017719268799
Introduce a new wake-up flag, always_enabled, for marking devices that should be permanently enabled to generate run-time events  ;devices that should be permanently enabled to generate run-time events;start using GPE from userspace;GPE is already disabled in interrupt context;Similar;0.5541558265686035
Introduce a new wake-up flag, always_enabled, for marking devices that should be permanently enabled to generate run-time events  ;devices that should be permanently enabled to generate run-time events;Move all the component definitions for drivers to a single shared place, include/acpi/acpi_drivers.h  ;to have a single shared place;Similar;0.6031650304794312
Introduce a new wake-up flag, always_enabled, for marking devices that should be permanently enabled to generate run-time events  ;devices that should be permanently enabled to generate run-time events;"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.622602641582489
Introduce a new wake-up flag, always_enabled, for marking devices that should be permanently enabled to generate run-time events  ;devices that should be permanently enabled to generate run-time events;Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;Similar;0.5104379057884216
Introduce a new wake-up flag, always_enabled, for marking devices that should be permanently enabled to generate run-time events  ;devices that should be permanently enabled to generate run-time events;Use proc_create()/proc_create_data() to make sure that ->proc_fops and ->data be setup;before gluing PDE to main tree;Similar;0.6281074285507202
Introduce a new wake-up flag, always_enabled, for marking devices that should be permanently enabled to generate run-time events  ;devices that should be permanently enabled to generate run-time events;Add correct ->owner to proc_fops to fix reading/module unloading race  ;fix reading/module unloading race;Similar;0.6126753091812134
Introduce a new wake-up flag, always_enabled, for marking devices that should be permanently enabled to generate run-time events  ;devices that should be permanently enabled to generate run-time events;Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;Similar;0.5253239274024963
Introduce a new wake-up flag, always_enabled, for marking devices that should be permanently enabled to generate run-time events  ;devices that should be permanently enabled to generate run-time events;remove unnecessary casts and variable initializations, clean up formatting;unnecessary;Similar;0.5096025466918945
Introduce a new wake-up flag, always_enabled, for marking devices that should be permanently enabled to generate run-time events  ;devices that should be permanently enabled to generate run-time events;restore /proc/acpi/button/ (ala 2.6.12)  ;[ACPI];Similar;0.6566325426101685
Introduce a reference counter for run-wake devices and a function that will initialize all of the run-time wake-up fields for given device.;-;Add an API to allow devices to indicate whether or not they want their devices GPE to be enabled for both runtime and wakeup events;to allow devices to indicate whether or not they want their devices GPE to be enabled;Similar;0.80560302734375
Introduce a reference counter for run-wake devices and a function that will initialize all of the run-time wake-up fields for given device.;-;complain the following warning message;"will

";Similar;0.5115881562232971
Introduce a reference counter for run-wake devices and a function that will initialize all of the run-time wake-up fields for given device.;-;Some drivers need to know when a lid event occurs and get the current status;-;Similar;0.5408400297164917
Introduce a reference counter for run-wake devices and a function that will initialize all of the run-time wake-up fields for given device.;-;whitespace fix  ;This does not change any actual console output;Similar;0.5044060945510864
Introduce a reference counter for run-wake devices and a function that will initialize all of the run-time wake-up fields for given device.;-;we could install either a fixed event handler or a notify handler, but the Linux/ACPI code now handles that for us;We previously needed that so we dont need to worry about it;Similar;0.6222367286682129
Introduce a reference counter for run-wake devices and a function that will initialize all of the run-time wake-up fields for given device.;-;This patch adds temporaries to cache the acpi_device_hid(), acpi_device_name(), and acpi_device_class() pointers;so we dont have to clutter the code with so many uses of those interfaces;Similar;0.6629279851913452
Introduce a reference counter for run-wake devices and a function that will initialize all of the run-time wake-up fields for given device.;-;changes a bit of whitespace to follow Linux conventions;follow Linux conventions;Similar;0.5739130973815918
Introduce a reference counter for run-wake devices and a function that will initialize all of the run-time wake-up fields for given device.;-;The presence of .notify() causes Linux/ACPI to manage event handlers and notify handlers on our behalf  ;so we dont have to install and remove them ourselves;Similar;0.6196994185447693
Introduce a reference counter for run-wake devices and a function that will initialize all of the run-time wake-up fields for given device.;-;convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.6179249286651611
Introduce a reference counter for run-wake devices and a function that will initialize all of the run-time wake-up fields for given device.;-;start using GPE from userspace;GPE is already disabled in interrupt context;Similar;0.6631137132644653
Introduce a reference counter for run-wake devices and a function that will initialize all of the run-time wake-up fields for given device.;-;Move all the component definitions for drivers to a single shared place, include/acpi/acpi_drivers.h  ;to have a single shared place;Similar;0.7048020362854004
Introduce a reference counter for run-wake devices and a function that will initialize all of the run-time wake-up fields for given device.;-;"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.6949512958526611
Introduce a reference counter for run-wake devices and a function that will initialize all of the run-time wake-up fields for given device.;-;Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;Similar;0.6221441030502319
Introduce a reference counter for run-wake devices and a function that will initialize all of the run-time wake-up fields for given device.;-;Use proc_create()/proc_create_data() to make sure that ->proc_fops and ->data be setup;before gluing PDE to main tree;Similar;0.7478397488594055
Introduce a reference counter for run-wake devices and a function that will initialize all of the run-time wake-up fields for given device.;-;Add correct ->owner to proc_fops to fix reading/module unloading race  ;fix reading/module unloading race;Similar;0.5648963451385498
Introduce a reference counter for run-wake devices and a function that will initialize all of the run-time wake-up fields for given device.;-;Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;Similar;0.5821225643157959
Introduce a reference counter for run-wake devices and a function that will initialize all of the run-time wake-up fields for given device.;-;fix acpi_driver.name usage;fix;Similar;0.5260413885116577
Introduce a reference counter for run-wake devices and a function that will initialize all of the run-time wake-up fields for given device.;-;"Make ""module name"" actually match the file name";cosmetic only;Similar;0.6044695973396301
Introduce a reference counter for run-wake devices and a function that will initialize all of the run-time wake-up fields for given device.;-;remove unnecessary casts and variable initializations, clean up formatting;unnecessary;Similar;0.5217492580413818
Introduce a reference counter for run-wake devices and a function that will initialize all of the run-time wake-up fields for given device.;-;restore /proc/acpi/button/ (ala 2.6.12)  ;[ACPI];Similar;0.6012824177742004
Add an API to allow devices to indicate whether or not they want their devices GPE to be enabled for both runtime and wakeup events;to allow devices to indicate whether or not they want their devices GPE to be enabled;Some drivers need to know when a lid event occurs and get the current status;-;Similar;0.6149343848228455
Add an API to allow devices to indicate whether or not they want their devices GPE to be enabled for both runtime and wakeup events;to allow devices to indicate whether or not they want their devices GPE to be enabled;we could install either a fixed event handler or a notify handler, but the Linux/ACPI code now handles that for us;We previously needed that so we dont need to worry about it;Similar;0.7403192520141602
Add an API to allow devices to indicate whether or not they want their devices GPE to be enabled for both runtime and wakeup events;to allow devices to indicate whether or not they want their devices GPE to be enabled;This patch adds temporaries to cache the acpi_device_hid(), acpi_device_name(), and acpi_device_class() pointers;so we dont have to clutter the code with so many uses of those interfaces;Similar;0.6939968466758728
Add an API to allow devices to indicate whether or not they want their devices GPE to be enabled for both runtime and wakeup events;to allow devices to indicate whether or not they want their devices GPE to be enabled;Better to oops and learn about a bug;than to silently cover it up;Similar;0.5097074508666992
Add an API to allow devices to indicate whether or not they want their devices GPE to be enabled for both runtime and wakeup events;to allow devices to indicate whether or not they want their devices GPE to be enabled;changes a bit of whitespace to follow Linux conventions;follow Linux conventions;Similar;0.6119533181190491
Add an API to allow devices to indicate whether or not they want their devices GPE to be enabled for both runtime and wakeup events;to allow devices to indicate whether or not they want their devices GPE to be enabled;use .notify method instead of installing handler directly  ;-;Similar;0.5119143724441528
Add an API to allow devices to indicate whether or not they want their devices GPE to be enabled for both runtime and wakeup events;to allow devices to indicate whether or not they want their devices GPE to be enabled;The presence of .notify() causes Linux/ACPI to manage event handlers and notify handlers on our behalf  ;so we dont have to install and remove them ourselves;Similar;0.7387053966522217
Add an API to allow devices to indicate whether or not they want their devices GPE to be enabled for both runtime and wakeup events;to allow devices to indicate whether or not they want their devices GPE to be enabled;convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.6590398550033569
Add an API to allow devices to indicate whether or not they want their devices GPE to be enabled for both runtime and wakeup events;to allow devices to indicate whether or not they want their devices GPE to be enabled;start using GPE from userspace;GPE is already disabled in interrupt context;Similar;0.6834796667098999
Add an API to allow devices to indicate whether or not they want their devices GPE to be enabled for both runtime and wakeup events;to allow devices to indicate whether or not they want their devices GPE to be enabled;Move all the component definitions for drivers to a single shared place, include/acpi/acpi_drivers.h  ;to have a single shared place;Similar;0.6753139495849609
Add an API to allow devices to indicate whether or not they want their devices GPE to be enabled for both runtime and wakeup events;to allow devices to indicate whether or not they want their devices GPE to be enabled;"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.6308113932609558
Add an API to allow devices to indicate whether or not they want their devices GPE to be enabled for both runtime and wakeup events;to allow devices to indicate whether or not they want their devices GPE to be enabled;Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;Similar;0.5993466377258301
Add an API to allow devices to indicate whether or not they want their devices GPE to be enabled for both runtime and wakeup events;to allow devices to indicate whether or not they want their devices GPE to be enabled;Use proc_create()/proc_create_data() to make sure that ->proc_fops and ->data be setup;before gluing PDE to main tree;Similar;0.7213218212127686
Add an API to allow devices to indicate whether or not they want their devices GPE to be enabled for both runtime and wakeup events;to allow devices to indicate whether or not they want their devices GPE to be enabled;Add correct ->owner to proc_fops to fix reading/module unloading race  ;fix reading/module unloading race;Similar;0.5933669209480286
Add an API to allow devices to indicate whether or not they want their devices GPE to be enabled for both runtime and wakeup events;to allow devices to indicate whether or not they want their devices GPE to be enabled;Define the macro temporarily in a local manner;all those local definitions will be removed further in this patchset (to not break bisecting);Similar;0.5111286640167236
Add an API to allow devices to indicate whether or not they want their devices GPE to be enabled for both runtime and wakeup events;to allow devices to indicate whether or not they want their devices GPE to be enabled;Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;Similar;0.6002979278564453
Add an API to allow devices to indicate whether or not they want their devices GPE to be enabled for both runtime and wakeup events;to allow devices to indicate whether or not they want their devices GPE to be enabled;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.5154326558113098
Add an API to allow devices to indicate whether or not they want their devices GPE to be enabled for both runtime and wakeup events;to allow devices to indicate whether or not they want their devices GPE to be enabled;fix acpi_driver.name usage;fix;Similar;0.5534501671791077
Add an API to allow devices to indicate whether or not they want their devices GPE to be enabled for both runtime and wakeup events;to allow devices to indicate whether or not they want their devices GPE to be enabled;"Make ""module name"" actually match the file name";cosmetic only;Similar;0.6040981411933899
Add an API to allow devices to indicate whether or not they want their devices GPE to be enabled for both runtime and wakeup events;to allow devices to indicate whether or not they want their devices GPE to be enabled;restore /proc/acpi/button/ (ala 2.6.12)  ;[ACPI];Similar;0.6075825095176697
Remove the old GPE type handling entirely  ;Gets rid of various quirks, like the implicit disabling with GPE type setting;"This patch is to eliminate the above warning message
";Device PNP0C0D:00 failed to resume: error 1;Similar;0.7121867537498474
Remove the old GPE type handling entirely  ;Gets rid of various quirks, like the implicit disabling with GPE type setting;dont try to use a non-existent lid device;non-existent;Similar;0.5664764642715454
Remove the old GPE type handling entirely  ;Gets rid of various quirks, like the implicit disabling with GPE type setting;whitespace fix  ;This does not change any actual console output;Similar;0.5192856788635254
Remove the old GPE type handling entirely  ;Gets rid of various quirks, like the implicit disabling with GPE type setting;Remove button->device pointer;button;Similar;0.6905514001846313
Remove the old GPE type handling entirely  ;Gets rid of various quirks, like the implicit disabling with GPE type setting;We no longer need a pointer from struct acpi_button back to the struct acpi_device;no longer need;Similar;0.6957027912139893
Remove the old GPE type handling entirely  ;Gets rid of various quirks, like the implicit disabling with GPE type setting;use .notify method instead of installing handler directly  ;-;Similar;0.5791443586349487
Remove the old GPE type handling entirely  ;Gets rid of various quirks, like the implicit disabling with GPE type setting;Setting ->owner as done currently (pde->owner = THIS_MODULE) is racy;as correctly noted at bug #12454;Similar;0.5838949680328369
Remove the old GPE type handling entirely  ;Gets rid of various quirks, like the implicit disabling with GPE type setting;"proc_fops is declared as ""const""";should give some thoughts;Similar;0.573452353477478
Remove the old GPE type handling entirely  ;Gets rid of various quirks, like the implicit disabling with GPE type setting;"rmmoded directories will be empty and return ""."" and "".."" -- no harm";no harm;Similar;0.6904630661010742
Remove the old GPE type handling entirely  ;Gets rid of various quirks, like the implicit disabling with GPE type setting;"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.5260710716247559
Remove the old GPE type handling entirely  ;Gets rid of various quirks, like the implicit disabling with GPE type setting;use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Similar;0.5455864667892456
Remove the old GPE type handling entirely  ;Gets rid of various quirks, like the implicit disabling with GPE type setting;get rid of input BIT* duplicate defines;duplicate;Similar;0.7121702432632446
Remove the old GPE type handling entirely  ;Gets rid of various quirks, like the implicit disabling with GPE type setting;Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;Similar;0.664392352104187
Remove the old GPE type handling entirely  ;Gets rid of various quirks, like the implicit disabling with GPE type setting;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.7321335077285767
Remove the old GPE type handling entirely  ;Gets rid of various quirks, like the implicit disabling with GPE type setting;"Invoke with ; as leaving it off confuses Lindent  ";gcc doesnt care;Similar;0.5931483507156372
Remove the old GPE type handling entirely  ;Gets rid of various quirks, like the implicit disabling with GPE type setting;Fix indentation where Lindent did get confused  ;Lindent did get confused;Similar;0.5320666432380676
Remove the old GPE type handling entirely  ;Gets rid of various quirks, like the implicit disabling with GPE type setting;remove unnecessary casts and variable initializations, clean up formatting;unnecessary;Similar;0.6686040163040161
Remove the old GPE type handling entirely  ;Gets rid of various quirks, like the implicit disabling with GPE type setting;Remove unneeded acpi_handle from driver;unneeded;Similar;0.6605626344680786
Remove the old GPE type handling entirely  ;Gets rid of various quirks, like the implicit disabling with GPE type setting;Use acpi_devices handle instead of drivers  ;-;Similar;0.568312406539917
Remove the old GPE type handling entirely  ;Gets rid of various quirks, like the implicit disabling with GPE type setting;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.6053192615509033
Remove the old GPE type handling entirely  ;Gets rid of various quirks, like the implicit disabling with GPE type setting;"Create a separate ""historical"" git archive";about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated;Similar;0.6519566774368286
complain the following warning message;"will

";"This patch is to eliminate the above warning message
";Device PNP0C0D:00 failed to resume: error 1;Similar;0.6488094329833984
complain the following warning message;"will

";return -ENODEV;theres no lid device present;Similar;0.6438798904418945
complain the following warning message;"will

";Some drivers need to know when a lid event occurs and get the current status;-;Similar;0.5230220556259155
complain the following warning message;"will

";whitespace fix  ;This does not change any actual console output;Similar;0.6133265495300293
complain the following warning message;"will

";Remove button->device pointer;button;Similar;0.5867512822151184
complain the following warning message;"will

";Better to oops and learn about a bug;than to silently cover it up;Similar;0.548641562461853
complain the following warning message;"will

";use .notify method instead of installing handler directly  ;-;Similar;0.5467296242713928
complain the following warning message;"will

";convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.5788141489028931
complain the following warning message;"will

";Setting ->owner as done currently (pde->owner = THIS_MODULE) is racy;as correctly noted at bug #12454;Similar;0.5058972835540771
complain the following warning message;"will

";"proc_fops is declared as ""const""";should give some thoughts;Similar;0.6688932776451111
complain the following warning message;"will

";start using GPE from userspace;GPE is already disabled in interrupt context;Similar;0.5133862495422363
complain the following warning message;"will

";"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.5834342241287231
complain the following warning message;"will

";use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Similar;0.5125172734260559
complain the following warning message;"will

";Use proc_create()/proc_create_data() to make sure that ->proc_fops and ->data be setup;before gluing PDE to main tree;Similar;0.5855565071105957
complain the following warning message;"will

";get rid of input BIT* duplicate defines;duplicate;Similar;0.5581090450286865
complain the following warning message;"will

";Define the macro temporarily in a local manner;all those local definitions will be removed further in this patchset (to not break bisecting);Similar;0.5618973970413208
complain the following warning message;"will

";Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;Similar;0.5182523131370544
complain the following warning message;"will

";Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.508809506893158
complain the following warning message;"will

";fix acpi_driver.name usage;fix;Similar;0.5471910238265991
complain the following warning message;"will

";"Invoke with ; as leaving it off confuses Lindent  ";gcc doesnt care;Similar;0.6434259414672852
complain the following warning message;"will

";Fix indentation where Lindent did get confused  ;Lindent did get confused;Similar;0.6391712427139282
complain the following warning message;"will

";un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.5063958764076233
"This patch is to eliminate the above warning message
";Device PNP0C0D:00 failed to resume: error 1;whitespace fix  ;This does not change any actual console output;Similar;0.6314165592193604
"This patch is to eliminate the above warning message
";Device PNP0C0D:00 failed to resume: error 1;Remove button->device pointer;button;Similar;0.6669869422912598
"This patch is to eliminate the above warning message
";Device PNP0C0D:00 failed to resume: error 1;We no longer need a pointer from struct acpi_button back to the struct acpi_device;no longer need;Similar;0.6421337127685547
"This patch is to eliminate the above warning message
";Device PNP0C0D:00 failed to resume: error 1;Better to oops and learn about a bug;than to silently cover it up;Similar;0.5179977416992188
"This patch is to eliminate the above warning message
";Device PNP0C0D:00 failed to resume: error 1;use .notify method instead of installing handler directly  ;-;Similar;0.5912961959838867
"This patch is to eliminate the above warning message
";Device PNP0C0D:00 failed to resume: error 1;convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.5184870362281799
"This patch is to eliminate the above warning message
";Device PNP0C0D:00 failed to resume: error 1;Setting ->owner as done currently (pde->owner = THIS_MODULE) is racy;as correctly noted at bug #12454;Similar;0.5532468557357788
"This patch is to eliminate the above warning message
";Device PNP0C0D:00 failed to resume: error 1;"proc_fops is declared as ""const""";should give some thoughts;Similar;0.5157036781311035
"This patch is to eliminate the above warning message
";Device PNP0C0D:00 failed to resume: error 1;"rmmoded directories will be empty and return ""."" and "".."" -- no harm";no harm;Similar;0.6118195056915283
"This patch is to eliminate the above warning message
";Device PNP0C0D:00 failed to resume: error 1;dont want such modular code;definitely;Similar;0.5511761903762817
"This patch is to eliminate the above warning message
";Device PNP0C0D:00 failed to resume: error 1;use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Similar;0.5474129915237427
"This patch is to eliminate the above warning message
";Device PNP0C0D:00 failed to resume: error 1;get rid of input BIT* duplicate defines;duplicate;Similar;0.6816174983978271
"This patch is to eliminate the above warning message
";Device PNP0C0D:00 failed to resume: error 1;Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;Similar;0.6890085935592651
"This patch is to eliminate the above warning message
";Device PNP0C0D:00 failed to resume: error 1;Define the macro temporarily in a local manner;all those local definitions will be removed further in this patchset (to not break bisecting);Similar;0.5115706920623779
"This patch is to eliminate the above warning message
";Device PNP0C0D:00 failed to resume: error 1;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.7319451570510864
"This patch is to eliminate the above warning message
";Device PNP0C0D:00 failed to resume: error 1;"Invoke with ; as leaving it off confuses Lindent  ";gcc doesnt care;Similar;0.6852775812149048
"This patch is to eliminate the above warning message
";Device PNP0C0D:00 failed to resume: error 1;Fix indentation where Lindent did get confused  ;Lindent did get confused;Similar;0.6244955062866211
"This patch is to eliminate the above warning message
";Device PNP0C0D:00 failed to resume: error 1;remove unnecessary casts and variable initializations, clean up formatting;unnecessary;Similar;0.6739233136177063
"This patch is to eliminate the above warning message
";Device PNP0C0D:00 failed to resume: error 1;Remove unneeded acpi_handle from driver;unneeded;Similar;0.647242546081543
"This patch is to eliminate the above warning message
";Device PNP0C0D:00 failed to resume: error 1;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.6154807209968567
"This patch is to eliminate the above warning message
";Device PNP0C0D:00 failed to resume: error 1;"Create a separate ""historical"" git archive";about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated;Similar;0.5717736482620239
dont try to use a non-existent lid device;non-existent;Remove button->device pointer;button;Similar;0.556255578994751
dont try to use a non-existent lid device;non-existent;We no longer need a pointer from struct acpi_button back to the struct acpi_device;no longer need;Similar;0.7252988219261169
dont try to use a non-existent lid device;non-existent;"rmmoded directories will be empty and return ""."" and "".."" -- no harm";no harm;Similar;0.6154611110687256
dont try to use a non-existent lid device;non-existent;dont want such modular code;definitely;Similar;0.651796817779541
dont try to use a non-existent lid device;non-existent;use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Similar;0.6102659702301025
dont try to use a non-existent lid device;non-existent;get rid of input BIT* duplicate defines;duplicate;Similar;0.6087459325790405
dont try to use a non-existent lid device;non-existent;Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;Similar;0.5488902926445007
dont try to use a non-existent lid device;non-existent;"Invoke with ; as leaving it off confuses Lindent  ";gcc doesnt care;Similar;0.607135534286499
dont try to use a non-existent lid device;non-existent;Remove unneeded acpi_handle from driver;unneeded;Similar;0.6083348989486694
dont try to use a non-existent lid device;non-existent;Use acpi_devices handle instead of drivers  ;-;Similar;0.6182165145874023
dont try to use a non-existent lid device;non-existent;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.524960994720459
dont try to use a non-existent lid device;non-existent;"Create a separate ""historical"" git archive";about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated;Similar;0.5168477296829224
return -ENODEV;theres no lid device present;whitespace fix  ;This does not change any actual console output;Similar;0.6289454698562622
return -ENODEV;theres no lid device present;type: Power Button;I dont think theres anything meaningful user-space can do by knowing whether a button is a control method or a fixed hardware button;Similar;0.5698118209838867
return -ENODEV;theres no lid device present;Remove button->device pointer;button;Similar;0.6278913021087646
return -ENODEV;theres no lid device present;use .notify method instead of installing handler directly  ;-;Similar;0.5892972946166992
return -ENODEV;theres no lid device present;convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.5828472375869751
return -ENODEV;theres no lid device present;Setting ->owner as done currently (pde->owner = THIS_MODULE) is racy;as correctly noted at bug #12454;Similar;0.5191120505332947
return -ENODEV;theres no lid device present;"proc_fops is declared as ""const""";should give some thoughts;Similar;0.7593836188316345
return -ENODEV;theres no lid device present;start using GPE from userspace;GPE is already disabled in interrupt context;Similar;0.525162935256958
return -ENODEV;theres no lid device present;"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.6232820749282837
return -ENODEV;theres no lid device present;Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;Similar;0.5231208801269531
return -ENODEV;theres no lid device present;use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Similar;0.659619927406311
return -ENODEV;theres no lid device present;get rid of input BIT* duplicate defines;duplicate;Similar;0.6867063045501709
return -ENODEV;theres no lid device present;Define the macro temporarily in a local manner;all those local definitions will be removed further in this patchset (to not break bisecting);Similar;0.5677640438079834
return -ENODEV;theres no lid device present;Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;Similar;0.5875239968299866
return -ENODEV;theres no lid device present;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.5572383999824524
return -ENODEV;theres no lid device present;"Invoke with ; as leaving it off confuses Lindent  ";gcc doesnt care;Similar;0.6340534687042236
return -ENODEV;theres no lid device present;Fix indentation where Lindent did get confused  ;Lindent did get confused;Similar;0.5437287092208862
return -ENODEV;theres no lid device present;Use acpi_devices handle instead of drivers  ;-;Similar;0.509907603263855
return -ENODEV;theres no lid device present;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.5594613552093506
return -ENODEV;theres no lid device present;restore /proc/acpi/button/ (ala 2.6.12)  ;[ACPI];Similar;0.5761151313781738
return -ENODEV;theres no lid device present;"Create a separate ""historical"" git archive";about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated;Similar;0.5727630257606506
Some drivers need to know when a lid event occurs and get the current status;-;not all ACPI drivers use/want it;they should not have to #undef PREFIX to define their own;Similar;0.5395363569259644
Some drivers need to know when a lid event occurs and get the current status;-;we could install either a fixed event handler or a notify handler, but the Linux/ACPI code now handles that for us;We previously needed that so we dont need to worry about it;Similar;0.6069713830947876
Some drivers need to know when a lid event occurs and get the current status;-;changes a bit of whitespace to follow Linux conventions;follow Linux conventions;Similar;0.5610202550888062
Some drivers need to know when a lid event occurs and get the current status;-;The presence of .notify() causes Linux/ACPI to manage event handlers and notify handlers on our behalf  ;so we dont have to install and remove them ourselves;Similar;0.5924074649810791
Some drivers need to know when a lid event occurs and get the current status;-;Move all the component definitions for drivers to a single shared place, include/acpi/acpi_drivers.h  ;to have a single shared place;Similar;0.5483559370040894
Some drivers need to know when a lid event occurs and get the current status;-;"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.5951501131057739
Some drivers need to know when a lid event occurs and get the current status;-;Use proc_create()/proc_create_data() to make sure that ->proc_fops and ->data be setup;before gluing PDE to main tree;Similar;0.5952705144882202
Some drivers need to know when a lid event occurs and get the current status;-;Add correct ->owner to proc_fops to fix reading/module unloading race  ;fix reading/module unloading race;Similar;0.5162373781204224
Some drivers need to know when a lid event occurs and get the current status;-;Define the macro temporarily in a local manner;all those local definitions will be removed further in this patchset (to not break bisecting);Similar;0.5586167573928833
Some drivers need to know when a lid event occurs and get the current status;-;fix acpi_driver.name usage;fix;Similar;0.5307539701461792
Some drivers need to know when a lid event occurs and get the current status;-;"Make ""module name"" actually match the file name";cosmetic only;Similar;0.5126299858093262
Some drivers need to know when a lid event occurs and get the current status;-;Fix indentation where Lindent did get confused  ;Lindent did get confused;Similar;0.593418300151825
Some drivers need to know when a lid event occurs and get the current status;-;Remove unneeded acpi_handle from driver;unneeded;Similar;0.54547518491745
not all ACPI drivers use/want it;they should not have to #undef PREFIX to define their own;We no longer need a pointer from struct acpi_button back to the struct acpi_device;no longer need;Similar;0.5002908706665039
not all ACPI drivers use/want it;they should not have to #undef PREFIX to define their own;dont want such modular code;definitely;Similar;0.5834505558013916
not all ACPI drivers use/want it;they should not have to #undef PREFIX to define their own;ls bus/acpi/drivers  ;Display the list of ACPI drivers.;Similar;0.5239245891571045
not all ACPI drivers use/want it;they should not have to #undef PREFIX to define their own;Remove unneeded acpi_handle from driver;unneeded;Similar;0.5169158577919006
not all ACPI drivers use/want it;they should not have to #undef PREFIX to define their own;Use acpi_devices handle instead of drivers  ;-;Similar;0.614158034324646
whitespace fix  ;This does not change any actual console output;type: Power Button;I dont think theres anything meaningful user-space can do by knowing whether a button is a control method or a fixed hardware button;Similar;0.5323137640953064
whitespace fix  ;This does not change any actual console output;Remove button->device pointer;button;Similar;0.7242830991744995
whitespace fix  ;This does not change any actual console output;Better to oops and learn about a bug;than to silently cover it up;Similar;0.5366524457931519
whitespace fix  ;This does not change any actual console output;changes a bit of whitespace to follow Linux conventions;follow Linux conventions;Similar;0.6341617107391357
whitespace fix  ;This does not change any actual console output;use .notify method instead of installing handler directly  ;-;Similar;0.6216350793838501
whitespace fix  ;This does not change any actual console output;convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.6127511858940125
whitespace fix  ;This does not change any actual console output;Setting ->owner as done currently (pde->owner = THIS_MODULE) is racy;as correctly noted at bug #12454;Similar;0.625049352645874
whitespace fix  ;This does not change any actual console output;"proc_fops is declared as ""const""";should give some thoughts;Similar;0.6901227235794067
whitespace fix  ;This does not change any actual console output;start using GPE from userspace;GPE is already disabled in interrupt context;Similar;0.6275955438613892
whitespace fix  ;This does not change any actual console output;"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.6268304586410522
whitespace fix  ;This does not change any actual console output;Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;Similar;0.53770512342453
whitespace fix  ;This does not change any actual console output;use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Similar;0.6696374416351318
whitespace fix  ;This does not change any actual console output;Use proc_create()/proc_create_data() to make sure that ->proc_fops and ->data be setup;before gluing PDE to main tree;Similar;0.5969191789627075
whitespace fix  ;This does not change any actual console output;get rid of input BIT* duplicate defines;duplicate;Similar;0.6988128423690796
whitespace fix  ;This does not change any actual console output;Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;Similar;0.5255966186523438
whitespace fix  ;This does not change any actual console output;Define the macro temporarily in a local manner;all those local definitions will be removed further in this patchset (to not break bisecting);Similar;0.7370156049728394
whitespace fix  ;This does not change any actual console output;Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;Similar;0.5397558212280273
whitespace fix  ;This does not change any actual console output;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.6219534873962402
whitespace fix  ;This does not change any actual console output;fix acpi_driver.name usage;fix;Similar;0.6431844234466553
whitespace fix  ;This does not change any actual console output;"Make ""module name"" actually match the file name";cosmetic only;Similar;0.5740565061569214
whitespace fix  ;This does not change any actual console output;"Invoke with ; as leaving it off confuses Lindent  ";gcc doesnt care;Similar;0.5602678060531616
whitespace fix  ;This does not change any actual console output;Fix indentation where Lindent did get confused  ;Lindent did get confused;Similar;0.6723626852035522
whitespace fix  ;This does not change any actual console output;remove unnecessary casts and variable initializations, clean up formatting;unnecessary;Similar;0.6669931411743164
whitespace fix  ;This does not change any actual console output;Remove unneeded acpi_handle from driver;unneeded;Similar;0.5158430337905884
whitespace fix  ;This does not change any actual console output;Use acpi_devices handle instead of drivers  ;-;Similar;0.5461148023605347
whitespace fix  ;This does not change any actual console output;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.614273190498352
whitespace fix  ;This does not change any actual console output;restore /proc/acpi/button/ (ala 2.6.12)  ;[ACPI];Similar;0.5366811752319336
whitespace fix  ;This does not change any actual console output;"Create a separate ""historical"" git archive";about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated;Similar;0.5879030227661133
we could install either a fixed event handler or a notify handler, but the Linux/ACPI code now handles that for us;We previously needed that so we dont need to worry about it;This patch adds temporaries to cache the acpi_device_hid(), acpi_device_name(), and acpi_device_class() pointers;so we dont have to clutter the code with so many uses of those interfaces;Similar;0.7188320159912109
we could install either a fixed event handler or a notify handler, but the Linux/ACPI code now handles that for us;We previously needed that so we dont need to worry about it;changes a bit of whitespace to follow Linux conventions;follow Linux conventions;Similar;0.7959610819816589
we could install either a fixed event handler or a notify handler, but the Linux/ACPI code now handles that for us;We previously needed that so we dont need to worry about it;use .notify method instead of installing handler directly  ;-;Similar;0.5102671980857849
we could install either a fixed event handler or a notify handler, but the Linux/ACPI code now handles that for us;We previously needed that so we dont need to worry about it;The presence of .notify() causes Linux/ACPI to manage event handlers and notify handlers on our behalf  ;so we dont have to install and remove them ourselves;Similar;0.8582358360290527
we could install either a fixed event handler or a notify handler, but the Linux/ACPI code now handles that for us;We previously needed that so we dont need to worry about it;convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.6051721572875977
we could install either a fixed event handler or a notify handler, but the Linux/ACPI code now handles that for us;We previously needed that so we dont need to worry about it;start using GPE from userspace;GPE is already disabled in interrupt context;Similar;0.5808299779891968
we could install either a fixed event handler or a notify handler, but the Linux/ACPI code now handles that for us;We previously needed that so we dont need to worry about it;Move all the component definitions for drivers to a single shared place, include/acpi/acpi_drivers.h  ;to have a single shared place;Similar;0.629360556602478
we could install either a fixed event handler or a notify handler, but the Linux/ACPI code now handles that for us;We previously needed that so we dont need to worry about it;"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.5678633451461792
we could install either a fixed event handler or a notify handler, but the Linux/ACPI code now handles that for us;We previously needed that so we dont need to worry about it;Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;Similar;0.5284098386764526
we could install either a fixed event handler or a notify handler, but the Linux/ACPI code now handles that for us;We previously needed that so we dont need to worry about it;Use proc_create()/proc_create_data() to make sure that ->proc_fops and ->data be setup;before gluing PDE to main tree;Similar;0.584388017654419
we could install either a fixed event handler or a notify handler, but the Linux/ACPI code now handles that for us;We previously needed that so we dont need to worry about it;Add correct ->owner to proc_fops to fix reading/module unloading race  ;fix reading/module unloading race;Similar;0.6349581480026245
we could install either a fixed event handler or a notify handler, but the Linux/ACPI code now handles that for us;We previously needed that so we dont need to worry about it;Define the macro temporarily in a local manner;all those local definitions will be removed further in this patchset (to not break bisecting);Similar;0.5092975497245789
we could install either a fixed event handler or a notify handler, but the Linux/ACPI code now handles that for us;We previously needed that so we dont need to worry about it;Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;Similar;0.542314887046814
we could install either a fixed event handler or a notify handler, but the Linux/ACPI code now handles that for us;We previously needed that so we dont need to worry about it;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.5502276420593262
we could install either a fixed event handler or a notify handler, but the Linux/ACPI code now handles that for us;We previously needed that so we dont need to worry about it;fix acpi_driver.name usage;fix;Similar;0.5591371059417725
we could install either a fixed event handler or a notify handler, but the Linux/ACPI code now handles that for us;We previously needed that so we dont need to worry about it;"Make ""module name"" actually match the file name";cosmetic only;Similar;0.6091856956481934
we could install either a fixed event handler or a notify handler, but the Linux/ACPI code now handles that for us;We previously needed that so we dont need to worry about it;Remove unneeded acpi_handle from driver;unneeded;Similar;0.515223503112793
we could install either a fixed event handler or a notify handler, but the Linux/ACPI code now handles that for us;We previously needed that so we dont need to worry about it;restore /proc/acpi/button/ (ala 2.6.12)  ;[ACPI];Similar;0.5751383304595947
type: Power Button;I dont think theres anything meaningful user-space can do by knowing whether a button is a control method or a fixed hardware button;Remove button->device pointer;button;Similar;0.6394307017326355
type: Power Button;I dont think theres anything meaningful user-space can do by knowing whether a button is a control method or a fixed hardware button;convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.6308095455169678
type: Power Button;I dont think theres anything meaningful user-space can do by knowing whether a button is a control method or a fixed hardware button;"proc_fops is declared as ""const""";should give some thoughts;Similar;0.5322920083999634
type: Power Button;I dont think theres anything meaningful user-space can do by knowing whether a button is a control method or a fixed hardware button;start using GPE from userspace;GPE is already disabled in interrupt context;Similar;0.5201404690742493
type: Power Button;I dont think theres anything meaningful user-space can do by knowing whether a button is a control method or a fixed hardware button;"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.5389248132705688
type: Power Button;I dont think theres anything meaningful user-space can do by knowing whether a button is a control method or a fixed hardware button;Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;Similar;0.5525431632995605
type: Power Button;I dont think theres anything meaningful user-space can do by knowing whether a button is a control method or a fixed hardware button;get rid of input BIT* duplicate defines;duplicate;Similar;0.5049866437911987
type: Power Button;I dont think theres anything meaningful user-space can do by knowing whether a button is a control method or a fixed hardware button;Fix indentation where Lindent did get confused  ;Lindent did get confused;Similar;0.505893349647522
type: Power Button;I dont think theres anything meaningful user-space can do by knowing whether a button is a control method or a fixed hardware button;restore /proc/acpi/button/ (ala 2.6.12)  ;[ACPI];Similar;0.6487201452255249
Remove button->device pointer;button;We no longer need a pointer from struct acpi_button back to the struct acpi_device;no longer need;Similar;0.7164896726608276
Remove button->device pointer;button;This patch adds temporaries to cache the acpi_device_hid(), acpi_device_name(), and acpi_device_class() pointers;so we dont have to clutter the code with so many uses of those interfaces;Similar;0.5439385175704956
Remove button->device pointer;button;changes a bit of whitespace to follow Linux conventions;follow Linux conventions;Similar;0.553324818611145
Remove button->device pointer;button;use .notify method instead of installing handler directly  ;-;Similar;0.6487993597984314
Remove button->device pointer;button;convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.7742959260940552
Remove button->device pointer;button;Setting ->owner as done currently (pde->owner = THIS_MODULE) is racy;as correctly noted at bug #12454;Similar;0.5855274200439453
Remove button->device pointer;button;"proc_fops is declared as ""const""";should give some thoughts;Similar;0.7073637247085571
Remove button->device pointer;button;dont want such modular code;definitely;Similar;0.5401077270507812
Remove button->device pointer;button;start using GPE from userspace;GPE is already disabled in interrupt context;Similar;0.5446314215660095
Remove button->device pointer;button;"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.6273930072784424
Remove button->device pointer;button;Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;Similar;0.694071352481842
Remove button->device pointer;button;use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Similar;0.6821523308753967
Remove button->device pointer;button;get rid of input BIT* duplicate defines;duplicate;Similar;0.8325756192207336
Remove button->device pointer;button;Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;Similar;0.7170178890228271
Remove button->device pointer;button;Define the macro temporarily in a local manner;all those local definitions will be removed further in this patchset (to not break bisecting);Similar;0.6270304918289185
Remove button->device pointer;button;Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;Similar;0.6310523748397827
Remove button->device pointer;button;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.8023934364318848
Remove button->device pointer;button;fix acpi_driver.name usage;fix;Similar;0.6854667067527771
Remove button->device pointer;button;"Invoke with ; as leaving it off confuses Lindent  ";gcc doesnt care;Similar;0.6345300674438477
Remove button->device pointer;button;Fix indentation where Lindent did get confused  ;Lindent did get confused;Similar;0.6521769762039185
Remove button->device pointer;button;remove unnecessary casts and variable initializations, clean up formatting;unnecessary;Similar;0.6592692732810974
Remove button->device pointer;button;Remove unneeded acpi_handle from driver;unneeded;Similar;0.7247929573059082
Remove button->device pointer;button;Use acpi_devices handle instead of drivers  ;-;Similar;0.6810034513473511
Remove button->device pointer;button;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.7263100743293762
Remove button->device pointer;button;restore /proc/acpi/button/ (ala 2.6.12)  ;[ACPI];Similar;0.6106129884719849
Remove button->device pointer;button;"Create a separate ""historical"" git archive";about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated;Similar;0.6836251020431519
We no longer need a pointer from struct acpi_button back to the struct acpi_device;no longer need;use .notify method instead of installing handler directly  ;-;Similar;0.6560608148574829
We no longer need a pointer from struct acpi_button back to the struct acpi_device;no longer need;convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.5925585031509399
We no longer need a pointer from struct acpi_button back to the struct acpi_device;no longer need;Setting ->owner as done currently (pde->owner = THIS_MODULE) is racy;as correctly noted at bug #12454;Similar;0.5238829851150513
We no longer need a pointer from struct acpi_button back to the struct acpi_device;no longer need;"proc_fops is declared as ""const""";should give some thoughts;Similar;0.5015811324119568
We no longer need a pointer from struct acpi_button back to the struct acpi_device;no longer need;"rmmoded directories will be empty and return ""."" and "".."" -- no harm";no harm;Similar;0.6876232624053955
We no longer need a pointer from struct acpi_button back to the struct acpi_device;no longer need;dont want such modular code;definitely;Similar;0.5556166768074036
We no longer need a pointer from struct acpi_button back to the struct acpi_device;no longer need;Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;Similar;0.5413597822189331
We no longer need a pointer from struct acpi_button back to the struct acpi_device;no longer need;use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Similar;0.6586216688156128
We no longer need a pointer from struct acpi_button back to the struct acpi_device;no longer need;get rid of input BIT* duplicate defines;duplicate;Similar;0.6965138912200928
We no longer need a pointer from struct acpi_button back to the struct acpi_device;no longer need;Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;Similar;0.7632770538330078
We no longer need a pointer from struct acpi_button back to the struct acpi_device;no longer need;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.7266734838485718
We no longer need a pointer from struct acpi_button back to the struct acpi_device;no longer need;"Invoke with ; as leaving it off confuses Lindent  ";gcc doesnt care;Similar;0.5450417995452881
We no longer need a pointer from struct acpi_button back to the struct acpi_device;no longer need;remove unnecessary casts and variable initializations, clean up formatting;unnecessary;Similar;0.5649797320365906
We no longer need a pointer from struct acpi_button back to the struct acpi_device;no longer need;Remove unneeded acpi_handle from driver;unneeded;Similar;0.7440734505653381
We no longer need a pointer from struct acpi_button back to the struct acpi_device;no longer need;Use acpi_devices handle instead of drivers  ;-;Similar;0.7443033456802368
We no longer need a pointer from struct acpi_button back to the struct acpi_device;no longer need;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.6452733278274536
We no longer need a pointer from struct acpi_button back to the struct acpi_device;no longer need;restore /proc/acpi/button/ (ala 2.6.12)  ;[ACPI];Similar;0.5221527814865112
We no longer need a pointer from struct acpi_button back to the struct acpi_device;no longer need;"Create a separate ""historical"" git archive";about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated;Similar;0.5703339576721191
This patch adds temporaries to cache the acpi_device_hid(), acpi_device_name(), and acpi_device_class() pointers;so we dont have to clutter the code with so many uses of those interfaces;Better to oops and learn about a bug;than to silently cover it up;Similar;0.521605908870697
This patch adds temporaries to cache the acpi_device_hid(), acpi_device_name(), and acpi_device_class() pointers;so we dont have to clutter the code with so many uses of those interfaces;changes a bit of whitespace to follow Linux conventions;follow Linux conventions;Similar;0.6951653957366943
This patch adds temporaries to cache the acpi_device_hid(), acpi_device_name(), and acpi_device_class() pointers;so we dont have to clutter the code with so many uses of those interfaces;The presence of .notify() causes Linux/ACPI to manage event handlers and notify handlers on our behalf  ;so we dont have to install and remove them ourselves;Similar;0.6760268807411194
This patch adds temporaries to cache the acpi_device_hid(), acpi_device_name(), and acpi_device_class() pointers;so we dont have to clutter the code with so many uses of those interfaces;convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.6727235913276672
This patch adds temporaries to cache the acpi_device_hid(), acpi_device_name(), and acpi_device_class() pointers;so we dont have to clutter the code with so many uses of those interfaces;start using GPE from userspace;GPE is already disabled in interrupt context;Similar;0.5929014682769775
This patch adds temporaries to cache the acpi_device_hid(), acpi_device_name(), and acpi_device_class() pointers;so we dont have to clutter the code with so many uses of those interfaces;Move all the component definitions for drivers to a single shared place, include/acpi/acpi_drivers.h  ;to have a single shared place;Similar;0.665175199508667
This patch adds temporaries to cache the acpi_device_hid(), acpi_device_name(), and acpi_device_class() pointers;so we dont have to clutter the code with so many uses of those interfaces;"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.5664536952972412
This patch adds temporaries to cache the acpi_device_hid(), acpi_device_name(), and acpi_device_class() pointers;so we dont have to clutter the code with so many uses of those interfaces;Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;Similar;0.6293977499008179
This patch adds temporaries to cache the acpi_device_hid(), acpi_device_name(), and acpi_device_class() pointers;so we dont have to clutter the code with so many uses of those interfaces;Use proc_create()/proc_create_data() to make sure that ->proc_fops and ->data be setup;before gluing PDE to main tree;Similar;0.6021741628646851
This patch adds temporaries to cache the acpi_device_hid(), acpi_device_name(), and acpi_device_class() pointers;so we dont have to clutter the code with so many uses of those interfaces;Add correct ->owner to proc_fops to fix reading/module unloading race  ;fix reading/module unloading race;Similar;0.6451765298843384
This patch adds temporaries to cache the acpi_device_hid(), acpi_device_name(), and acpi_device_class() pointers;so we dont have to clutter the code with so many uses of those interfaces;get rid of input BIT* duplicate defines;duplicate;Similar;0.504266083240509
This patch adds temporaries to cache the acpi_device_hid(), acpi_device_name(), and acpi_device_class() pointers;so we dont have to clutter the code with so many uses of those interfaces;Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;Similar;0.5443425178527832
This patch adds temporaries to cache the acpi_device_hid(), acpi_device_name(), and acpi_device_class() pointers;so we dont have to clutter the code with so many uses of those interfaces;Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;Similar;0.6504132151603699
This patch adds temporaries to cache the acpi_device_hid(), acpi_device_name(), and acpi_device_class() pointers;so we dont have to clutter the code with so many uses of those interfaces;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.6441322565078735
This patch adds temporaries to cache the acpi_device_hid(), acpi_device_name(), and acpi_device_class() pointers;so we dont have to clutter the code with so many uses of those interfaces;fix acpi_driver.name usage;fix;Similar;0.6726977229118347
This patch adds temporaries to cache the acpi_device_hid(), acpi_device_name(), and acpi_device_class() pointers;so we dont have to clutter the code with so many uses of those interfaces;"Make ""module name"" actually match the file name";cosmetic only;Similar;0.5526319146156311
This patch adds temporaries to cache the acpi_device_hid(), acpi_device_name(), and acpi_device_class() pointers;so we dont have to clutter the code with so many uses of those interfaces;remove unnecessary casts and variable initializations, clean up formatting;unnecessary;Similar;0.5185348987579346
This patch adds temporaries to cache the acpi_device_hid(), acpi_device_name(), and acpi_device_class() pointers;so we dont have to clutter the code with so many uses of those interfaces;Remove unneeded acpi_handle from driver;unneeded;Similar;0.5037233829498291
This patch adds temporaries to cache the acpi_device_hid(), acpi_device_name(), and acpi_device_class() pointers;so we dont have to clutter the code with so many uses of those interfaces;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.5424962043762207
This patch adds temporaries to cache the acpi_device_hid(), acpi_device_name(), and acpi_device_class() pointers;so we dont have to clutter the code with so many uses of those interfaces;restore /proc/acpi/button/ (ala 2.6.12)  ;[ACPI];Similar;0.6200813055038452
Better to oops and learn about a bug;than to silently cover it up;changes a bit of whitespace to follow Linux conventions;follow Linux conventions;Similar;0.5398702621459961
Better to oops and learn about a bug;than to silently cover it up;use .notify method instead of installing handler directly  ;-;Similar;0.5017486810684204
Better to oops and learn about a bug;than to silently cover it up;convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.521647036075592
Better to oops and learn about a bug;than to silently cover it up;Use proc_create()/proc_create_data() to make sure that ->proc_fops and ->data be setup;before gluing PDE to main tree;Similar;0.5499333143234253
Better to oops and learn about a bug;than to silently cover it up;Add correct ->owner to proc_fops to fix reading/module unloading race  ;fix reading/module unloading race;Similar;0.5182173848152161
Better to oops and learn about a bug;than to silently cover it up;Fix indentation where Lindent did get confused  ;Lindent did get confused;Similar;0.5134721994400024
Better to oops and learn about a bug;than to silently cover it up;remove unnecessary casts and variable initializations, clean up formatting;unnecessary;Similar;0.505959153175354
changes a bit of whitespace to follow Linux conventions;follow Linux conventions;The presence of .notify() causes Linux/ACPI to manage event handlers and notify handlers on our behalf  ;so we dont have to install and remove them ourselves;Similar;0.7181873321533203
changes a bit of whitespace to follow Linux conventions;follow Linux conventions;convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.6140583753585815
changes a bit of whitespace to follow Linux conventions;follow Linux conventions;start using GPE from userspace;GPE is already disabled in interrupt context;Similar;0.5967300534248352
changes a bit of whitespace to follow Linux conventions;follow Linux conventions;Move all the component definitions for drivers to a single shared place, include/acpi/acpi_drivers.h  ;to have a single shared place;Similar;0.5953609347343445
changes a bit of whitespace to follow Linux conventions;follow Linux conventions;"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.5830678939819336
changes a bit of whitespace to follow Linux conventions;follow Linux conventions;Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;Similar;0.5617148876190186
changes a bit of whitespace to follow Linux conventions;follow Linux conventions;use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Similar;0.5073920488357544
changes a bit of whitespace to follow Linux conventions;follow Linux conventions;Use proc_create()/proc_create_data() to make sure that ->proc_fops and ->data be setup;before gluing PDE to main tree;Similar;0.578254222869873
changes a bit of whitespace to follow Linux conventions;follow Linux conventions;Add correct ->owner to proc_fops to fix reading/module unloading race  ;fix reading/module unloading race;Similar;0.5348348021507263
changes a bit of whitespace to follow Linux conventions;follow Linux conventions;Define the macro temporarily in a local manner;all those local definitions will be removed further in this patchset (to not break bisecting);Similar;0.5782985687255859
changes a bit of whitespace to follow Linux conventions;follow Linux conventions;Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;Similar;0.6171056032180786
changes a bit of whitespace to follow Linux conventions;follow Linux conventions;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.561896800994873
changes a bit of whitespace to follow Linux conventions;follow Linux conventions;fix acpi_driver.name usage;fix;Similar;0.6047683954238892
changes a bit of whitespace to follow Linux conventions;follow Linux conventions;ls bus/acpi/drivers  ;Display the list of ACPI drivers.;Similar;0.5061759948730469
changes a bit of whitespace to follow Linux conventions;follow Linux conventions;"Make ""module name"" actually match the file name";cosmetic only;Similar;0.6431639194488525
changes a bit of whitespace to follow Linux conventions;follow Linux conventions;remove unnecessary casts and variable initializations, clean up formatting;unnecessary;Similar;0.5527586936950684
changes a bit of whitespace to follow Linux conventions;follow Linux conventions;Remove unneeded acpi_handle from driver;unneeded;Similar;0.5312360525131226
changes a bit of whitespace to follow Linux conventions;follow Linux conventions;Use acpi_devices handle instead of drivers  ;-;Similar;0.5043324828147888
changes a bit of whitespace to follow Linux conventions;follow Linux conventions;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.5205723643302917
changes a bit of whitespace to follow Linux conventions;follow Linux conventions;restore /proc/acpi/button/ (ala 2.6.12)  ;[ACPI];Similar;0.563856840133667
use .notify method instead of installing handler directly  ;-;The presence of .notify() causes Linux/ACPI to manage event handlers and notify handlers on our behalf  ;so we dont have to install and remove them ourselves;Similar;0.549170732498169
use .notify method instead of installing handler directly  ;-;convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.6589237451553345
use .notify method instead of installing handler directly  ;-;Setting ->owner as done currently (pde->owner = THIS_MODULE) is racy;as correctly noted at bug #12454;Similar;0.5955150127410889
use .notify method instead of installing handler directly  ;-;"proc_fops is declared as ""const""";should give some thoughts;Similar;0.6418945789337158
use .notify method instead of installing handler directly  ;-;start using GPE from userspace;GPE is already disabled in interrupt context;Similar;0.5793806314468384
use .notify method instead of installing handler directly  ;-;Move all the component definitions for drivers to a single shared place, include/acpi/acpi_drivers.h  ;to have a single shared place;Similar;0.5542234182357788
use .notify method instead of installing handler directly  ;-;"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.6118202209472656
use .notify method instead of installing handler directly  ;-;Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;Similar;0.5996090173721313
use .notify method instead of installing handler directly  ;-;use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Similar;0.7418200969696045
use .notify method instead of installing handler directly  ;-;Use proc_create()/proc_create_data() to make sure that ->proc_fops and ->data be setup;before gluing PDE to main tree;Similar;0.5513428449630737
use .notify method instead of installing handler directly  ;-;get rid of input BIT* duplicate defines;duplicate;Similar;0.7121587991714478
use .notify method instead of installing handler directly  ;-;Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;Similar;0.6270087957382202
use .notify method instead of installing handler directly  ;-;Define the macro temporarily in a local manner;all those local definitions will be removed further in this patchset (to not break bisecting);Similar;0.6019011735916138
use .notify method instead of installing handler directly  ;-;Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;Similar;0.6288611888885498
use .notify method instead of installing handler directly  ;-;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.674397349357605
use .notify method instead of installing handler directly  ;-;fix acpi_driver.name usage;fix;Similar;0.657649040222168
use .notify method instead of installing handler directly  ;-;"Make ""module name"" actually match the file name";cosmetic only;Similar;0.5096176862716675
use .notify method instead of installing handler directly  ;-;"Invoke with ; as leaving it off confuses Lindent  ";gcc doesnt care;Similar;0.5867952108383179
use .notify method instead of installing handler directly  ;-;Fix indentation where Lindent did get confused  ;Lindent did get confused;Similar;0.5427402257919312
use .notify method instead of installing handler directly  ;-;remove unnecessary casts and variable initializations, clean up formatting;unnecessary;Similar;0.5620888471603394
use .notify method instead of installing handler directly  ;-;Remove unneeded acpi_handle from driver;unneeded;Similar;0.6555006504058838
use .notify method instead of installing handler directly  ;-;Use acpi_devices handle instead of drivers  ;-;Similar;0.7907334566116333
use .notify method instead of installing handler directly  ;-;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.716464638710022
use .notify method instead of installing handler directly  ;-;restore /proc/acpi/button/ (ala 2.6.12)  ;[ACPI];Similar;0.5206260085105896
use .notify method instead of installing handler directly  ;-;"Create a separate ""historical"" git archive";about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated;Similar;0.6307336688041687
The presence of .notify() causes Linux/ACPI to manage event handlers and notify handlers on our behalf  ;so we dont have to install and remove them ourselves;convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Similar;0.6139005422592163
The presence of .notify() causes Linux/ACPI to manage event handlers and notify handlers on our behalf  ;so we dont have to install and remove them ourselves;start using GPE from userspace;GPE is already disabled in interrupt context;Similar;0.6441617012023926
The presence of .notify() causes Linux/ACPI to manage event handlers and notify handlers on our behalf  ;so we dont have to install and remove them ourselves;Move all the component definitions for drivers to a single shared place, include/acpi/acpi_drivers.h  ;to have a single shared place;Similar;0.6931179761886597
The presence of .notify() causes Linux/ACPI to manage event handlers and notify handlers on our behalf  ;so we dont have to install and remove them ourselves;"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.5617121458053589
The presence of .notify() causes Linux/ACPI to manage event handlers and notify handlers on our behalf  ;so we dont have to install and remove them ourselves;Use proc_create()/proc_create_data() to make sure that ->proc_fops and ->data be setup;before gluing PDE to main tree;Similar;0.6441744565963745
The presence of .notify() causes Linux/ACPI to manage event handlers and notify handlers on our behalf  ;so we dont have to install and remove them ourselves;Add correct ->owner to proc_fops to fix reading/module unloading race  ;fix reading/module unloading race;Similar;0.6699647903442383
The presence of .notify() causes Linux/ACPI to manage event handlers and notify handlers on our behalf  ;so we dont have to install and remove them ourselves;Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;Similar;0.5734217762947083
The presence of .notify() causes Linux/ACPI to manage event handlers and notify handlers on our behalf  ;so we dont have to install and remove them ourselves;fix acpi_driver.name usage;fix;Similar;0.6233714818954468
The presence of .notify() causes Linux/ACPI to manage event handlers and notify handlers on our behalf  ;so we dont have to install and remove them ourselves;ls bus/acpi/drivers  ;Display the list of ACPI drivers.;Similar;0.5576251745223999
The presence of .notify() causes Linux/ACPI to manage event handlers and notify handlers on our behalf  ;so we dont have to install and remove them ourselves;"Make ""module name"" actually match the file name";cosmetic only;Similar;0.5867757201194763
The presence of .notify() causes Linux/ACPI to manage event handlers and notify handlers on our behalf  ;so we dont have to install and remove them ourselves;restore /proc/acpi/button/ (ala 2.6.12)  ;[ACPI];Similar;0.5146362781524658
convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;"proc_fops is declared as ""const""";should give some thoughts;Similar;0.6474099159240723
convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;start using GPE from userspace;GPE is already disabled in interrupt context;Similar;0.6444793939590454
convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Move all the component definitions for drivers to a single shared place, include/acpi/acpi_drivers.h  ;to have a single shared place;Similar;0.6591355204582214
convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.6898211240768433
convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;Similar;0.772747278213501
convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Similar;0.5862745046615601
convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Use proc_create()/proc_create_data() to make sure that ->proc_fops and ->data be setup;before gluing PDE to main tree;Similar;0.581647515296936
convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Add correct ->owner to proc_fops to fix reading/module unloading race  ;fix reading/module unloading race;Similar;0.5351395606994629
convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;get rid of input BIT* duplicate defines;duplicate;Similar;0.6911482810974121
convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;Similar;0.5995348691940308
convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Define the macro temporarily in a local manner;all those local definitions will be removed further in this patchset (to not break bisecting);Similar;0.5949970483779907
convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;Similar;0.7663967609405518
convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.7448040246963501
convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;fix acpi_driver.name usage;fix;Similar;0.7306218147277832
convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;ls bus/acpi/drivers  ;Display the list of ACPI drivers.;Similar;0.5061416029930115
convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;"Make ""module name"" actually match the file name";cosmetic only;Similar;0.5546995401382446
convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;"Invoke with ; as leaving it off confuses Lindent  ";gcc doesnt care;Similar;0.5019296407699585
convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Fix indentation where Lindent did get confused  ;Lindent did get confused;Similar;0.5646123886108398
convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;remove unnecessary casts and variable initializations, clean up formatting;unnecessary;Similar;0.533838152885437
convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Remove unneeded acpi_handle from driver;unneeded;Similar;0.625981867313385
convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;Use acpi_devices handle instead of drivers  ;-;Similar;0.609819233417511
convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.708846926689148
convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;restore /proc/acpi/button/ (ala 2.6.12)  ;[ACPI];Similar;0.7696736454963684
convert that back to ACPI_BUTTON_NOTIFY_STATUS;to preserve user-space backward compatibility;"Create a separate ""historical"" git archive";about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated;Similar;0.5725686550140381
Setting ->owner as done currently (pde->owner = THIS_MODULE) is racy;as correctly noted at bug #12454;leave ->owner as easy-manipulative field;somebody will forget to unpin previous/pin current module when switching ->owner;Similar;0.564079225063324
Setting ->owner as done currently (pde->owner = THIS_MODULE) is racy;as correctly noted at bug #12454;"proc_fops is declared as ""const""";should give some thoughts;Similar;0.6366720199584961
Setting ->owner as done currently (pde->owner = THIS_MODULE) is racy;as correctly noted at bug #12454;dont want such modular code;definitely;Similar;0.523662269115448
Setting ->owner as done currently (pde->owner = THIS_MODULE) is racy;as correctly noted at bug #12454;use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Similar;0.611419677734375
Setting ->owner as done currently (pde->owner = THIS_MODULE) is racy;as correctly noted at bug #12454;get rid of input BIT* duplicate defines;duplicate;Similar;0.5858404636383057
Setting ->owner as done currently (pde->owner = THIS_MODULE) is racy;as correctly noted at bug #12454;Define the macro temporarily in a local manner;all those local definitions will be removed further in this patchset (to not break bisecting);Similar;0.5463472008705139
Setting ->owner as done currently (pde->owner = THIS_MODULE) is racy;as correctly noted at bug #12454;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.5271075963973999
Setting ->owner as done currently (pde->owner = THIS_MODULE) is racy;as correctly noted at bug #12454;fix acpi_driver.name usage;fix;Similar;0.6061630845069885
Setting ->owner as done currently (pde->owner = THIS_MODULE) is racy;as correctly noted at bug #12454;"Make ""module name"" actually match the file name";cosmetic only;Similar;0.5483016967773438
Setting ->owner as done currently (pde->owner = THIS_MODULE) is racy;as correctly noted at bug #12454;"Invoke with ; as leaving it off confuses Lindent  ";gcc doesnt care;Similar;0.5543066263198853
Setting ->owner as done currently (pde->owner = THIS_MODULE) is racy;as correctly noted at bug #12454;Fix indentation where Lindent did get confused  ;Lindent did get confused;Similar;0.5825430154800415
Setting ->owner as done currently (pde->owner = THIS_MODULE) is racy;as correctly noted at bug #12454;Remove unneeded acpi_handle from driver;unneeded;Similar;0.5288848876953125
Setting ->owner as done currently (pde->owner = THIS_MODULE) is racy;as correctly noted at bug #12454;Use acpi_devices handle instead of drivers  ;-;Similar;0.5688260793685913
Setting ->owner as done currently (pde->owner = THIS_MODULE) is racy;as correctly noted at bug #12454;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.5652228593826294
Setting ->owner as done currently (pde->owner = THIS_MODULE) is racy;as correctly noted at bug #12454;"Create a separate ""historical"" git archive";about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated;Similar;0.5042625665664673
leave ->owner as easy-manipulative field;somebody will forget to unpin previous/pin current module when switching ->owner;"rmmoded directories will be empty and return ""."" and "".."" -- no harm";no harm;Similar;0.6198686957359314
"proc_fops is declared as ""const""";should give some thoughts;start using GPE from userspace;GPE is already disabled in interrupt context;Similar;0.6344125866889954
"proc_fops is declared as ""const""";should give some thoughts;Move all the component definitions for drivers to a single shared place, include/acpi/acpi_drivers.h  ;to have a single shared place;Similar;0.538083553314209
"proc_fops is declared as ""const""";should give some thoughts;"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.6200677156448364
"proc_fops is declared as ""const""";should give some thoughts;Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;Similar;0.5877119302749634
"proc_fops is declared as ""const""";should give some thoughts;use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Similar;0.7566640377044678
"proc_fops is declared as ""const""";should give some thoughts;Use proc_create()/proc_create_data() to make sure that ->proc_fops and ->data be setup;before gluing PDE to main tree;Similar;0.5550593137741089
"proc_fops is declared as ""const""";should give some thoughts;get rid of input BIT* duplicate defines;duplicate;Similar;0.7385152578353882
"proc_fops is declared as ""const""";should give some thoughts;Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;Similar;0.5347111225128174
"proc_fops is declared as ""const""";should give some thoughts;Define the macro temporarily in a local manner;all those local definitions will be removed further in this patchset (to not break bisecting);Similar;0.6239641904830933
"proc_fops is declared as ""const""";should give some thoughts;Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;Similar;0.6341134309768677
"proc_fops is declared as ""const""";should give some thoughts;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.6785066723823547
"proc_fops is declared as ""const""";should give some thoughts;fix acpi_driver.name usage;fix;Similar;0.6538554430007935
"proc_fops is declared as ""const""";should give some thoughts;ls bus/acpi/drivers  ;Display the list of ACPI drivers.;Similar;0.5052675008773804
"proc_fops is declared as ""const""";should give some thoughts;"Make ""module name"" actually match the file name";cosmetic only;Similar;0.5484966039657593
"proc_fops is declared as ""const""";should give some thoughts;"Invoke with ; as leaving it off confuses Lindent  ";gcc doesnt care;Similar;0.6356880068778992
"proc_fops is declared as ""const""";should give some thoughts;Fix indentation where Lindent did get confused  ;Lindent did get confused;Similar;0.5984925031661987
"proc_fops is declared as ""const""";should give some thoughts;Remove unneeded acpi_handle from driver;unneeded;Similar;0.5682761073112488
"proc_fops is declared as ""const""";should give some thoughts;Use acpi_devices handle instead of drivers  ;-;Similar;0.6272844076156616
"proc_fops is declared as ""const""";should give some thoughts;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.7080497741699219
"proc_fops is declared as ""const""";should give some thoughts;restore /proc/acpi/button/ (ala 2.6.12)  ;[ACPI];Similar;0.5496046543121338
"proc_fops is declared as ""const""";should give some thoughts;"Create a separate ""historical"" git archive";about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated;Similar;0.6561844348907471
"rmmoded directories will be empty and return ""."" and "".."" -- no harm";no harm;use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Similar;0.5295100808143616
"rmmoded directories will be empty and return ""."" and "".."" -- no harm";no harm;get rid of input BIT* duplicate defines;duplicate;Similar;0.5621343851089478
"rmmoded directories will be empty and return ""."" and "".."" -- no harm";no harm;Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;Similar;0.5642627477645874
"rmmoded directories will be empty and return ""."" and "".."" -- no harm";no harm;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.5693039894104004
"rmmoded directories will be empty and return ""."" and "".."" -- no harm";no harm;remove unnecessary casts and variable initializations, clean up formatting;unnecessary;Similar;0.5893110036849976
"rmmoded directories will be empty and return ""."" and "".."" -- no harm";no harm;Remove unneeded acpi_handle from driver;unneeded;Similar;0.5215618014335632
"rmmoded directories will be empty and return ""."" and "".."" -- no harm";no harm;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.5110121369361877
dont want such modular code;definitely;use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Similar;0.526183009147644
dont want such modular code;definitely;get rid of input BIT* duplicate defines;duplicate;Similar;0.5117650032043457
dont want such modular code;definitely;Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;Similar;0.5421795845031738
dont want such modular code;definitely;"Invoke with ; as leaving it off confuses Lindent  ";gcc doesnt care;Similar;0.5882958769798279
dont want such modular code;definitely;Fix indentation where Lindent did get confused  ;Lindent did get confused;Similar;0.5784971117973328
dont want such modular code;definitely;Remove unneeded acpi_handle from driver;unneeded;Similar;0.5255172848701477
dont want such modular code;definitely;Use acpi_devices handle instead of drivers  ;-;Similar;0.5085969567298889
start using GPE from userspace;GPE is already disabled in interrupt context;Move all the component definitions for drivers to a single shared place, include/acpi/acpi_drivers.h  ;to have a single shared place;Similar;0.6994742751121521
start using GPE from userspace;GPE is already disabled in interrupt context;"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.6191462874412537
start using GPE from userspace;GPE is already disabled in interrupt context;Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;Similar;0.5919841527938843
start using GPE from userspace;GPE is already disabled in interrupt context;use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Similar;0.5776231288909912
start using GPE from userspace;GPE is already disabled in interrupt context;Use proc_create()/proc_create_data() to make sure that ->proc_fops and ->data be setup;before gluing PDE to main tree;Similar;0.6947570443153381
start using GPE from userspace;GPE is already disabled in interrupt context;Add correct ->owner to proc_fops to fix reading/module unloading race  ;fix reading/module unloading race;Similar;0.500898003578186
start using GPE from userspace;GPE is already disabled in interrupt context;get rid of input BIT* duplicate defines;duplicate;Similar;0.5141493082046509
start using GPE from userspace;GPE is already disabled in interrupt context;Define the macro temporarily in a local manner;all those local definitions will be removed further in this patchset (to not break bisecting);Similar;0.6398031711578369
start using GPE from userspace;GPE is already disabled in interrupt context;Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;Similar;0.6073132157325745
start using GPE from userspace;GPE is already disabled in interrupt context;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.5122870206832886
start using GPE from userspace;GPE is already disabled in interrupt context;fix acpi_driver.name usage;fix;Similar;0.6434330940246582
start using GPE from userspace;GPE is already disabled in interrupt context;ls bus/acpi/drivers  ;Display the list of ACPI drivers.;Similar;0.5051885843276978
start using GPE from userspace;GPE is already disabled in interrupt context;"Make ""module name"" actually match the file name";cosmetic only;Similar;0.6145575046539307
start using GPE from userspace;GPE is already disabled in interrupt context;Use acpi_devices handle instead of drivers  ;-;Similar;0.509229838848114
start using GPE from userspace;GPE is already disabled in interrupt context;restore /proc/acpi/button/ (ala 2.6.12)  ;[ACPI];Similar;0.561970591545105
Move all the component definitions for drivers to a single shared place, include/acpi/acpi_drivers.h  ;to have a single shared place;"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Similar;0.5911831855773926
Move all the component definitions for drivers to a single shared place, include/acpi/acpi_drivers.h  ;to have a single shared place;Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;Similar;0.5682637691497803
Move all the component definitions for drivers to a single shared place, include/acpi/acpi_drivers.h  ;to have a single shared place;use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Similar;0.5076496601104736
Move all the component definitions for drivers to a single shared place, include/acpi/acpi_drivers.h  ;to have a single shared place;Use proc_create()/proc_create_data() to make sure that ->proc_fops and ->data be setup;before gluing PDE to main tree;Similar;0.608712911605835
Move all the component definitions for drivers to a single shared place, include/acpi/acpi_drivers.h  ;to have a single shared place;Add correct ->owner to proc_fops to fix reading/module unloading race  ;fix reading/module unloading race;Similar;0.5233364105224609
Move all the component definitions for drivers to a single shared place, include/acpi/acpi_drivers.h  ;to have a single shared place;get rid of input BIT* duplicate defines;duplicate;Similar;0.5146163105964661
Move all the component definitions for drivers to a single shared place, include/acpi/acpi_drivers.h  ;to have a single shared place;Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;Similar;0.5081295371055603
Move all the component definitions for drivers to a single shared place, include/acpi/acpi_drivers.h  ;to have a single shared place;Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;Similar;0.6755532622337341
Move all the component definitions for drivers to a single shared place, include/acpi/acpi_drivers.h  ;to have a single shared place;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.5844225287437439
Move all the component definitions for drivers to a single shared place, include/acpi/acpi_drivers.h  ;to have a single shared place;fix acpi_driver.name usage;fix;Similar;0.6826562881469727
Move all the component definitions for drivers to a single shared place, include/acpi/acpi_drivers.h  ;to have a single shared place;ls bus/acpi/drivers  ;Display the list of ACPI drivers.;Similar;0.6106275916099548
Move all the component definitions for drivers to a single shared place, include/acpi/acpi_drivers.h  ;to have a single shared place;"Make ""module name"" actually match the file name";cosmetic only;Similar;0.6187174916267395
Move all the component definitions for drivers to a single shared place, include/acpi/acpi_drivers.h  ;to have a single shared place;Remove unneeded acpi_handle from driver;unneeded;Similar;0.5207951664924622
Move all the component definitions for drivers to a single shared place, include/acpi/acpi_drivers.h  ;to have a single shared place;Use acpi_devices handle instead of drivers  ;-;Similar;0.5747602581977844
Move all the component definitions for drivers to a single shared place, include/acpi/acpi_drivers.h  ;to have a single shared place;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.5257835388183594
Move all the component definitions for drivers to a single shared place, include/acpi/acpi_drivers.h  ;to have a single shared place;restore /proc/acpi/button/ (ala 2.6.12)  ;[ACPI];Similar;0.5877432227134705
Move all the component definitions for drivers to a single shared place, include/acpi/acpi_drivers.h  ;to have a single shared place;"Create a separate ""historical"" git archive";about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated;Similar;0.5021364688873291
"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;Similar;0.6235113143920898
"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Similar;0.6117740869522095
"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Use proc_create()/proc_create_data() to make sure that ->proc_fops and ->data be setup;before gluing PDE to main tree;Similar;0.6421182751655579
"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;get rid of input BIT* duplicate defines;duplicate;Similar;0.6262301802635193
"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;Similar;0.5146481990814209
"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Define the macro temporarily in a local manner;all those local definitions will be removed further in this patchset (to not break bisecting);Similar;0.6159958839416504
"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;Similar;0.5410691499710083
"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.634101927280426
"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;fix acpi_driver.name usage;fix;Similar;0.5517915487289429
"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;"Make ""module name"" actually match the file name";cosmetic only;Similar;0.5980902910232544
"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;"Invoke with ; as leaving it off confuses Lindent  ";gcc doesnt care;Similar;0.5335327386856079
"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Fix indentation where Lindent did get confused  ;Lindent did get confused;Similar;0.6158104538917542
"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;remove unnecessary casts and variable initializations, clean up formatting;unnecessary;Similar;0.6647927761077881
"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;Remove unneeded acpi_handle from driver;unneeded;Similar;0.5157232284545898
"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.6019948124885559
"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;restore /proc/acpi/button/ (ala 2.6.12)  ;[ACPI];Similar;0.6521333456039429
"verify by using ""input-events"" from input-utils and just closing and opening the lid";easy;"Create a separate ""historical"" git archive";about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated;Similar;0.5001238584518433
Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Similar;0.6088781952857971
Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;Use proc_create()/proc_create_data() to make sure that ->proc_fops and ->data be setup;before gluing PDE to main tree;Similar;0.5664315819740295
Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;get rid of input BIT* duplicate defines;duplicate;Similar;0.6535515785217285
Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;Similar;0.6304855346679688
Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;Define the macro temporarily in a local manner;all those local definitions will be removed further in this patchset (to not break bisecting);Similar;0.532404363155365
Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;Similar;0.7158602476119995
Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.7145911455154419
Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;fix acpi_driver.name usage;fix;Similar;0.6592274308204651
Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;"Make ""module name"" actually match the file name";cosmetic only;Similar;0.5524800419807434
Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;Remove unneeded acpi_handle from driver;unneeded;Similar;0.5374243259429932
Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;Use acpi_devices handle instead of drivers  ;-;Similar;0.5704973936080933
Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.6650044918060303
Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;restore /proc/acpi/button/ (ala 2.6.12)  ;[ACPI];Similar;0.6313851475715637
Change the argument to take a pointer to an acpi_integer;support 64-bit integers on all platforms;"Create a separate ""historical"" git archive";about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated;Similar;0.5131109952926636
use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Use proc_create()/proc_create_data() to make sure that ->proc_fops and ->data be setup;before gluing PDE to main tree;Similar;0.5835555195808411
use non-racy method for proc entries creation;reduce race conditions in proc entries creation;get rid of input BIT* duplicate defines;duplicate;Similar;0.7837413549423218
use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;Similar;0.6706184148788452
use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Define the macro temporarily in a local manner;all those local definitions will be removed further in this patchset (to not break bisecting);Similar;0.6031942367553711
use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;Similar;0.6165158152580261
use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.6823473572731018
use non-racy method for proc entries creation;reduce race conditions in proc entries creation;fix acpi_driver.name usage;fix;Similar;0.6487029790878296
use non-racy method for proc entries creation;reduce race conditions in proc entries creation;"Make ""module name"" actually match the file name";cosmetic only;Similar;0.5894731283187866
use non-racy method for proc entries creation;reduce race conditions in proc entries creation;"Invoke with ; as leaving it off confuses Lindent  ";gcc doesnt care;Similar;0.5999780297279358
use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Fix indentation where Lindent did get confused  ;Lindent did get confused;Similar;0.563745379447937
use non-racy method for proc entries creation;reduce race conditions in proc entries creation;remove unnecessary casts and variable initializations, clean up formatting;unnecessary;Similar;0.6235545873641968
use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Remove unneeded acpi_handle from driver;unneeded;Similar;0.6219685077667236
use non-racy method for proc entries creation;reduce race conditions in proc entries creation;Use acpi_devices handle instead of drivers  ;-;Similar;0.7542909383773804
use non-racy method for proc entries creation;reduce race conditions in proc entries creation;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.7462717294692993
use non-racy method for proc entries creation;reduce race conditions in proc entries creation;restore /proc/acpi/button/ (ala 2.6.12)  ;[ACPI];Similar;0.5230785608291626
use non-racy method for proc entries creation;reduce race conditions in proc entries creation;"Create a separate ""historical"" git archive";about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated;Similar;0.6753607988357544
Use proc_create()/proc_create_data() to make sure that ->proc_fops and ->data be setup;before gluing PDE to main tree;Add correct ->owner to proc_fops to fix reading/module unloading race  ;fix reading/module unloading race;Similar;0.6288287043571472
Use proc_create()/proc_create_data() to make sure that ->proc_fops and ->data be setup;before gluing PDE to main tree;Define the macro temporarily in a local manner;all those local definitions will be removed further in this patchset (to not break bisecting);Similar;0.5090475678443909
Use proc_create()/proc_create_data() to make sure that ->proc_fops and ->data be setup;before gluing PDE to main tree;Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;Similar;0.604749321937561
Use proc_create()/proc_create_data() to make sure that ->proc_fops and ->data be setup;before gluing PDE to main tree;fix acpi_driver.name usage;fix;Similar;0.591410756111145
Use proc_create()/proc_create_data() to make sure that ->proc_fops and ->data be setup;before gluing PDE to main tree;"Make ""module name"" actually match the file name";cosmetic only;Similar;0.6759325265884399
Use proc_create()/proc_create_data() to make sure that ->proc_fops and ->data be setup;before gluing PDE to main tree;remove unnecessary casts and variable initializations, clean up formatting;unnecessary;Similar;0.5389880537986755
Use proc_create()/proc_create_data() to make sure that ->proc_fops and ->data be setup;before gluing PDE to main tree;restore /proc/acpi/button/ (ala 2.6.12)  ;[ACPI];Similar;0.5060722827911377
Add correct ->owner to proc_fops to fix reading/module unloading race  ;fix reading/module unloading race;Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;Similar;0.5200276970863342
Add correct ->owner to proc_fops to fix reading/module unloading race  ;fix reading/module unloading race;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.5356563925743103
Add correct ->owner to proc_fops to fix reading/module unloading race  ;fix reading/module unloading race;fix acpi_driver.name usage;fix;Similar;0.5986167192459106
Add correct ->owner to proc_fops to fix reading/module unloading race  ;fix reading/module unloading race;restore /proc/acpi/button/ (ala 2.6.12)  ;[ACPI];Similar;0.5266967415809631
get rid of input BIT* duplicate defines;duplicate;Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;Similar;0.7635730504989624
get rid of input BIT* duplicate defines;duplicate;Define the macro temporarily in a local manner;all those local definitions will be removed further in this patchset (to not break bisecting);Similar;0.6020717024803162
get rid of input BIT* duplicate defines;duplicate;Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;Similar;0.6507453322410583
get rid of input BIT* duplicate defines;duplicate;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.8035550713539124
get rid of input BIT* duplicate defines;duplicate;fix acpi_driver.name usage;fix;Similar;0.6678563952445984
get rid of input BIT* duplicate defines;duplicate;"Invoke with ; as leaving it off confuses Lindent  ";gcc doesnt care;Similar;0.7055139541625977
get rid of input BIT* duplicate defines;duplicate;Fix indentation where Lindent did get confused  ;Lindent did get confused;Similar;0.6596969366073608
get rid of input BIT* duplicate defines;duplicate;remove unnecessary casts and variable initializations, clean up formatting;unnecessary;Similar;0.6774172782897949
get rid of input BIT* duplicate defines;duplicate;Remove unneeded acpi_handle from driver;unneeded;Similar;0.7313095331192017
get rid of input BIT* duplicate defines;duplicate;Use acpi_devices handle instead of drivers  ;-;Similar;0.7599605321884155
get rid of input BIT* duplicate defines;duplicate;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.8240187764167786
get rid of input BIT* duplicate defines;duplicate;restore /proc/acpi/button/ (ala 2.6.12)  ;[ACPI];Similar;0.5508347749710083
get rid of input BIT* duplicate defines;duplicate;"Create a separate ""historical"" git archive";about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated;Similar;0.7519242763519287
Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;Similar;0.5422419905662537
Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.765320360660553
Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;fix acpi_driver.name usage;fix;Similar;0.5559518337249756
Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;"Invoke with ; as leaving it off confuses Lindent  ";gcc doesnt care;Similar;0.5704432725906372
Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;Fix indentation where Lindent did get confused  ;Lindent did get confused;Similar;0.5111434459686279
Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;remove unnecessary casts and variable initializations, clean up formatting;unnecessary;Similar;0.6025104522705078
Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;Remove unneeded acpi_handle from driver;unneeded;Similar;0.7094523906707764
Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;Use acpi_devices handle instead of drivers  ;-;Similar;0.6823632121086121
Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.7218353748321533
Also remove includes of input.h from non-input sources only for BIT macro definition;non-input sources, BIT macro definition;"Create a separate ""historical"" git archive";about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated;Similar;0.6406930685043335
Define the macro temporarily in a local manner;all those local definitions will be removed further in this patchset (to not break bisecting);Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;Similar;0.5183258652687073
Define the macro temporarily in a local manner;all those local definitions will be removed further in this patchset (to not break bisecting);Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.5804274082183838
Define the macro temporarily in a local manner;all those local definitions will be removed further in this patchset (to not break bisecting);fix acpi_driver.name usage;fix;Similar;0.6117563247680664
Define the macro temporarily in a local manner;all those local definitions will be removed further in this patchset (to not break bisecting);"Make ""module name"" actually match the file name";cosmetic only;Similar;0.5357711315155029
Define the macro temporarily in a local manner;all those local definitions will be removed further in this patchset (to not break bisecting);"Invoke with ; as leaving it off confuses Lindent  ";gcc doesnt care;Similar;0.5146971940994263
Define the macro temporarily in a local manner;all those local definitions will be removed further in this patchset (to not break bisecting);Fix indentation where Lindent did get confused  ;Lindent did get confused;Similar;0.6249159574508667
Define the macro temporarily in a local manner;all those local definitions will be removed further in this patchset (to not break bisecting);remove unnecessary casts and variable initializations, clean up formatting;unnecessary;Similar;0.5518373250961304
Define the macro temporarily in a local manner;all those local definitions will be removed further in this patchset (to not break bisecting);Remove unneeded acpi_handle from driver;unneeded;Similar;0.5043848156929016
Define the macro temporarily in a local manner;all those local definitions will be removed further in this patchset (to not break bisecting);Use acpi_devices handle instead of drivers  ;-;Similar;0.5423471331596375
Define the macro temporarily in a local manner;all those local definitions will be removed further in this patchset (to not break bisecting);un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.5013724565505981
Define the macro temporarily in a local manner;all those local definitions will be removed further in this patchset (to not break bisecting);"Create a separate ""historical"" git archive";about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated;Similar;0.5415507555007935
Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Similar;0.7222930192947388
Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;fix acpi_driver.name usage;fix;Similar;0.7435302734375
Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;ls bus/acpi/drivers  ;Display the list of ACPI drivers.;Similar;0.6382017135620117
Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;"Make ""module name"" actually match the file name";cosmetic only;Similar;0.5547584891319275
Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;Remove unneeded acpi_handle from driver;unneeded;Similar;0.5691081285476685
Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;Use acpi_devices handle instead of drivers  ;-;Similar;0.6392247080802917
Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.6491972208023071
Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;restore /proc/acpi/button/ (ala 2.6.12)  ;[ACPI];Similar;0.6209028959274292
Re-name acpi_bus_generate_event() to acpi_bus_generate_proc_event()  ;to make sure there is no confusion that it is for /proc/acpi/event only;"Create a separate ""historical"" git archive";about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated;Similar;0.5731338262557983
Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;fix acpi_driver.name usage;fix;Similar;0.6773186922073364
Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;"Invoke with ; as leaving it off confuses Lindent  ";gcc doesnt care;Similar;0.6018086671829224
Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Fix indentation where Lindent did get confused  ;Lindent did get confused;Similar;0.5684940814971924
Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;remove unnecessary casts and variable initializations, clean up formatting;unnecessary;Similar;0.6572408676147461
Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Remove unneeded acpi_handle from driver;unneeded;Similar;0.729463517665863
Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;Use acpi_devices handle instead of drivers  ;-;Similar;0.6878066658973694
Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.7407348155975342
Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;restore /proc/acpi/button/ (ala 2.6.12)  ;[ACPI];Similar;0.5973789691925049
Add CONFIG_ACPI_PROC_EVENT to allow removal of /proc/acpi/event;to allow removal of /proc/acpi/event;"Create a separate ""historical"" git archive";about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated;Similar;0.6851389408111572
fix acpi_driver.name usage;fix;ls bus/acpi/drivers  ;Display the list of ACPI drivers.;Similar;0.5788723230361938
fix acpi_driver.name usage;fix;"Make ""module name"" actually match the file name";cosmetic only;Similar;0.6048814058303833
fix acpi_driver.name usage;fix;Fix indentation where Lindent did get confused  ;Lindent did get confused;Similar;0.522077202796936
fix acpi_driver.name usage;fix;remove unnecessary casts and variable initializations, clean up formatting;unnecessary;Similar;0.5001270174980164
fix acpi_driver.name usage;fix;Remove unneeded acpi_handle from driver;unneeded;Similar;0.7046349048614502
fix acpi_driver.name usage;fix;Use acpi_devices handle instead of drivers  ;-;Similar;0.6855065226554871
fix acpi_driver.name usage;fix;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.6533256769180298
fix acpi_driver.name usage;fix;restore /proc/acpi/button/ (ala 2.6.12)  ;[ACPI];Similar;0.5779515504837036
fix acpi_driver.name usage;fix;"Create a separate ""historical"" git archive";about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated;Similar;0.5510528087615967
ls bus/acpi/drivers  ;Display the list of ACPI drivers.;Remove unneeded acpi_handle from driver;unneeded;Similar;0.5589725971221924
ls bus/acpi/drivers  ;Display the list of ACPI drivers.;Use acpi_devices handle instead of drivers  ;-;Similar;0.60701584815979
"Invoke with ; as leaving it off confuses Lindent  ";gcc doesnt care;Fix indentation where Lindent did get confused  ;Lindent did get confused;Similar;0.7953125238418579
"Invoke with ; as leaving it off confuses Lindent  ";gcc doesnt care;remove unnecessary casts and variable initializations, clean up formatting;unnecessary;Similar;0.5410357713699341
"Invoke with ; as leaving it off confuses Lindent  ";gcc doesnt care;Remove unneeded acpi_handle from driver;unneeded;Similar;0.6290757656097412
"Invoke with ; as leaving it off confuses Lindent  ";gcc doesnt care;Use acpi_devices handle instead of drivers  ;-;Similar;0.5966757535934448
"Invoke with ; as leaving it off confuses Lindent  ";gcc doesnt care;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.6239578127861023
"Invoke with ; as leaving it off confuses Lindent  ";gcc doesnt care;"Create a separate ""historical"" git archive";about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated;Similar;0.6368857622146606
Fix indentation where Lindent did get confused  ;Lindent did get confused;remove unnecessary casts and variable initializations, clean up formatting;unnecessary;Similar;0.6063838005065918
Fix indentation where Lindent did get confused  ;Lindent did get confused;Remove unneeded acpi_handle from driver;unneeded;Similar;0.600527286529541
Fix indentation where Lindent did get confused  ;Lindent did get confused;Use acpi_devices handle instead of drivers  ;-;Similar;0.5284713506698608
Fix indentation where Lindent did get confused  ;Lindent did get confused;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.574292004108429
Fix indentation where Lindent did get confused  ;Lindent did get confused;"Create a separate ""historical"" git archive";about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated;Similar;0.5903428792953491
remove unnecessary casts and variable initializations, clean up formatting;unnecessary;Remove unneeded acpi_handle from driver;unneeded;Similar;0.567855715751648
remove unnecessary casts and variable initializations, clean up formatting;unnecessary;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.639998197555542
Remove unneeded acpi_handle from driver;unneeded;Use acpi_devices handle instead of drivers  ;-;Similar;0.7615395784378052
Remove unneeded acpi_handle from driver;unneeded;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.7317569255828857
Remove unneeded acpi_handle from driver;unneeded;"Create a separate ""historical"" git archive";about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated;Similar;0.6165449023246765
Use acpi_devices handle instead of drivers  ;-;un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);Similar;0.7101853489875793
Use acpi_devices handle instead of drivers  ;-;"Create a separate ""historical"" git archive";about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated;Similar;0.6398065090179443
un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);restore /proc/acpi/button/ (ala 2.6.12)  ;[ACPI];Similar;0.5924184322357178
un-export ACPI_ERROR() -- use printk(KERN_ERR...);use printk(KERN_ERR...);"Create a separate ""historical"" git archive";about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated;Similar;0.6106200218200684
