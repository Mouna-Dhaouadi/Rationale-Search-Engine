Decision1;Rationale1;Decision2;Rationale2;Relationship;Alpha
Convert <file_name> to Kotlin ( <pr_link> );Idiomatic Kotlin;<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;Similar;0.7069700956344604
Convert <file_name> to Kotlin ( <pr_link> );Idiomatic Kotlin;fix small types in the changelog;small types;Similar;0.6002176403999329
Convert <file_name> to Kotlin ( <pr_link> );Idiomatic Kotlin;Update README.md  ;<iden> moved to Github;Similar;0.6759796738624573
Convert <file_name> to Kotlin ( <pr_link> );Idiomatic Kotlin;Support querying & setting transport lists on connections  ;The list is specified via a magic request property <iden> and can be queried via the request property <iden> ;Similar;0.6884249448776245
Convert <file_name> to Kotlin ( <pr_link> );Idiomatic Kotlin;Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;Similar;0.648935854434967
Convert <file_name> to Kotlin ( <pr_link> );Idiomatic Kotlin;snapshot() method removing entries that are being cached  ;because cleanFiles dont exist yet;Similar;0.5392705202102661
Convert <file_name> to Kotlin ( <pr_link> );Idiomatic Kotlin;Fix mockwebserver jar download 404;404;Similar;0.6722398996353149
Convert <file_name> to Kotlin ( <pr_link> );Idiomatic Kotlin;update proguard rules on README.md ( <pr_link> );-;Similar;0.6626266241073608
Convert <file_name> to Kotlin ( <pr_link> );Idiomatic Kotlin;Remove obsolete <iden>;obsolete;Similar;0.5242477655410767
Convert <file_name> to Kotlin ( <pr_link> );Idiomatic Kotlin;Update factories to be idiomatic;be idiomatic;Similar;0.544564962387085
Convert <file_name> to Kotlin ( <pr_link> );Idiomatic Kotlin;Beef up <file_name>s toString;Previously it unconditionally showed tags even if empty and would not show headers;Similar;0.7496085166931152
Convert <file_name> to Kotlin ( <pr_link> );Idiomatic Kotlin;Make error-prone validate missing override annotations;error-prone, missing override annotations;Similar;0.5702724456787109
Convert <file_name> to Kotlin ( <pr_link> );Idiomatic Kotlin;fix README.md typo;README.md typo;Similar;0.7137920260429382
Convert <file_name> to Kotlin ( <pr_link> );Idiomatic Kotlin;Fix single failing graal test ( <pr_link> );single failing;Similar;0.5740958452224731
Convert <file_name> to Kotlin ( <pr_link> );Idiomatic Kotlin;Centralise logging behind JUL (<pr_link>) <enter> Use JUL, but wire up to the <method_name> <enter> Use `adb shell setprop log.tag.okhttp.Http2 <iden>` to enable logging for known levels;to enable logging for known levels;Similar;0.7068607807159424
Convert <file_name> to Kotlin ( <pr_link> );Idiomatic Kotlin;init speedup  ;file_name, pr_link;Similar;0.5805140733718872
Convert <file_name> to Kotlin ( <pr_link> );Idiomatic Kotlin;API for handling an unexpected SSE response;unexpected;Similar;0.566159188747406
Convert <file_name> to Kotlin ( <pr_link> );Idiomatic Kotlin;Wrap <iden> addresses with [] and return / path URIs for proxy CONNECT;Fix MockWebserver for <iden> addresses;Similar;0.7398074269294739
Convert <file_name> to Kotlin ( <pr_link> );Idiomatic Kotlin;Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;Similar;0.678551435470581
Convert <file_name> to Kotlin ( <pr_link> );Idiomatic Kotlin;Use IOException instead of <iden>;more specific in <file_name> API;Similar;0.6565757393836975
Convert <file_name> to Kotlin ( <pr_link> );Idiomatic Kotlin;Make  <file_name>  more capable.;more capable;Similar;0.7579939365386963
Convert <file_name> to Kotlin ( <pr_link> );Idiomatic Kotlin;fix <file_name> for Java 9;Java 9;Similar;0.6778817772865295
Convert <file_name> to Kotlin ( <pr_link> );Idiomatic Kotlin;document support for SNI;support for SNI;Similar;0.6445270776748657
Convert <file_name> to Kotlin ( <pr_link> );Idiomatic Kotlin;Limit recovery attempts for REFUSED_STREAM errors;We limit per-connection retries but not per-call retries, so this was creating large numbers of connections each of which called the server and accepted yet another REFUSED_STREAM.;Similar;0.5273401141166687
Convert <file_name> to Kotlin ( <pr_link> );Idiomatic Kotlin;Add HTTP/2 and <iden><version> columns to our security providers doc ;to enhance our security documentation;Similar;0.7014066576957703
Convert <file_name> to Kotlin ( <pr_link> );Idiomatic Kotlin;Use  <file_name> s built-in <iden> style  <enter>  ;The boilerplate to set this up is unfortunate;Similar;0.8429775238037109
Convert <file_name> to Kotlin ( <pr_link> );Idiomatic Kotlin;Use <iden> in <file_name>  ;The utility here is negligible. Were sharing threads between HTTP, HTTP/2 and web sockets now.;Similar;0.8630412220954895
Convert <file_name> to Kotlin ( <pr_link> );Idiomatic Kotlin;Adopt idiomatic <iden> in <file_name>;idiomatic;Similar;0.8765808939933777
Convert <file_name> to Kotlin ( <pr_link> );Idiomatic Kotlin;Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they cant be open. I think the motivation to make these non-final was pretty weak, and I dont mind breaking <iden> compatibility here.;Similar;0.7503662109375
Convert <file_name> to Kotlin ( <pr_link> );Idiomatic Kotlin;Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;Similar;0.7101987600326538
Convert <file_name> to Kotlin ( <pr_link> );Idiomatic Kotlin;Include prerequisites in the releasing guide.;to provide necessary information for users;Similar;0.6103389859199524
Convert <file_name> to Kotlin ( <pr_link> );Idiomatic Kotlin;Convert <file_name> to Kotlin;"to Kotlin

Decision: Rename <file_name> to .kt";Similar;0.9773801565170288
Convert <file_name> to Kotlin ( <pr_link> );Idiomatic Kotlin;Introduce <method_name> ;This is the payoff that preceding changes have been working towards.;Similar;0.8258926272392273
Convert <file_name> to Kotlin ( <pr_link> );Idiomatic Kotlin;Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.;Similar;0.7750935554504395
Convert <file_name> to Kotlin ( <pr_link> );Idiomatic Kotlin;Fix some maven problems that are blocking the <version> release;blocking the <version> release;Similar;0.5033751726150513
Convert <file_name> to Kotlin ( <pr_link> );Idiomatic Kotlin;Rename <method_name> to <iden()>;I prefer signed;Similar;0.8651348948478699
Convert <file_name> to Kotlin ( <pr_link> );Idiomatic Kotlin;Fixup <file_name> so that its worthy of production use.;This changes the default from the insecure 1024-bit <iden> to a secure 256-bit <iden> key. It adds a new option to use <iden> keys for interoperating with older clients.;Similar;0.676142692565918
Convert <file_name> to Kotlin ( <pr_link> );Idiomatic Kotlin;Support client authentication in <file_name>;client authentication;Similar;0.7125684022903442
Convert <file_name> to Kotlin ( <pr_link> );Idiomatic Kotlin;Remove <iden>-mode <iden> cipher suites;This removes the following cipher suites as supported-by-default;Similar;0.6460736989974976
Convert <file_name> to Kotlin ( <pr_link> );Idiomatic Kotlin;Fix Javadoc builds with the jsr305 dependency  ;Because multiple modules share a package we need to share the dependency on everything in package-info.java;Similar;0.6673475503921509
Convert <file_name> to Kotlin ( <pr_link> );Idiomatic Kotlin;Make the  <file_name>  a little better.  <enter> <iden> threads by their URLs. Dont follow all fragments of the same <iden>;"For better organization; to prevent following all fragments of the same <iden>";Similar;0.6054688692092896
Convert <file_name> to Kotlin ( <pr_link> );Idiomatic Kotlin;Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;Similar;0.7514493465423584
Convert <file_name> to Kotlin ( <pr_link> );Idiomatic Kotlin;Update readme and changelog for <version>;<version>;Similar;0.7761104106903076
Convert <file_name> to Kotlin ( <pr_link> );Idiomatic Kotlin;New <file_name> class to normalize certificate chains  ;The goal of this is to get the root <iden> certificate into the certificate chain, so that it can be considered by the certificate pinner;Similar;0.719056248664856
Convert <file_name> to Kotlin ( <pr_link> );Idiomatic Kotlin;Fix some get prefixes on <file_name> and <method_name>;"-
None";Similar;0.8020975589752197
Convert <file_name> to Kotlin ( <pr_link> );Idiomatic Kotlin;Write some new connection pool tests;These use the <iden> APIs. Theyre high-level so they wont break with the implementation rewrite.;Similar;0.5101040601730347
Convert <file_name> to Kotlin ( <pr_link> );Idiomatic Kotlin;Add <method_name>;Might be useful to expose this bookkeeping to app developers;Similar;0.8352831602096558
Convert <file_name> to Kotlin ( <pr_link> );Idiomatic Kotlin;Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Similar;0.7989626526832581
Convert <file_name> to Kotlin ( <pr_link> );Idiomatic Kotlin;Expose internal APIs for pluggable file systems, Also migrate all of our tests to use the <method_name>  ;We arent yet ready to make <iden> a public type, but I dont mind making it _almost_ available via an internal API for those brave enough to try that, Its simpler.;Similar;0.6418133974075317
Convert <file_name> to Kotlin ( <pr_link> );Idiomatic Kotlin;Change  <file_name>  to not implement java.net.ResponseCache;This marks some methods as  @deprecated and internal-only. Unfortunately we dont have a great mechanism to hide them from the documented <iden>.;Similar;0.5469453930854797
Convert <file_name> to Kotlin ( <pr_link> );Idiomatic Kotlin;Fix <iden> post retransmit in the new API  ;We dont buffer response bodies in the new API. But we should retransmit POST bodies when a request fails.;Similar;0.6866711974143982
Convert <file_name> to Kotlin ( <pr_link> );Idiomatic Kotlin;Add a test for corner-case behavior;Im looking to make HttpURLConnectionImpl delegate to Job, and that means writing tests for all the weird things it does above HttpEngine.;Similar;0.6326954364776611
Convert <file_name> to Kotlin ( <pr_link> );Idiomatic Kotlin;Add some pings to force happens-before in <iden> tests;Previously we were relying on accidents to get our tests to pass;Similar;0.5812705159187317
Convert <file_name> to Kotlin ( <pr_link> );Idiomatic Kotlin;Track <file_name> ownership  ;<file_name> ownership is somewhat racy: when an HttpURLConnection reads the last byte of a connection, its ownership is released and given to the <method_name>;Similar;0.7031247019767761
Convert <file_name> to Kotlin ( <pr_link> );Idiomatic Kotlin;Move  <file_name>  pooling logic  ;"previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams; move  <file_name>  reuse to  <file_name>, with policy informed by  <method_name>  specifying what to do when the  <file_name>  becomes idle: pool, close or hold, so the  <file_name>  does what its told.";Similar;0.7780371308326721
Convert <file_name> to Kotlin ( <pr_link> );Idiomatic Kotlin;Implement moving bytes between OkBuffers  ;This is more complicated than Id anticipated;Similar;0.7186380624771118
Convert <file_name> to Kotlin ( <pr_link> );Idiomatic Kotlin;Remove <iden> 2 warnings;Small docs fixes;Similar;0.5798949599266052
Convert <file_name> to Kotlin ( <pr_link> );Idiomatic Kotlin;Fix checkstyle issues in new <iden> code;checkstyle issues;Similar;0.6163650751113892
Convert <file_name> to Kotlin ( <pr_link> );Idiomatic Kotlin;Kill <file_name> in the process  ;Teach <file_name> <iden>;Similar;0.5084146857261658
Convert <file_name> to Kotlin ( <pr_link> );Idiomatic Kotlin;Introduce a <file_name> interface between engine and connection.;This breaks the direct dependency from <file_name> to <method_name>;Similar;0.850605845451355
Convert <file_name> to Kotlin ( <pr_link> );Idiomatic Kotlin;Update to the latest <method_name>;Includes everything thru 8842981cbcfe20eb4721c0a2c867fa9a18233062;Similar;0.6988851428031921
Convert <file_name> to Kotlin ( <pr_link> );Idiomatic Kotlin;Be more careful around IOExceptions;my goal is to make it easier to differentiate between protocol-level problems (bogus frames) from transport-level problems (closed sockets and EOF streams);Similar;0.5176737308502197
Convert <file_name> to Kotlin ( <pr_link> );Idiomatic Kotlin;Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;Similar;0.6519570350646973
Convert <file_name> to Kotlin ( <pr_link> );Idiomatic Kotlin;Move out of the <file_name> package;To promote the code into AOSP, well keep this package as-is and do the jarjar in <iden> instead;Similar;0.7009302377700806
Convert <file_name> to Kotlin ( <pr_link> );Idiomatic Kotlin;Make the `<method_name>` return full working connections;Previously the returned connections required the caller to do extra work: setting up tunnels and performing an `<iden>` handshake. With this change, we make a complete working connection in `<method_name>`. This will make it easier to fix fallback when a single domain has multiple `<iden>` addresses that are not reachable. Also, this will make it easier to do SPDY through `<iden>` proxies.;Similar;0.6964086890220642
Convert <file_name> to Kotlin ( <pr_link> );Idiomatic Kotlin;Add error-prone compiler and fix its found issues;error-prone, its found issues;Similar;0.5432708859443665
Convert <file_name> to Kotlin ( <pr_link> );Idiomatic Kotlin;Remove old <iden> protocol method;old;Similar;0.6443891525268555
Convert <file_name> to Kotlin ( <pr_link> );Idiomatic Kotlin;Expose <iden> directly on <method_name>  ;direct;Similar;0.8072469830513
Convert <file_name> to Kotlin ( <pr_link> );Idiomatic Kotlin;Use HTML entity for ampersand;to represent the ampersand symbol in HTML;Similar;0.7744865417480469
Convert <file_name> to Kotlin ( <pr_link> );Idiomatic Kotlin;Add convenience overload for <iden>-backed <method_name>;convenience;Similar;0.7367374897003174
Convert <file_name> to Kotlin ( <pr_link> );Idiomatic Kotlin;Use consistent camel casing of <iden>;consistent camel casing;Similar;0.5348286032676697
Convert <file_name> to Kotlin ( <pr_link> );Idiomatic Kotlin;Update website to the latest design  ;latest design;Similar;0.5209444165229797
Convert <file_name> to Kotlin ( <pr_link> );Idiomatic Kotlin;Transfer to/from <iden> directly from <iden>  ;<pr_link>;Similar;0.7643096446990967
Convert <file_name> to Kotlin ( <pr_link> );Idiomatic Kotlin;add @override for subclass override method;subclass override method;Similar;0.7249459028244019
Convert <file_name> to Kotlin ( <pr_link> );Idiomatic Kotlin;Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Similar;0.6693055033683777
Convert <file_name> to Kotlin ( <pr_link> );Idiomatic Kotlin;Partially revert connection timeout behavior  ;The modification of the timeout behavior during connection caused problems;Similar;0.5926688313484192
Convert <file_name> to Kotlin ( <pr_link> );Idiomatic Kotlin;The changes to <iden>s  <file_name> have been ported  ;Upstream commit of <iden> / <iden> fix, This does not include the introduction of PlatformTest, which will be difficult to write so it works everywhere;Similar;0.7835282683372498
Convert <file_name> to Kotlin ( <pr_link> );Idiomatic Kotlin;Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Similar;0.832575261592865
Convert <file_name> to Kotlin ( <pr_link> );Idiomatic Kotlin;Return <file_name> to previous (e.g. KitKat) behavior;this change required to handle this <iden> scenario;Similar;0.8102736473083496
Convert <file_name> to Kotlin ( <pr_link> );Idiomatic Kotlin;Document <file_name> throwing modes;To include the <pr_link> information;Similar;0.6996209025382996
Convert <file_name> to Kotlin ( <pr_link> );Idiomatic Kotlin;Convert <file_name> to Kotlin;<pr_link>, <iden>, <file_name>;Similar;0.9773801565170288
Convert <file_name> to Kotlin ( <pr_link> );Idiomatic Kotlin;Convert <file_name>, <file_name> to Kotlin  ;"to Kotlin

Decision: Rename <file_name> <version> to .kt (and others)  ";Similar;0.979337215423584
Convert <file_name> to Kotlin ( <pr_link> );Idiomatic Kotlin;Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Similar;0.7124717831611633
Convert <file_name> to Kotlin ( <pr_link> );Idiomatic Kotlin;Just pass the <iden> and <iden> objects in directly;Dont summarize the request and response;Similar;0.6288612484931946
Convert <file_name> to Kotlin ( <pr_link> );Idiomatic Kotlin;Fix a race in <method_name> ( <pr_link> );We were assuming on a client failure the server wouldnt have any further events. But it will get a failure if we give it a moment. This was causing some test flakiness.;Similar;0.6895110011100769
Convert <file_name> to Kotlin ( <pr_link> );Idiomatic Kotlin;Improve some Markdown;improve;Similar;0.5282543301582336
Convert <file_name> to Kotlin ( <pr_link> );Idiomatic Kotlin;Refactor <file_name> by using <iden>;We can use <iden> instead of overriding <iden> abstract class;Similar;0.877721905708313
Convert <file_name> to Kotlin ( <pr_link> );Idiomatic Kotlin;Enable GitHub Security Scanning;To configure GitHub workflow for code security scanning;Similar;0.6072084903717041
Convert <file_name> to Kotlin ( <pr_link> );Idiomatic Kotlin;load through bootstrap;-;Similar;0.6419225931167603
Convert <file_name> to Kotlin ( <pr_link> );Idiomatic Kotlin;Fix bug where request body isnt sent when it should  ;request body isnt sent when it should;Similar;0.5530400276184082
Convert <file_name> to Kotlin ( <pr_link> );Idiomatic Kotlin;Add support for following <iden> 307 temporary redirects  ;Fixes Android bug 41739;Similar;0.6937341690063477
Convert <file_name> to Kotlin ( <pr_link> );Idiomatic Kotlin;Add wildcard hostnames support in <file_name>;support;Similar;0.7679338455200195
Convert <file_name> to Kotlin ( <pr_link> );Idiomatic Kotlin;Fix correctness of WebSocketReader reserved flags test;reserved flags;Similar;0.5968374609947205
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;fix small types in the changelog;small types;Similar;0.6009291410446167
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;Update README.md  ;<iden> moved to Github;Similar;0.644060492515564
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;Support querying & setting transport lists on connections  ;The list is specified via a magic request property <iden> and can be queried via the request property <iden> ;Similar;0.6138265132904053
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;Similar;0.6921255588531494
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;snapshot() method removing entries that are being cached  ;because cleanFiles dont exist yet;Similar;0.6447625756263733
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;Fix mockwebserver jar download 404;404;Similar;0.5505669116973877
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;update proguard rules on README.md ( <pr_link> );-;Similar;0.5774115324020386
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;Remove obsolete <iden>;obsolete;Similar;0.5519326329231262
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;Update factories to be idiomatic;be idiomatic;Similar;0.5541186332702637
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;Beef up <file_name>s toString;Previously it unconditionally showed tags even if empty and would not show headers;Similar;0.6120780110359192
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;Make error-prone validate missing override annotations;error-prone, missing override annotations;Similar;0.6732264757156372
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;fix README.md typo;README.md typo;Similar;0.6729283332824707
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;Fix single failing graal test ( <pr_link> );single failing;Similar;0.6751222610473633
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;Centralise logging behind JUL (<pr_link>) <enter> Use JUL, but wire up to the <method_name> <enter> Use `adb shell setprop log.tag.okhttp.Http2 <iden>` to enable logging for known levels;to enable logging for known levels;Similar;0.6425511837005615
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;API for handling an unexpected SSE response;unexpected;Similar;0.6094311475753784
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;Wrap <iden> addresses with [] and return / path URIs for proxy CONNECT;Fix MockWebserver for <iden> addresses;Similar;0.6680051684379578
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;Similar;0.7149186134338379
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;Update  <file_name>  to temporarily ignore javadoc errors and compile tests but not run ( <pr_link> );temporarily ignore javadoc errors and compile tests;Similar;0.5497863292694092
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;Use IOException instead of <iden>;more specific in <file_name> API;Similar;0.6013869047164917
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;Make  <file_name>  more capable.;more capable;Similar;0.739192008972168
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;fix <file_name> for Java 9;Java 9;Similar;0.5060705542564392
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;document support for SNI;support for SNI;Similar;0.6020529866218567
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;Limit recovery attempts for REFUSED_STREAM errors;We limit per-connection retries but not per-call retries, so this was creating large numbers of connections each of which called the server and accepted yet another REFUSED_STREAM.;Similar;0.6200001835823059
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;Add HTTP/2 and <iden><version> columns to our security providers doc ;to enhance our security documentation;Similar;0.6050425171852112
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;Use  <file_name> s built-in <iden> style  <enter>  ;The boilerplate to set this up is unfortunate;Similar;0.696038007736206
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;Use our test rule instead of the Maven Surefire listener  ;to Close the issue indicated by the link;Similar;0.5316427946090698
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;Use <iden> in <file_name>  ;The utility here is negligible. Were sharing threads between HTTP, HTTP/2 and web sockets now.;Similar;0.7115315198898315
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;Adopt idiomatic <iden> in <file_name>;idiomatic;Similar;0.7729620933532715
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they cant be open. I think the motivation to make these non-final was pretty weak, and I dont mind breaking <iden> compatibility here.;Similar;0.7779158353805542
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;Similar;0.6805359125137329
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;Include prerequisites in the releasing guide.;to provide necessary information for users;Similar;0.6320143938064575
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;Convert <file_name> to Kotlin;"to Kotlin

Decision: Rename <file_name> to .kt";Similar;0.7012897729873657
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;Introduce <method_name> ;This is the payoff that preceding changes have been working towards.;Similar;0.7026916742324829
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.;Similar;0.7120752930641174
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;Fix some maven problems that are blocking the <version> release;blocking the <version> release;Similar;0.5860286355018616
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;Rename <method_name> to <iden()>;I prefer signed;Similar;0.6813713908195496
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;Fixup <file_name> so that its worthy of production use.;This changes the default from the insecure 1024-bit <iden> to a secure 256-bit <iden> key. It adds a new option to use <iden> keys for interoperating with older clients.;Similar;0.7119402289390564
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;Support client authentication in <file_name>;client authentication;Similar;0.690132737159729
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;Remove <iden>-mode <iden> cipher suites;This removes the following cipher suites as supported-by-default;Similar;0.6244750022888184
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;Fix Javadoc builds with the jsr305 dependency  ;Because multiple modules share a package we need to share the dependency on everything in package-info.java;Similar;0.5032203793525696
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;Make the  <file_name>  a little better.  <enter> <iden> threads by their URLs. Dont follow all fragments of the same <iden>;"For better organization; to prevent following all fragments of the same <iden>";Similar;0.7015748620033264
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;Similar;0.758924663066864
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;Fix tests to share a common <iden>. Also fix the memory limit, which may prevent Travis from failing our tests.;share a common <iden>, memory limit, prevent Travis from failing our tests;Similar;0.530409038066864
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;Collapse interceptors into a single chain;Instead of having a chain of application interceptors and a separate chain of network interceptors, this makes a single heterogeneous chain. It makes the <iden> core and network caller into interceptors.;Similar;0.5416269302368164
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;Update readme and changelog for <version>;<version>;Similar;0.6963202357292175
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;New <file_name> class to normalize certificate chains  ;The goal of this is to get the root <iden> certificate into the certificate chain, so that it can be considered by the certificate pinner;Similar;0.6552546620368958
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;Fix some get prefixes on <file_name> and <method_name>;"-
None";Similar;0.737459659576416
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;Add <method_name>;Might be useful to expose this bookkeeping to app developers;Similar;0.6897652745246887
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Similar;0.7555253505706787
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;Drop our one remaining <iden> cipher suite;Tracking <iden> and Firefox, which have also dropped this cipher suite;Similar;0.6260919570922852
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;Expose internal APIs for pluggable file systems, Also migrate all of our tests to use the <method_name>  ;We arent yet ready to make <iden> a public type, but I dont mind making it _almost_ available via an internal API for those brave enough to try that, Its simpler.;Similar;0.6027190685272217
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;The implementation is built around one oversized method that runs top to bottom;I found this was easier to follow than the switch statement recommended by the <iden> standard;Similar;0.5824503898620605
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;Fix <iden> post retransmit in the new API  ;We dont buffer response bodies in the new API. But we should retransmit POST bodies when a request fails.;Similar;0.6193705797195435
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;Add a test for corner-case behavior;Im looking to make HttpURLConnectionImpl delegate to Job, and that means writing tests for all the weird things it does above HttpEngine.;Similar;0.5885006189346313
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;Add some pings to force happens-before in <iden> tests;Previously we were relying on accidents to get our tests to pass;Similar;0.6114510893821716
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;Track <file_name> ownership  ;<file_name> ownership is somewhat racy: when an HttpURLConnection reads the last byte of a connection, its ownership is released and given to the <method_name>;Similar;0.6775283813476562
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;Move  <file_name>  pooling logic  ;"previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams; move  <file_name>  reuse to  <file_name>, with policy informed by  <method_name>  specifying what to do when the  <file_name>  becomes idle: pool, close or hold, so the  <file_name>  does what its told.";Similar;0.6838565468788147
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;Implement moving bytes between OkBuffers  ;This is more complicated than Id anticipated;Similar;0.6457259058952332
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;Dont attempt <iden> modes we know will fail.;we know will fail;Similar;0.583298921585083
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;Remove <iden> 2 warnings;Small docs fixes;Similar;0.5668133497238159
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;"Define async APIs and switch <file_name> to use <iden> directly. I think this is the best route going forward; and eventually we could invert this relationship to have <iden> depending on <file_name> directly rather than vice versa.";Using <iden> directly introduces some duplicated code with <iden>. It also breaks the <file_name> cache.;Similar;0.6020200252532959
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;Fix checkstyle issues in new <iden> code;checkstyle issues;Similar;0.5918828248977661
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;Kill <file_name> in the process  ;Teach <file_name> <iden>;Similar;0.5563288331031799
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;Introduce a <file_name> interface between engine and connection.;This breaks the direct dependency from <file_name> to <method_name>;Similar;0.7198153138160706
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;Make  <file_name> less flaky;I was seeing flaky results in the debugger because pooled connections were being evicted as the test ran;Similar;0.5869501233100891
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;Update to the latest <method_name>;Includes everything thru 8842981cbcfe20eb4721c0a2c867fa9a18233062;Similar;0.6534430384635925
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;Be more careful around IOExceptions;my goal is to make it easier to differentiate between protocol-level problems (bogus frames) from transport-level problems (closed sockets and EOF streams);Similar;0.5930057764053345
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;Similar;0.6453605890274048
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;Move out of the <file_name> package;To promote the code into AOSP, well keep this package as-is and do the jarjar in <iden> instead;Similar;0.6886531114578247
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;Make the `<method_name>` return full working connections;Previously the returned connections required the caller to do extra work: setting up tunnels and performing an `<iden>` handshake. With this change, we make a complete working connection in `<method_name>`. This will make it easier to fix fallback when a single domain has multiple `<iden>` addresses that are not reachable. Also, this will make it easier to do SPDY through `<iden>` proxies.;Similar;0.7083629369735718
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;Add error-prone compiler and fix its found issues;error-prone, its found issues;Similar;0.5779027938842773
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;Remove old <iden> protocol method;old;Similar;0.6469159722328186
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;Expose <iden> directly on <method_name>  ;direct;Similar;0.7018470168113708
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;Use HTML entity for ampersand;to represent the ampersand symbol in HTML;Similar;0.6519884467124939
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;Add convenience overload for <iden>-backed <method_name>;convenience;Similar;0.7258246541023254
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;Drop unused dependencies;unused;Similar;0.555519163608551
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;Update website to the latest design  ;latest design;Similar;0.535347044467926
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;Transfer to/from <iden> directly from <iden>  ;<pr_link>;Similar;0.6945698261260986
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;add @override for subclass override method;subclass override method;Similar;0.617172122001648
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Similar;0.627376139163971
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;Partially revert connection timeout behavior  ;The modification of the timeout behavior during connection caused problems;Similar;0.6554666757583618
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;This change logs the exception but prevent it from propagating out of the top of the call stack.;This decreases overall flakiness.;Similar;0.5497110486030579
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;The changes to <iden>s  <file_name> have been ported  ;Upstream commit of <iden> / <iden> fix, This does not include the introduction of PlatformTest, which will be difficult to write so it works everywhere;Similar;0.7146607637405396
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Similar;0.7243784666061401
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;Return <file_name> to previous (e.g. KitKat) behavior;this change required to handle this <iden> scenario;Similar;0.727097749710083
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;Document <file_name> throwing modes;To include the <pr_link> information;Similar;0.6142275333404541
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;Convert <file_name> to Kotlin;<pr_link>, <iden>, <file_name>;Similar;0.7012897729873657
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;Convert <file_name>, <file_name> to Kotlin  ;"to Kotlin

Decision: Rename <file_name> <version> to .kt (and others)  ";Similar;0.7081501483917236
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Similar;0.6878789663314819
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;Just pass the <iden> and <iden> objects in directly;Dont summarize the request and response;Similar;0.7422831058502197
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;Fix a race in <method_name> ( <pr_link> );We were assuming on a client failure the server wouldnt have any further events. But it will get a failure if we give it a moment. This was causing some test flakiness.;Similar;0.5780907273292542
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;Improve some Markdown;improve;Similar;0.608352541923523
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;fix <issue_link> : PROPFIND request should not redirect to GET request;PROPFIND request should not redirect to GET request;Similar;0.5074697732925415
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;Refactor <file_name> by using <iden>;We can use <iden> instead of overriding <iden> abstract class;Similar;0.7259348034858704
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;Remove unnecessary use of grouping parentheses  ;Lets remove warnings found by errorprone.;Similar;0.5197310447692871
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;Enable GitHub Security Scanning;To configure GitHub workflow for code security scanning;Similar;0.615624725818634
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;load through bootstrap;-;Similar;0.618262529373169
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;Fix bug where request body isnt sent when it should  ;request body isnt sent when it should;Similar;0.6539306044578552
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;Add support for following <iden> 307 temporary redirects  ;Fixes Android bug 41739;Similar;0.6295821070671082
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;Add wildcard hostnames support in <file_name>;support;Similar;0.6363154649734497
<file_name> should be treated as immutable once shared;given that requirement, its safe for many threads to call the open() method concurrently to open their own connections;Fix correctness of WebSocketReader reserved flags test;reserved flags;Similar;0.6411510705947876
fix small types in the changelog;small types;Update README.md  ;<iden> moved to Github;Similar;0.5071728229522705
fix small types in the changelog;small types;Support querying & setting transport lists on connections  ;The list is specified via a magic request property <iden> and can be queried via the request property <iden> ;Similar;0.6022828221321106
fix small types in the changelog;small types;Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;Similar;0.7008097171783447
fix small types in the changelog;small types;snapshot() method removing entries that are being cached  ;because cleanFiles dont exist yet;Similar;0.663375973701477
fix small types in the changelog;small types;Fix mockwebserver jar download 404;404;Similar;0.6113947033882141
fix small types in the changelog;small types;update proguard rules on README.md ( <pr_link> );-;Similar;0.5444936752319336
fix small types in the changelog;small types;Remove obsolete <iden>;obsolete;Similar;0.5122661590576172
fix small types in the changelog;small types;Make error-prone validate missing override annotations;error-prone, missing override annotations;Similar;0.6500856280326843
fix small types in the changelog;small types;fix README.md typo;README.md typo;Similar;0.6216957569122314
fix small types in the changelog;small types;Fix single failing graal test ( <pr_link> );single failing;Similar;0.6094740033149719
fix small types in the changelog;small types;Centralise logging behind JUL (<pr_link>) <enter> Use JUL, but wire up to the <method_name> <enter> Use `adb shell setprop log.tag.okhttp.Http2 <iden>` to enable logging for known levels;to enable logging for known levels;Similar;0.5522266030311584
fix small types in the changelog;small types;API for handling an unexpected SSE response;unexpected;Similar;0.5270804762840271
fix small types in the changelog;small types;Wrap <iden> addresses with [] and return / path URIs for proxy CONNECT;Fix MockWebserver for <iden> addresses;Similar;0.6008390784263611
fix small types in the changelog;small types;Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;Similar;0.6043267250061035
fix small types in the changelog;small types;Update  <file_name>  to temporarily ignore javadoc errors and compile tests but not run ( <pr_link> );temporarily ignore javadoc errors and compile tests;Similar;0.6302781701087952
fix small types in the changelog;small types;Use IOException instead of <iden>;more specific in <file_name> API;Similar;0.5115511417388916
fix small types in the changelog;small types;Make  <file_name>  more capable.;more capable;Similar;0.5577260255813599
fix small types in the changelog;small types;fix <file_name> for Java 9;Java 9;Similar;0.6071820855140686
fix small types in the changelog;small types;document support for SNI;support for SNI;Similar;0.5695328712463379
fix small types in the changelog;small types;Limit recovery attempts for REFUSED_STREAM errors;We limit per-connection retries but not per-call retries, so this was creating large numbers of connections each of which called the server and accepted yet another REFUSED_STREAM.;Similar;0.6241178512573242
fix small types in the changelog;small types;Add HTTP/2 and <iden><version> columns to our security providers doc ;to enhance our security documentation;Similar;0.5642894506454468
fix small types in the changelog;small types;Use  <file_name> s built-in <iden> style  <enter>  ;The boilerplate to set this up is unfortunate;Similar;0.5812950730323792
fix small types in the changelog;small types;Use <iden> in <file_name>  ;The utility here is negligible. Were sharing threads between HTTP, HTTP/2 and web sockets now.;Similar;0.5714480876922607
fix small types in the changelog;small types;Adopt idiomatic <iden> in <file_name>;idiomatic;Similar;0.5863962769508362
fix small types in the changelog;small types;Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they cant be open. I think the motivation to make these non-final was pretty weak, and I dont mind breaking <iden> compatibility here.;Similar;0.5565088987350464
fix small types in the changelog;small types;Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;Similar;0.7222633957862854
fix small types in the changelog;small types;Include prerequisites in the releasing guide.;to provide necessary information for users;Similar;0.5212249159812927
fix small types in the changelog;small types;Convert <file_name> to Kotlin;"to Kotlin

Decision: Rename <file_name> to .kt";Similar;0.6018128991127014
fix small types in the changelog;small types;Introduce <method_name> ;This is the payoff that preceding changes have been working towards.;Similar;0.5518203973770142
fix small types in the changelog;small types;Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.;Similar;0.5382266044616699
fix small types in the changelog;small types;Fix some maven problems that are blocking the <version> release;blocking the <version> release;Similar;0.7404905557632446
fix small types in the changelog;small types;Rename <method_name> to <iden()>;I prefer signed;Similar;0.5696550011634827
fix small types in the changelog;small types;Fixup <file_name> so that its worthy of production use.;This changes the default from the insecure 1024-bit <iden> to a secure 256-bit <iden> key. It adds a new option to use <iden> keys for interoperating with older clients.;Similar;0.5656087398529053
fix small types in the changelog;small types;Support client authentication in <file_name>;client authentication;Similar;0.5691536664962769
fix small types in the changelog;small types;Remove <iden>-mode <iden> cipher suites;This removes the following cipher suites as supported-by-default;Similar;0.5554668307304382
fix small types in the changelog;small types;Fix Javadoc builds with the jsr305 dependency  ;Because multiple modules share a package we need to share the dependency on everything in package-info.java;Similar;0.6653628945350647
fix small types in the changelog;small types;Make the  <file_name>  a little better.  <enter> <iden> threads by their URLs. Dont follow all fragments of the same <iden>;"For better organization; to prevent following all fragments of the same <iden>";Similar;0.5577069520950317
fix small types in the changelog;small types;Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;Similar;0.6252716779708862
fix small types in the changelog;small types;Fix tests to share a common <iden>. Also fix the memory limit, which may prevent Travis from failing our tests.;share a common <iden>, memory limit, prevent Travis from failing our tests;Similar;0.5642484426498413
fix small types in the changelog;small types;Update readme and changelog for <version>;<version>;Similar;0.725903332233429
fix small types in the changelog;small types;New <file_name> class to normalize certificate chains  ;The goal of this is to get the root <iden> certificate into the certificate chain, so that it can be considered by the certificate pinner;Similar;0.5623197555541992
fix small types in the changelog;small types;Fix some get prefixes on <file_name> and <method_name>;"-
None";Similar;0.7366140484809875
fix small types in the changelog;small types;Write some new connection pool tests;These use the <iden> APIs. Theyre high-level so they wont break with the implementation rewrite.;Similar;0.6085180044174194
fix small types in the changelog;small types;Add <method_name>;Might be useful to expose this bookkeeping to app developers;Similar;0.5468178987503052
fix small types in the changelog;small types;Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Similar;0.7386356592178345
fix small types in the changelog;small types;Change  <file_name>  to not implement java.net.ResponseCache;This marks some methods as  @deprecated and internal-only. Unfortunately we dont have a great mechanism to hide them from the documented <iden>.;Similar;0.5098208785057068
fix small types in the changelog;small types;Fix <iden> post retransmit in the new API  ;We dont buffer response bodies in the new API. But we should retransmit POST bodies when a request fails.;Similar;0.692471444606781
fix small types in the changelog;small types;Add a test for corner-case behavior;Im looking to make HttpURLConnectionImpl delegate to Job, and that means writing tests for all the weird things it does above HttpEngine.;Similar;0.6532481908798218
fix small types in the changelog;small types;Add some pings to force happens-before in <iden> tests;Previously we were relying on accidents to get our tests to pass;Similar;0.617297351360321
fix small types in the changelog;small types;Move  <file_name>  pooling logic  ;"previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams; move  <file_name>  reuse to  <file_name>, with policy informed by  <method_name>  specifying what to do when the  <file_name>  becomes idle: pool, close or hold, so the  <file_name>  does what its told.";Similar;0.5932581424713135
fix small types in the changelog;small types;Implement moving bytes between OkBuffers  ;This is more complicated than Id anticipated;Similar;0.6507135033607483
fix small types in the changelog;small types;Remove <iden> 2 warnings;Small docs fixes;Similar;0.5415195226669312
fix small types in the changelog;small types;Fix checkstyle issues in new <iden> code;checkstyle issues;Similar;0.7444813847541809
fix small types in the changelog;small types;Introduce a <file_name> interface between engine and connection.;This breaks the direct dependency from <file_name> to <method_name>;Similar;0.6076720356941223
fix small types in the changelog;small types;Make  <file_name> less flaky;I was seeing flaky results in the debugger because pooled connections were being evicted as the test ran;Similar;0.6191003918647766
fix small types in the changelog;small types;Update to the latest <method_name>;Includes everything thru 8842981cbcfe20eb4721c0a2c867fa9a18233062;Similar;0.5397859811782837
fix small types in the changelog;small types;Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;Similar;0.6083609461784363
fix small types in the changelog;small types;Move out of the <file_name> package;To promote the code into AOSP, well keep this package as-is and do the jarjar in <iden> instead;Similar;0.5852271318435669
fix small types in the changelog;small types;Fix <iden> which was being computed incorrectly;<enter> We were only returning true once we were already in a tunnel. This was bogus. In theory a <iden> tunnel sending extra data could be corrupted due to this bug.;Similar;0.5859547853469849
fix small types in the changelog;small types;Add error-prone compiler and fix its found issues;error-prone, its found issues;Similar;0.6717565059661865
fix small types in the changelog;small types;Remove old <iden> protocol method;old;Similar;0.5480486154556274
fix small types in the changelog;small types;Use HTML entity for ampersand;to represent the ampersand symbol in HTML;Similar;0.5880184769630432
fix small types in the changelog;small types;Add convenience overload for <iden>-backed <method_name>;convenience;Similar;0.6107864379882812
fix small types in the changelog;small types;Drop unused dependencies;unused;Similar;0.511411190032959
fix small types in the changelog;small types;Update website to the latest design  ;latest design;Similar;0.5727410316467285
fix small types in the changelog;small types;add @override for subclass override method;subclass override method;Similar;0.6123781800270081
fix small types in the changelog;small types;Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Similar;0.6912226676940918
fix small types in the changelog;small types;Partially revert connection timeout behavior  ;The modification of the timeout behavior during connection caused problems;Similar;0.5717250108718872
fix small types in the changelog;small types;The changes to <iden>s  <file_name> have been ported  ;Upstream commit of <iden> / <iden> fix, This does not include the introduction of PlatformTest, which will be difficult to write so it works everywhere;Similar;0.7032910585403442
fix small types in the changelog;small types;Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Similar;0.6278261542320251
fix small types in the changelog;small types;Return <file_name> to previous (e.g. KitKat) behavior;this change required to handle this <iden> scenario;Similar;0.5454303026199341
fix small types in the changelog;small types;Convert <file_name> to Kotlin;<pr_link>, <iden>, <file_name>;Similar;0.6018128991127014
fix small types in the changelog;small types;Convert <file_name>, <file_name> to Kotlin  ;"to Kotlin

Decision: Rename <file_name> <version> to .kt (and others)  ";Similar;0.5818227529525757
fix small types in the changelog;small types;Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Similar;0.7351072430610657
fix small types in the changelog;small types;Fail HTTP/2 connections if the pong is not received;This removes the abstraction from our http2 package;Similar;0.5349504351615906
fix small types in the changelog;small types;Fix a race in <method_name> ( <pr_link> );We were assuming on a client failure the server wouldnt have any further events. But it will get a failure if we give it a moment. This was causing some test flakiness.;Similar;0.6166709661483765
fix small types in the changelog;small types;Improve some Markdown;improve;Similar;0.5882949829101562
fix small types in the changelog;small types;Refactor <file_name> by using <iden>;We can use <iden> instead of overriding <iden> abstract class;Similar;0.6210906505584717
fix small types in the changelog;small types;load through bootstrap;-;Similar;0.5290330052375793
fix small types in the changelog;small types;Fix bug where request body isnt sent when it should  ;request body isnt sent when it should;Similar;0.7175498008728027
fix small types in the changelog;small types;Add support for following <iden> 307 temporary redirects  ;Fixes Android bug 41739;Similar;0.6455114483833313
fix small types in the changelog;small types;Fix correctness of WebSocketReader reserved flags test;reserved flags;Similar;0.7075717449188232
Update README.md  ;<iden> moved to Github;Support querying & setting transport lists on connections  ;The list is specified via a magic request property <iden> and can be queried via the request property <iden> ;Similar;0.5979980826377869
Update README.md  ;<iden> moved to Github;Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;Similar;0.6283126473426819
Update README.md  ;<iden> moved to Github;snapshot() method removing entries that are being cached  ;because cleanFiles dont exist yet;Similar;0.5523499250411987
Update README.md  ;<iden> moved to Github;Fix mockwebserver jar download 404;404;Similar;0.5439578294754028
Update README.md  ;<iden> moved to Github;update proguard rules on README.md ( <pr_link> );-;Similar;0.8192455172538757
Update README.md  ;<iden> moved to Github;Remove obsolete <iden>;obsolete;Similar;0.5211234092712402
Update README.md  ;<iden> moved to Github;Update factories to be idiomatic;be idiomatic;Similar;0.5350698232650757
Update README.md  ;<iden> moved to Github;Beef up <file_name>s toString;Previously it unconditionally showed tags even if empty and would not show headers;Similar;0.6146793365478516
Update README.md  ;<iden> moved to Github;Make error-prone validate missing override annotations;error-prone, missing override annotations;Similar;0.5758659839630127
Update README.md  ;<iden> moved to Github;fix README.md typo;README.md typo;Similar;0.8931903839111328
Update README.md  ;<iden> moved to Github;Fix single failing graal test ( <pr_link> );single failing;Similar;0.5632390975952148
Update README.md  ;<iden> moved to Github;Centralise logging behind JUL (<pr_link>) <enter> Use JUL, but wire up to the <method_name> <enter> Use `adb shell setprop log.tag.okhttp.Http2 <iden>` to enable logging for known levels;to enable logging for known levels;Similar;0.5710911154747009
Update README.md  ;<iden> moved to Github;API for handling an unexpected SSE response;unexpected;Similar;0.5446391105651855
Update README.md  ;<iden> moved to Github;Wrap <iden> addresses with [] and return / path URIs for proxy CONNECT;Fix MockWebserver for <iden> addresses;Similar;0.6174555420875549
Update README.md  ;<iden> moved to Github;Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;Similar;0.5800119638442993
Update README.md  ;<iden> moved to Github;Use IOException instead of <iden>;more specific in <file_name> API;Similar;0.6116611957550049
Update README.md  ;<iden> moved to Github;Make  <file_name>  more capable.;more capable;Similar;0.6318618655204773
Update README.md  ;<iden> moved to Github;document support for SNI;support for SNI;Similar;0.607669472694397
Update README.md  ;<iden> moved to Github;Limit recovery attempts for REFUSED_STREAM errors;We limit per-connection retries but not per-call retries, so this was creating large numbers of connections each of which called the server and accepted yet another REFUSED_STREAM.;Similar;0.5312424898147583
Update README.md  ;<iden> moved to Github;Add HTTP/2 and <iden><version> columns to our security providers doc ;to enhance our security documentation;Similar;0.6403010487556458
Update README.md  ;<iden> moved to Github;Use  <file_name> s built-in <iden> style  <enter>  ;The boilerplate to set this up is unfortunate;Similar;0.6584040522575378
Update README.md  ;<iden> moved to Github;Use <iden> in <file_name>  ;The utility here is negligible. Were sharing threads between HTTP, HTTP/2 and web sockets now.;Similar;0.682988703250885
Update README.md  ;<iden> moved to Github;Adopt idiomatic <iden> in <file_name>;idiomatic;Similar;0.7233619689941406
Update README.md  ;<iden> moved to Github;Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they cant be open. I think the motivation to make these non-final was pretty weak, and I dont mind breaking <iden> compatibility here.;Similar;0.6554815769195557
Update README.md  ;<iden> moved to Github;Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;Similar;0.643446683883667
Update README.md  ;<iden> moved to Github;Include prerequisites in the releasing guide.;to provide necessary information for users;Similar;0.5698544979095459
Update README.md  ;<iden> moved to Github;Convert <file_name> to Kotlin;"to Kotlin

Decision: Rename <file_name> to .kt";Similar;0.641945481300354
Update README.md  ;<iden> moved to Github;Introduce <method_name> ;This is the payoff that preceding changes have been working towards.;Similar;0.6827995181083679
Update README.md  ;<iden> moved to Github;Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.;Similar;0.6746496558189392
Update README.md  ;<iden> moved to Github;Rename <method_name> to <iden()>;I prefer signed;Similar;0.6905903816223145
Update README.md  ;<iden> moved to Github;Fixup <file_name> so that its worthy of production use.;This changes the default from the insecure 1024-bit <iden> to a secure 256-bit <iden> key. It adds a new option to use <iden> keys for interoperating with older clients.;Similar;0.5809911489486694
Update README.md  ;<iden> moved to Github;Support client authentication in <file_name>;client authentication;Similar;0.6327093839645386
Update README.md  ;<iden> moved to Github;Remove <iden>-mode <iden> cipher suites;This removes the following cipher suites as supported-by-default;Similar;0.6162121295928955
Update README.md  ;<iden> moved to Github;Make the  <file_name>  a little better.  <enter> <iden> threads by their URLs. Dont follow all fragments of the same <iden>;"For better organization; to prevent following all fragments of the same <iden>";Similar;0.5029211044311523
Update README.md  ;<iden> moved to Github;Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;Similar;0.6432430744171143
Update README.md  ;<iden> moved to Github;Update readme and changelog for <version>;<version>;Similar;0.773270845413208
Update README.md  ;<iden> moved to Github;New <file_name> class to normalize certificate chains  ;The goal of this is to get the root <iden> certificate into the certificate chain, so that it can be considered by the certificate pinner;Similar;0.592291533946991
Update README.md  ;<iden> moved to Github;Fix some get prefixes on <file_name> and <method_name>;"-
None";Similar;0.6001149415969849
Update README.md  ;<iden> moved to Github;Add <method_name>;Might be useful to expose this bookkeeping to app developers;Similar;0.6594435572624207
Update README.md  ;<iden> moved to Github;Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Similar;0.6849689483642578
Update README.md  ;<iden> moved to Github;Drop our one remaining <iden> cipher suite;Tracking <iden> and Firefox, which have also dropped this cipher suite;Similar;0.5532845258712769
Update README.md  ;<iden> moved to Github;Fix <iden> post retransmit in the new API  ;We dont buffer response bodies in the new API. But we should retransmit POST bodies when a request fails.;Similar;0.5672789812088013
Update README.md  ;<iden> moved to Github;Add a test for corner-case behavior;Im looking to make HttpURLConnectionImpl delegate to Job, and that means writing tests for all the weird things it does above HttpEngine.;Similar;0.5010311603546143
Update README.md  ;<iden> moved to Github;Add some pings to force happens-before in <iden> tests;Previously we were relying on accidents to get our tests to pass;Similar;0.5158901810646057
Update README.md  ;<iden> moved to Github;Track <file_name> ownership  ;<file_name> ownership is somewhat racy: when an HttpURLConnection reads the last byte of a connection, its ownership is released and given to the <method_name>;Similar;0.5916528701782227
Update README.md  ;<iden> moved to Github;Move  <file_name>  pooling logic  ;"previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams; move  <file_name>  reuse to  <file_name>, with policy informed by  <method_name>  specifying what to do when the  <file_name>  becomes idle: pool, close or hold, so the  <file_name>  does what its told.";Similar;0.6032422184944153
Update README.md  ;<iden> moved to Github;Implement moving bytes between OkBuffers  ;This is more complicated than Id anticipated;Similar;0.6324278712272644
Update README.md  ;<iden> moved to Github;Remove <iden> 2 warnings;Small docs fixes;Similar;0.5586429834365845
Update README.md  ;<iden> moved to Github;Fix checkstyle issues in new <iden> code;checkstyle issues;Similar;0.5155293941497803
Update README.md  ;<iden> moved to Github;Introduce a <file_name> interface between engine and connection.;This breaks the direct dependency from <file_name> to <method_name>;Similar;0.6573917269706726
Update README.md  ;<iden> moved to Github;Update to the latest <method_name>;Includes everything thru 8842981cbcfe20eb4721c0a2c867fa9a18233062;Similar;0.6197285652160645
Update README.md  ;<iden> moved to Github;Be more careful around IOExceptions;my goal is to make it easier to differentiate between protocol-level problems (bogus frames) from transport-level problems (closed sockets and EOF streams);Similar;0.5418033599853516
Update README.md  ;<iden> moved to Github;Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;Similar;0.6325492262840271
Update README.md  ;<iden> moved to Github;Move out of the <file_name> package;To promote the code into AOSP, well keep this package as-is and do the jarjar in <iden> instead;Similar;0.6031380295753479
Update README.md  ;<iden> moved to Github;Make the `<method_name>` return full working connections;Previously the returned connections required the caller to do extra work: setting up tunnels and performing an `<iden>` handshake. With this change, we make a complete working connection in `<method_name>`. This will make it easier to fix fallback when a single domain has multiple `<iden>` addresses that are not reachable. Also, this will make it easier to do SPDY through `<iden>` proxies.;Similar;0.5808958411216736
Update README.md  ;<iden> moved to Github;Remove old <iden> protocol method;old;Similar;0.6040416359901428
Update README.md  ;<iden> moved to Github;Expose <iden> directly on <method_name>  ;direct;Similar;0.6471798419952393
Update README.md  ;<iden> moved to Github;Use HTML entity for ampersand;to represent the ampersand symbol in HTML;Similar;0.6812523007392883
Update README.md  ;<iden> moved to Github;Add convenience overload for <iden>-backed <method_name>;convenience;Similar;0.6270982623100281
Update README.md  ;<iden> moved to Github;Use consistent camel casing of <iden>;consistent camel casing;Similar;0.5926434993743896
Update README.md  ;<iden> moved to Github;Drop unused dependencies;unused;Similar;0.5222758650779724
Update README.md  ;<iden> moved to Github;Transfer to/from <iden> directly from <iden>  ;<pr_link>;Similar;0.6677109003067017
Update README.md  ;<iden> moved to Github;add @override for subclass override method;subclass override method;Similar;0.5758965015411377
Update README.md  ;<iden> moved to Github;Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Similar;0.6607527732849121
Update README.md  ;<iden> moved to Github;Partially revert connection timeout behavior  ;The modification of the timeout behavior during connection caused problems;Similar;0.5681360363960266
Update README.md  ;<iden> moved to Github;The changes to <iden>s  <file_name> have been ported  ;Upstream commit of <iden> / <iden> fix, This does not include the introduction of PlatformTest, which will be difficult to write so it works everywhere;Similar;0.6150926351547241
Update README.md  ;<iden> moved to Github;Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Similar;0.6774486899375916
Update README.md  ;<iden> moved to Github;Return <file_name> to previous (e.g. KitKat) behavior;this change required to handle this <iden> scenario;Similar;0.6693187952041626
Update README.md  ;<iden> moved to Github;Document <file_name> throwing modes;To include the <pr_link> information;Similar;0.6248684525489807
Update README.md  ;<iden> moved to Github;Convert <file_name> to Kotlin;<pr_link>, <iden>, <file_name>;Similar;0.641945481300354
Update README.md  ;<iden> moved to Github;Convert <file_name>, <file_name> to Kotlin  ;"to Kotlin

Decision: Rename <file_name> <version> to .kt (and others)  ";Similar;0.6478486061096191
Update README.md  ;<iden> moved to Github;Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Similar;0.5998569130897522
Update README.md  ;<iden> moved to Github;Just pass the <iden> and <iden> objects in directly;Dont summarize the request and response;Similar;0.6106385588645935
Update README.md  ;<iden> moved to Github;Fix a race in <method_name> ( <pr_link> );We were assuming on a client failure the server wouldnt have any further events. But it will get a failure if we give it a moment. This was causing some test flakiness.;Similar;0.55976802110672
Update README.md  ;<iden> moved to Github;Improve some Markdown;improve;Similar;0.5294483304023743
Update README.md  ;<iden> moved to Github;Refactor <file_name> by using <iden>;We can use <iden> instead of overriding <iden> abstract class;Similar;0.7135155200958252
Update README.md  ;<iden> moved to Github;Enable GitHub Security Scanning;To configure GitHub workflow for code security scanning;Similar;0.5925357341766357
Update README.md  ;<iden> moved to Github;load through bootstrap;-;Similar;0.5789127945899963
Update README.md  ;<iden> moved to Github;Fix bug where request body isnt sent when it should  ;request body isnt sent when it should;Similar;0.5283995866775513
Update README.md  ;<iden> moved to Github;Add support for following <iden> 307 temporary redirects  ;Fixes Android bug 41739;Similar;0.5701399445533752
Update README.md  ;<iden> moved to Github;Add wildcard hostnames support in <file_name>;support;Similar;0.5835413932800293
Update README.md  ;<iden> moved to Github;Fix correctness of WebSocketReader reserved flags test;reserved flags;Similar;0.5407514572143555
Support querying & setting transport lists on connections  ;The list is specified via a magic request property <iden> and can be queried via the request property <iden> ;Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;Similar;0.5952104926109314
Support querying & setting transport lists on connections  ;The list is specified via a magic request property <iden> and can be queried via the request property <iden> ;Fix mockwebserver jar download 404;404;Similar;0.540302574634552
Support querying & setting transport lists on connections  ;The list is specified via a magic request property <iden> and can be queried via the request property <iden> ;update proguard rules on README.md ( <pr_link> );-;Similar;0.6081938743591309
Support querying & setting transport lists on connections  ;The list is specified via a magic request property <iden> and can be queried via the request property <iden> ;Update factories to be idiomatic;be idiomatic;Similar;0.5265173316001892
Support querying & setting transport lists on connections  ;The list is specified via a magic request property <iden> and can be queried via the request property <iden> ;Beef up <file_name>s toString;Previously it unconditionally showed tags even if empty and would not show headers;Similar;0.5758638381958008
Support querying & setting transport lists on connections  ;The list is specified via a magic request property <iden> and can be queried via the request property <iden> ;Make error-prone validate missing override annotations;error-prone, missing override annotations;Similar;0.5261787176132202
Support querying & setting transport lists on connections  ;The list is specified via a magic request property <iden> and can be queried via the request property <iden> ;fix README.md typo;README.md typo;Similar;0.6171718239784241
Support querying & setting transport lists on connections  ;The list is specified via a magic request property <iden> and can be queried via the request property <iden> ;Centralise logging behind JUL (<pr_link>) <enter> Use JUL, but wire up to the <method_name> <enter> Use `adb shell setprop log.tag.okhttp.Http2 <iden>` to enable logging for known levels;to enable logging for known levels;Similar;0.603922426700592
Support querying & setting transport lists on connections  ;The list is specified via a magic request property <iden> and can be queried via the request property <iden> ;init speedup  ;file_name, pr_link;Similar;0.5060296058654785
Support querying & setting transport lists on connections  ;The list is specified via a magic request property <iden> and can be queried via the request property <iden> ;API for handling an unexpected SSE response;unexpected;Similar;0.6364072561264038
Support querying & setting transport lists on connections  ;The list is specified via a magic request property <iden> and can be queried via the request property <iden> ;Wrap <iden> addresses with [] and return / path URIs for proxy CONNECT;Fix MockWebserver for <iden> addresses;Similar;0.7691808342933655
Support querying & setting transport lists on connections  ;The list is specified via a magic request property <iden> and can be queried via the request property <iden> ;Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;Similar;0.5307648777961731
Support querying & setting transport lists on connections  ;The list is specified via a magic request property <iden> and can be queried via the request property <iden> ;Use IOException instead of <iden>;more specific in <file_name> API;Similar;0.5203880667686462
Support querying & setting transport lists on connections  ;The list is specified via a magic request property <iden> and can be queried via the request property <iden> ;Make  <file_name>  more capable.;more capable;Similar;0.67649906873703
Support querying & setting transport lists on connections  ;The list is specified via a magic request property <iden> and can be queried via the request property <iden> ;fix <file_name> for Java 9;Java 9;Similar;0.5429550409317017
Support querying & setting transport lists on connections  ;The list is specified via a magic request property <iden> and can be queried via the request property <iden> ;document support for SNI;support for SNI;Similar;0.6817009449005127
Support querying & setting transport lists on connections  ;The list is specified via a magic request property <iden> and can be queried via the request property <iden> ;Limit recovery attempts for REFUSED_STREAM errors;We limit per-connection retries but not per-call retries, so this was creating large numbers of connections each of which called the server and accepted yet another REFUSED_STREAM.;Similar;0.5045255422592163
Support querying & setting transport lists on connections  ;The list is specified via a magic request property <iden> and can be queried via the request property <iden> ;Add HTTP/2 and <iden><version> columns to our security providers doc ;to enhance our security documentation;Similar;0.7058748006820679
Support querying & setting transport lists on connections  ;The list is specified via a magic request property <iden> and can be queried via the request property <iden> ;Use  <file_name> s built-in <iden> style  <enter>  ;The boilerplate to set this up is unfortunate;Similar;0.671380877494812
Support querying & setting transport lists on connections  ;The list is specified via a magic request property <iden> and can be queried via the request property <iden> ;Use <iden> in <file_name>  ;The utility here is negligible. Were sharing threads between HTTP, HTTP/2 and web sockets now.;Similar;0.6841700077056885
Support querying & setting transport lists on connections  ;The list is specified via a magic request property <iden> and can be queried via the request property <iden> ;Adopt idiomatic <iden> in <file_name>;idiomatic;Similar;0.674716591835022
Support querying & setting transport lists on connections  ;The list is specified via a magic request property <iden> and can be queried via the request property <iden> ;Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they cant be open. I think the motivation to make these non-final was pretty weak, and I dont mind breaking <iden> compatibility here.;Similar;0.577855110168457
Support querying & setting transport lists on connections  ;The list is specified via a magic request property <iden> and can be queried via the request property <iden> ;Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;Similar;0.6597731113433838
Support querying & setting transport lists on connections  ;The list is specified via a magic request property <iden> and can be queried via the request property <iden> ;Include prerequisites in the releasing guide.;to provide necessary information for users;Similar;0.618903398513794
Support querying & setting transport lists on connections  ;The list is specified via a magic request property <iden> and can be queried via the request property <iden> ;Convert <file_name> to Kotlin;"to Kotlin

Decision: Rename <file_name> to .kt";Similar;0.6514920592308044
Support querying & setting transport lists on connections  ;The list is specified via a magic request property <iden> and can be queried via the request property <iden> ;Introduce <method_name> ;This is the payoff that preceding changes have been working towards.;Similar;0.6401066780090332
Support querying & setting transport lists on connections  ;The list is specified via a magic request property <iden> and can be queried via the request property <iden> ;Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.;Similar;0.6691378355026245
Support querying & setting transport lists on connections  ;The list is specified via a magic request property <iden> and can be queried via the request property <iden> ;Fix some maven problems that are blocking the <version> release;blocking the <version> release;Similar;0.556639552116394
Support querying & setting transport lists on connections  ;The list is specified via a magic request property <iden> and can be queried via the request property <iden> ;Rename <method_name> to <iden()>;I prefer signed;Similar;0.5905820727348328
Support querying & setting transport lists on connections  ;The list is specified via a magic request property <iden> and can be queried via the request property <iden> ;Fixup <file_name> so that its worthy of production use.;This changes the default from the insecure 1024-bit <iden> to a secure 256-bit <iden> key. It adds a new option to use <iden> keys for interoperating with older clients.;Similar;0.6705527901649475
Support querying & setting transport lists on connections  ;The list is specified via a magic request property <iden> and can be queried via the request property <iden> ;Support client authentication in <file_name>;client authentication;Similar;0.7835463881492615
Support querying & setting transport lists on connections  ;The list is specified via a magic request property <iden> and can be queried via the request property <iden> ;Fix Javadoc builds with the jsr305 dependency  ;Because multiple modules share a package we need to share the dependency on everything in package-info.java;Similar;0.5653011202812195
Support querying & setting transport lists on connections  ;The list is specified via a magic request property <iden> and can be queried via the request property <iden> ;Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;Similar;0.6449829339981079
Support querying & setting transport lists on connections  ;The list is specified via a magic request property <iden> and can be queried via the request property <iden> ;Update readme and changelog for <version>;<version>;Similar;0.7202092409133911
Support querying & setting transport lists on connections  ;The list is specified via a magic request property <iden> and can be queried via the request property <iden> ;New <file_name> class to normalize certificate chains  ;The goal of this is to get the root <iden> certificate into the certificate chain, so that it can be considered by the certificate pinner;Similar;0.6461659073829651
Support querying & setting transport lists on connections  ;The list is specified via a magic request property <iden> and can be queried via the request property <iden> ;Fix some get prefixes on <file_name> and <method_name>;"-
None";Similar;0.7389677166938782
Support querying & setting transport lists on connections  ;The list is specified via a magic request property <iden> and can be queried via the request property <iden> ;Write some new connection pool tests;These use the <iden> APIs. Theyre high-level so they wont break with the implementation rewrite.;Similar;0.5425971150398254
Support querying & setting transport lists on connections  ;The list is specified via a magic request property <iden> and can be queried via the request property <iden> ;Add <method_name>;Might be useful to expose this bookkeeping to app developers;Similar;0.6478068828582764
Support querying & setting transport lists on connections  ;The list is specified via a magic request property <iden> and can be queried via the request property <iden> ;Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Similar;0.6716321110725403
Support querying & setting transport lists on connections  ;The list is specified via a magic request property <iden> and can be queried via the request property <iden> ;Expose internal APIs for pluggable file systems, Also migrate all of our tests to use the <method_name>  ;We arent yet ready to make <iden> a public type, but I dont mind making it _almost_ available via an internal API for those brave enough to try that, Its simpler.;Similar;0.60223788022995
Support querying & setting transport lists on connections  ;The list is specified via a magic request property <iden> and can be queried via the request property <iden> ;Fix <iden> post retransmit in the new API  ;We dont buffer response bodies in the new API. But we should retransmit POST bodies when a request fails.;Similar;0.6318548917770386
Support querying & setting transport lists on connections  ;The list is specified via a magic request property <iden> and can be queried via the request property <iden> ;Add a test for corner-case behavior;Im looking to make HttpURLConnectionImpl delegate to Job, and that means writing tests for all the weird things it does above HttpEngine.;Similar;0.61490797996521
Support querying & setting transport lists on connections  ;The list is specified via a magic request property <iden> and can be queried via the request property <iden> ;Add some pings to force happens-before in <iden> tests;Previously we were relying on accidents to get our tests to pass;Similar;0.5597445964813232
Support querying & setting transport lists on connections  ;The list is specified via a magic request property <iden> and can be queried via the request property <iden> ;Track <file_name> ownership  ;<file_name> ownership is somewhat racy: when an HttpURLConnection reads the last byte of a connection, its ownership is released and given to the <method_name>;Similar;0.5955414772033691
Support querying & setting transport lists on connections  ;The list is specified via a magic request property <iden> and can be queried via the request property <iden> ;Move  <file_name>  pooling logic  ;"previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams; move  <file_name>  reuse to  <file_name>, with policy informed by  <method_name>  specifying what to do when the  <file_name>  becomes idle: pool, close or hold, so the  <file_name>  does what its told.";Similar;0.6637893319129944
Support querying & setting transport lists on connections  ;The list is specified via a magic request property <iden> and can be queried via the request property <iden> ;Implement moving bytes between OkBuffers  ;This is more complicated than Id anticipated;Similar;0.7004566788673401
Support querying & setting transport lists on connections  ;The list is specified via a magic request property <iden> and can be queried via the request property <iden> ;"Define async APIs and switch <file_name> to use <iden> directly. I think this is the best route going forward; and eventually we could invert this relationship to have <iden> depending on <file_name> directly rather than vice versa.";Using <iden> directly introduces some duplicated code with <iden>. It also breaks the <file_name> cache.;Similar;0.5096142292022705
Support querying & setting transport lists on connections  ;The list is specified via a magic request property <iden> and can be queried via the request property <iden> ;Fix checkstyle issues in new <iden> code;checkstyle issues;Similar;0.6016017198562622
Support querying & setting transport lists on connections  ;The list is specified via a magic request property <iden> and can be queried via the request property <iden> ;Introduce a <file_name> interface between engine and connection.;This breaks the direct dependency from <file_name> to <method_name>;Similar;0.7933987975120544
Support querying & setting transport lists on connections  ;The list is specified via a magic request property <iden> and can be queried via the request property <iden> ;Update to the latest <method_name>;Includes everything thru 8842981cbcfe20eb4721c0a2c867fa9a18233062;Similar;0.5218732953071594
Support querying & setting transport lists on connections  ;The list is specified via a magic request property <iden> and can be queried via the request property <iden> ;Be more careful around IOExceptions;my goal is to make it easier to differentiate between protocol-level problems (bogus frames) from transport-level problems (closed sockets and EOF streams);Similar;0.5402913093566895
Support querying & setting transport lists on connections  ;The list is specified via a magic request property <iden> and can be queried via the request property <iden> ;Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;Similar;0.6423367261886597
Support querying & setting transport lists on connections  ;The list is specified via a magic request property <iden> and can be queried via the request property <iden> ;Make the `<method_name>` return full working connections;Previously the returned connections required the caller to do extra work: setting up tunnels and performing an `<iden>` handshake. With this change, we make a complete working connection in `<method_name>`. This will make it easier to fix fallback when a single domain has multiple `<iden>` addresses that are not reachable. Also, this will make it easier to do SPDY through `<iden>` proxies.;Similar;0.7279114127159119
Support querying & setting transport lists on connections  ;The list is specified via a magic request property <iden> and can be queried via the request property <iden> ;Add error-prone compiler and fix its found issues;error-prone, its found issues;Similar;0.5537168383598328
Support querying & setting transport lists on connections  ;The list is specified via a magic request property <iden> and can be queried via the request property <iden> ;Expose <iden> directly on <method_name>  ;direct;Similar;0.64007169008255
Support querying & setting transport lists on connections  ;The list is specified via a magic request property <iden> and can be queried via the request property <iden> ;Use HTML entity for ampersand;to represent the ampersand symbol in HTML;Similar;0.6836323142051697
Support querying & setting transport lists on connections  ;The list is specified via a magic request property <iden> and can be queried via the request property <iden> ;Add convenience overload for <iden>-backed <method_name>;convenience;Similar;0.6950138211250305
Support querying & setting transport lists on connections  ;The list is specified via a magic request property <iden> and can be queried via the request property <iden> ;Use consistent camel casing of <iden>;consistent camel casing;Similar;0.5456054210662842
Support querying & setting transport lists on connections  ;The list is specified via a magic request property <iden> and can be queried via the request property <iden> ;Update website to the latest design  ;latest design;Similar;0.5014846324920654
Support querying & setting transport lists on connections  ;The list is specified via a magic request property <iden> and can be queried via the request property <iden> ;Transfer to/from <iden> directly from <iden>  ;<pr_link>;Similar;0.6627417206764221
Support querying & setting transport lists on connections  ;The list is specified via a magic request property <iden> and can be queried via the request property <iden> ;add @override for subclass override method;subclass override method;Similar;0.7196475267410278
Support querying & setting transport lists on connections  ;The list is specified via a magic request property <iden> and can be queried via the request property <iden> ;Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Similar;0.561852216720581
Support querying & setting transport lists on connections  ;The list is specified via a magic request property <iden> and can be queried via the request property <iden> ;Partially revert connection timeout behavior  ;The modification of the timeout behavior during connection caused problems;Similar;0.5692427754402161
Support querying & setting transport lists on connections  ;The list is specified via a magic request property <iden> and can be queried via the request property <iden> ;The changes to <iden>s  <file_name> have been ported  ;Upstream commit of <iden> / <iden> fix, This does not include the introduction of PlatformTest, which will be difficult to write so it works everywhere;Similar;0.6887851357460022
Support querying & setting transport lists on connections  ;The list is specified via a magic request property <iden> and can be queried via the request property <iden> ;Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Similar;0.6416927576065063
Support querying & setting transport lists on connections  ;The list is specified via a magic request property <iden> and can be queried via the request property <iden> ;Return <file_name> to previous (e.g. KitKat) behavior;this change required to handle this <iden> scenario;Similar;0.617592453956604
Support querying & setting transport lists on connections  ;The list is specified via a magic request property <iden> and can be queried via the request property <iden> ;Document <file_name> throwing modes;To include the <pr_link> information;Similar;0.5612354874610901
Support querying & setting transport lists on connections  ;The list is specified via a magic request property <iden> and can be queried via the request property <iden> ;Convert <file_name> to Kotlin;<pr_link>, <iden>, <file_name>;Similar;0.6514920592308044
Support querying & setting transport lists on connections  ;The list is specified via a magic request property <iden> and can be queried via the request property <iden> ;Convert <file_name>, <file_name> to Kotlin  ;"to Kotlin

Decision: Rename <file_name> <version> to .kt (and others)  ";Similar;0.6627702116966248
Support querying & setting transport lists on connections  ;The list is specified via a magic request property <iden> and can be queried via the request property <iden> ;Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Similar;0.7416616678237915
Support querying & setting transport lists on connections  ;The list is specified via a magic request property <iden> and can be queried via the request property <iden> ;Just pass the <iden> and <iden> objects in directly;Dont summarize the request and response;Similar;0.5769220590591431
Support querying & setting transport lists on connections  ;The list is specified via a magic request property <iden> and can be queried via the request property <iden> ;Fix a race in <method_name> ( <pr_link> );We were assuming on a client failure the server wouldnt have any further events. But it will get a failure if we give it a moment. This was causing some test flakiness.;Similar;0.6195636987686157
Support querying & setting transport lists on connections  ;The list is specified via a magic request property <iden> and can be queried via the request property <iden> ;Improve some Markdown;improve;Similar;0.5069597959518433
Support querying & setting transport lists on connections  ;The list is specified via a magic request property <iden> and can be queried via the request property <iden> ;Refactor <file_name> by using <iden>;We can use <iden> instead of overriding <iden> abstract class;Similar;0.7153716683387756
Support querying & setting transport lists on connections  ;The list is specified via a magic request property <iden> and can be queried via the request property <iden> ;Enable GitHub Security Scanning;To configure GitHub workflow for code security scanning;Similar;0.6743404865264893
Support querying & setting transport lists on connections  ;The list is specified via a magic request property <iden> and can be queried via the request property <iden> ;load through bootstrap;-;Similar;0.6193271279335022
Support querying & setting transport lists on connections  ;The list is specified via a magic request property <iden> and can be queried via the request property <iden> ;Fix bug where request body isnt sent when it should  ;request body isnt sent when it should;Similar;0.540512204170227
Support querying & setting transport lists on connections  ;The list is specified via a magic request property <iden> and can be queried via the request property <iden> ;Add support for following <iden> 307 temporary redirects  ;Fixes Android bug 41739;Similar;0.6332952976226807
Support querying & setting transport lists on connections  ;The list is specified via a magic request property <iden> and can be queried via the request property <iden> ;Add wildcard hostnames support in <file_name>;support;Similar;0.7433934807777405
Support querying & setting transport lists on connections  ;The list is specified via a magic request property <iden> and can be queried via the request property <iden> ;Fix correctness of WebSocketReader reserved flags test;reserved flags;Similar;0.6125311851501465
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;snapshot() method removing entries that are being cached  ;because cleanFiles dont exist yet;Similar;0.6713500022888184
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;Fix mockwebserver jar download 404;404;Similar;0.6385515928268433
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;update proguard rules on README.md ( <pr_link> );-;Similar;0.6334837675094604
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;Remove obsolete <iden>;obsolete;Similar;0.5975124835968018
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;Update factories to be idiomatic;be idiomatic;Similar;0.5641457438468933
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;Beef up <file_name>s toString;Previously it unconditionally showed tags even if empty and would not show headers;Similar;0.6083347201347351
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;Make error-prone validate missing override annotations;error-prone, missing override annotations;Similar;0.8183120489120483
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;fix README.md typo;README.md typo;Similar;0.7813847661018372
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;Fix single failing graal test ( <pr_link> );single failing;Similar;0.7716671228408813
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;Centralise logging behind JUL (<pr_link>) <enter> Use JUL, but wire up to the <method_name> <enter> Use `adb shell setprop log.tag.okhttp.Http2 <iden>` to enable logging for known levels;to enable logging for known levels;Similar;0.6567573547363281
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;API for handling an unexpected SSE response;unexpected;Similar;0.6049233675003052
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;Wrap <iden> addresses with [] and return / path URIs for proxy CONNECT;Fix MockWebserver for <iden> addresses;Similar;0.6211823225021362
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;Similar;0.7156040668487549
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;Update  <file_name>  to temporarily ignore javadoc errors and compile tests but not run ( <pr_link> );temporarily ignore javadoc errors and compile tests;Similar;0.7006050944328308
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;Fix travis build;Fix;Similar;0.5565976500511169
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;Use IOException instead of <iden>;more specific in <file_name> API;Similar;0.6359958052635193
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;Make  <file_name>  more capable.;more capable;Similar;0.6266210079193115
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;fix <file_name> for Java 9;Java 9;Similar;0.6300773024559021
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;document support for SNI;support for SNI;Similar;0.5769742727279663
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;Limit recovery attempts for REFUSED_STREAM errors;We limit per-connection retries but not per-call retries, so this was creating large numbers of connections each of which called the server and accepted yet another REFUSED_STREAM.;Similar;0.7506393194198608
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;Add HTTP/2 and <iden><version> columns to our security providers doc ;to enhance our security documentation;Similar;0.5869725942611694
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;Use  <file_name> s built-in <iden> style  <enter>  ;The boilerplate to set this up is unfortunate;Similar;0.6439367532730103
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;Use our test rule instead of the Maven Surefire listener  ;to Close the issue indicated by the link;Similar;0.6258050203323364
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;Use <iden> in <file_name>  ;The utility here is negligible. Were sharing threads between HTTP, HTTP/2 and web sockets now.;Similar;0.633305549621582
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;Adopt idiomatic <iden> in <file_name>;idiomatic;Similar;0.6701705455780029
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they cant be open. I think the motivation to make these non-final was pretty weak, and I dont mind breaking <iden> compatibility here.;Similar;0.5896239280700684
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;Similar;0.7788978815078735
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;Include prerequisites in the releasing guide.;to provide necessary information for users;Similar;0.5624247789382935
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;Convert <file_name> to Kotlin;"to Kotlin

Decision: Rename <file_name> to .kt";Similar;0.6364917159080505
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;Introduce <method_name> ;This is the payoff that preceding changes have been working towards.;Similar;0.6341559886932373
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.;Similar;0.6439236402511597
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;Fix some maven problems that are blocking the <version> release;blocking the <version> release;Similar;0.7274700999259949
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;Rename <method_name> to <iden()>;I prefer signed;Similar;0.6580468416213989
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;Fixup <file_name> so that its worthy of production use.;This changes the default from the insecure 1024-bit <iden> to a secure 256-bit <iden> key. It adds a new option to use <iden> keys for interoperating with older clients.;Similar;0.6755390763282776
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;Support client authentication in <file_name>;client authentication;Similar;0.6159808039665222
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;Remove <iden>-mode <iden> cipher suites;This removes the following cipher suites as supported-by-default;Similar;0.6608203649520874
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;Fix Javadoc builds with the jsr305 dependency  ;Because multiple modules share a package we need to share the dependency on everything in package-info.java;Similar;0.6662615537643433
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;Make the  <file_name>  a little better.  <enter> <iden> threads by their URLs. Dont follow all fragments of the same <iden>;"For better organization; to prevent following all fragments of the same <iden>";Similar;0.6480088233947754
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;Similar;0.7303768396377563
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;Fix tests to share a common <iden>. Also fix the memory limit, which may prevent Travis from failing our tests.;share a common <iden>, memory limit, prevent Travis from failing our tests;Similar;0.6577702760696411
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;Update readme and changelog for <version>;<version>;Similar;0.7165565490722656
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;New <file_name> class to normalize certificate chains  ;The goal of this is to get the root <iden> certificate into the certificate chain, so that it can be considered by the certificate pinner;Similar;0.595844030380249
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;Fix some get prefixes on <file_name> and <method_name>;"-
None";Similar;0.7233178019523621
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;Add <method_name>;Might be useful to expose this bookkeeping to app developers;Similar;0.641823410987854
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Similar;0.8181828260421753
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;Drop our one remaining <iden> cipher suite;Tracking <iden> and Firefox, which have also dropped this cipher suite;Similar;0.5633199214935303
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;Expose internal APIs for pluggable file systems, Also migrate all of our tests to use the <method_name>  ;We arent yet ready to make <iden> a public type, but I dont mind making it _almost_ available via an internal API for those brave enough to try that, Its simpler.;Similar;0.5201981663703918
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;Change  <file_name>  to not implement java.net.ResponseCache;This marks some methods as  @deprecated and internal-only. Unfortunately we dont have a great mechanism to hide them from the documented <iden>.;Similar;0.6118353009223938
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;Fix <iden> post retransmit in the new API  ;We dont buffer response bodies in the new API. But we should retransmit POST bodies when a request fails.;Similar;0.7248814702033997
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;Add a test for corner-case behavior;Im looking to make HttpURLConnectionImpl delegate to Job, and that means writing tests for all the weird things it does above HttpEngine.;Similar;0.678141713142395
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;Add some pings to force happens-before in <iden> tests;Previously we were relying on accidents to get our tests to pass;Similar;0.6111415028572083
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;Track <file_name> ownership  ;<file_name> ownership is somewhat racy: when an HttpURLConnection reads the last byte of a connection, its ownership is released and given to the <method_name>;Similar;0.5229477882385254
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;Move  <file_name>  pooling logic  ;"previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams; move  <file_name>  reuse to  <file_name>, with policy informed by  <method_name>  specifying what to do when the  <file_name>  becomes idle: pool, close or hold, so the  <file_name>  does what its told.";Similar;0.6022530794143677
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;Implement moving bytes between OkBuffers  ;This is more complicated than Id anticipated;Similar;0.6007014513015747
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;Remove <iden> 2 warnings;Small docs fixes;Similar;0.6246070265769958
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;"Define async APIs and switch <file_name> to use <iden> directly. I think this is the best route going forward; and eventually we could invert this relationship to have <iden> depending on <file_name> directly rather than vice versa.";Using <iden> directly introduces some duplicated code with <iden>. It also breaks the <file_name> cache.;Similar;0.5125923156738281
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;Fix checkstyle issues in new <iden> code;checkstyle issues;Similar;0.7522813081741333
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;Kill <file_name> in the process  ;Teach <file_name> <iden>;Similar;0.516021192073822
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;Introduce a <file_name> interface between engine and connection.;This breaks the direct dependency from <file_name> to <method_name>;Similar;0.6196422576904297
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;Make  <file_name> less flaky;I was seeing flaky results in the debugger because pooled connections were being evicted as the test ran;Similar;0.5727412700653076
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;Update to the latest <method_name>;Includes everything thru 8842981cbcfe20eb4721c0a2c867fa9a18233062;Similar;0.5637691617012024
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;Be more careful around IOExceptions;my goal is to make it easier to differentiate between protocol-level problems (bogus frames) from transport-level problems (closed sockets and EOF streams);Similar;0.5607379674911499
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;Similar;0.6897314786911011
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;Move out of the <file_name> package;To promote the code into AOSP, well keep this package as-is and do the jarjar in <iden> instead;Similar;0.6434317827224731
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;Make the `<method_name>` return full working connections;Previously the returned connections required the caller to do extra work: setting up tunnels and performing an `<iden>` handshake. With this change, we make a complete working connection in `<method_name>`. This will make it easier to fix fallback when a single domain has multiple `<iden>` addresses that are not reachable. Also, this will make it easier to do SPDY through `<iden>` proxies.;Similar;0.5597379207611084
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;Fix <iden> which was being computed incorrectly;<enter> We were only returning true once we were already in a tunnel. This was bogus. In theory a <iden> tunnel sending extra data could be corrupted due to this bug.;Similar;0.646641194820404
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;Add error-prone compiler and fix its found issues;error-prone, its found issues;Similar;0.7707762718200684
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;Remove old <iden> protocol method;old;Similar;0.642009437084198
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;Expose <iden> directly on <method_name>  ;direct;Similar;0.6078455448150635
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;Use HTML entity for ampersand;to represent the ampersand symbol in HTML;Similar;0.632268488407135
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;Add convenience overload for <iden>-backed <method_name>;convenience;Similar;0.7341396808624268
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;Drop unused dependencies;unused;Similar;0.5864962935447693
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;Transfer to/from <iden> directly from <iden>  ;<pr_link>;Similar;0.5977833271026611
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;add @override for subclass override method;subclass override method;Similar;0.6958535313606262
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Similar;0.7846043705940247
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;Partially revert connection timeout behavior  ;The modification of the timeout behavior during connection caused problems;Similar;0.6349407434463501
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;This change logs the exception but prevent it from propagating out of the top of the call stack.;This decreases overall flakiness.;Similar;0.600676953792572
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;The changes to <iden>s  <file_name> have been ported  ;Upstream commit of <iden> / <iden> fix, This does not include the introduction of PlatformTest, which will be difficult to write so it works everywhere;Similar;0.6361289024353027
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Similar;0.694092333316803
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;Return <file_name> to previous (e.g. KitKat) behavior;this change required to handle this <iden> scenario;Similar;0.6376954317092896
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;Document <file_name> throwing modes;To include the <pr_link> information;Similar;0.5852609872817993
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;Convert <file_name> to Kotlin;<pr_link>, <iden>, <file_name>;Similar;0.6364917159080505
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;Convert <file_name>, <file_name> to Kotlin  ;"to Kotlin

Decision: Rename <file_name> <version> to .kt (and others)  ";Similar;0.6257875561714172
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Similar;0.7705146074295044
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;Fail HTTP/2 connections if the pong is not received;This removes the abstraction from our http2 package;Similar;0.5919674634933472
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;Just pass the <iden> and <iden> objects in directly;Dont summarize the request and response;Similar;0.5818134546279907
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;Fix a race in <method_name> ( <pr_link> );We were assuming on a client failure the server wouldnt have any further events. But it will get a failure if we give it a moment. This was causing some test flakiness.;Similar;0.6531047224998474
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;Improve some Markdown;improve;Similar;0.6326189637184143
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;fix <issue_link> : PROPFIND request should not redirect to GET request;PROPFIND request should not redirect to GET request;Similar;0.5688052177429199
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;Refactor <file_name> by using <iden>;We can use <iden> instead of overriding <iden> abstract class;Similar;0.6784882545471191
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;Remove unnecessary use of grouping parentheses  ;Lets remove warnings found by errorprone.;Similar;0.5699554681777954
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;Enable GitHub Security Scanning;To configure GitHub workflow for code security scanning;Similar;0.5739789605140686
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;load through bootstrap;-;Similar;0.5620015859603882
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;Fix bug where request body isnt sent when it should  ;request body isnt sent when it should;Similar;0.8292263150215149
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;Add support for following <iden> 307 temporary redirects  ;Fixes Android bug 41739;Similar;0.6123543977737427
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;Add wildcard hostnames support in <file_name>;support;Similar;0.5954009890556335
Fix nullability (override default parameter nullability set at package-info);response receives null explicitly from several catch clauses;Fix correctness of WebSocketReader reserved flags test;reserved flags;Similar;0.7655550241470337
snapshot() method removing entries that are being cached  ;because cleanFiles dont exist yet;Fix mockwebserver jar download 404;404;Similar;0.5441519618034363
snapshot() method removing entries that are being cached  ;because cleanFiles dont exist yet;Remove obsolete <iden>;obsolete;Similar;0.7713354825973511
snapshot() method removing entries that are being cached  ;because cleanFiles dont exist yet;Make error-prone validate missing override annotations;error-prone, missing override annotations;Similar;0.7688219547271729
snapshot() method removing entries that are being cached  ;because cleanFiles dont exist yet;fix README.md typo;README.md typo;Similar;0.5965945720672607
snapshot() method removing entries that are being cached  ;because cleanFiles dont exist yet;Fix single failing graal test ( <pr_link> );single failing;Similar;0.6192290782928467
snapshot() method removing entries that are being cached  ;because cleanFiles dont exist yet;Centralise logging behind JUL (<pr_link>) <enter> Use JUL, but wire up to the <method_name> <enter> Use `adb shell setprop log.tag.okhttp.Http2 <iden>` to enable logging for known levels;to enable logging for known levels;Similar;0.5097599029541016
snapshot() method removing entries that are being cached  ;because cleanFiles dont exist yet;API for handling an unexpected SSE response;unexpected;Similar;0.5151785612106323
snapshot() method removing entries that are being cached  ;because cleanFiles dont exist yet;Wrap <iden> addresses with [] and return / path URIs for proxy CONNECT;Fix MockWebserver for <iden> addresses;Similar;0.5043829679489136
snapshot() method removing entries that are being cached  ;because cleanFiles dont exist yet;Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;Similar;0.6027494072914124
snapshot() method removing entries that are being cached  ;because cleanFiles dont exist yet;Update  <file_name>  to temporarily ignore javadoc errors and compile tests but not run ( <pr_link> );temporarily ignore javadoc errors and compile tests;Similar;0.6301550269126892
snapshot() method removing entries that are being cached  ;because cleanFiles dont exist yet;Use IOException instead of <iden>;more specific in <file_name> API;Similar;0.5734525918960571
snapshot() method removing entries that are being cached  ;because cleanFiles dont exist yet;Make  <file_name>  more capable.;more capable;Similar;0.5047803521156311
snapshot() method removing entries that are being cached  ;because cleanFiles dont exist yet;Limit recovery attempts for REFUSED_STREAM errors;We limit per-connection retries but not per-call retries, so this was creating large numbers of connections each of which called the server and accepted yet another REFUSED_STREAM.;Similar;0.7122515439987183
snapshot() method removing entries that are being cached  ;because cleanFiles dont exist yet;Use our test rule instead of the Maven Surefire listener  ;to Close the issue indicated by the link;Similar;0.5490238666534424
snapshot() method removing entries that are being cached  ;because cleanFiles dont exist yet;Degrade connections after a timeout;This is based roughly on the <iden> Connections proposal here;Similar;0.7259799838066101
snapshot() method removing entries that are being cached  ;because cleanFiles dont exist yet;Use <iden> in <file_name>  ;The utility here is negligible. Were sharing threads between HTTP, HTTP/2 and web sockets now.;Similar;0.5081634521484375
snapshot() method removing entries that are being cached  ;because cleanFiles dont exist yet;Adopt idiomatic <iden> in <file_name>;idiomatic;Similar;0.5249963998794556
snapshot() method removing entries that are being cached  ;because cleanFiles dont exist yet;Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they cant be open. I think the motivation to make these non-final was pretty weak, and I dont mind breaking <iden> compatibility here.;Similar;0.5498917102813721
snapshot() method removing entries that are being cached  ;because cleanFiles dont exist yet;Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;Similar;0.7333583235740662
snapshot() method removing entries that are being cached  ;because cleanFiles dont exist yet;Convert <file_name> to Kotlin;"to Kotlin

Decision: Rename <file_name> to .kt";Similar;0.5482571721076965
snapshot() method removing entries that are being cached  ;because cleanFiles dont exist yet;Introduce <method_name> ;This is the payoff that preceding changes have been working towards.;Similar;0.5042958855628967
snapshot() method removing entries that are being cached  ;because cleanFiles dont exist yet;Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.;Similar;0.5105735063552856
snapshot() method removing entries that are being cached  ;because cleanFiles dont exist yet;Fix some maven problems that are blocking the <version> release;blocking the <version> release;Similar;0.705444872379303
snapshot() method removing entries that are being cached  ;because cleanFiles dont exist yet;Rename <method_name> to <iden()>;I prefer signed;Similar;0.5886029005050659
snapshot() method removing entries that are being cached  ;because cleanFiles dont exist yet;Fixup <file_name> so that its worthy of production use.;This changes the default from the insecure 1024-bit <iden> to a secure 256-bit <iden> key. It adds a new option to use <iden> keys for interoperating with older clients.;Similar;0.5106108784675598
snapshot() method removing entries that are being cached  ;because cleanFiles dont exist yet;Remove <iden>-mode <iden> cipher suites;This removes the following cipher suites as supported-by-default;Similar;0.8072991371154785
snapshot() method removing entries that are being cached  ;because cleanFiles dont exist yet;Make the  <file_name>  a little better.  <enter> <iden> threads by their URLs. Dont follow all fragments of the same <iden>;"For better organization; to prevent following all fragments of the same <iden>";Similar;0.5683136582374573
snapshot() method removing entries that are being cached  ;because cleanFiles dont exist yet;Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;Similar;0.620610237121582
snapshot() method removing entries that are being cached  ;because cleanFiles dont exist yet;Fix tests to share a common <iden>. Also fix the memory limit, which may prevent Travis from failing our tests.;share a common <iden>, memory limit, prevent Travis from failing our tests;Similar;0.5153652429580688
snapshot() method removing entries that are being cached  ;because cleanFiles dont exist yet;Collapse interceptors into a single chain;Instead of having a chain of application interceptors and a separate chain of network interceptors, this makes a single heterogeneous chain. It makes the <iden> core and network caller into interceptors.;Similar;0.5594789981842041
snapshot() method removing entries that are being cached  ;because cleanFiles dont exist yet;Update readme and changelog for <version>;<version>;Similar;0.5788496732711792
snapshot() method removing entries that are being cached  ;because cleanFiles dont exist yet;Fix some get prefixes on <file_name> and <method_name>;"-
None";Similar;0.5961524248123169
snapshot() method removing entries that are being cached  ;because cleanFiles dont exist yet;Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Similar;0.654693603515625
snapshot() method removing entries that are being cached  ;because cleanFiles dont exist yet;Drop our one remaining <iden> cipher suite;Tracking <iden> and Firefox, which have also dropped this cipher suite;Similar;0.714931309223175
snapshot() method removing entries that are being cached  ;because cleanFiles dont exist yet;Change  <file_name>  to not implement java.net.ResponseCache;This marks some methods as  @deprecated and internal-only. Unfortunately we dont have a great mechanism to hide them from the documented <iden>.;Similar;0.6263572573661804
snapshot() method removing entries that are being cached  ;because cleanFiles dont exist yet;The implementation is built around one oversized method that runs top to bottom;I found this was easier to follow than the switch statement recommended by the <iden> standard;Similar;0.5113708972930908
snapshot() method removing entries that are being cached  ;because cleanFiles dont exist yet;Fix <iden> post retransmit in the new API  ;We dont buffer response bodies in the new API. But we should retransmit POST bodies when a request fails.;Similar;0.5422530770301819
snapshot() method removing entries that are being cached  ;because cleanFiles dont exist yet;Add a test for corner-case behavior;Im looking to make HttpURLConnectionImpl delegate to Job, and that means writing tests for all the weird things it does above HttpEngine.;Similar;0.5122858285903931
snapshot() method removing entries that are being cached  ;because cleanFiles dont exist yet;Add some pings to force happens-before in <iden> tests;Previously we were relying on accidents to get our tests to pass;Similar;0.5000100135803223
snapshot() method removing entries that are being cached  ;because cleanFiles dont exist yet;Move  <file_name>  pooling logic  ;"previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams; move  <file_name>  reuse to  <file_name>, with policy informed by  <method_name>  specifying what to do when the  <file_name>  becomes idle: pool, close or hold, so the  <file_name>  does what its told.";Similar;0.5144891142845154
snapshot() method removing entries that are being cached  ;because cleanFiles dont exist yet;Implement moving bytes between OkBuffers  ;This is more complicated than Id anticipated;Similar;0.5959600210189819
snapshot() method removing entries that are being cached  ;because cleanFiles dont exist yet;Remove <iden> 2 warnings;Small docs fixes;Similar;0.7102876901626587
snapshot() method removing entries that are being cached  ;because cleanFiles dont exist yet;Fix checkstyle issues in new <iden> code;checkstyle issues;Similar;0.5400936007499695
snapshot() method removing entries that are being cached  ;because cleanFiles dont exist yet;Kill <file_name> in the process  ;Teach <file_name> <iden>;Similar;0.6832165718078613
snapshot() method removing entries that are being cached  ;because cleanFiles dont exist yet;Introduce a <file_name> interface between engine and connection.;This breaks the direct dependency from <file_name> to <method_name>;Similar;0.5093326568603516
snapshot() method removing entries that are being cached  ;because cleanFiles dont exist yet;Make  <file_name> less flaky;I was seeing flaky results in the debugger because pooled connections were being evicted as the test ran;Similar;0.6651437282562256
snapshot() method removing entries that are being cached  ;because cleanFiles dont exist yet;Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;Similar;0.6366299390792847
snapshot() method removing entries that are being cached  ;because cleanFiles dont exist yet;Move out of the <file_name> package;To promote the code into AOSP, well keep this package as-is and do the jarjar in <iden> instead;Similar;0.7777467966079712
snapshot() method removing entries that are being cached  ;because cleanFiles dont exist yet;Fix <iden> which was being computed incorrectly;<enter> We were only returning true once we were already in a tunnel. This was bogus. In theory a <iden> tunnel sending extra data could be corrupted due to this bug.;Similar;0.6714702844619751
snapshot() method removing entries that are being cached  ;because cleanFiles dont exist yet;Add error-prone compiler and fix its found issues;error-prone, its found issues;Similar;0.6057667136192322
snapshot() method removing entries that are being cached  ;because cleanFiles dont exist yet;Remove old <iden> protocol method;old;Similar;0.778174877166748
snapshot() method removing entries that are being cached  ;because cleanFiles dont exist yet;Use HTML entity for ampersand;to represent the ampersand symbol in HTML;Similar;0.5293013453483582
snapshot() method removing entries that are being cached  ;because cleanFiles dont exist yet;Drop unused dependencies;unused;Similar;0.7559773325920105
snapshot() method removing entries that are being cached  ;because cleanFiles dont exist yet;Transfer to/from <iden> directly from <iden>  ;<pr_link>;Similar;0.5203582644462585
snapshot() method removing entries that are being cached  ;because cleanFiles dont exist yet;Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Similar;0.5784512162208557
snapshot() method removing entries that are being cached  ;because cleanFiles dont exist yet;Partially revert connection timeout behavior  ;The modification of the timeout behavior during connection caused problems;Similar;0.5713605880737305
snapshot() method removing entries that are being cached  ;because cleanFiles dont exist yet;This change logs the exception but prevent it from propagating out of the top of the call stack.;This decreases overall flakiness.;Similar;0.6245021224021912
snapshot() method removing entries that are being cached  ;because cleanFiles dont exist yet;The changes to <iden>s  <file_name> have been ported  ;Upstream commit of <iden> / <iden> fix, This does not include the introduction of PlatformTest, which will be difficult to write so it works everywhere;Similar;0.5557021498680115
snapshot() method removing entries that are being cached  ;because cleanFiles dont exist yet;Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Similar;0.6261495351791382
snapshot() method removing entries that are being cached  ;because cleanFiles dont exist yet;Return <file_name> to previous (e.g. KitKat) behavior;this change required to handle this <iden> scenario;Similar;0.5445088148117065
snapshot() method removing entries that are being cached  ;because cleanFiles dont exist yet;Document <file_name> throwing modes;To include the <pr_link> information;Similar;0.5656378269195557
snapshot() method removing entries that are being cached  ;because cleanFiles dont exist yet;Convert <file_name> to Kotlin;<pr_link>, <iden>, <file_name>;Similar;0.5482571721076965
snapshot() method removing entries that are being cached  ;because cleanFiles dont exist yet;Convert <file_name>, <file_name> to Kotlin  ;"to Kotlin

Decision: Rename <file_name> <version> to .kt (and others)  ";Similar;0.5410889387130737
snapshot() method removing entries that are being cached  ;because cleanFiles dont exist yet;Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Similar;0.5713028907775879
snapshot() method removing entries that are being cached  ;because cleanFiles dont exist yet;Fail HTTP/2 connections if the pong is not received;This removes the abstraction from our http2 package;Similar;0.6888878345489502
snapshot() method removing entries that are being cached  ;because cleanFiles dont exist yet;Just pass the <iden> and <iden> objects in directly;Dont summarize the request and response;Similar;0.5392703413963318
snapshot() method removing entries that are being cached  ;because cleanFiles dont exist yet;Fix a race in <method_name> ( <pr_link> );We were assuming on a client failure the server wouldnt have any further events. But it will get a failure if we give it a moment. This was causing some test flakiness.;Similar;0.5069749355316162
snapshot() method removing entries that are being cached  ;because cleanFiles dont exist yet;Improve some Markdown;improve;Similar;0.5798275470733643
snapshot() method removing entries that are being cached  ;because cleanFiles dont exist yet;Refactor <file_name> by using <iden>;We can use <iden> instead of overriding <iden> abstract class;Similar;0.5671544671058655
snapshot() method removing entries that are being cached  ;because cleanFiles dont exist yet;Remove unnecessary use of grouping parentheses  ;Lets remove warnings found by errorprone.;Similar;0.7209803462028503
snapshot() method removing entries that are being cached  ;because cleanFiles dont exist yet;load through bootstrap;-;Similar;0.5838574767112732
snapshot() method removing entries that are being cached  ;because cleanFiles dont exist yet;Fix bug where request body isnt sent when it should  ;request body isnt sent when it should;Similar;0.701021671295166
snapshot() method removing entries that are being cached  ;because cleanFiles dont exist yet;Add support for following <iden> 307 temporary redirects  ;Fixes Android bug 41739;Similar;0.5088711977005005
snapshot() method removing entries that are being cached  ;because cleanFiles dont exist yet;Fix correctness of WebSocketReader reserved flags test;reserved flags;Similar;0.5526508092880249
Fix mockwebserver jar download 404;404;update proguard rules on README.md ( <pr_link> );-;Similar;0.6431300044059753
Fix mockwebserver jar download 404;404;Beef up <file_name>s toString;Previously it unconditionally showed tags even if empty and would not show headers;Similar;0.6029443740844727
Fix mockwebserver jar download 404;404;Make error-prone validate missing override annotations;error-prone, missing override annotations;Similar;0.5581230521202087
Fix mockwebserver jar download 404;404;fix README.md typo;README.md typo;Similar;0.6315428018569946
Fix mockwebserver jar download 404;404;Fix single failing graal test ( <pr_link> );single failing;Similar;0.5566675662994385
Fix mockwebserver jar download 404;404;Centralise logging behind JUL (<pr_link>) <enter> Use JUL, but wire up to the <method_name> <enter> Use `adb shell setprop log.tag.okhttp.Http2 <iden>` to enable logging for known levels;to enable logging for known levels;Similar;0.6044048070907593
Fix mockwebserver jar download 404;404;Wrap <iden> addresses with [] and return / path URIs for proxy CONNECT;Fix MockWebserver for <iden> addresses;Similar;0.6621454358100891
Fix mockwebserver jar download 404;404;Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;Similar;0.6433268189430237
Fix mockwebserver jar download 404;404;Update  <file_name>  to temporarily ignore javadoc errors and compile tests but not run ( <pr_link> );temporarily ignore javadoc errors and compile tests;Similar;0.5588428378105164
Fix mockwebserver jar download 404;404;Fix travis build;Fix;Similar;0.5357849597930908
Fix mockwebserver jar download 404;404;Make  <file_name>  more capable.;more capable;Similar;0.5413467288017273
Fix mockwebserver jar download 404;404;fix <file_name> for Java 9;Java 9;Similar;0.58596271276474
Fix mockwebserver jar download 404;404;Limit recovery attempts for REFUSED_STREAM errors;We limit per-connection retries but not per-call retries, so this was creating large numbers of connections each of which called the server and accepted yet another REFUSED_STREAM.;Similar;0.59345543384552
Fix mockwebserver jar download 404;404;Add HTTP/2 and <iden><version> columns to our security providers doc ;to enhance our security documentation;Similar;0.585068941116333
Fix mockwebserver jar download 404;404;Use  <file_name> s built-in <iden> style  <enter>  ;The boilerplate to set this up is unfortunate;Similar;0.5990471839904785
Fix mockwebserver jar download 404;404;Use <iden> in <file_name>  ;The utility here is negligible. Were sharing threads between HTTP, HTTP/2 and web sockets now.;Similar;0.595173716545105
Fix mockwebserver jar download 404;404;Adopt idiomatic <iden> in <file_name>;idiomatic;Similar;0.5837349891662598
Fix mockwebserver jar download 404;404;Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they cant be open. I think the motivation to make these non-final was pretty weak, and I dont mind breaking <iden> compatibility here.;Similar;0.5219547152519226
Fix mockwebserver jar download 404;404;Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;Similar;0.6938899755477905
Fix mockwebserver jar download 404;404;Convert <file_name> to Kotlin;"to Kotlin

Decision: Rename <file_name> to .kt";Similar;0.6553707122802734
Fix mockwebserver jar download 404;404;Introduce <method_name> ;This is the payoff that preceding changes have been working towards.;Similar;0.5441068410873413
Fix mockwebserver jar download 404;404;Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.;Similar;0.500975489616394
Fix mockwebserver jar download 404;404;Fix some maven problems that are blocking the <version> release;blocking the <version> release;Similar;0.5471444725990295
Fix mockwebserver jar download 404;404;Rename <method_name> to <iden()>;I prefer signed;Similar;0.5670151710510254
Fix mockwebserver jar download 404;404;Fixup <file_name> so that its worthy of production use.;This changes the default from the insecure 1024-bit <iden> to a secure 256-bit <iden> key. It adds a new option to use <iden> keys for interoperating with older clients.;Similar;0.5959804654121399
Fix mockwebserver jar download 404;404;Support client authentication in <file_name>;client authentication;Similar;0.6090447902679443
Fix mockwebserver jar download 404;404;Remove <iden>-mode <iden> cipher suites;This removes the following cipher suites as supported-by-default;Similar;0.5683560967445374
Fix mockwebserver jar download 404;404;Fix Javadoc builds with the jsr305 dependency  ;Because multiple modules share a package we need to share the dependency on everything in package-info.java;Similar;0.6415688395500183
Fix mockwebserver jar download 404;404;Make the  <file_name>  a little better.  <enter> <iden> threads by their URLs. Dont follow all fragments of the same <iden>;"For better organization; to prevent following all fragments of the same <iden>";Similar;0.6102035045623779
Fix mockwebserver jar download 404;404;Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;Similar;0.5830003023147583
Fix mockwebserver jar download 404;404;Fix tests to share a common <iden>. Also fix the memory limit, which may prevent Travis from failing our tests.;share a common <iden>, memory limit, prevent Travis from failing our tests;Similar;0.5398335456848145
Fix mockwebserver jar download 404;404;Update readme and changelog for <version>;<version>;Similar;0.5865598917007446
Fix mockwebserver jar download 404;404;New <file_name> class to normalize certificate chains  ;The goal of this is to get the root <iden> certificate into the certificate chain, so that it can be considered by the certificate pinner;Similar;0.5326173305511475
Fix mockwebserver jar download 404;404;Fix some get prefixes on <file_name> and <method_name>;"-
None";Similar;0.6111812591552734
Fix mockwebserver jar download 404;404;Add <method_name>;Might be useful to expose this bookkeeping to app developers;Similar;0.5582374334335327
Fix mockwebserver jar download 404;404;Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Similar;0.667627215385437
Fix mockwebserver jar download 404;404;Expose internal APIs for pluggable file systems, Also migrate all of our tests to use the <method_name>  ;We arent yet ready to make <iden> a public type, but I dont mind making it _almost_ available via an internal API for those brave enough to try that, Its simpler.;Similar;0.5972827672958374
Fix mockwebserver jar download 404;404;Change  <file_name>  to not implement java.net.ResponseCache;This marks some methods as  @deprecated and internal-only. Unfortunately we dont have a great mechanism to hide them from the documented <iden>.;Similar;0.5418006181716919
Fix mockwebserver jar download 404;404;Fix <iden> post retransmit in the new API  ;We dont buffer response bodies in the new API. But we should retransmit POST bodies when a request fails.;Similar;0.6401573419570923
Fix mockwebserver jar download 404;404;Add a test for corner-case behavior;Im looking to make HttpURLConnectionImpl delegate to Job, and that means writing tests for all the weird things it does above HttpEngine.;Similar;0.5149122476577759
Fix mockwebserver jar download 404;404;Add some pings to force happens-before in <iden> tests;Previously we were relying on accidents to get our tests to pass;Similar;0.5501192808151245
Fix mockwebserver jar download 404;404;Move  <file_name>  pooling logic  ;"previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams; move  <file_name>  reuse to  <file_name>, with policy informed by  <method_name>  specifying what to do when the  <file_name>  becomes idle: pool, close or hold, so the  <file_name>  does what its told.";Similar;0.5584177374839783
Fix mockwebserver jar download 404;404;Implement moving bytes between OkBuffers  ;This is more complicated than Id anticipated;Similar;0.5751505494117737
Fix mockwebserver jar download 404;404;Fix checkstyle issues in new <iden> code;checkstyle issues;Similar;0.5824039578437805
Fix mockwebserver jar download 404;404;Kill <file_name> in the process  ;Teach <file_name> <iden>;Similar;0.5264615416526794
Fix mockwebserver jar download 404;404;Introduce a <file_name> interface between engine and connection.;This breaks the direct dependency from <file_name> to <method_name>;Similar;0.65973961353302
Fix mockwebserver jar download 404;404;Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;Similar;0.5267981886863708
Fix mockwebserver jar download 404;404;Move out of the <file_name> package;To promote the code into AOSP, well keep this package as-is and do the jarjar in <iden> instead;Similar;0.5683193206787109
Fix mockwebserver jar download 404;404;Add error-prone compiler and fix its found issues;error-prone, its found issues;Similar;0.5972573757171631
Fix mockwebserver jar download 404;404;Expose <iden> directly on <method_name>  ;direct;Similar;0.5065956115722656
Fix mockwebserver jar download 404;404;Use HTML entity for ampersand;to represent the ampersand symbol in HTML;Similar;0.6337471008300781
Fix mockwebserver jar download 404;404;Add convenience overload for <iden>-backed <method_name>;convenience;Similar;0.5581772327423096
Fix mockwebserver jar download 404;404;Update website to the latest design  ;latest design;Similar;0.5052705407142639
Fix mockwebserver jar download 404;404;add @override for subclass override method;subclass override method;Similar;0.6118488907814026
Fix mockwebserver jar download 404;404;Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Similar;0.6420537233352661
Fix mockwebserver jar download 404;404;The changes to <iden>s  <file_name> have been ported  ;Upstream commit of <iden> / <iden> fix, This does not include the introduction of PlatformTest, which will be difficult to write so it works everywhere;Similar;0.6393661499023438
Fix mockwebserver jar download 404;404;Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Similar;0.5745394825935364
Fix mockwebserver jar download 404;404;Return <file_name> to previous (e.g. KitKat) behavior;this change required to handle this <iden> scenario;Similar;0.5715785622596741
Fix mockwebserver jar download 404;404;Document <file_name> throwing modes;To include the <pr_link> information;Similar;0.6260669231414795
Fix mockwebserver jar download 404;404;Convert <file_name> to Kotlin;<pr_link>, <iden>, <file_name>;Similar;0.6553707122802734
Fix mockwebserver jar download 404;404;Convert <file_name>, <file_name> to Kotlin  ;"to Kotlin

Decision: Rename <file_name> <version> to .kt (and others)  ";Similar;0.6408506035804749
Fix mockwebserver jar download 404;404;Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Similar;0.6186233162879944
Fix mockwebserver jar download 404;404;Fail HTTP/2 connections if the pong is not received;This removes the abstraction from our http2 package;Similar;0.5289521217346191
Fix mockwebserver jar download 404;404;Fix a race in <method_name> ( <pr_link> );We were assuming on a client failure the server wouldnt have any further events. But it will get a failure if we give it a moment. This was causing some test flakiness.;Similar;0.596707820892334
Fix mockwebserver jar download 404;404;Refactor <file_name> by using <iden>;We can use <iden> instead of overriding <iden> abstract class;Similar;0.6059346199035645
Fix mockwebserver jar download 404;404;Enable GitHub Security Scanning;To configure GitHub workflow for code security scanning;Similar;0.5954899787902832
Fix mockwebserver jar download 404;404;Fix bug where request body isnt sent when it should  ;request body isnt sent when it should;Similar;0.5949609279632568
Fix mockwebserver jar download 404;404;Add support for following <iden> 307 temporary redirects  ;Fixes Android bug 41739;Similar;0.5762444734573364
Fix mockwebserver jar download 404;404;Add wildcard hostnames support in <file_name>;support;Similar;0.6609786152839661
Fix mockwebserver jar download 404;404;Fix correctness of WebSocketReader reserved flags test;reserved flags;Similar;0.6832743883132935
update proguard rules on README.md ( <pr_link> );-;Update factories to be idiomatic;be idiomatic;Similar;0.5028054118156433
update proguard rules on README.md ( <pr_link> );-;Beef up <file_name>s toString;Previously it unconditionally showed tags even if empty and would not show headers;Similar;0.5775644779205322
update proguard rules on README.md ( <pr_link> );-;Make error-prone validate missing override annotations;error-prone, missing override annotations;Similar;0.5059130787849426
update proguard rules on README.md ( <pr_link> );-;fix README.md typo;README.md typo;Similar;0.7530752420425415
update proguard rules on README.md ( <pr_link> );-;Fix single failing graal test ( <pr_link> );single failing;Similar;0.5746726989746094
update proguard rules on README.md ( <pr_link> );-;Centralise logging behind JUL (<pr_link>) <enter> Use JUL, but wire up to the <method_name> <enter> Use `adb shell setprop log.tag.okhttp.Http2 <iden>` to enable logging for known levels;to enable logging for known levels;Similar;0.7023615837097168
update proguard rules on README.md ( <pr_link> );-;Wrap <iden> addresses with [] and return / path URIs for proxy CONNECT;Fix MockWebserver for <iden> addresses;Similar;0.7119967937469482
update proguard rules on README.md ( <pr_link> );-;Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;Similar;0.6222267150878906
update proguard rules on README.md ( <pr_link> );-;Update  <file_name>  to temporarily ignore javadoc errors and compile tests but not run ( <pr_link> );temporarily ignore javadoc errors and compile tests;Similar;0.5872130393981934
update proguard rules on README.md ( <pr_link> );-;Make  <file_name>  more capable.;more capable;Similar;0.5315513014793396
update proguard rules on README.md ( <pr_link> );-;fix <file_name> for Java 9;Java 9;Similar;0.5565173625946045
update proguard rules on README.md ( <pr_link> );-;Limit recovery attempts for REFUSED_STREAM errors;We limit per-connection retries but not per-call retries, so this was creating large numbers of connections each of which called the server and accepted yet another REFUSED_STREAM.;Similar;0.5397026538848877
update proguard rules on README.md ( <pr_link> );-;Add HTTP/2 and <iden><version> columns to our security providers doc ;to enhance our security documentation;Similar;0.7796476483345032
update proguard rules on README.md ( <pr_link> );-;Use  <file_name> s built-in <iden> style  <enter>  ;The boilerplate to set this up is unfortunate;Similar;0.6126428842544556
update proguard rules on README.md ( <pr_link> );-;Use <iden> in <file_name>  ;The utility here is negligible. Were sharing threads between HTTP, HTTP/2 and web sockets now.;Similar;0.5768303275108337
update proguard rules on README.md ( <pr_link> );-;Adopt idiomatic <iden> in <file_name>;idiomatic;Similar;0.6670864820480347
update proguard rules on README.md ( <pr_link> );-;Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they cant be open. I think the motivation to make these non-final was pretty weak, and I dont mind breaking <iden> compatibility here.;Similar;0.5872371196746826
update proguard rules on README.md ( <pr_link> );-;Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;Similar;0.6499131917953491
update proguard rules on README.md ( <pr_link> );-;Include prerequisites in the releasing guide.;to provide necessary information for users;Similar;0.5957350730895996
update proguard rules on README.md ( <pr_link> );-;Convert <file_name> to Kotlin;"to Kotlin

Decision: Rename <file_name> to .kt";Similar;0.5955554246902466
update proguard rules on README.md ( <pr_link> );-;Introduce <method_name> ;This is the payoff that preceding changes have been working towards.;Similar;0.5685820579528809
update proguard rules on README.md ( <pr_link> );-;Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.;Similar;0.5831023454666138
update proguard rules on README.md ( <pr_link> );-;Fix some maven problems that are blocking the <version> release;blocking the <version> release;Similar;0.5294888019561768
update proguard rules on README.md ( <pr_link> );-;Rename <method_name> to <iden()>;I prefer signed;Similar;0.5907449126243591
update proguard rules on README.md ( <pr_link> );-;Fixup <file_name> so that its worthy of production use.;This changes the default from the insecure 1024-bit <iden> to a secure 256-bit <iden> key. It adds a new option to use <iden> keys for interoperating with older clients.;Similar;0.6085906028747559
update proguard rules on README.md ( <pr_link> );-;Support client authentication in <file_name>;client authentication;Similar;0.7135753631591797
update proguard rules on README.md ( <pr_link> );-;Remove <iden>-mode <iden> cipher suites;This removes the following cipher suites as supported-by-default;Similar;0.5464469194412231
update proguard rules on README.md ( <pr_link> );-;Fix Javadoc builds with the jsr305 dependency  ;Because multiple modules share a package we need to share the dependency on everything in package-info.java;Similar;0.5678671598434448
update proguard rules on README.md ( <pr_link> );-;Make the  <file_name>  a little better.  <enter> <iden> threads by their URLs. Dont follow all fragments of the same <iden>;"For better organization; to prevent following all fragments of the same <iden>";Similar;0.5840530395507812
update proguard rules on README.md ( <pr_link> );-;Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;Similar;0.6520723104476929
update proguard rules on README.md ( <pr_link> );-;Fix tests to share a common <iden>. Also fix the memory limit, which may prevent Travis from failing our tests.;share a common <iden>, memory limit, prevent Travis from failing our tests;Similar;0.5788291096687317
update proguard rules on README.md ( <pr_link> );-;Update readme and changelog for <version>;<version>;Similar;0.7479066848754883
update proguard rules on README.md ( <pr_link> );-;New <file_name> class to normalize certificate chains  ;The goal of this is to get the root <iden> certificate into the certificate chain, so that it can be considered by the certificate pinner;Similar;0.7074084877967834
update proguard rules on README.md ( <pr_link> );-;Fix some get prefixes on <file_name> and <method_name>;"-
None";Similar;0.6159147024154663
update proguard rules on README.md ( <pr_link> );-;Write some new connection pool tests;These use the <iden> APIs. Theyre high-level so they wont break with the implementation rewrite.;Similar;0.5858659744262695
update proguard rules on README.md ( <pr_link> );-;Add <method_name>;Might be useful to expose this bookkeeping to app developers;Similar;0.5493648052215576
update proguard rules on README.md ( <pr_link> );-;Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Similar;0.6317871809005737
update proguard rules on README.md ( <pr_link> );-;Expose internal APIs for pluggable file systems, Also migrate all of our tests to use the <method_name>  ;We arent yet ready to make <iden> a public type, but I dont mind making it _almost_ available via an internal API for those brave enough to try that, Its simpler.;Similar;0.6677884459495544
update proguard rules on README.md ( <pr_link> );-;Fix <iden> post retransmit in the new API  ;We dont buffer response bodies in the new API. But we should retransmit POST bodies when a request fails.;Similar;0.6834489703178406
update proguard rules on README.md ( <pr_link> );-;Add some pings to force happens-before in <iden> tests;Previously we were relying on accidents to get our tests to pass;Similar;0.5988894701004028
update proguard rules on README.md ( <pr_link> );-;Move  <file_name>  pooling logic  ;"previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams; move  <file_name>  reuse to  <file_name>, with policy informed by  <method_name>  specifying what to do when the  <file_name>  becomes idle: pool, close or hold, so the  <file_name>  does what its told.";Similar;0.5575374364852905
update proguard rules on README.md ( <pr_link> );-;Implement moving bytes between OkBuffers  ;This is more complicated than Id anticipated;Similar;0.5559321045875549
update proguard rules on README.md ( <pr_link> );-;Fix checkstyle issues in new <iden> code;checkstyle issues;Similar;0.6241883039474487
update proguard rules on README.md ( <pr_link> );-;Introduce a <file_name> interface between engine and connection.;This breaks the direct dependency from <file_name> to <method_name>;Similar;0.6692383289337158
update proguard rules on README.md ( <pr_link> );-;Update to the latest <method_name>;Includes everything thru 8842981cbcfe20eb4721c0a2c867fa9a18233062;Similar;0.5764643549919128
update proguard rules on README.md ( <pr_link> );-;Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;Similar;0.5974159240722656
update proguard rules on README.md ( <pr_link> );-;Move out of the <file_name> package;To promote the code into AOSP, well keep this package as-is and do the jarjar in <iden> instead;Similar;0.5192310214042664
update proguard rules on README.md ( <pr_link> );-;Make the `<method_name>` return full working connections;Previously the returned connections required the caller to do extra work: setting up tunnels and performing an `<iden>` handshake. With this change, we make a complete working connection in `<method_name>`. This will make it easier to fix fallback when a single domain has multiple `<iden>` addresses that are not reachable. Also, this will make it easier to do SPDY through `<iden>` proxies.;Similar;0.5742502212524414
update proguard rules on README.md ( <pr_link> );-;Add error-prone compiler and fix its found issues;error-prone, its found issues;Similar;0.5055209994316101
update proguard rules on README.md ( <pr_link> );-;Expose <iden> directly on <method_name>  ;direct;Similar;0.5389394760131836
update proguard rules on README.md ( <pr_link> );-;Use HTML entity for ampersand;to represent the ampersand symbol in HTML;Similar;0.5993847846984863
update proguard rules on README.md ( <pr_link> );-;Add convenience overload for <iden>-backed <method_name>;convenience;Similar;0.5916960835456848
update proguard rules on README.md ( <pr_link> );-;Use consistent camel casing of <iden>;consistent camel casing;Similar;0.5092117190361023
update proguard rules on README.md ( <pr_link> );-;Update website to the latest design  ;latest design;Similar;0.60018390417099
update proguard rules on README.md ( <pr_link> );-;add @override for subclass override method;subclass override method;Similar;0.6567726135253906
update proguard rules on README.md ( <pr_link> );-;Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Similar;0.6204243302345276
update proguard rules on README.md ( <pr_link> );-;The changes to <iden>s  <file_name> have been ported  ;Upstream commit of <iden> / <iden> fix, This does not include the introduction of PlatformTest, which will be difficult to write so it works everywhere;Similar;0.6867003440856934
update proguard rules on README.md ( <pr_link> );-;Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Similar;0.5993618369102478
update proguard rules on README.md ( <pr_link> );-;Return <file_name> to previous (e.g. KitKat) behavior;this change required to handle this <iden> scenario;Similar;0.6046531200408936
update proguard rules on README.md ( <pr_link> );-;Document <file_name> throwing modes;To include the <pr_link> information;Similar;0.5669389963150024
update proguard rules on README.md ( <pr_link> );-;Convert <file_name> to Kotlin;<pr_link>, <iden>, <file_name>;Similar;0.5955554246902466
update proguard rules on README.md ( <pr_link> );-;Convert <file_name>, <file_name> to Kotlin  ;"to Kotlin

Decision: Rename <file_name> <version> to .kt (and others)  ";Similar;0.6003502011299133
update proguard rules on README.md ( <pr_link> );-;Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Similar;0.6387866735458374
update proguard rules on README.md ( <pr_link> );-;Fix a race in <method_name> ( <pr_link> );We were assuming on a client failure the server wouldnt have any further events. But it will get a failure if we give it a moment. This was causing some test flakiness.;Similar;0.6970531940460205
update proguard rules on README.md ( <pr_link> );-;Refactor <file_name> by using <iden>;We can use <iden> instead of overriding <iden> abstract class;Similar;0.6538768410682678
update proguard rules on README.md ( <pr_link> );-;Enable GitHub Security Scanning;To configure GitHub workflow for code security scanning;Similar;0.6202166080474854
update proguard rules on README.md ( <pr_link> );-;Fix bug where request body isnt sent when it should  ;request body isnt sent when it should;Similar;0.5135158896446228
update proguard rules on README.md ( <pr_link> );-;Add support for following <iden> 307 temporary redirects  ;Fixes Android bug 41739;Similar;0.5141798853874207
update proguard rules on README.md ( <pr_link> );-;Add wildcard hostnames support in <file_name>;support;Similar;0.6893478631973267
update proguard rules on README.md ( <pr_link> );-;Fix correctness of WebSocketReader reserved flags test;reserved flags;Similar;0.6482132077217102
Remove obsolete <iden>;obsolete;Update factories to be idiomatic;be idiomatic;Similar;0.5014073848724365
Remove obsolete <iden>;obsolete;Beef up <file_name>s toString;Previously it unconditionally showed tags even if empty and would not show headers;Similar;0.5242015719413757
Remove obsolete <iden>;obsolete;Make error-prone validate missing override annotations;error-prone, missing override annotations;Similar;0.641007661819458
Remove obsolete <iden>;obsolete;fix README.md typo;README.md typo;Similar;0.5829336047172546
Remove obsolete <iden>;obsolete;Fix single failing graal test ( <pr_link> );single failing;Similar;0.5509207248687744
Remove obsolete <iden>;obsolete;Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;Similar;0.605355978012085
Remove obsolete <iden>;obsolete;Use IOException instead of <iden>;more specific in <file_name> API;Similar;0.6427158713340759
Remove obsolete <iden>;obsolete;Make  <file_name>  more capable.;more capable;Similar;0.5204729437828064
Remove obsolete <iden>;obsolete;document support for SNI;support for SNI;Similar;0.5172160863876343
Remove obsolete <iden>;obsolete;Limit recovery attempts for REFUSED_STREAM errors;We limit per-connection retries but not per-call retries, so this was creating large numbers of connections each of which called the server and accepted yet another REFUSED_STREAM.;Similar;0.6313508152961731
Remove obsolete <iden>;obsolete;Use our test rule instead of the Maven Surefire listener  ;to Close the issue indicated by the link;Similar;0.598650336265564
Remove obsolete <iden>;obsolete;Degrade connections after a timeout;This is based roughly on the <iden> Connections proposal here;Similar;0.762837290763855
Remove obsolete <iden>;obsolete;Use <iden> in <file_name>  ;The utility here is negligible. Were sharing threads between HTTP, HTTP/2 and web sockets now.;Similar;0.5441496968269348
Remove obsolete <iden>;obsolete;Adopt idiomatic <iden> in <file_name>;idiomatic;Similar;0.5406800508499146
Remove obsolete <iden>;obsolete;Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they cant be open. I think the motivation to make these non-final was pretty weak, and I dont mind breaking <iden> compatibility here.;Similar;0.5850422382354736
Remove obsolete <iden>;obsolete;Convert <file_name> to Kotlin;"to Kotlin

Decision: Rename <file_name> to .kt";Similar;0.5528477430343628
Remove obsolete <iden>;obsolete;Introduce <method_name> ;This is the payoff that preceding changes have been working towards.;Similar;0.5999563932418823
Remove obsolete <iden>;obsolete;Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.;Similar;0.5521542429924011
Remove obsolete <iden>;obsolete;Fix some maven problems that are blocking the <version> release;blocking the <version> release;Similar;0.50853431224823
Remove obsolete <iden>;obsolete;Rename <method_name> to <iden()>;I prefer signed;Similar;0.6732184290885925
Remove obsolete <iden>;obsolete;Remove <iden>-mode <iden> cipher suites;This removes the following cipher suites as supported-by-default;Similar;0.8292649984359741
Remove obsolete <iden>;obsolete;Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;Similar;0.5577591061592102
Remove obsolete <iden>;obsolete;Collapse interceptors into a single chain;Instead of having a chain of application interceptors and a separate chain of network interceptors, this makes a single heterogeneous chain. It makes the <iden> core and network caller into interceptors.;Similar;0.6456550359725952
Remove obsolete <iden>;obsolete;Update readme and changelog for <version>;<version>;Similar;0.5013975501060486
Remove obsolete <iden>;obsolete;Add <method_name>;Might be useful to expose this bookkeeping to app developers;Similar;0.5706787109375
Remove obsolete <iden>;obsolete;Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Similar;0.6218602657318115
Remove obsolete <iden>;obsolete;Drop our one remaining <iden> cipher suite;Tracking <iden> and Firefox, which have also dropped this cipher suite;Similar;0.7556700706481934
Remove obsolete <iden>;obsolete;Change  <file_name>  to not implement java.net.ResponseCache;This marks some methods as  @deprecated and internal-only. Unfortunately we dont have a great mechanism to hide them from the documented <iden>.;Similar;0.707466185092926
Remove obsolete <iden>;obsolete;The implementation is built around one oversized method that runs top to bottom;I found this was easier to follow than the switch statement recommended by the <iden> standard;Similar;0.5382291078567505
Remove obsolete <iden>;obsolete;Track <file_name> ownership  ;<file_name> ownership is somewhat racy: when an HttpURLConnection reads the last byte of a connection, its ownership is released and given to the <method_name>;Similar;0.5017433762550354
Remove obsolete <iden>;obsolete;Dont attempt <iden> modes we know will fail.;we know will fail;Similar;0.5595105886459351
Remove obsolete <iden>;obsolete;Remove <iden> 2 warnings;Small docs fixes;Similar;0.840761661529541
Remove obsolete <iden>;obsolete;Kill <file_name> in the process  ;Teach <file_name> <iden>;Similar;0.6440420746803284
Remove obsolete <iden>;obsolete;Dont use <iden> APIs not in Gingerbread;APIs not in Gingerbread;Similar;0.6370570659637451
Remove obsolete <iden>;obsolete;Make  <file_name> less flaky;I was seeing flaky results in the debugger because pooled connections were being evicted as the test ran;Similar;0.7278832793235779
Remove obsolete <iden>;obsolete;Be more careful around IOExceptions;my goal is to make it easier to differentiate between protocol-level problems (bogus frames) from transport-level problems (closed sockets and EOF streams);Similar;0.5150680541992188
Remove obsolete <iden>;obsolete;Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;Similar;0.538699746131897
Remove obsolete <iden>;obsolete;Move out of the <file_name> package;To promote the code into AOSP, well keep this package as-is and do the jarjar in <iden> instead;Similar;0.7935770750045776
Remove obsolete <iden>;obsolete;We dont need no stinkin braces;no stinkin braces;Similar;0.6332484483718872
Remove obsolete <iden>;obsolete;Fix <iden> which was being computed incorrectly;<enter> We were only returning true once we were already in a tunnel. This was bogus. In theory a <iden> tunnel sending extra data could be corrupted due to this bug.;Similar;0.6489635109901428
Remove obsolete <iden>;obsolete;Remove old <iden> protocol method;old;Similar;0.8829680681228638
Remove obsolete <iden>;obsolete;Expose <iden> directly on <method_name>  ;direct;Similar;0.556893527507782
Remove obsolete <iden>;obsolete;Use HTML entity for ampersand;to represent the ampersand symbol in HTML;Similar;0.5022285580635071
Remove obsolete <iden>;obsolete;Drop unused dependencies;unused;Similar;0.8461574912071228
Remove obsolete <iden>;obsolete;Transfer to/from <iden> directly from <iden>  ;<pr_link>;Similar;0.6029907464981079
Remove obsolete <iden>;obsolete;Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Similar;0.5441991686820984
Remove obsolete <iden>;obsolete;Partially revert connection timeout behavior  ;The modification of the timeout behavior during connection caused problems;Similar;0.5338267683982849
Remove obsolete <iden>;obsolete;Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Similar;0.6425292491912842
Remove obsolete <iden>;obsolete;Return <file_name> to previous (e.g. KitKat) behavior;this change required to handle this <iden> scenario;Similar;0.5096399784088135
Remove obsolete <iden>;obsolete;Document <file_name> throwing modes;To include the <pr_link> information;Similar;0.5478388071060181
Remove obsolete <iden>;obsolete;Convert <file_name> to Kotlin;<pr_link>, <iden>, <file_name>;Similar;0.5528477430343628
Remove obsolete <iden>;obsolete;Convert <file_name>, <file_name> to Kotlin  ;"to Kotlin

Decision: Rename <file_name> <version> to .kt (and others)  ";Similar;0.5521503686904907
Remove obsolete <iden>;obsolete;Fail HTTP/2 connections if the pong is not received;This removes the abstraction from our http2 package;Similar;0.654893159866333
Remove obsolete <iden>;obsolete;Just pass the <iden> and <iden> objects in directly;Dont summarize the request and response;Similar;0.6125249862670898
Remove obsolete <iden>;obsolete;Improve some Markdown;improve;Similar;0.5544418692588806
Remove obsolete <iden>;obsolete;fix <issue_link> : PROPFIND request should not redirect to GET request;PROPFIND request should not redirect to GET request;Similar;0.6044443249702454
Remove obsolete <iden>;obsolete;Refactor <file_name> by using <iden>;We can use <iden> instead of overriding <iden> abstract class;Similar;0.5456924438476562
Remove obsolete <iden>;obsolete;Remove unnecessary use of grouping parentheses  ;Lets remove warnings found by errorprone.;Similar;0.8274843096733093
Remove obsolete <iden>;obsolete;load through bootstrap;-;Similar;0.5836161375045776
Remove obsolete <iden>;obsolete;Fix bug where request body isnt sent when it should  ;request body isnt sent when it should;Similar;0.6172060966491699
Remove obsolete <iden>;obsolete;Add support for following <iden> 307 temporary redirects  ;Fixes Android bug 41739;Similar;0.5059051513671875
Update factories to be idiomatic;be idiomatic;Beef up <file_name>s toString;Previously it unconditionally showed tags even if empty and would not show headers;Similar;0.582646906375885
Update factories to be idiomatic;be idiomatic;Make error-prone validate missing override annotations;error-prone, missing override annotations;Similar;0.5220041871070862
Update factories to be idiomatic;be idiomatic;fix README.md typo;README.md typo;Similar;0.5977455377578735
Update factories to be idiomatic;be idiomatic;Centralise logging behind JUL (<pr_link>) <enter> Use JUL, but wire up to the <method_name> <enter> Use `adb shell setprop log.tag.okhttp.Http2 <iden>` to enable logging for known levels;to enable logging for known levels;Similar;0.5568832159042358
Update factories to be idiomatic;be idiomatic;init speedup  ;file_name, pr_link;Similar;0.5209447741508484
Update factories to be idiomatic;be idiomatic;API for handling an unexpected SSE response;unexpected;Similar;0.5366889238357544
Update factories to be idiomatic;be idiomatic;Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;Similar;0.5865873694419861
Update factories to be idiomatic;be idiomatic;Fix travis build;Fix;Similar;0.6071093082427979
Update factories to be idiomatic;be idiomatic;Use IOException instead of <iden>;more specific in <file_name> API;Similar;0.5023715496063232
Update factories to be idiomatic;be idiomatic;Make  <file_name>  more capable.;more capable;Similar;0.6364244222640991
Update factories to be idiomatic;be idiomatic;fix <file_name> for Java 9;Java 9;Similar;0.5262745022773743
Update factories to be idiomatic;be idiomatic;document support for SNI;support for SNI;Similar;0.5491811633110046
Update factories to be idiomatic;be idiomatic;Add HTTP/2 and <iden><version> columns to our security providers doc ;to enhance our security documentation;Similar;0.5398074388504028
Update factories to be idiomatic;be idiomatic;Use  <file_name> s built-in <iden> style  <enter>  ;The boilerplate to set this up is unfortunate;Similar;0.6116894483566284
Update factories to be idiomatic;be idiomatic;Use our test rule instead of the Maven Surefire listener  ;to Close the issue indicated by the link;Similar;0.5217017531394958
Update factories to be idiomatic;be idiomatic;Use <iden> in <file_name>  ;The utility here is negligible. Were sharing threads between HTTP, HTTP/2 and web sockets now.;Similar;0.5425975322723389
Update factories to be idiomatic;be idiomatic;Adopt idiomatic <iden> in <file_name>;idiomatic;Similar;0.6592071652412415
Update factories to be idiomatic;be idiomatic;Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they cant be open. I think the motivation to make these non-final was pretty weak, and I dont mind breaking <iden> compatibility here.;Similar;0.6119513511657715
Update factories to be idiomatic;be idiomatic;Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;Similar;0.5611788630485535
Update factories to be idiomatic;be idiomatic;Include prerequisites in the releasing guide.;to provide necessary information for users;Similar;0.5530223250389099
Update factories to be idiomatic;be idiomatic;Convert <file_name> to Kotlin;"to Kotlin

Decision: Rename <file_name> to .kt";Similar;0.5402652025222778
Update factories to be idiomatic;be idiomatic;Introduce <method_name> ;This is the payoff that preceding changes have been working towards.;Similar;0.6395128965377808
Update factories to be idiomatic;be idiomatic;Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.;Similar;0.6650608777999878
Update factories to be idiomatic;be idiomatic;Rename <method_name> to <iden()>;I prefer signed;Similar;0.6255806088447571
Update factories to be idiomatic;be idiomatic;Fixup <file_name> so that its worthy of production use.;This changes the default from the insecure 1024-bit <iden> to a secure 256-bit <iden> key. It adds a new option to use <iden> keys for interoperating with older clients.;Similar;0.724441647529602
Update factories to be idiomatic;be idiomatic;Remove <iden>-mode <iden> cipher suites;This removes the following cipher suites as supported-by-default;Similar;0.5555305480957031
Update factories to be idiomatic;be idiomatic;Fix Javadoc builds with the jsr305 dependency  ;Because multiple modules share a package we need to share the dependency on everything in package-info.java;Similar;0.5613018274307251
Update factories to be idiomatic;be idiomatic;Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;Similar;0.5959698557853699
Update factories to be idiomatic;be idiomatic;Update readme and changelog for <version>;<version>;Similar;0.5945343375205994
Update factories to be idiomatic;be idiomatic;New <file_name> class to normalize certificate chains  ;The goal of this is to get the root <iden> certificate into the certificate chain, so that it can be considered by the certificate pinner;Similar;0.6033667325973511
Update factories to be idiomatic;be idiomatic;Fix some get prefixes on <file_name> and <method_name>;"-
None";Similar;0.523358941078186
Update factories to be idiomatic;be idiomatic;Add <method_name>;Might be useful to expose this bookkeeping to app developers;Similar;0.6351760625839233
Update factories to be idiomatic;be idiomatic;Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Similar;0.595086932182312
Update factories to be idiomatic;be idiomatic;Expose internal APIs for pluggable file systems, Also migrate all of our tests to use the <method_name>  ;We arent yet ready to make <iden> a public type, but I dont mind making it _almost_ available via an internal API for those brave enough to try that, Its simpler.;Similar;0.5091481804847717
Update factories to be idiomatic;be idiomatic;Fix <iden> post retransmit in the new API  ;We dont buffer response bodies in the new API. But we should retransmit POST bodies when a request fails.;Similar;0.6095277070999146
Update factories to be idiomatic;be idiomatic;Add a test for corner-case behavior;Im looking to make HttpURLConnectionImpl delegate to Job, and that means writing tests for all the weird things it does above HttpEngine.;Similar;0.5424045324325562
Update factories to be idiomatic;be idiomatic;Add some pings to force happens-before in <iden> tests;Previously we were relying on accidents to get our tests to pass;Similar;0.5614324808120728
Update factories to be idiomatic;be idiomatic;Move  <file_name>  pooling logic  ;"previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams; move  <file_name>  reuse to  <file_name>, with policy informed by  <method_name>  specifying what to do when the  <file_name>  becomes idle: pool, close or hold, so the  <file_name>  does what its told.";Similar;0.6479684710502625
Update factories to be idiomatic;be idiomatic;Implement moving bytes between OkBuffers  ;This is more complicated than Id anticipated;Similar;0.5874427556991577
Update factories to be idiomatic;be idiomatic;Remove <iden> 2 warnings;Small docs fixes;Similar;0.5100694298744202
Update factories to be idiomatic;be idiomatic;Fix checkstyle issues in new <iden> code;checkstyle issues;Similar;0.5764951109886169
Update factories to be idiomatic;be idiomatic;Introduce a <file_name> interface between engine and connection.;This breaks the direct dependency from <file_name> to <method_name>;Similar;0.557378888130188
Update factories to be idiomatic;be idiomatic;Update to the latest <method_name>;Includes everything thru 8842981cbcfe20eb4721c0a2c867fa9a18233062;Similar;0.572271466255188
Update factories to be idiomatic;be idiomatic;Be more careful around IOExceptions;my goal is to make it easier to differentiate between protocol-level problems (bogus frames) from transport-level problems (closed sockets and EOF streams);Similar;0.5906962156295776
Update factories to be idiomatic;be idiomatic;Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;Similar;0.6209996342658997
Update factories to be idiomatic;be idiomatic;Move out of the <file_name> package;To promote the code into AOSP, well keep this package as-is and do the jarjar in <iden> instead;Similar;0.5137987732887268
Update factories to be idiomatic;be idiomatic;Make the `<method_name>` return full working connections;Previously the returned connections required the caller to do extra work: setting up tunnels and performing an `<iden>` handshake. With this change, we make a complete working connection in `<method_name>`. This will make it easier to fix fallback when a single domain has multiple `<iden>` addresses that are not reachable. Also, this will make it easier to do SPDY through `<iden>` proxies.;Similar;0.6260459423065186
Update factories to be idiomatic;be idiomatic;Add error-prone compiler and fix its found issues;error-prone, its found issues;Similar;0.5747988820075989
Update factories to be idiomatic;be idiomatic;Remove old <iden> protocol method;old;Similar;0.5099912881851196
Update factories to be idiomatic;be idiomatic;Expose <iden> directly on <method_name>  ;direct;Similar;0.6191961765289307
Update factories to be idiomatic;be idiomatic;Use HTML entity for ampersand;to represent the ampersand symbol in HTML;Similar;0.55946946144104
Update factories to be idiomatic;be idiomatic;Add convenience overload for <iden>-backed <method_name>;convenience;Similar;0.6580666303634644
Update factories to be idiomatic;be idiomatic;Update website to the latest design  ;latest design;Similar;0.5514883995056152
Update factories to be idiomatic;be idiomatic;Transfer to/from <iden> directly from <iden>  ;<pr_link>;Similar;0.5411893725395203
Update factories to be idiomatic;be idiomatic;add @override for subclass override method;subclass override method;Similar;0.5171360969543457
Update factories to be idiomatic;be idiomatic;Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Similar;0.5842524766921997
Update factories to be idiomatic;be idiomatic;The changes to <iden>s  <file_name> have been ported  ;Upstream commit of <iden> / <iden> fix, This does not include the introduction of PlatformTest, which will be difficult to write so it works everywhere;Similar;0.5293738842010498
Update factories to be idiomatic;be idiomatic;Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Similar;0.6418346166610718
Update factories to be idiomatic;be idiomatic;Return <file_name> to previous (e.g. KitKat) behavior;this change required to handle this <iden> scenario;Similar;0.5326213240623474
Update factories to be idiomatic;be idiomatic;Document <file_name> throwing modes;To include the <pr_link> information;Similar;0.5702564716339111
Update factories to be idiomatic;be idiomatic;Convert <file_name> to Kotlin;<pr_link>, <iden>, <file_name>;Similar;0.5402652025222778
Update factories to be idiomatic;be idiomatic;Convert <file_name>, <file_name> to Kotlin  ;"to Kotlin

Decision: Rename <file_name> <version> to .kt (and others)  ";Similar;0.5526369214057922
Update factories to be idiomatic;be idiomatic;Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Similar;0.5668420791625977
Update factories to be idiomatic;be idiomatic;Just pass the <iden> and <iden> objects in directly;Dont summarize the request and response;Similar;0.5486651659011841
Update factories to be idiomatic;be idiomatic;Fix a race in <method_name> ( <pr_link> );We were assuming on a client failure the server wouldnt have any further events. But it will get a failure if we give it a moment. This was causing some test flakiness.;Similar;0.5654017925262451
Update factories to be idiomatic;be idiomatic;Improve some Markdown;improve;Similar;0.5753979682922363
Update factories to be idiomatic;be idiomatic;Refactor <file_name> by using <iden>;We can use <iden> instead of overriding <iden> abstract class;Similar;0.5945554971694946
Update factories to be idiomatic;be idiomatic;load through bootstrap;-;Similar;0.5967577695846558
Update factories to be idiomatic;be idiomatic;Add support for following <iden> 307 temporary redirects  ;Fixes Android bug 41739;Similar;0.5562101006507874
Update factories to be idiomatic;be idiomatic;Fix correctness of WebSocketReader reserved flags test;reserved flags;Similar;0.5082229971885681
Beef up <file_name>s toString;Previously it unconditionally showed tags even if empty and would not show headers;Make error-prone validate missing override annotations;error-prone, missing override annotations;Similar;0.5661093592643738
Beef up <file_name>s toString;Previously it unconditionally showed tags even if empty and would not show headers;fix README.md typo;README.md typo;Similar;0.6645437479019165
Beef up <file_name>s toString;Previously it unconditionally showed tags even if empty and would not show headers;Fix single failing graal test ( <pr_link> );single failing;Similar;0.5067639350891113
Beef up <file_name>s toString;Previously it unconditionally showed tags even if empty and would not show headers;Centralise logging behind JUL (<pr_link>) <enter> Use JUL, but wire up to the <method_name> <enter> Use `adb shell setprop log.tag.okhttp.Http2 <iden>` to enable logging for known levels;to enable logging for known levels;Similar;0.5778133869171143
Beef up <file_name>s toString;Previously it unconditionally showed tags even if empty and would not show headers;init speedup  ;file_name, pr_link;Similar;0.5416540503501892
Beef up <file_name>s toString;Previously it unconditionally showed tags even if empty and would not show headers;API for handling an unexpected SSE response;unexpected;Similar;0.5406035780906677
Beef up <file_name>s toString;Previously it unconditionally showed tags even if empty and would not show headers;Wrap <iden> addresses with [] and return / path URIs for proxy CONNECT;Fix MockWebserver for <iden> addresses;Similar;0.5664647221565247
Beef up <file_name>s toString;Previously it unconditionally showed tags even if empty and would not show headers;Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;Similar;0.669084906578064
Beef up <file_name>s toString;Previously it unconditionally showed tags even if empty and would not show headers;Fix travis build;Fix;Similar;0.5578768253326416
Beef up <file_name>s toString;Previously it unconditionally showed tags even if empty and would not show headers;Use IOException instead of <iden>;more specific in <file_name> API;Similar;0.5980517268180847
Beef up <file_name>s toString;Previously it unconditionally showed tags even if empty and would not show headers;Make  <file_name>  more capable.;more capable;Similar;0.6837584972381592
Beef up <file_name>s toString;Previously it unconditionally showed tags even if empty and would not show headers;fix <file_name> for Java 9;Java 9;Similar;0.5512280464172363
Beef up <file_name>s toString;Previously it unconditionally showed tags even if empty and would not show headers;document support for SNI;support for SNI;Similar;0.5841213464736938
Beef up <file_name>s toString;Previously it unconditionally showed tags even if empty and would not show headers;Limit recovery attempts for REFUSED_STREAM errors;We limit per-connection retries but not per-call retries, so this was creating large numbers of connections each of which called the server and accepted yet another REFUSED_STREAM.;Similar;0.5340476036071777
Beef up <file_name>s toString;Previously it unconditionally showed tags even if empty and would not show headers;Add HTTP/2 and <iden><version> columns to our security providers doc ;to enhance our security documentation;Similar;0.6213999390602112
Beef up <file_name>s toString;Previously it unconditionally showed tags even if empty and would not show headers;Use  <file_name> s built-in <iden> style  <enter>  ;The boilerplate to set this up is unfortunate;Similar;0.7476369738578796
Beef up <file_name>s toString;Previously it unconditionally showed tags even if empty and would not show headers;Use our test rule instead of the Maven Surefire listener  ;to Close the issue indicated by the link;Similar;0.5098267793655396
Beef up <file_name>s toString;Previously it unconditionally showed tags even if empty and would not show headers;Use <iden> in <file_name>  ;The utility here is negligible. Were sharing threads between HTTP, HTTP/2 and web sockets now.;Similar;0.7418210506439209
Beef up <file_name>s toString;Previously it unconditionally showed tags even if empty and would not show headers;Adopt idiomatic <iden> in <file_name>;idiomatic;Similar;0.7483657002449036
Beef up <file_name>s toString;Previously it unconditionally showed tags even if empty and would not show headers;Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they cant be open. I think the motivation to make these non-final was pretty weak, and I dont mind breaking <iden> compatibility here.;Similar;0.6479495763778687
Beef up <file_name>s toString;Previously it unconditionally showed tags even if empty and would not show headers;Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;Similar;0.5788293480873108
Beef up <file_name>s toString;Previously it unconditionally showed tags even if empty and would not show headers;Include prerequisites in the releasing guide.;to provide necessary information for users;Similar;0.5268974304199219
Beef up <file_name>s toString;Previously it unconditionally showed tags even if empty and would not show headers;Convert <file_name> to Kotlin;"to Kotlin

Decision: Rename <file_name> to .kt";Similar;0.7450311183929443
Beef up <file_name>s toString;Previously it unconditionally showed tags even if empty and would not show headers;Introduce <method_name> ;This is the payoff that preceding changes have been working towards.;Similar;0.7236765027046204
Beef up <file_name>s toString;Previously it unconditionally showed tags even if empty and would not show headers;Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.;Similar;0.7159186005592346
Beef up <file_name>s toString;Previously it unconditionally showed tags even if empty and would not show headers;Rename <method_name> to <iden()>;I prefer signed;Similar;0.7225250005722046
Beef up <file_name>s toString;Previously it unconditionally showed tags even if empty and would not show headers;Fixup <file_name> so that its worthy of production use.;This changes the default from the insecure 1024-bit <iden> to a secure 256-bit <iden> key. It adds a new option to use <iden> keys for interoperating with older clients.;Similar;0.6316705942153931
Beef up <file_name>s toString;Previously it unconditionally showed tags even if empty and would not show headers;Support client authentication in <file_name>;client authentication;Similar;0.574249267578125
Beef up <file_name>s toString;Previously it unconditionally showed tags even if empty and would not show headers;Remove <iden>-mode <iden> cipher suites;This removes the following cipher suites as supported-by-default;Similar;0.5890663862228394
Beef up <file_name>s toString;Previously it unconditionally showed tags even if empty and would not show headers;Fix Javadoc builds with the jsr305 dependency  ;Because multiple modules share a package we need to share the dependency on everything in package-info.java;Similar;0.599083423614502
Beef up <file_name>s toString;Previously it unconditionally showed tags even if empty and would not show headers;Make the  <file_name>  a little better.  <enter> <iden> threads by their URLs. Dont follow all fragments of the same <iden>;"For better organization; to prevent following all fragments of the same <iden>";Similar;0.5950263738632202
Beef up <file_name>s toString;Previously it unconditionally showed tags even if empty and would not show headers;Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;Similar;0.6507415175437927
Beef up <file_name>s toString;Previously it unconditionally showed tags even if empty and would not show headers;Collapse interceptors into a single chain;Instead of having a chain of application interceptors and a separate chain of network interceptors, this makes a single heterogeneous chain. It makes the <iden> core and network caller into interceptors.;Similar;0.5384355783462524
Beef up <file_name>s toString;Previously it unconditionally showed tags even if empty and would not show headers;Update readme and changelog for <version>;<version>;Similar;0.6392232179641724
Beef up <file_name>s toString;Previously it unconditionally showed tags even if empty and would not show headers;New <file_name> class to normalize certificate chains  ;The goal of this is to get the root <iden> certificate into the certificate chain, so that it can be considered by the certificate pinner;Similar;0.5208661556243896
Beef up <file_name>s toString;Previously it unconditionally showed tags even if empty and would not show headers;Fix some get prefixes on <file_name> and <method_name>;"-
None";Similar;0.6471072435379028
Beef up <file_name>s toString;Previously it unconditionally showed tags even if empty and would not show headers;Add <method_name>;Might be useful to expose this bookkeeping to app developers;Similar;0.7351473569869995
Beef up <file_name>s toString;Previously it unconditionally showed tags even if empty and would not show headers;Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Similar;0.7010499238967896
Beef up <file_name>s toString;Previously it unconditionally showed tags even if empty and would not show headers;Change  <file_name>  to not implement java.net.ResponseCache;This marks some methods as  @deprecated and internal-only. Unfortunately we dont have a great mechanism to hide them from the documented <iden>.;Similar;0.5589861869812012
Beef up <file_name>s toString;Previously it unconditionally showed tags even if empty and would not show headers;The implementation is built around one oversized method that runs top to bottom;I found this was easier to follow than the switch statement recommended by the <iden> standard;Similar;0.5666196346282959
Beef up <file_name>s toString;Previously it unconditionally showed tags even if empty and would not show headers;Fix <iden> post retransmit in the new API  ;We dont buffer response bodies in the new API. But we should retransmit POST bodies when a request fails.;Similar;0.553219735622406
Beef up <file_name>s toString;Previously it unconditionally showed tags even if empty and would not show headers;Add a test for corner-case behavior;Im looking to make HttpURLConnectionImpl delegate to Job, and that means writing tests for all the weird things it does above HttpEngine.;Similar;0.5546149611473083
Beef up <file_name>s toString;Previously it unconditionally showed tags even if empty and would not show headers;Add some pings to force happens-before in <iden> tests;Previously we were relying on accidents to get our tests to pass;Similar;0.5376468896865845
Beef up <file_name>s toString;Previously it unconditionally showed tags even if empty and would not show headers;Track <file_name> ownership  ;<file_name> ownership is somewhat racy: when an HttpURLConnection reads the last byte of a connection, its ownership is released and given to the <method_name>;Similar;0.6551955938339233
Beef up <file_name>s toString;Previously it unconditionally showed tags even if empty and would not show headers;Move  <file_name>  pooling logic  ;"previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams; move  <file_name>  reuse to  <file_name>, with policy informed by  <method_name>  specifying what to do when the  <file_name>  becomes idle: pool, close or hold, so the  <file_name>  does what its told.";Similar;0.7152929306030273
Beef up <file_name>s toString;Previously it unconditionally showed tags even if empty and would not show headers;Implement moving bytes between OkBuffers  ;This is more complicated than Id anticipated;Similar;0.6374016404151917
Beef up <file_name>s toString;Previously it unconditionally showed tags even if empty and would not show headers;Remove <iden> 2 warnings;Small docs fixes;Similar;0.5974228382110596
Beef up <file_name>s toString;Previously it unconditionally showed tags even if empty and would not show headers;Fix checkstyle issues in new <iden> code;checkstyle issues;Similar;0.5033215284347534
Beef up <file_name>s toString;Previously it unconditionally showed tags even if empty and would not show headers;Kill <file_name> in the process  ;Teach <file_name> <iden>;Similar;0.5568808317184448
Beef up <file_name>s toString;Previously it unconditionally showed tags even if empty and would not show headers;Introduce a <file_name> interface between engine and connection.;This breaks the direct dependency from <file_name> to <method_name>;Similar;0.7002503871917725
Beef up <file_name>s toString;Previously it unconditionally showed tags even if empty and would not show headers;Make  <file_name> less flaky;I was seeing flaky results in the debugger because pooled connections were being evicted as the test ran;Similar;0.5259267687797546
Beef up <file_name>s toString;Previously it unconditionally showed tags even if empty and would not show headers;Update to the latest <method_name>;Includes everything thru 8842981cbcfe20eb4721c0a2c867fa9a18233062;Similar;0.6078494787216187
Beef up <file_name>s toString;Previously it unconditionally showed tags even if empty and would not show headers;Be more careful around IOExceptions;my goal is to make it easier to differentiate between protocol-level problems (bogus frames) from transport-level problems (closed sockets and EOF streams);Similar;0.5542275309562683
Beef up <file_name>s toString;Previously it unconditionally showed tags even if empty and would not show headers;Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;Similar;0.5580442547798157
Beef up <file_name>s toString;Previously it unconditionally showed tags even if empty and would not show headers;Move out of the <file_name> package;To promote the code into AOSP, well keep this package as-is and do the jarjar in <iden> instead;Similar;0.6513932943344116
Beef up <file_name>s toString;Previously it unconditionally showed tags even if empty and would not show headers;Make the `<method_name>` return full working connections;Previously the returned connections required the caller to do extra work: setting up tunnels and performing an `<iden>` handshake. With this change, we make a complete working connection in `<method_name>`. This will make it easier to fix fallback when a single domain has multiple `<iden>` addresses that are not reachable. Also, this will make it easier to do SPDY through `<iden>` proxies.;Similar;0.6066404581069946
Beef up <file_name>s toString;Previously it unconditionally showed tags even if empty and would not show headers;Remove old <iden> protocol method;old;Similar;0.5981552600860596
Beef up <file_name>s toString;Previously it unconditionally showed tags even if empty and would not show headers;Expose <iden> directly on <method_name>  ;direct;Similar;0.7177088856697083
Beef up <file_name>s toString;Previously it unconditionally showed tags even if empty and would not show headers;Use HTML entity for ampersand;to represent the ampersand symbol in HTML;Similar;0.6707239151000977
Beef up <file_name>s toString;Previously it unconditionally showed tags even if empty and would not show headers;Add convenience overload for <iden>-backed <method_name>;convenience;Similar;0.6689510345458984
Beef up <file_name>s toString;Previously it unconditionally showed tags even if empty and would not show headers;Use consistent camel casing of <iden>;consistent camel casing;Similar;0.6217606067657471
Beef up <file_name>s toString;Previously it unconditionally showed tags even if empty and would not show headers;Transfer to/from <iden> directly from <iden>  ;<pr_link>;Similar;0.6191039085388184
Beef up <file_name>s toString;Previously it unconditionally showed tags even if empty and would not show headers;add @override for subclass override method;subclass override method;Similar;0.6687031388282776
Beef up <file_name>s toString;Previously it unconditionally showed tags even if empty and would not show headers;Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Similar;0.644041121006012
Beef up <file_name>s toString;Previously it unconditionally showed tags even if empty and would not show headers;The changes to <iden>s  <file_name> have been ported  ;Upstream commit of <iden> / <iden> fix, This does not include the introduction of PlatformTest, which will be difficult to write so it works everywhere;Similar;0.6214039325714111
Beef up <file_name>s toString;Previously it unconditionally showed tags even if empty and would not show headers;Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Similar;0.7370315194129944
Beef up <file_name>s toString;Previously it unconditionally showed tags even if empty and would not show headers;Return <file_name> to previous (e.g. KitKat) behavior;this change required to handle this <iden> scenario;Similar;0.6870447993278503
Beef up <file_name>s toString;Previously it unconditionally showed tags even if empty and would not show headers;Document <file_name> throwing modes;To include the <pr_link> information;Similar;0.7645806074142456
Beef up <file_name>s toString;Previously it unconditionally showed tags even if empty and would not show headers;Push OkHttp 3.1<version> into the sea;It is no longer supported;Similar;0.5342000126838684
Beef up <file_name>s toString;Previously it unconditionally showed tags even if empty and would not show headers;Convert <file_name> to Kotlin;<pr_link>, <iden>, <file_name>;Similar;0.7450311183929443
Beef up <file_name>s toString;Previously it unconditionally showed tags even if empty and would not show headers;Convert <file_name>, <file_name> to Kotlin  ;"to Kotlin

Decision: Rename <file_name> <version> to .kt (and others)  ";Similar;0.7440065741539001
Beef up <file_name>s toString;Previously it unconditionally showed tags even if empty and would not show headers;Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Similar;0.556749165058136
Beef up <file_name>s toString;Previously it unconditionally showed tags even if empty and would not show headers;Just pass the <iden> and <iden> objects in directly;Dont summarize the request and response;Similar;0.5408744812011719
Beef up <file_name>s toString;Previously it unconditionally showed tags even if empty and would not show headers;Fix a race in <method_name> ( <pr_link> );We were assuming on a client failure the server wouldnt have any further events. But it will get a failure if we give it a moment. This was causing some test flakiness.;Similar;0.6187204718589783
Beef up <file_name>s toString;Previously it unconditionally showed tags even if empty and would not show headers;Refactor <file_name> by using <iden>;We can use <iden> instead of overriding <iden> abstract class;Similar;0.7347956299781799
Beef up <file_name>s toString;Previously it unconditionally showed tags even if empty and would not show headers;Enable GitHub Security Scanning;To configure GitHub workflow for code security scanning;Similar;0.5445526242256165
Beef up <file_name>s toString;Previously it unconditionally showed tags even if empty and would not show headers;load through bootstrap;-;Similar;0.6264134645462036
Beef up <file_name>s toString;Previously it unconditionally showed tags even if empty and would not show headers;Fix bug where request body isnt sent when it should  ;request body isnt sent when it should;Similar;0.5298595428466797
Beef up <file_name>s toString;Previously it unconditionally showed tags even if empty and would not show headers;Add support for following <iden> 307 temporary redirects  ;Fixes Android bug 41739;Similar;0.5686110258102417
Beef up <file_name>s toString;Previously it unconditionally showed tags even if empty and would not show headers;Add wildcard hostnames support in <file_name>;support;Similar;0.6737529635429382
Beef up <file_name>s toString;Previously it unconditionally showed tags even if empty and would not show headers;Fix correctness of WebSocketReader reserved flags test;reserved flags;Similar;0.5228700041770935
Make error-prone validate missing override annotations;error-prone, missing override annotations;fix README.md typo;README.md typo;Similar;0.6960434913635254
Make error-prone validate missing override annotations;error-prone, missing override annotations;Fix single failing graal test ( <pr_link> );single failing;Similar;0.753208339214325
Make error-prone validate missing override annotations;error-prone, missing override annotations;Centralise logging behind JUL (<pr_link>) <enter> Use JUL, but wire up to the <method_name> <enter> Use `adb shell setprop log.tag.okhttp.Http2 <iden>` to enable logging for known levels;to enable logging for known levels;Similar;0.5636254549026489
Make error-prone validate missing override annotations;error-prone, missing override annotations;API for handling an unexpected SSE response;unexpected;Similar;0.6221441030502319
Make error-prone validate missing override annotations;error-prone, missing override annotations;Wrap <iden> addresses with [] and return / path URIs for proxy CONNECT;Fix MockWebserver for <iden> addresses;Similar;0.5057159066200256
Make error-prone validate missing override annotations;error-prone, missing override annotations;Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;Similar;0.6530588269233704
Make error-prone validate missing override annotations;error-prone, missing override annotations;Update  <file_name>  to temporarily ignore javadoc errors and compile tests but not run ( <pr_link> );temporarily ignore javadoc errors and compile tests;Similar;0.6401098966598511
Make error-prone validate missing override annotations;error-prone, missing override annotations;Use IOException instead of <iden>;more specific in <file_name> API;Similar;0.5775461792945862
Make error-prone validate missing override annotations;error-prone, missing override annotations;Make  <file_name>  more capable.;more capable;Similar;0.5704249143600464
Make error-prone validate missing override annotations;error-prone, missing override annotations;document support for SNI;support for SNI;Similar;0.5320596098899841
Make error-prone validate missing override annotations;error-prone, missing override annotations;Limit recovery attempts for REFUSED_STREAM errors;We limit per-connection retries but not per-call retries, so this was creating large numbers of connections each of which called the server and accepted yet another REFUSED_STREAM.;Similar;0.7825741171836853
Make error-prone validate missing override annotations;error-prone, missing override annotations;Use  <file_name> s built-in <iden> style  <enter>  ;The boilerplate to set this up is unfortunate;Similar;0.5569098591804504
Make error-prone validate missing override annotations;error-prone, missing override annotations;Use our test rule instead of the Maven Surefire listener  ;to Close the issue indicated by the link;Similar;0.6052289605140686
Make error-prone validate missing override annotations;error-prone, missing override annotations;Degrade connections after a timeout;This is based roughly on the <iden> Connections proposal here;Similar;0.5795145034790039
Make error-prone validate missing override annotations;error-prone, missing override annotations;Use <iden> in <file_name>  ;The utility here is negligible. Were sharing threads between HTTP, HTTP/2 and web sockets now.;Similar;0.577564537525177
Make error-prone validate missing override annotations;error-prone, missing override annotations;Adopt idiomatic <iden> in <file_name>;idiomatic;Similar;0.5799188613891602
Make error-prone validate missing override annotations;error-prone, missing override annotations;Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they cant be open. I think the motivation to make these non-final was pretty weak, and I dont mind breaking <iden> compatibility here.;Similar;0.5729799866676331
Make error-prone validate missing override annotations;error-prone, missing override annotations;Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;Similar;0.7633981704711914
Make error-prone validate missing override annotations;error-prone, missing override annotations;Include prerequisites in the releasing guide.;to provide necessary information for users;Similar;0.5279966592788696
Make error-prone validate missing override annotations;error-prone, missing override annotations;Convert <file_name> to Kotlin;"to Kotlin

Decision: Rename <file_name> to .kt";Similar;0.5742642283439636
Make error-prone validate missing override annotations;error-prone, missing override annotations;Introduce <method_name> ;This is the payoff that preceding changes have been working towards.;Similar;0.5607574582099915
Make error-prone validate missing override annotations;error-prone, missing override annotations;Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.;Similar;0.5922672152519226
Make error-prone validate missing override annotations;error-prone, missing override annotations;Fix some maven problems that are blocking the <version> release;blocking the <version> release;Similar;0.7064005732536316
Make error-prone validate missing override annotations;error-prone, missing override annotations;Rename <method_name> to <iden()>;I prefer signed;Similar;0.5841851234436035
Make error-prone validate missing override annotations;error-prone, missing override annotations;Fixup <file_name> so that its worthy of production use.;This changes the default from the insecure 1024-bit <iden> to a secure 256-bit <iden> key. It adds a new option to use <iden> keys for interoperating with older clients.;Similar;0.6066935062408447
Make error-prone validate missing override annotations;error-prone, missing override annotations;Support client authentication in <file_name>;client authentication;Similar;0.5533407330513
Make error-prone validate missing override annotations;error-prone, missing override annotations;Remove <iden>-mode <iden> cipher suites;This removes the following cipher suites as supported-by-default;Similar;0.6989341974258423
Make error-prone validate missing override annotations;error-prone, missing override annotations;Fix Javadoc builds with the jsr305 dependency  ;Because multiple modules share a package we need to share the dependency on everything in package-info.java;Similar;0.5092991590499878
Make error-prone validate missing override annotations;error-prone, missing override annotations;Make the  <file_name>  a little better.  <enter> <iden> threads by their URLs. Dont follow all fragments of the same <iden>;"For better organization; to prevent following all fragments of the same <iden>";Similar;0.5928207635879517
Make error-prone validate missing override annotations;error-prone, missing override annotations;Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;Similar;0.6765375733375549
Make error-prone validate missing override annotations;error-prone, missing override annotations;Fix tests to share a common <iden>. Also fix the memory limit, which may prevent Travis from failing our tests.;share a common <iden>, memory limit, prevent Travis from failing our tests;Similar;0.6074638366699219
Make error-prone validate missing override annotations;error-prone, missing override annotations;Collapse interceptors into a single chain;Instead of having a chain of application interceptors and a separate chain of network interceptors, this makes a single heterogeneous chain. It makes the <iden> core and network caller into interceptors.;Similar;0.5454026460647583
Make error-prone validate missing override annotations;error-prone, missing override annotations;Update readme and changelog for <version>;<version>;Similar;0.5995338559150696
Make error-prone validate missing override annotations;error-prone, missing override annotations;Fix some get prefixes on <file_name> and <method_name>;"-
None";Similar;0.6632575988769531
Make error-prone validate missing override annotations;error-prone, missing override annotations;Add <method_name>;Might be useful to expose this bookkeeping to app developers;Similar;0.560539722442627
Make error-prone validate missing override annotations;error-prone, missing override annotations;Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Similar;0.752701461315155
Make error-prone validate missing override annotations;error-prone, missing override annotations;Drop our one remaining <iden> cipher suite;Tracking <iden> and Firefox, which have also dropped this cipher suite;Similar;0.6260548233985901
Make error-prone validate missing override annotations;error-prone, missing override annotations;Change  <file_name>  to not implement java.net.ResponseCache;This marks some methods as  @deprecated and internal-only. Unfortunately we dont have a great mechanism to hide them from the documented <iden>.;Similar;0.5380418300628662
Make error-prone validate missing override annotations;error-prone, missing override annotations;The implementation is built around one oversized method that runs top to bottom;I found this was easier to follow than the switch statement recommended by the <iden> standard;Similar;0.558395504951477
Make error-prone validate missing override annotations;error-prone, missing override annotations;Fix <iden> post retransmit in the new API  ;We dont buffer response bodies in the new API. But we should retransmit POST bodies when a request fails.;Similar;0.546747088432312
Make error-prone validate missing override annotations;error-prone, missing override annotations;Add a test for corner-case behavior;Im looking to make HttpURLConnectionImpl delegate to Job, and that means writing tests for all the weird things it does above HttpEngine.;Similar;0.6789501905441284
Make error-prone validate missing override annotations;error-prone, missing override annotations;Add some pings to force happens-before in <iden> tests;Previously we were relying on accidents to get our tests to pass;Similar;0.5738234519958496
Make error-prone validate missing override annotations;error-prone, missing override annotations;Track <file_name> ownership  ;<file_name> ownership is somewhat racy: when an HttpURLConnection reads the last byte of a connection, its ownership is released and given to the <method_name>;Similar;0.5428928136825562
Make error-prone validate missing override annotations;error-prone, missing override annotations;Move  <file_name>  pooling logic  ;"previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams; move  <file_name>  reuse to  <file_name>, with policy informed by  <method_name>  specifying what to do when the  <file_name>  becomes idle: pool, close or hold, so the  <file_name>  does what its told.";Similar;0.5948055982589722
Make error-prone validate missing override annotations;error-prone, missing override annotations;Implement moving bytes between OkBuffers  ;This is more complicated than Id anticipated;Similar;0.6010763645172119
Make error-prone validate missing override annotations;error-prone, missing override annotations;Dont attempt <iden> modes we know will fail.;we know will fail;Similar;0.5411238670349121
Make error-prone validate missing override annotations;error-prone, missing override annotations;Remove <iden> 2 warnings;Small docs fixes;Similar;0.6190527677536011
Make error-prone validate missing override annotations;error-prone, missing override annotations;Fix checkstyle issues in new <iden> code;checkstyle issues;Similar;0.6599013805389404
Make error-prone validate missing override annotations;error-prone, missing override annotations;Kill <file_name> in the process  ;Teach <file_name> <iden>;Similar;0.5624116659164429
Make error-prone validate missing override annotations;error-prone, missing override annotations;Introduce a <file_name> interface between engine and connection.;This breaks the direct dependency from <file_name> to <method_name>;Similar;0.5254318118095398
Make error-prone validate missing override annotations;error-prone, missing override annotations;Make  <file_name> less flaky;I was seeing flaky results in the debugger because pooled connections were being evicted as the test ran;Similar;0.5868721008300781
Make error-prone validate missing override annotations;error-prone, missing override annotations;Update to the latest <method_name>;Includes everything thru 8842981cbcfe20eb4721c0a2c867fa9a18233062;Similar;0.5053704380989075
Make error-prone validate missing override annotations;error-prone, missing override annotations;Be more careful around IOExceptions;my goal is to make it easier to differentiate between protocol-level problems (bogus frames) from transport-level problems (closed sockets and EOF streams);Similar;0.5903947353363037
Make error-prone validate missing override annotations;error-prone, missing override annotations;Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;Similar;0.6916229128837585
Make error-prone validate missing override annotations;error-prone, missing override annotations;Move out of the <file_name> package;To promote the code into AOSP, well keep this package as-is and do the jarjar in <iden> instead;Similar;0.6186320185661316
Make error-prone validate missing override annotations;error-prone, missing override annotations;Make the `<method_name>` return full working connections;Previously the returned connections required the caller to do extra work: setting up tunnels and performing an `<iden>` handshake. With this change, we make a complete working connection in `<method_name>`. This will make it easier to fix fallback when a single domain has multiple `<iden>` addresses that are not reachable. Also, this will make it easier to do SPDY through `<iden>` proxies.;Similar;0.5117651224136353
Make error-prone validate missing override annotations;error-prone, missing override annotations;Fix <iden> which was being computed incorrectly;<enter> We were only returning true once we were already in a tunnel. This was bogus. In theory a <iden> tunnel sending extra data could be corrupted due to this bug.;Similar;0.7506470084190369
Make error-prone validate missing override annotations;error-prone, missing override annotations;Add error-prone compiler and fix its found issues;error-prone, its found issues;Similar;0.7872417569160461
Make error-prone validate missing override annotations;error-prone, missing override annotations;Remove old <iden> protocol method;old;Similar;0.6552574634552002
Make error-prone validate missing override annotations;error-prone, missing override annotations;Expose <iden> directly on <method_name>  ;direct;Similar;0.5588268041610718
Make error-prone validate missing override annotations;error-prone, missing override annotations;Use HTML entity for ampersand;to represent the ampersand symbol in HTML;Similar;0.5553491115570068
Make error-prone validate missing override annotations;error-prone, missing override annotations;Add convenience overload for <iden>-backed <method_name>;convenience;Similar;0.629915177822113
Make error-prone validate missing override annotations;error-prone, missing override annotations;Drop unused dependencies;unused;Similar;0.6521252393722534
Make error-prone validate missing override annotations;error-prone, missing override annotations;Transfer to/from <iden> directly from <iden>  ;<pr_link>;Similar;0.5685409307479858
Make error-prone validate missing override annotations;error-prone, missing override annotations;add @override for subclass override method;subclass override method;Similar;0.5478683710098267
Make error-prone validate missing override annotations;error-prone, missing override annotations;Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Similar;0.7042183876037598
Make error-prone validate missing override annotations;error-prone, missing override annotations;Partially revert connection timeout behavior  ;The modification of the timeout behavior during connection caused problems;Similar;0.6644487380981445
Make error-prone validate missing override annotations;error-prone, missing override annotations;This change logs the exception but prevent it from propagating out of the top of the call stack.;This decreases overall flakiness.;Similar;0.6129181385040283
Make error-prone validate missing override annotations;error-prone, missing override annotations;The changes to <iden>s  <file_name> have been ported  ;Upstream commit of <iden> / <iden> fix, This does not include the introduction of PlatformTest, which will be difficult to write so it works everywhere;Similar;0.5474003553390503
Make error-prone validate missing override annotations;error-prone, missing override annotations;Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Similar;0.6498078107833862
Make error-prone validate missing override annotations;error-prone, missing override annotations;Return <file_name> to previous (e.g. KitKat) behavior;this change required to handle this <iden> scenario;Similar;0.6056827306747437
Make error-prone validate missing override annotations;error-prone, missing override annotations;Document <file_name> throwing modes;To include the <pr_link> information;Similar;0.5799077749252319
Make error-prone validate missing override annotations;error-prone, missing override annotations;Convert <file_name> to Kotlin;<pr_link>, <iden>, <file_name>;Similar;0.5742642283439636
Make error-prone validate missing override annotations;error-prone, missing override annotations;Convert <file_name>, <file_name> to Kotlin  ;"to Kotlin

Decision: Rename <file_name> <version> to .kt (and others)  ";Similar;0.5650371313095093
Make error-prone validate missing override annotations;error-prone, missing override annotations;Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Similar;0.6692546606063843
Make error-prone validate missing override annotations;error-prone, missing override annotations;Fail HTTP/2 connections if the pong is not received;This removes the abstraction from our http2 package;Similar;0.6029285192489624
Make error-prone validate missing override annotations;error-prone, missing override annotations;Just pass the <iden> and <iden> objects in directly;Dont summarize the request and response;Similar;0.5705886483192444
Make error-prone validate missing override annotations;error-prone, missing override annotations;Fix a race in <method_name> ( <pr_link> );We were assuming on a client failure the server wouldnt have any further events. But it will get a failure if we give it a moment. This was causing some test flakiness.;Similar;0.5775308012962341
Make error-prone validate missing override annotations;error-prone, missing override annotations;Improve some Markdown;improve;Similar;0.6617013812065125
Make error-prone validate missing override annotations;error-prone, missing override annotations;fix <issue_link> : PROPFIND request should not redirect to GET request;PROPFIND request should not redirect to GET request;Similar;0.5353348851203918
Make error-prone validate missing override annotations;error-prone, missing override annotations;Refactor <file_name> by using <iden>;We can use <iden> instead of overriding <iden> abstract class;Similar;0.6291981935501099
Make error-prone validate missing override annotations;error-prone, missing override annotations;Remove unnecessary use of grouping parentheses  ;Lets remove warnings found by errorprone.;Similar;0.655653178691864
Make error-prone validate missing override annotations;error-prone, missing override annotations;Enable GitHub Security Scanning;To configure GitHub workflow for code security scanning;Similar;0.5590242147445679
Make error-prone validate missing override annotations;error-prone, missing override annotations;load through bootstrap;-;Similar;0.629439651966095
Make error-prone validate missing override annotations;error-prone, missing override annotations;Fix bug where request body isnt sent when it should  ;request body isnt sent when it should;Similar;0.7744467258453369
Make error-prone validate missing override annotations;error-prone, missing override annotations;Add support for following <iden> 307 temporary redirects  ;Fixes Android bug 41739;Similar;0.591873288154602
Make error-prone validate missing override annotations;error-prone, missing override annotations;Fix correctness of WebSocketReader reserved flags test;reserved flags;Similar;0.7127861380577087
fix README.md typo;README.md typo;Fix single failing graal test ( <pr_link> );single failing;Similar;0.7013281583786011
fix README.md typo;README.md typo;Centralise logging behind JUL (<pr_link>) <enter> Use JUL, but wire up to the <method_name> <enter> Use `adb shell setprop log.tag.okhttp.Http2 <iden>` to enable logging for known levels;to enable logging for known levels;Similar;0.6173313856124878
fix README.md typo;README.md typo;API for handling an unexpected SSE response;unexpected;Similar;0.5764366388320923
fix README.md typo;README.md typo;Wrap <iden> addresses with [] and return / path URIs for proxy CONNECT;Fix MockWebserver for <iden> addresses;Similar;0.6106383800506592
fix README.md typo;README.md typo;Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;Similar;0.6823809146881104
fix README.md typo;README.md typo;Update  <file_name>  to temporarily ignore javadoc errors and compile tests but not run ( <pr_link> );temporarily ignore javadoc errors and compile tests;Similar;0.5030654668807983
fix README.md typo;README.md typo;Fix travis build;Fix;Similar;0.5897177457809448
fix README.md typo;README.md typo;Use IOException instead of <iden>;more specific in <file_name> API;Similar;0.6348589658737183
fix README.md typo;README.md typo;Make  <file_name>  more capable.;more capable;Similar;0.6659387946128845
fix README.md typo;README.md typo;fix <file_name> for Java 9;Java 9;Similar;0.6022761464118958
fix README.md typo;README.md typo;document support for SNI;support for SNI;Similar;0.62367182970047
fix README.md typo;README.md typo;Limit recovery attempts for REFUSED_STREAM errors;We limit per-connection retries but not per-call retries, so this was creating large numbers of connections each of which called the server and accepted yet another REFUSED_STREAM.;Similar;0.6004195213317871
fix README.md typo;README.md typo;Add HTTP/2 and <iden><version> columns to our security providers doc ;to enhance our security documentation;Similar;0.6349807977676392
fix README.md typo;README.md typo;Use  <file_name> s built-in <iden> style  <enter>  ;The boilerplate to set this up is unfortunate;Similar;0.6939346194267273
fix README.md typo;README.md typo;Use our test rule instead of the Maven Surefire listener  ;to Close the issue indicated by the link;Similar;0.5449471473693848
fix README.md typo;README.md typo;Use <iden> in <file_name>  ;The utility here is negligible. Were sharing threads between HTTP, HTTP/2 and web sockets now.;Similar;0.7024171352386475
fix README.md typo;README.md typo;Adopt idiomatic <iden> in <file_name>;idiomatic;Similar;0.7228509187698364
fix README.md typo;README.md typo;Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they cant be open. I think the motivation to make these non-final was pretty weak, and I dont mind breaking <iden> compatibility here.;Similar;0.6427019834518433
fix README.md typo;README.md typo;Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;Similar;0.7186745405197144
fix README.md typo;README.md typo;Include prerequisites in the releasing guide.;to provide necessary information for users;Similar;0.5809969902038574
fix README.md typo;README.md typo;Convert <file_name> to Kotlin;"to Kotlin

Decision: Rename <file_name> to .kt";Similar;0.6943920254707336
fix README.md typo;README.md typo;Introduce <method_name> ;This is the payoff that preceding changes have been working towards.;Similar;0.7082698345184326
fix README.md typo;README.md typo;Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.;Similar;0.6933585405349731
fix README.md typo;README.md typo;Fix some maven problems that are blocking the <version> release;blocking the <version> release;Similar;0.5857020020484924
fix README.md typo;README.md typo;Rename <method_name> to <iden()>;I prefer signed;Similar;0.7126479148864746
fix README.md typo;README.md typo;Fixup <file_name> so that its worthy of production use.;This changes the default from the insecure 1024-bit <iden> to a secure 256-bit <iden> key. It adds a new option to use <iden> keys for interoperating with older clients.;Similar;0.6620562672615051
fix README.md typo;README.md typo;Support client authentication in <file_name>;client authentication;Similar;0.634563148021698
fix README.md typo;README.md typo;Remove <iden>-mode <iden> cipher suites;This removes the following cipher suites as supported-by-default;Similar;0.6595042943954468
fix README.md typo;README.md typo;Fix Javadoc builds with the jsr305 dependency  ;Because multiple modules share a package we need to share the dependency on everything in package-info.java;Similar;0.6239908337593079
fix README.md typo;README.md typo;Make the  <file_name>  a little better.  <enter> <iden> threads by their URLs. Dont follow all fragments of the same <iden>;"For better organization; to prevent following all fragments of the same <iden>";Similar;0.5493537783622742
fix README.md typo;README.md typo;Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;Similar;0.6729729771614075
fix README.md typo;README.md typo;Collapse interceptors into a single chain;Instead of having a chain of application interceptors and a separate chain of network interceptors, this makes a single heterogeneous chain. It makes the <iden> core and network caller into interceptors.;Similar;0.5129995942115784
fix README.md typo;README.md typo;Update readme and changelog for <version>;<version>;Similar;0.7596209049224854
fix README.md typo;README.md typo;New <file_name> class to normalize certificate chains  ;The goal of this is to get the root <iden> certificate into the certificate chain, so that it can be considered by the certificate pinner;Similar;0.6006090641021729
fix README.md typo;README.md typo;Fix some get prefixes on <file_name> and <method_name>;"-
None";Similar;0.6802739500999451
fix README.md typo;README.md typo;Add <method_name>;Might be useful to expose this bookkeeping to app developers;Similar;0.697874903678894
fix README.md typo;README.md typo;Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Similar;0.7935196161270142
fix README.md typo;README.md typo;Drop our one remaining <iden> cipher suite;Tracking <iden> and Firefox, which have also dropped this cipher suite;Similar;0.5833129286766052
fix README.md typo;README.md typo;Change  <file_name>  to not implement java.net.ResponseCache;This marks some methods as  @deprecated and internal-only. Unfortunately we dont have a great mechanism to hide them from the documented <iden>.;Similar;0.5223198533058167
fix README.md typo;README.md typo;The implementation is built around one oversized method that runs top to bottom;I found this was easier to follow than the switch statement recommended by the <iden> standard;Similar;0.5442507863044739
fix README.md typo;README.md typo;Fix <iden> post retransmit in the new API  ;We dont buffer response bodies in the new API. But we should retransmit POST bodies when a request fails.;Similar;0.6546660661697388
fix README.md typo;README.md typo;Add a test for corner-case behavior;Im looking to make HttpURLConnectionImpl delegate to Job, and that means writing tests for all the weird things it does above HttpEngine.;Similar;0.5823317766189575
fix README.md typo;README.md typo;Add some pings to force happens-before in <iden> tests;Previously we were relying on accidents to get our tests to pass;Similar;0.5253725647926331
fix README.md typo;README.md typo;Track <file_name> ownership  ;<file_name> ownership is somewhat racy: when an HttpURLConnection reads the last byte of a connection, its ownership is released and given to the <method_name>;Similar;0.6011924743652344
fix README.md typo;README.md typo;Move  <file_name>  pooling logic  ;"previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams; move  <file_name>  reuse to  <file_name>, with policy informed by  <method_name>  specifying what to do when the  <file_name>  becomes idle: pool, close or hold, so the  <file_name>  does what its told.";Similar;0.6165634393692017
fix README.md typo;README.md typo;Implement moving bytes between OkBuffers  ;This is more complicated than Id anticipated;Similar;0.6495563983917236
fix README.md typo;README.md typo;Remove <iden> 2 warnings;Small docs fixes;Similar;0.6150354146957397
fix README.md typo;README.md typo;Fix checkstyle issues in new <iden> code;checkstyle issues;Similar;0.6282697916030884
fix README.md typo;README.md typo;Introduce a <file_name> interface between engine and connection.;This breaks the direct dependency from <file_name> to <method_name>;Similar;0.6742609739303589
fix README.md typo;README.md typo;Make  <file_name> less flaky;I was seeing flaky results in the debugger because pooled connections were being evicted as the test ran;Similar;0.5191982388496399
fix README.md typo;README.md typo;Update to the latest <method_name>;Includes everything thru 8842981cbcfe20eb4721c0a2c867fa9a18233062;Similar;0.6160573959350586
fix README.md typo;README.md typo;Be more careful around IOExceptions;my goal is to make it easier to differentiate between protocol-level problems (bogus frames) from transport-level problems (closed sockets and EOF streams);Similar;0.5838009119033813
fix README.md typo;README.md typo;Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;Similar;0.6708948612213135
fix README.md typo;README.md typo;Move out of the <file_name> package;To promote the code into AOSP, well keep this package as-is and do the jarjar in <iden> instead;Similar;0.6053096652030945
fix README.md typo;README.md typo;Make the `<method_name>` return full working connections;Previously the returned connections required the caller to do extra work: setting up tunnels and performing an `<iden>` handshake. With this change, we make a complete working connection in `<method_name>`. This will make it easier to fix fallback when a single domain has multiple `<iden>` addresses that are not reachable. Also, this will make it easier to do SPDY through `<iden>` proxies.;Similar;0.6108970046043396
fix README.md typo;README.md typo;Fix <iden> which was being computed incorrectly;<enter> We were only returning true once we were already in a tunnel. This was bogus. In theory a <iden> tunnel sending extra data could be corrupted due to this bug.;Similar;0.5575389862060547
fix README.md typo;README.md typo;Add error-prone compiler and fix its found issues;error-prone, its found issues;Similar;0.63860023021698
fix README.md typo;README.md typo;Remove old <iden> protocol method;old;Similar;0.6431708335876465
fix README.md typo;README.md typo;Expose <iden> directly on <method_name>  ;direct;Similar;0.6901782155036926
fix README.md typo;README.md typo;Use HTML entity for ampersand;to represent the ampersand symbol in HTML;Similar;0.703307569026947
fix README.md typo;README.md typo;Add convenience overload for <iden>-backed <method_name>;convenience;Similar;0.6853886246681213
fix README.md typo;README.md typo;Use consistent camel casing of <iden>;consistent camel casing;Similar;0.5962745547294617
fix README.md typo;README.md typo;Drop unused dependencies;unused;Similar;0.5346949100494385
fix README.md typo;README.md typo;Transfer to/from <iden> directly from <iden>  ;<pr_link>;Similar;0.6709332466125488
fix README.md typo;README.md typo;add @override for subclass override method;subclass override method;Similar;0.62638920545578
fix README.md typo;README.md typo;Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Similar;0.7898364663124084
fix README.md typo;README.md typo;Partially revert connection timeout behavior  ;The modification of the timeout behavior during connection caused problems;Similar;0.5832332372665405
fix README.md typo;README.md typo;The changes to <iden>s  <file_name> have been ported  ;Upstream commit of <iden> / <iden> fix, This does not include the introduction of PlatformTest, which will be difficult to write so it works everywhere;Similar;0.6124694347381592
fix README.md typo;README.md typo;Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Similar;0.6866816282272339
fix README.md typo;README.md typo;Return <file_name> to previous (e.g. KitKat) behavior;this change required to handle this <iden> scenario;Similar;0.6550277471542358
fix README.md typo;README.md typo;Document <file_name> throwing modes;To include the <pr_link> information;Similar;0.6142781972885132
fix README.md typo;README.md typo;Convert <file_name> to Kotlin;<pr_link>, <iden>, <file_name>;Similar;0.6943920254707336
fix README.md typo;README.md typo;Convert <file_name>, <file_name> to Kotlin  ;"to Kotlin

Decision: Rename <file_name> <version> to .kt (and others)  ";Similar;0.6875475645065308
fix README.md typo;README.md typo;Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Similar;0.7259998321533203
fix README.md typo;README.md typo;Just pass the <iden> and <iden> objects in directly;Dont summarize the request and response;Similar;0.6150984168052673
fix README.md typo;README.md typo;Fix a race in <method_name> ( <pr_link> );We were assuming on a client failure the server wouldnt have any further events. But it will get a failure if we give it a moment. This was causing some test flakiness.;Similar;0.6428033709526062
fix README.md typo;README.md typo;Improve some Markdown;improve;Similar;0.6006827354431152
fix README.md typo;README.md typo;Refactor <file_name> by using <iden>;We can use <iden> instead of overriding <iden> abstract class;Similar;0.7291056513786316
fix README.md typo;README.md typo;Remove unnecessary use of grouping parentheses  ;Lets remove warnings found by errorprone.;Similar;0.5025269985198975
fix README.md typo;README.md typo;Enable GitHub Security Scanning;To configure GitHub workflow for code security scanning;Similar;0.62061607837677
fix README.md typo;README.md typo;load through bootstrap;-;Similar;0.6277564167976379
fix README.md typo;README.md typo;Fix bug where request body isnt sent when it should  ;request body isnt sent when it should;Similar;0.6725162267684937
fix README.md typo;README.md typo;Add support for following <iden> 307 temporary redirects  ;Fixes Android bug 41739;Similar;0.60371994972229
fix README.md typo;README.md typo;Add wildcard hostnames support in <file_name>;support;Similar;0.5827686786651611
fix README.md typo;README.md typo;Fix correctness of WebSocketReader reserved flags test;reserved flags;Similar;0.6724199056625366
Fix single failing graal test ( <pr_link> );single failing;Centralise logging behind JUL (<pr_link>) <enter> Use JUL, but wire up to the <method_name> <enter> Use `adb shell setprop log.tag.okhttp.Http2 <iden>` to enable logging for known levels;to enable logging for known levels;Similar;0.631782054901123
Fix single failing graal test ( <pr_link> );single failing;API for handling an unexpected SSE response;unexpected;Similar;0.5584505796432495
Fix single failing graal test ( <pr_link> );single failing;Wrap <iden> addresses with [] and return / path URIs for proxy CONNECT;Fix MockWebserver for <iden> addresses;Similar;0.5051679015159607
Fix single failing graal test ( <pr_link> );single failing;Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;Similar;0.6400084495544434
Fix single failing graal test ( <pr_link> );single failing;Update  <file_name>  to temporarily ignore javadoc errors and compile tests but not run ( <pr_link> );temporarily ignore javadoc errors and compile tests;Similar;0.6686307787895203
Fix single failing graal test ( <pr_link> );single failing;Fix travis build;Fix;Similar;0.5877164006233215
Fix single failing graal test ( <pr_link> );single failing;fix <file_name> for Java 9;Java 9;Similar;0.5501599311828613
Fix single failing graal test ( <pr_link> );single failing;Limit recovery attempts for REFUSED_STREAM errors;We limit per-connection retries but not per-call retries, so this was creating large numbers of connections each of which called the server and accepted yet another REFUSED_STREAM.;Similar;0.6559698581695557
Fix single failing graal test ( <pr_link> );single failing;Add HTTP/2 and <iden><version> columns to our security providers doc ;to enhance our security documentation;Similar;0.5028003454208374
Fix single failing graal test ( <pr_link> );single failing;Use  <file_name> s built-in <iden> style  <enter>  ;The boilerplate to set this up is unfortunate;Similar;0.5067780017852783
Fix single failing graal test ( <pr_link> );single failing;Use our test rule instead of the Maven Surefire listener  ;to Close the issue indicated by the link;Similar;0.598951518535614
Fix single failing graal test ( <pr_link> );single failing;Use <iden> in <file_name>  ;The utility here is negligible. Were sharing threads between HTTP, HTTP/2 and web sockets now.;Similar;0.5055142045021057
Fix single failing graal test ( <pr_link> );single failing;Adopt idiomatic <iden> in <file_name>;idiomatic;Similar;0.5395082235336304
Fix single failing graal test ( <pr_link> );single failing;Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they cant be open. I think the motivation to make these non-final was pretty weak, and I dont mind breaking <iden> compatibility here.;Similar;0.6015036702156067
Fix single failing graal test ( <pr_link> );single failing;Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;Similar;0.6947169303894043
Fix single failing graal test ( <pr_link> );single failing;Include prerequisites in the releasing guide.;to provide necessary information for users;Similar;0.566279411315918
Fix single failing graal test ( <pr_link> );single failing;Convert <file_name> to Kotlin;"to Kotlin

Decision: Rename <file_name> to .kt";Similar;0.5583820939064026
Fix single failing graal test ( <pr_link> );single failing;Introduce <method_name> ;This is the payoff that preceding changes have been working towards.;Similar;0.5569911599159241
Fix single failing graal test ( <pr_link> );single failing;Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.;Similar;0.5685932636260986
Fix single failing graal test ( <pr_link> );single failing;Fix some maven problems that are blocking the <version> release;blocking the <version> release;Similar;0.6422062516212463
Fix single failing graal test ( <pr_link> );single failing;Rename <method_name> to <iden()>;I prefer signed;Similar;0.5314086079597473
Fix single failing graal test ( <pr_link> );single failing;Fixup <file_name> so that its worthy of production use.;This changes the default from the insecure 1024-bit <iden> to a secure 256-bit <iden> key. It adds a new option to use <iden> keys for interoperating with older clients.;Similar;0.5543926358222961
Fix single failing graal test ( <pr_link> );single failing;Support client authentication in <file_name>;client authentication;Similar;0.5164229273796082
Fix single failing graal test ( <pr_link> );single failing;Remove <iden>-mode <iden> cipher suites;This removes the following cipher suites as supported-by-default;Similar;0.6107723712921143
Fix single failing graal test ( <pr_link> );single failing;Fix Javadoc builds with the jsr305 dependency  ;Because multiple modules share a package we need to share the dependency on everything in package-info.java;Similar;0.5920584797859192
Fix single failing graal test ( <pr_link> );single failing;Make the  <file_name>  a little better.  <enter> <iden> threads by their URLs. Dont follow all fragments of the same <iden>;"For better organization; to prevent following all fragments of the same <iden>";Similar;0.5569961667060852
Fix single failing graal test ( <pr_link> );single failing;Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;Similar;0.6120370626449585
Fix single failing graal test ( <pr_link> );single failing;Fix tests to share a common <iden>. Also fix the memory limit, which may prevent Travis from failing our tests.;share a common <iden>, memory limit, prevent Travis from failing our tests;Similar;0.6062301993370056
Fix single failing graal test ( <pr_link> );single failing;Collapse interceptors into a single chain;Instead of having a chain of application interceptors and a separate chain of network interceptors, this makes a single heterogeneous chain. It makes the <iden> core and network caller into interceptors.;Similar;0.551502525806427
Fix single failing graal test ( <pr_link> );single failing;Update readme and changelog for <version>;<version>;Similar;0.6115803122520447
Fix single failing graal test ( <pr_link> );single failing;New <file_name> class to normalize certificate chains  ;The goal of this is to get the root <iden> certificate into the certificate chain, so that it can be considered by the certificate pinner;Similar;0.5457980036735535
Fix single failing graal test ( <pr_link> );single failing;Fix some get prefixes on <file_name> and <method_name>;"-
None";Similar;0.6147909164428711
Fix single failing graal test ( <pr_link> );single failing;Write some new connection pool tests;These use the <iden> APIs. Theyre high-level so they wont break with the implementation rewrite.;Similar;0.5106725692749023
Fix single failing graal test ( <pr_link> );single failing;Add <method_name>;Might be useful to expose this bookkeeping to app developers;Similar;0.5490795373916626
Fix single failing graal test ( <pr_link> );single failing;Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Similar;0.7106712460517883
Fix single failing graal test ( <pr_link> );single failing;Drop our one remaining <iden> cipher suite;Tracking <iden> and Firefox, which have also dropped this cipher suite;Similar;0.6704751253128052
Fix single failing graal test ( <pr_link> );single failing;Change  <file_name>  to not implement java.net.ResponseCache;This marks some methods as  @deprecated and internal-only. Unfortunately we dont have a great mechanism to hide them from the documented <iden>.;Similar;0.544062614440918
Fix single failing graal test ( <pr_link> );single failing;The implementation is built around one oversized method that runs top to bottom;I found this was easier to follow than the switch statement recommended by the <iden> standard;Similar;0.5760611295700073
Fix single failing graal test ( <pr_link> );single failing;Fix <iden> post retransmit in the new API  ;We dont buffer response bodies in the new API. But we should retransmit POST bodies when a request fails.;Similar;0.638198733329773
Fix single failing graal test ( <pr_link> );single failing;Add a test for corner-case behavior;Im looking to make HttpURLConnectionImpl delegate to Job, and that means writing tests for all the weird things it does above HttpEngine.;Similar;0.605667233467102
Fix single failing graal test ( <pr_link> );single failing;Add some pings to force happens-before in <iden> tests;Previously we were relying on accidents to get our tests to pass;Similar;0.6150187253952026
Fix single failing graal test ( <pr_link> );single failing;Move  <file_name>  pooling logic  ;"previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams; move  <file_name>  reuse to  <file_name>, with policy informed by  <method_name>  specifying what to do when the  <file_name>  becomes idle: pool, close or hold, so the  <file_name>  does what its told.";Similar;0.5202010273933411
Fix single failing graal test ( <pr_link> );single failing;Implement moving bytes between OkBuffers  ;This is more complicated than Id anticipated;Similar;0.5007944703102112
Fix single failing graal test ( <pr_link> );single failing;Remove <iden> 2 warnings;Small docs fixes;Similar;0.5540413856506348
Fix single failing graal test ( <pr_link> );single failing;Fix checkstyle issues in new <iden> code;checkstyle issues;Similar;0.6450480222702026
Fix single failing graal test ( <pr_link> );single failing;Kill <file_name> in the process  ;Teach <file_name> <iden>;Similar;0.5204119086265564
Fix single failing graal test ( <pr_link> );single failing;Introduce a <file_name> interface between engine and connection.;This breaks the direct dependency from <file_name> to <method_name>;Similar;0.5092458724975586
Fix single failing graal test ( <pr_link> );single failing;Update to the latest <method_name>;Includes everything thru 8842981cbcfe20eb4721c0a2c867fa9a18233062;Similar;0.6109217405319214
Fix single failing graal test ( <pr_link> );single failing;Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;Similar;0.6510149836540222
Fix single failing graal test ( <pr_link> );single failing;Move out of the <file_name> package;To promote the code into AOSP, well keep this package as-is and do the jarjar in <iden> instead;Similar;0.5466505289077759
Fix single failing graal test ( <pr_link> );single failing;Make the `<method_name>` return full working connections;Previously the returned connections required the caller to do extra work: setting up tunnels and performing an `<iden>` handshake. With this change, we make a complete working connection in `<method_name>`. This will make it easier to fix fallback when a single domain has multiple `<iden>` addresses that are not reachable. Also, this will make it easier to do SPDY through `<iden>` proxies.;Similar;0.5588565468788147
Fix single failing graal test ( <pr_link> );single failing;Fix <iden> which was being computed incorrectly;<enter> We were only returning true once we were already in a tunnel. This was bogus. In theory a <iden> tunnel sending extra data could be corrupted due to this bug.;Similar;0.6343557238578796
Fix single failing graal test ( <pr_link> );single failing;Add error-prone compiler and fix its found issues;error-prone, its found issues;Similar;0.6978846192359924
Fix single failing graal test ( <pr_link> );single failing;Remove old <iden> protocol method;old;Similar;0.5646970272064209
Fix single failing graal test ( <pr_link> );single failing;Expose <iden> directly on <method_name>  ;direct;Similar;0.526698887348175
Fix single failing graal test ( <pr_link> );single failing;Use HTML entity for ampersand;to represent the ampersand symbol in HTML;Similar;0.5244895219802856
Fix single failing graal test ( <pr_link> );single failing;Add convenience overload for <iden>-backed <method_name>;convenience;Similar;0.5436496138572693
Fix single failing graal test ( <pr_link> );single failing;Drop unused dependencies;unused;Similar;0.5232476592063904
Fix single failing graal test ( <pr_link> );single failing;Update website to the latest design  ;latest design;Similar;0.5072924494743347
Fix single failing graal test ( <pr_link> );single failing;Transfer to/from <iden> directly from <iden>  ;<pr_link>;Similar;0.5016766786575317
Fix single failing graal test ( <pr_link> );single failing;add @override for subclass override method;subclass override method;Similar;0.5529175996780396
Fix single failing graal test ( <pr_link> );single failing;Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Similar;0.7399933934211731
Fix single failing graal test ( <pr_link> );single failing;Partially revert connection timeout behavior  ;The modification of the timeout behavior during connection caused problems;Similar;0.5650961399078369
Fix single failing graal test ( <pr_link> );single failing;This change logs the exception but prevent it from propagating out of the top of the call stack.;This decreases overall flakiness.;Similar;0.5902054905891418
Fix single failing graal test ( <pr_link> );single failing;The changes to <iden>s  <file_name> have been ported  ;Upstream commit of <iden> / <iden> fix, This does not include the introduction of PlatformTest, which will be difficult to write so it works everywhere;Similar;0.566938042640686
Fix single failing graal test ( <pr_link> );single failing;Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Similar;0.5822121500968933
Fix single failing graal test ( <pr_link> );single failing;Return <file_name> to previous (e.g. KitKat) behavior;this change required to handle this <iden> scenario;Similar;0.5947854518890381
Fix single failing graal test ( <pr_link> );single failing;Convert <file_name> to Kotlin;<pr_link>, <iden>, <file_name>;Similar;0.5583820939064026
Fix single failing graal test ( <pr_link> );single failing;Convert <file_name>, <file_name> to Kotlin  ;"to Kotlin

Decision: Rename <file_name> <version> to .kt (and others)  ";Similar;0.5576640963554382
Fix single failing graal test ( <pr_link> );single failing;Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Similar;0.6537196040153503
Fix single failing graal test ( <pr_link> );single failing;Fail HTTP/2 connections if the pong is not received;This removes the abstraction from our http2 package;Similar;0.5938960313796997
Fix single failing graal test ( <pr_link> );single failing;Just pass the <iden> and <iden> objects in directly;Dont summarize the request and response;Similar;0.5531375408172607
Fix single failing graal test ( <pr_link> );single failing;Fix a race in <method_name> ( <pr_link> );We were assuming on a client failure the server wouldnt have any further events. But it will get a failure if we give it a moment. This was causing some test flakiness.;Similar;0.640761137008667
Fix single failing graal test ( <pr_link> );single failing;Improve some Markdown;improve;Similar;0.581398606300354
Fix single failing graal test ( <pr_link> );single failing;fix <issue_link> : PROPFIND request should not redirect to GET request;PROPFIND request should not redirect to GET request;Similar;0.5051708221435547
Fix single failing graal test ( <pr_link> );single failing;Refactor <file_name> by using <iden>;We can use <iden> instead of overriding <iden> abstract class;Similar;0.5425734519958496
Fix single failing graal test ( <pr_link> );single failing;Enable GitHub Security Scanning;To configure GitHub workflow for code security scanning;Similar;0.5084007382392883
Fix single failing graal test ( <pr_link> );single failing;load through bootstrap;-;Similar;0.5232871174812317
Fix single failing graal test ( <pr_link> );single failing;Fix bug where request body isnt sent when it should  ;request body isnt sent when it should;Similar;0.723876953125
Fix single failing graal test ( <pr_link> );single failing;Add support for following <iden> 307 temporary redirects  ;Fixes Android bug 41739;Similar;0.5408401489257812
Fix single failing graal test ( <pr_link> );single failing;Fix correctness of WebSocketReader reserved flags test;reserved flags;Similar;0.6930785775184631
Centralise logging behind JUL (<pr_link>) <enter> Use JUL, but wire up to the <method_name> <enter> Use `adb shell setprop log.tag.okhttp.Http2 <iden>` to enable logging for known levels;to enable logging for known levels;API for handling an unexpected SSE response;unexpected;Similar;0.5195385217666626
Centralise logging behind JUL (<pr_link>) <enter> Use JUL, but wire up to the <method_name> <enter> Use `adb shell setprop log.tag.okhttp.Http2 <iden>` to enable logging for known levels;to enable logging for known levels;Wrap <iden> addresses with [] and return / path URIs for proxy CONNECT;Fix MockWebserver for <iden> addresses;Similar;0.7538193464279175
Centralise logging behind JUL (<pr_link>) <enter> Use JUL, but wire up to the <method_name> <enter> Use `adb shell setprop log.tag.okhttp.Http2 <iden>` to enable logging for known levels;to enable logging for known levels;Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;Similar;0.6407243013381958
Centralise logging behind JUL (<pr_link>) <enter> Use JUL, but wire up to the <method_name> <enter> Use `adb shell setprop log.tag.okhttp.Http2 <iden>` to enable logging for known levels;to enable logging for known levels;Update  <file_name>  to temporarily ignore javadoc errors and compile tests but not run ( <pr_link> );temporarily ignore javadoc errors and compile tests;Similar;0.6433181166648865
Centralise logging behind JUL (<pr_link>) <enter> Use JUL, but wire up to the <method_name> <enter> Use `adb shell setprop log.tag.okhttp.Http2 <iden>` to enable logging for known levels;to enable logging for known levels;Fix travis build;Fix;Similar;0.5051735043525696
Centralise logging behind JUL (<pr_link>) <enter> Use JUL, but wire up to the <method_name> <enter> Use `adb shell setprop log.tag.okhttp.Http2 <iden>` to enable logging for known levels;to enable logging for known levels;Use IOException instead of <iden>;more specific in <file_name> API;Similar;0.5479929447174072
Centralise logging behind JUL (<pr_link>) <enter> Use JUL, but wire up to the <method_name> <enter> Use `adb shell setprop log.tag.okhttp.Http2 <iden>` to enable logging for known levels;to enable logging for known levels;Make  <file_name>  more capable.;more capable;Similar;0.5623157024383545
Centralise logging behind JUL (<pr_link>) <enter> Use JUL, but wire up to the <method_name> <enter> Use `adb shell setprop log.tag.okhttp.Http2 <iden>` to enable logging for known levels;to enable logging for known levels;fix <file_name> for Java 9;Java 9;Similar;0.6275382041931152
Centralise logging behind JUL (<pr_link>) <enter> Use JUL, but wire up to the <method_name> <enter> Use `adb shell setprop log.tag.okhttp.Http2 <iden>` to enable logging for known levels;to enable logging for known levels;Limit recovery attempts for REFUSED_STREAM errors;We limit per-connection retries but not per-call retries, so this was creating large numbers of connections each of which called the server and accepted yet another REFUSED_STREAM.;Similar;0.53426593542099
Centralise logging behind JUL (<pr_link>) <enter> Use JUL, but wire up to the <method_name> <enter> Use `adb shell setprop log.tag.okhttp.Http2 <iden>` to enable logging for known levels;to enable logging for known levels;Add HTTP/2 and <iden><version> columns to our security providers doc ;to enhance our security documentation;Similar;0.721619725227356
Centralise logging behind JUL (<pr_link>) <enter> Use JUL, but wire up to the <method_name> <enter> Use `adb shell setprop log.tag.okhttp.Http2 <iden>` to enable logging for known levels;to enable logging for known levels;Use  <file_name> s built-in <iden> style  <enter>  ;The boilerplate to set this up is unfortunate;Similar;0.6622653007507324
Centralise logging behind JUL (<pr_link>) <enter> Use JUL, but wire up to the <method_name> <enter> Use `adb shell setprop log.tag.okhttp.Http2 <iden>` to enable logging for known levels;to enable logging for known levels;Use our test rule instead of the Maven Surefire listener  ;to Close the issue indicated by the link;Similar;0.5170042514801025
Centralise logging behind JUL (<pr_link>) <enter> Use JUL, but wire up to the <method_name> <enter> Use `adb shell setprop log.tag.okhttp.Http2 <iden>` to enable logging for known levels;to enable logging for known levels;Use <iden> in <file_name>  ;The utility here is negligible. Were sharing threads between HTTP, HTTP/2 and web sockets now.;Similar;0.5993173718452454
Centralise logging behind JUL (<pr_link>) <enter> Use JUL, but wire up to the <method_name> <enter> Use `adb shell setprop log.tag.okhttp.Http2 <iden>` to enable logging for known levels;to enable logging for known levels;Adopt idiomatic <iden> in <file_name>;idiomatic;Similar;0.6771807074546814
Centralise logging behind JUL (<pr_link>) <enter> Use JUL, but wire up to the <method_name> <enter> Use `adb shell setprop log.tag.okhttp.Http2 <iden>` to enable logging for known levels;to enable logging for known levels;Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they cant be open. I think the motivation to make these non-final was pretty weak, and I dont mind breaking <iden> compatibility here.;Similar;0.6712658405303955
Centralise logging behind JUL (<pr_link>) <enter> Use JUL, but wire up to the <method_name> <enter> Use `adb shell setprop log.tag.okhttp.Http2 <iden>` to enable logging for known levels;to enable logging for known levels;Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;Similar;0.7066097855567932
Centralise logging behind JUL (<pr_link>) <enter> Use JUL, but wire up to the <method_name> <enter> Use `adb shell setprop log.tag.okhttp.Http2 <iden>` to enable logging for known levels;to enable logging for known levels;Include prerequisites in the releasing guide.;to provide necessary information for users;Similar;0.5577561855316162
Centralise logging behind JUL (<pr_link>) <enter> Use JUL, but wire up to the <method_name> <enter> Use `adb shell setprop log.tag.okhttp.Http2 <iden>` to enable logging for known levels;to enable logging for known levels;Convert <file_name> to Kotlin;"to Kotlin

Decision: Rename <file_name> to .kt";Similar;0.6588531136512756
Centralise logging behind JUL (<pr_link>) <enter> Use JUL, but wire up to the <method_name> <enter> Use `adb shell setprop log.tag.okhttp.Http2 <iden>` to enable logging for known levels;to enable logging for known levels;Introduce <method_name> ;This is the payoff that preceding changes have been working towards.;Similar;0.5988942980766296
Centralise logging behind JUL (<pr_link>) <enter> Use JUL, but wire up to the <method_name> <enter> Use `adb shell setprop log.tag.okhttp.Http2 <iden>` to enable logging for known levels;to enable logging for known levels;Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.;Similar;0.6232029795646667
Centralise logging behind JUL (<pr_link>) <enter> Use JUL, but wire up to the <method_name> <enter> Use `adb shell setprop log.tag.okhttp.Http2 <iden>` to enable logging for known levels;to enable logging for known levels;Fix some maven problems that are blocking the <version> release;blocking the <version> release;Similar;0.5484164953231812
Centralise logging behind JUL (<pr_link>) <enter> Use JUL, but wire up to the <method_name> <enter> Use `adb shell setprop log.tag.okhttp.Http2 <iden>` to enable logging for known levels;to enable logging for known levels;Rename <method_name> to <iden()>;I prefer signed;Similar;0.6071673631668091
Centralise logging behind JUL (<pr_link>) <enter> Use JUL, but wire up to the <method_name> <enter> Use `adb shell setprop log.tag.okhttp.Http2 <iden>` to enable logging for known levels;to enable logging for known levels;Fixup <file_name> so that its worthy of production use.;This changes the default from the insecure 1024-bit <iden> to a secure 256-bit <iden> key. It adds a new option to use <iden> keys for interoperating with older clients.;Similar;0.6583306789398193
Centralise logging behind JUL (<pr_link>) <enter> Use JUL, but wire up to the <method_name> <enter> Use `adb shell setprop log.tag.okhttp.Http2 <iden>` to enable logging for known levels;to enable logging for known levels;Support client authentication in <file_name>;client authentication;Similar;0.6833301186561584
Centralise logging behind JUL (<pr_link>) <enter> Use JUL, but wire up to the <method_name> <enter> Use `adb shell setprop log.tag.okhttp.Http2 <iden>` to enable logging for known levels;to enable logging for known levels;Remove <iden>-mode <iden> cipher suites;This removes the following cipher suites as supported-by-default;Similar;0.5777329206466675
Centralise logging behind JUL (<pr_link>) <enter> Use JUL, but wire up to the <method_name> <enter> Use `adb shell setprop log.tag.okhttp.Http2 <iden>` to enable logging for known levels;to enable logging for known levels;Fix Javadoc builds with the jsr305 dependency  ;Because multiple modules share a package we need to share the dependency on everything in package-info.java;Similar;0.6245408058166504
Centralise logging behind JUL (<pr_link>) <enter> Use JUL, but wire up to the <method_name> <enter> Use `adb shell setprop log.tag.okhttp.Http2 <iden>` to enable logging for known levels;to enable logging for known levels;Make the  <file_name>  a little better.  <enter> <iden> threads by their URLs. Dont follow all fragments of the same <iden>;"For better organization; to prevent following all fragments of the same <iden>";Similar;0.6528249382972717
Centralise logging behind JUL (<pr_link>) <enter> Use JUL, but wire up to the <method_name> <enter> Use `adb shell setprop log.tag.okhttp.Http2 <iden>` to enable logging for known levels;to enable logging for known levels;Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;Similar;0.7206627130508423
Centralise logging behind JUL (<pr_link>) <enter> Use JUL, but wire up to the <method_name> <enter> Use `adb shell setprop log.tag.okhttp.Http2 <iden>` to enable logging for known levels;to enable logging for known levels;Fix tests to share a common <iden>. Also fix the memory limit, which may prevent Travis from failing our tests.;share a common <iden>, memory limit, prevent Travis from failing our tests;Similar;0.5755152106285095
Centralise logging behind JUL (<pr_link>) <enter> Use JUL, but wire up to the <method_name> <enter> Use `adb shell setprop log.tag.okhttp.Http2 <iden>` to enable logging for known levels;to enable logging for known levels;Update readme and changelog for <version>;<version>;Similar;0.671995222568512
Centralise logging behind JUL (<pr_link>) <enter> Use JUL, but wire up to the <method_name> <enter> Use `adb shell setprop log.tag.okhttp.Http2 <iden>` to enable logging for known levels;to enable logging for known levels;New <file_name> class to normalize certificate chains  ;The goal of this is to get the root <iden> certificate into the certificate chain, so that it can be considered by the certificate pinner;Similar;0.7325066924095154
Centralise logging behind JUL (<pr_link>) <enter> Use JUL, but wire up to the <method_name> <enter> Use `adb shell setprop log.tag.okhttp.Http2 <iden>` to enable logging for known levels;to enable logging for known levels;Fix some get prefixes on <file_name> and <method_name>;"-
None";Similar;0.6894584894180298
Centralise logging behind JUL (<pr_link>) <enter> Use JUL, but wire up to the <method_name> <enter> Use `adb shell setprop log.tag.okhttp.Http2 <iden>` to enable logging for known levels;to enable logging for known levels;Write some new connection pool tests;These use the <iden> APIs. Theyre high-level so they wont break with the implementation rewrite.;Similar;0.5764943361282349
Centralise logging behind JUL (<pr_link>) <enter> Use JUL, but wire up to the <method_name> <enter> Use `adb shell setprop log.tag.okhttp.Http2 <iden>` to enable logging for known levels;to enable logging for known levels;Add <method_name>;Might be useful to expose this bookkeeping to app developers;Similar;0.5839126706123352
Centralise logging behind JUL (<pr_link>) <enter> Use JUL, but wire up to the <method_name> <enter> Use `adb shell setprop log.tag.okhttp.Http2 <iden>` to enable logging for known levels;to enable logging for known levels;Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Similar;0.6736950874328613
Centralise logging behind JUL (<pr_link>) <enter> Use JUL, but wire up to the <method_name> <enter> Use `adb shell setprop log.tag.okhttp.Http2 <iden>` to enable logging for known levels;to enable logging for known levels;Drop our one remaining <iden> cipher suite;Tracking <iden> and Firefox, which have also dropped this cipher suite;Similar;0.5041215419769287
Centralise logging behind JUL (<pr_link>) <enter> Use JUL, but wire up to the <method_name> <enter> Use `adb shell setprop log.tag.okhttp.Http2 <iden>` to enable logging for known levels;to enable logging for known levels;Expose internal APIs for pluggable file systems, Also migrate all of our tests to use the <method_name>  ;We arent yet ready to make <iden> a public type, but I dont mind making it _almost_ available via an internal API for those brave enough to try that, Its simpler.;Similar;0.7392191290855408
Centralise logging behind JUL (<pr_link>) <enter> Use JUL, but wire up to the <method_name> <enter> Use `adb shell setprop log.tag.okhttp.Http2 <iden>` to enable logging for known levels;to enable logging for known levels;Change  <file_name>  to not implement java.net.ResponseCache;This marks some methods as  @deprecated and internal-only. Unfortunately we dont have a great mechanism to hide them from the documented <iden>.;Similar;0.513933002948761
Centralise logging behind JUL (<pr_link>) <enter> Use JUL, but wire up to the <method_name> <enter> Use `adb shell setprop log.tag.okhttp.Http2 <iden>` to enable logging for known levels;to enable logging for known levels;Fix <iden> post retransmit in the new API  ;We dont buffer response bodies in the new API. But we should retransmit POST bodies when a request fails.;Similar;0.7146511077880859
Centralise logging behind JUL (<pr_link>) <enter> Use JUL, but wire up to the <method_name> <enter> Use `adb shell setprop log.tag.okhttp.Http2 <iden>` to enable logging for known levels;to enable logging for known levels;Add a test for corner-case behavior;Im looking to make HttpURLConnectionImpl delegate to Job, and that means writing tests for all the weird things it does above HttpEngine.;Similar;0.5034803152084351
Centralise logging behind JUL (<pr_link>) <enter> Use JUL, but wire up to the <method_name> <enter> Use `adb shell setprop log.tag.okhttp.Http2 <iden>` to enable logging for known levels;to enable logging for known levels;Add some pings to force happens-before in <iden> tests;Previously we were relying on accidents to get our tests to pass;Similar;0.6893677711486816
Centralise logging behind JUL (<pr_link>) <enter> Use JUL, but wire up to the <method_name> <enter> Use `adb shell setprop log.tag.okhttp.Http2 <iden>` to enable logging for known levels;to enable logging for known levels;Track <file_name> ownership  ;<file_name> ownership is somewhat racy: when an HttpURLConnection reads the last byte of a connection, its ownership is released and given to the <method_name>;Similar;0.5190299153327942
Centralise logging behind JUL (<pr_link>) <enter> Use JUL, but wire up to the <method_name> <enter> Use `adb shell setprop log.tag.okhttp.Http2 <iden>` to enable logging for known levels;to enable logging for known levels;Move  <file_name>  pooling logic  ;"previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams; move  <file_name>  reuse to  <file_name>, with policy informed by  <method_name>  specifying what to do when the  <file_name>  becomes idle: pool, close or hold, so the  <file_name>  does what its told.";Similar;0.6282421946525574
Centralise logging behind JUL (<pr_link>) <enter> Use JUL, but wire up to the <method_name> <enter> Use `adb shell setprop log.tag.okhttp.Http2 <iden>` to enable logging for known levels;to enable logging for known levels;Implement moving bytes between OkBuffers  ;This is more complicated than Id anticipated;Similar;0.6322733163833618
Centralise logging behind JUL (<pr_link>) <enter> Use JUL, but wire up to the <method_name> <enter> Use `adb shell setprop log.tag.okhttp.Http2 <iden>` to enable logging for known levels;to enable logging for known levels;"Define async APIs and switch <file_name> to use <iden> directly. I think this is the best route going forward; and eventually we could invert this relationship to have <iden> depending on <file_name> directly rather than vice versa.";Using <iden> directly introduces some duplicated code with <iden>. It also breaks the <file_name> cache.;Similar;0.6290010213851929
Centralise logging behind JUL (<pr_link>) <enter> Use JUL, but wire up to the <method_name> <enter> Use `adb shell setprop log.tag.okhttp.Http2 <iden>` to enable logging for known levels;to enable logging for known levels;Fix checkstyle issues in new <iden> code;checkstyle issues;Similar;0.6555975079536438
Centralise logging behind JUL (<pr_link>) <enter> Use JUL, but wire up to the <method_name> <enter> Use `adb shell setprop log.tag.okhttp.Http2 <iden>` to enable logging for known levels;to enable logging for known levels;Introduce a <file_name> interface between engine and connection.;This breaks the direct dependency from <file_name> to <method_name>;Similar;0.7009338736534119
Centralise logging behind JUL (<pr_link>) <enter> Use JUL, but wire up to the <method_name> <enter> Use `adb shell setprop log.tag.okhttp.Http2 <iden>` to enable logging for known levels;to enable logging for known levels;Update to the latest <method_name>;Includes everything thru 8842981cbcfe20eb4721c0a2c867fa9a18233062;Similar;0.5928037762641907
Centralise logging behind JUL (<pr_link>) <enter> Use JUL, but wire up to the <method_name> <enter> Use `adb shell setprop log.tag.okhttp.Http2 <iden>` to enable logging for known levels;to enable logging for known levels;Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;Similar;0.6391905546188354
Centralise logging behind JUL (<pr_link>) <enter> Use JUL, but wire up to the <method_name> <enter> Use `adb shell setprop log.tag.okhttp.Http2 <iden>` to enable logging for known levels;to enable logging for known levels;Move out of the <file_name> package;To promote the code into AOSP, well keep this package as-is and do the jarjar in <iden> instead;Similar;0.5470902919769287
Centralise logging behind JUL (<pr_link>) <enter> Use JUL, but wire up to the <method_name> <enter> Use `adb shell setprop log.tag.okhttp.Http2 <iden>` to enable logging for known levels;to enable logging for known levels;Make the `<method_name>` return full working connections;Previously the returned connections required the caller to do extra work: setting up tunnels and performing an `<iden>` handshake. With this change, we make a complete working connection in `<method_name>`. This will make it easier to fix fallback when a single domain has multiple `<iden>` addresses that are not reachable. Also, this will make it easier to do SPDY through `<iden>` proxies.;Similar;0.6894975304603577
Centralise logging behind JUL (<pr_link>) <enter> Use JUL, but wire up to the <method_name> <enter> Use `adb shell setprop log.tag.okhttp.Http2 <iden>` to enable logging for known levels;to enable logging for known levels;Add error-prone compiler and fix its found issues;error-prone, its found issues;Similar;0.6034125685691833
Centralise logging behind JUL (<pr_link>) <enter> Use JUL, but wire up to the <method_name> <enter> Use `adb shell setprop log.tag.okhttp.Http2 <iden>` to enable logging for known levels;to enable logging for known levels;Remove old <iden> protocol method;old;Similar;0.5156576633453369
Centralise logging behind JUL (<pr_link>) <enter> Use JUL, but wire up to the <method_name> <enter> Use `adb shell setprop log.tag.okhttp.Http2 <iden>` to enable logging for known levels;to enable logging for known levels;Expose <iden> directly on <method_name>  ;direct;Similar;0.6151496767997742
Centralise logging behind JUL (<pr_link>) <enter> Use JUL, but wire up to the <method_name> <enter> Use `adb shell setprop log.tag.okhttp.Http2 <iden>` to enable logging for known levels;to enable logging for known levels;Use HTML entity for ampersand;to represent the ampersand symbol in HTML;Similar;0.5985355377197266
Centralise logging behind JUL (<pr_link>) <enter> Use JUL, but wire up to the <method_name> <enter> Use `adb shell setprop log.tag.okhttp.Http2 <iden>` to enable logging for known levels;to enable logging for known levels;Add convenience overload for <iden>-backed <method_name>;convenience;Similar;0.6679224371910095
Centralise logging behind JUL (<pr_link>) <enter> Use JUL, but wire up to the <method_name> <enter> Use `adb shell setprop log.tag.okhttp.Http2 <iden>` to enable logging for known levels;to enable logging for known levels;Update website to the latest design  ;latest design;Similar;0.5319604873657227
Centralise logging behind JUL (<pr_link>) <enter> Use JUL, but wire up to the <method_name> <enter> Use `adb shell setprop log.tag.okhttp.Http2 <iden>` to enable logging for known levels;to enable logging for known levels;Transfer to/from <iden> directly from <iden>  ;<pr_link>;Similar;0.5366644263267517
Centralise logging behind JUL (<pr_link>) <enter> Use JUL, but wire up to the <method_name> <enter> Use `adb shell setprop log.tag.okhttp.Http2 <iden>` to enable logging for known levels;to enable logging for known levels;add @override for subclass override method;subclass override method;Similar;0.6722919344902039
Centralise logging behind JUL (<pr_link>) <enter> Use JUL, but wire up to the <method_name> <enter> Use `adb shell setprop log.tag.okhttp.Http2 <iden>` to enable logging for known levels;to enable logging for known levels;Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Similar;0.6276570558547974
Centralise logging behind JUL (<pr_link>) <enter> Use JUL, but wire up to the <method_name> <enter> Use `adb shell setprop log.tag.okhttp.Http2 <iden>` to enable logging for known levels;to enable logging for known levels;Partially revert connection timeout behavior  ;The modification of the timeout behavior during connection caused problems;Similar;0.5426502823829651
Centralise logging behind JUL (<pr_link>) <enter> Use JUL, but wire up to the <method_name> <enter> Use `adb shell setprop log.tag.okhttp.Http2 <iden>` to enable logging for known levels;to enable logging for known levels;This change logs the exception but prevent it from propagating out of the top of the call stack.;This decreases overall flakiness.;Similar;0.571914792060852
Centralise logging behind JUL (<pr_link>) <enter> Use JUL, but wire up to the <method_name> <enter> Use `adb shell setprop log.tag.okhttp.Http2 <iden>` to enable logging for known levels;to enable logging for known levels;The changes to <iden>s  <file_name> have been ported  ;Upstream commit of <iden> / <iden> fix, This does not include the introduction of PlatformTest, which will be difficult to write so it works everywhere;Similar;0.6772498488426208
Centralise logging behind JUL (<pr_link>) <enter> Use JUL, but wire up to the <method_name> <enter> Use `adb shell setprop log.tag.okhttp.Http2 <iden>` to enable logging for known levels;to enable logging for known levels;Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Similar;0.6882229447364807
Centralise logging behind JUL (<pr_link>) <enter> Use JUL, but wire up to the <method_name> <enter> Use `adb shell setprop log.tag.okhttp.Http2 <iden>` to enable logging for known levels;to enable logging for known levels;Return <file_name> to previous (e.g. KitKat) behavior;this change required to handle this <iden> scenario;Similar;0.6582896709442139
Centralise logging behind JUL (<pr_link>) <enter> Use JUL, but wire up to the <method_name> <enter> Use `adb shell setprop log.tag.okhttp.Http2 <iden>` to enable logging for known levels;to enable logging for known levels;Document <file_name> throwing modes;To include the <pr_link> information;Similar;0.5744533538818359
Centralise logging behind JUL (<pr_link>) <enter> Use JUL, but wire up to the <method_name> <enter> Use `adb shell setprop log.tag.okhttp.Http2 <iden>` to enable logging for known levels;to enable logging for known levels;Convert <file_name> to Kotlin;<pr_link>, <iden>, <file_name>;Similar;0.6588531136512756
Centralise logging behind JUL (<pr_link>) <enter> Use JUL, but wire up to the <method_name> <enter> Use `adb shell setprop log.tag.okhttp.Http2 <iden>` to enable logging for known levels;to enable logging for known levels;Convert <file_name>, <file_name> to Kotlin  ;"to Kotlin

Decision: Rename <file_name> <version> to .kt (and others)  ";Similar;0.6729317903518677
Centralise logging behind JUL (<pr_link>) <enter> Use JUL, but wire up to the <method_name> <enter> Use `adb shell setprop log.tag.okhttp.Http2 <iden>` to enable logging for known levels;to enable logging for known levels;Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Similar;0.6814091205596924
Centralise logging behind JUL (<pr_link>) <enter> Use JUL, but wire up to the <method_name> <enter> Use `adb shell setprop log.tag.okhttp.Http2 <iden>` to enable logging for known levels;to enable logging for known levels;Just pass the <iden> and <iden> objects in directly;Dont summarize the request and response;Similar;0.5282579064369202
Centralise logging behind JUL (<pr_link>) <enter> Use JUL, but wire up to the <method_name> <enter> Use `adb shell setprop log.tag.okhttp.Http2 <iden>` to enable logging for known levels;to enable logging for known levels;Fix a race in <method_name> ( <pr_link> );We were assuming on a client failure the server wouldnt have any further events. But it will get a failure if we give it a moment. This was causing some test flakiness.;Similar;0.7076510190963745
Centralise logging behind JUL (<pr_link>) <enter> Use JUL, but wire up to the <method_name> <enter> Use `adb shell setprop log.tag.okhttp.Http2 <iden>` to enable logging for known levels;to enable logging for known levels;Refactor <file_name> by using <iden>;We can use <iden> instead of overriding <iden> abstract class;Similar;0.6565884947776794
Centralise logging behind JUL (<pr_link>) <enter> Use JUL, but wire up to the <method_name> <enter> Use `adb shell setprop log.tag.okhttp.Http2 <iden>` to enable logging for known levels;to enable logging for known levels;Enable GitHub Security Scanning;To configure GitHub workflow for code security scanning;Similar;0.5812461376190186
Centralise logging behind JUL (<pr_link>) <enter> Use JUL, but wire up to the <method_name> <enter> Use `adb shell setprop log.tag.okhttp.Http2 <iden>` to enable logging for known levels;to enable logging for known levels;Fix bug where request body isnt sent when it should  ;request body isnt sent when it should;Similar;0.5755072832107544
Centralise logging behind JUL (<pr_link>) <enter> Use JUL, but wire up to the <method_name> <enter> Use `adb shell setprop log.tag.okhttp.Http2 <iden>` to enable logging for known levels;to enable logging for known levels;Add support for following <iden> 307 temporary redirects  ;Fixes Android bug 41739;Similar;0.6442426443099976
Centralise logging behind JUL (<pr_link>) <enter> Use JUL, but wire up to the <method_name> <enter> Use `adb shell setprop log.tag.okhttp.Http2 <iden>` to enable logging for known levels;to enable logging for known levels;Add wildcard hostnames support in <file_name>;support;Similar;0.6636385917663574
Centralise logging behind JUL (<pr_link>) <enter> Use JUL, but wire up to the <method_name> <enter> Use `adb shell setprop log.tag.okhttp.Http2 <iden>` to enable logging for known levels;to enable logging for known levels;Fix correctness of WebSocketReader reserved flags test;reserved flags;Similar;0.670789361000061
init speedup  ;file_name, pr_link;API for handling an unexpected SSE response;unexpected;Similar;0.6493561267852783
init speedup  ;file_name, pr_link;Fix travis build;Fix;Similar;0.564200758934021
init speedup  ;file_name, pr_link;Use IOException instead of <iden>;more specific in <file_name> API;Similar;0.5661044716835022
init speedup  ;file_name, pr_link;Make  <file_name>  more capable.;more capable;Similar;0.665090024471283
init speedup  ;file_name, pr_link;document support for SNI;support for SNI;Similar;0.6393634676933289
init speedup  ;file_name, pr_link;Use  <file_name> s built-in <iden> style  <enter>  ;The boilerplate to set this up is unfortunate;Similar;0.5994717478752136
init speedup  ;file_name, pr_link;Use <iden> in <file_name>  ;The utility here is negligible. Were sharing threads between HTTP, HTTP/2 and web sockets now.;Similar;0.5776880383491516
init speedup  ;file_name, pr_link;Adopt idiomatic <iden> in <file_name>;idiomatic;Similar;0.6008162498474121
init speedup  ;file_name, pr_link;Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they cant be open. I think the motivation to make these non-final was pretty weak, and I dont mind breaking <iden> compatibility here.;Similar;0.525754451751709
init speedup  ;file_name, pr_link;Include prerequisites in the releasing guide.;to provide necessary information for users;Similar;0.5988333225250244
init speedup  ;file_name, pr_link;Convert <file_name> to Kotlin;"to Kotlin

Decision: Rename <file_name> to .kt";Similar;0.5904800295829773
init speedup  ;file_name, pr_link;Introduce <method_name> ;This is the payoff that preceding changes have been working towards.;Similar;0.6580528020858765
init speedup  ;file_name, pr_link;Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.;Similar;0.663126528263092
init speedup  ;file_name, pr_link;Rename <method_name> to <iden()>;I prefer signed;Similar;0.6052367687225342
init speedup  ;file_name, pr_link;Fix Javadoc builds with the jsr305 dependency  ;Because multiple modules share a package we need to share the dependency on everything in package-info.java;Similar;0.505678653717041
init speedup  ;file_name, pr_link;Update readme and changelog for <version>;<version>;Similar;0.551908016204834
init speedup  ;file_name, pr_link;Add <method_name>;Might be useful to expose this bookkeeping to app developers;Similar;0.6658049821853638
init speedup  ;file_name, pr_link;Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Similar;0.5446299910545349
init speedup  ;file_name, pr_link;Add a test for corner-case behavior;Im looking to make HttpURLConnectionImpl delegate to Job, and that means writing tests for all the weird things it does above HttpEngine.;Similar;0.6318978071212769
init speedup  ;file_name, pr_link;Add some pings to force happens-before in <iden> tests;Previously we were relying on accidents to get our tests to pass;Similar;0.5290234684944153
init speedup  ;file_name, pr_link;Track <file_name> ownership  ;<file_name> ownership is somewhat racy: when an HttpURLConnection reads the last byte of a connection, its ownership is released and given to the <method_name>;Similar;0.5823335647583008
init speedup  ;file_name, pr_link;Move  <file_name>  pooling logic  ;"previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams; move  <file_name>  reuse to  <file_name>, with policy informed by  <method_name>  specifying what to do when the  <file_name>  becomes idle: pool, close or hold, so the  <file_name>  does what its told.";Similar;0.6831881999969482
init speedup  ;file_name, pr_link;Implement moving bytes between OkBuffers  ;This is more complicated than Id anticipated;Similar;0.6046570539474487
init speedup  ;file_name, pr_link;Dont attempt <iden> modes we know will fail.;we know will fail;Similar;0.5105260610580444
init speedup  ;file_name, pr_link;Introduce a <file_name> interface between engine and connection.;This breaks the direct dependency from <file_name> to <method_name>;Similar;0.5483778119087219
init speedup  ;file_name, pr_link;Update to the latest <method_name>;Includes everything thru 8842981cbcfe20eb4721c0a2c867fa9a18233062;Similar;0.6337765455245972
init speedup  ;file_name, pr_link;Be more careful around IOExceptions;my goal is to make it easier to differentiate between protocol-level problems (bogus frames) from transport-level problems (closed sockets and EOF streams);Similar;0.6092120409011841
init speedup  ;file_name, pr_link;Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;Similar;0.559572696685791
init speedup  ;file_name, pr_link;Make the `<method_name>` return full working connections;Previously the returned connections required the caller to do extra work: setting up tunnels and performing an `<iden>` handshake. With this change, we make a complete working connection in `<method_name>`. This will make it easier to fix fallback when a single domain has multiple `<iden>` addresses that are not reachable. Also, this will make it easier to do SPDY through `<iden>` proxies.;Similar;0.5944164991378784
init speedup  ;file_name, pr_link;Expose <iden> directly on <method_name>  ;direct;Similar;0.6117107272148132
init speedup  ;file_name, pr_link;Use HTML entity for ampersand;to represent the ampersand symbol in HTML;Similar;0.54399174451828
init speedup  ;file_name, pr_link;Add convenience overload for <iden>-backed <method_name>;convenience;Similar;0.6405342817306519
init speedup  ;file_name, pr_link;Use consistent camel casing of <iden>;consistent camel casing;Similar;0.5053015947341919
init speedup  ;file_name, pr_link;Transfer to/from <iden> directly from <iden>  ;<pr_link>;Similar;0.7012939453125
init speedup  ;file_name, pr_link;add @override for subclass override method;subclass override method;Similar;0.58479243516922
init speedup  ;file_name, pr_link;Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Similar;0.5555082559585571
init speedup  ;file_name, pr_link;Partially revert connection timeout behavior  ;The modification of the timeout behavior during connection caused problems;Similar;0.6370534896850586
init speedup  ;file_name, pr_link;Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Similar;0.6505931615829468
init speedup  ;file_name, pr_link;Return <file_name> to previous (e.g. KitKat) behavior;this change required to handle this <iden> scenario;Similar;0.5486307144165039
init speedup  ;file_name, pr_link;Document <file_name> throwing modes;To include the <pr_link> information;Similar;0.5339345335960388
init speedup  ;file_name, pr_link;Convert <file_name> to Kotlin;<pr_link>, <iden>, <file_name>;Similar;0.5904800295829773
init speedup  ;file_name, pr_link;Convert <file_name>, <file_name> to Kotlin  ;"to Kotlin

Decision: Rename <file_name> <version> to .kt (and others)  ";Similar;0.599890947341919
init speedup  ;file_name, pr_link;Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Similar;0.500741183757782
init speedup  ;file_name, pr_link;Just pass the <iden> and <iden> objects in directly;Dont summarize the request and response;Similar;0.6302552819252014
init speedup  ;file_name, pr_link;Improve some Markdown;improve;Similar;0.6280133724212646
init speedup  ;file_name, pr_link;Refactor <file_name> by using <iden>;We can use <iden> instead of overriding <iden> abstract class;Similar;0.5671834945678711
init speedup  ;file_name, pr_link;load through bootstrap;-;Similar;0.619686484336853
init speedup  ;file_name, pr_link;Add support for following <iden> 307 temporary redirects  ;Fixes Android bug 41739;Similar;0.6360974311828613
API for handling an unexpected SSE response;unexpected;Wrap <iden> addresses with [] and return / path URIs for proxy CONNECT;Fix MockWebserver for <iden> addresses;Similar;0.5554876327514648
API for handling an unexpected SSE response;unexpected;Fix travis build;Fix;Similar;0.5166722536087036
API for handling an unexpected SSE response;unexpected;Use IOException instead of <iden>;more specific in <file_name> API;Similar;0.5620205998420715
API for handling an unexpected SSE response;unexpected;Make  <file_name>  more capable.;more capable;Similar;0.6455378532409668
API for handling an unexpected SSE response;unexpected;document support for SNI;support for SNI;Similar;0.6302436590194702
API for handling an unexpected SSE response;unexpected;Add HTTP/2 and <iden><version> columns to our security providers doc ;to enhance our security documentation;Similar;0.5653555989265442
API for handling an unexpected SSE response;unexpected;Use  <file_name> s built-in <iden> style  <enter>  ;The boilerplate to set this up is unfortunate;Similar;0.5979549884796143
API for handling an unexpected SSE response;unexpected;Use our test rule instead of the Maven Surefire listener  ;to Close the issue indicated by the link;Similar;0.5125429034233093
API for handling an unexpected SSE response;unexpected;Use <iden> in <file_name>  ;The utility here is negligible. Were sharing threads between HTTP, HTTP/2 and web sockets now.;Similar;0.5641871094703674
API for handling an unexpected SSE response;unexpected;Adopt idiomatic <iden> in <file_name>;idiomatic;Similar;0.5966742634773254
API for handling an unexpected SSE response;unexpected;Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they cant be open. I think the motivation to make these non-final was pretty weak, and I dont mind breaking <iden> compatibility here.;Similar;0.5262246131896973
API for handling an unexpected SSE response;unexpected;Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;Similar;0.6200197339057922
API for handling an unexpected SSE response;unexpected;Include prerequisites in the releasing guide.;to provide necessary information for users;Similar;0.6669569611549377
API for handling an unexpected SSE response;unexpected;Convert <file_name> to Kotlin;"to Kotlin

Decision: Rename <file_name> to .kt";Similar;0.5542182922363281
API for handling an unexpected SSE response;unexpected;Introduce <method_name> ;This is the payoff that preceding changes have been working towards.;Similar;0.6528706550598145
API for handling an unexpected SSE response;unexpected;Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.;Similar;0.7847723960876465
API for handling an unexpected SSE response;unexpected;Fix some maven problems that are blocking the <version> release;blocking the <version> release;Similar;0.6039958000183105
API for handling an unexpected SSE response;unexpected;Rename <method_name> to <iden()>;I prefer signed;Similar;0.5722150802612305
API for handling an unexpected SSE response;unexpected;Fixup <file_name> so that its worthy of production use.;This changes the default from the insecure 1024-bit <iden> to a secure 256-bit <iden> key. It adds a new option to use <iden> keys for interoperating with older clients.;Similar;0.6103491187095642
API for handling an unexpected SSE response;unexpected;Support client authentication in <file_name>;client authentication;Similar;0.5845816135406494
API for handling an unexpected SSE response;unexpected;Fix Javadoc builds with the jsr305 dependency  ;Because multiple modules share a package we need to share the dependency on everything in package-info.java;Similar;0.5266215205192566
API for handling an unexpected SSE response;unexpected;Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;Similar;0.5795974731445312
API for handling an unexpected SSE response;unexpected;Update readme and changelog for <version>;<version>;Similar;0.627971887588501
API for handling an unexpected SSE response;unexpected;New <file_name> class to normalize certificate chains  ;The goal of this is to get the root <iden> certificate into the certificate chain, so that it can be considered by the certificate pinner;Similar;0.546204686164856
API for handling an unexpected SSE response;unexpected;Fix some get prefixes on <file_name> and <method_name>;"-
None";Similar;0.596489667892456
API for handling an unexpected SSE response;unexpected;Write some new connection pool tests;These use the <iden> APIs. Theyre high-level so they wont break with the implementation rewrite.;Similar;0.5497257709503174
API for handling an unexpected SSE response;unexpected;Add <method_name>;Might be useful to expose this bookkeeping to app developers;Similar;0.624477744102478
API for handling an unexpected SSE response;unexpected;Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Similar;0.6305099129676819
API for handling an unexpected SSE response;unexpected;Fix <iden> post retransmit in the new API  ;We dont buffer response bodies in the new API. But we should retransmit POST bodies when a request fails.;Similar;0.607141375541687
API for handling an unexpected SSE response;unexpected;Add a test for corner-case behavior;Im looking to make HttpURLConnectionImpl delegate to Job, and that means writing tests for all the weird things it does above HttpEngine.;Similar;0.7085646390914917
API for handling an unexpected SSE response;unexpected;Add some pings to force happens-before in <iden> tests;Previously we were relying on accidents to get our tests to pass;Similar;0.6484957933425903
API for handling an unexpected SSE response;unexpected;Track <file_name> ownership  ;<file_name> ownership is somewhat racy: when an HttpURLConnection reads the last byte of a connection, its ownership is released and given to the <method_name>;Similar;0.5449708700180054
API for handling an unexpected SSE response;unexpected;Move  <file_name>  pooling logic  ;"previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams; move  <file_name>  reuse to  <file_name>, with policy informed by  <method_name>  specifying what to do when the  <file_name>  becomes idle: pool, close or hold, so the  <file_name>  does what its told.";Similar;0.6467452645301819
API for handling an unexpected SSE response;unexpected;Implement moving bytes between OkBuffers  ;This is more complicated than Id anticipated;Similar;0.6580315828323364
API for handling an unexpected SSE response;unexpected;"Define async APIs and switch <file_name> to use <iden> directly. I think this is the best route going forward; and eventually we could invert this relationship to have <iden> depending on <file_name> directly rather than vice versa.";Using <iden> directly introduces some duplicated code with <iden>. It also breaks the <file_name> cache.;Similar;0.5094642639160156
API for handling an unexpected SSE response;unexpected;Fix checkstyle issues in new <iden> code;checkstyle issues;Similar;0.6179375648498535
API for handling an unexpected SSE response;unexpected;Introduce a <file_name> interface between engine and connection.;This breaks the direct dependency from <file_name> to <method_name>;Similar;0.6246785521507263
API for handling an unexpected SSE response;unexpected;Update to the latest <method_name>;Includes everything thru 8842981cbcfe20eb4721c0a2c867fa9a18233062;Similar;0.6547699570655823
API for handling an unexpected SSE response;unexpected;Be more careful around IOExceptions;my goal is to make it easier to differentiate between protocol-level problems (bogus frames) from transport-level problems (closed sockets and EOF streams);Similar;0.6140989065170288
API for handling an unexpected SSE response;unexpected;Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;Similar;0.6743765473365784
API for handling an unexpected SSE response;unexpected;Move out of the <file_name> package;To promote the code into AOSP, well keep this package as-is and do the jarjar in <iden> instead;Similar;0.5356761813163757
API for handling an unexpected SSE response;unexpected;Make the `<method_name>` return full working connections;Previously the returned connections required the caller to do extra work: setting up tunnels and performing an `<iden>` handshake. With this change, we make a complete working connection in `<method_name>`. This will make it easier to fix fallback when a single domain has multiple `<iden>` addresses that are not reachable. Also, this will make it easier to do SPDY through `<iden>` proxies.;Similar;0.5812228918075562
API for handling an unexpected SSE response;unexpected;Fix <iden> which was being computed incorrectly;<enter> We were only returning true once we were already in a tunnel. This was bogus. In theory a <iden> tunnel sending extra data could be corrupted due to this bug.;Similar;0.5693437457084656
API for handling an unexpected SSE response;unexpected;Add error-prone compiler and fix its found issues;error-prone, its found issues;Similar;0.6078375577926636
API for handling an unexpected SSE response;unexpected;Expose <iden> directly on <method_name>  ;direct;Similar;0.6209675073623657
API for handling an unexpected SSE response;unexpected;Use HTML entity for ampersand;to represent the ampersand symbol in HTML;Similar;0.6033860445022583
API for handling an unexpected SSE response;unexpected;Add convenience overload for <iden>-backed <method_name>;convenience;Similar;0.6624777317047119
API for handling an unexpected SSE response;unexpected;Update website to the latest design  ;latest design;Similar;0.5369070172309875
API for handling an unexpected SSE response;unexpected;Transfer to/from <iden> directly from <iden>  ;<pr_link>;Similar;0.6942552924156189
API for handling an unexpected SSE response;unexpected;add @override for subclass override method;subclass override method;Similar;0.6358354687690735
API for handling an unexpected SSE response;unexpected;Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Similar;0.6240432858467102
API for handling an unexpected SSE response;unexpected;Partially revert connection timeout behavior  ;The modification of the timeout behavior during connection caused problems;Similar;0.6612598299980164
API for handling an unexpected SSE response;unexpected;The changes to <iden>s  <file_name> have been ported  ;Upstream commit of <iden> / <iden> fix, This does not include the introduction of PlatformTest, which will be difficult to write so it works everywhere;Similar;0.585008442401886
API for handling an unexpected SSE response;unexpected;Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Similar;0.6695829629898071
API for handling an unexpected SSE response;unexpected;Return <file_name> to previous (e.g. KitKat) behavior;this change required to handle this <iden> scenario;Similar;0.6215258240699768
API for handling an unexpected SSE response;unexpected;Document <file_name> throwing modes;To include the <pr_link> information;Similar;0.589610755443573
API for handling an unexpected SSE response;unexpected;Convert <file_name> to Kotlin;<pr_link>, <iden>, <file_name>;Similar;0.5542182922363281
API for handling an unexpected SSE response;unexpected;Convert <file_name>, <file_name> to Kotlin  ;"to Kotlin

Decision: Rename <file_name> <version> to .kt (and others)  ";Similar;0.5603830814361572
API for handling an unexpected SSE response;unexpected;Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Similar;0.6547021865844727
API for handling an unexpected SSE response;unexpected;Just pass the <iden> and <iden> objects in directly;Dont summarize the request and response;Similar;0.6318372488021851
API for handling an unexpected SSE response;unexpected;Fix a race in <method_name> ( <pr_link> );We were assuming on a client failure the server wouldnt have any further events. But it will get a failure if we give it a moment. This was causing some test flakiness.;Similar;0.5202776193618774
API for handling an unexpected SSE response;unexpected;Improve some Markdown;improve;Similar;0.6479599475860596
API for handling an unexpected SSE response;unexpected;Refactor <file_name> by using <iden>;We can use <iden> instead of overriding <iden> abstract class;Similar;0.5987998247146606
API for handling an unexpected SSE response;unexpected;Enable GitHub Security Scanning;To configure GitHub workflow for code security scanning;Similar;0.5609101057052612
API for handling an unexpected SSE response;unexpected;load through bootstrap;-;Similar;0.6013820171356201
API for handling an unexpected SSE response;unexpected;Fix bug where request body isnt sent when it should  ;request body isnt sent when it should;Similar;0.6079730987548828
API for handling an unexpected SSE response;unexpected;Add support for following <iden> 307 temporary redirects  ;Fixes Android bug 41739;Similar;0.6111865043640137
API for handling an unexpected SSE response;unexpected;Add wildcard hostnames support in <file_name>;support;Similar;0.5553416013717651
Wrap <iden> addresses with [] and return / path URIs for proxy CONNECT;Fix MockWebserver for <iden> addresses;Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;Similar;0.5866628885269165
Wrap <iden> addresses with [] and return / path URIs for proxy CONNECT;Fix MockWebserver for <iden> addresses;Update  <file_name>  to temporarily ignore javadoc errors and compile tests but not run ( <pr_link> );temporarily ignore javadoc errors and compile tests;Similar;0.5481612682342529
Wrap <iden> addresses with [] and return / path URIs for proxy CONNECT;Fix MockWebserver for <iden> addresses;Use IOException instead of <iden>;more specific in <file_name> API;Similar;0.6050657033920288
Wrap <iden> addresses with [] and return / path URIs for proxy CONNECT;Fix MockWebserver for <iden> addresses;Make  <file_name>  more capable.;more capable;Similar;0.5862561464309692
Wrap <iden> addresses with [] and return / path URIs for proxy CONNECT;Fix MockWebserver for <iden> addresses;fix <file_name> for Java 9;Java 9;Similar;0.5305218696594238
Wrap <iden> addresses with [] and return / path URIs for proxy CONNECT;Fix MockWebserver for <iden> addresses;document support for SNI;support for SNI;Similar;0.5797609090805054
Wrap <iden> addresses with [] and return / path URIs for proxy CONNECT;Fix MockWebserver for <iden> addresses;Limit recovery attempts for REFUSED_STREAM errors;We limit per-connection retries but not per-call retries, so this was creating large numbers of connections each of which called the server and accepted yet another REFUSED_STREAM.;Similar;0.5439873337745667
Wrap <iden> addresses with [] and return / path URIs for proxy CONNECT;Fix MockWebserver for <iden> addresses;Add HTTP/2 and <iden><version> columns to our security providers doc ;to enhance our security documentation;Similar;0.7946289777755737
Wrap <iden> addresses with [] and return / path URIs for proxy CONNECT;Fix MockWebserver for <iden> addresses;Use  <file_name> s built-in <iden> style  <enter>  ;The boilerplate to set this up is unfortunate;Similar;0.6895802021026611
Wrap <iden> addresses with [] and return / path URIs for proxy CONNECT;Fix MockWebserver for <iden> addresses;Use <iden> in <file_name>  ;The utility here is negligible. Were sharing threads between HTTP, HTTP/2 and web sockets now.;Similar;0.6856969594955444
Wrap <iden> addresses with [] and return / path URIs for proxy CONNECT;Fix MockWebserver for <iden> addresses;Adopt idiomatic <iden> in <file_name>;idiomatic;Similar;0.6980786919593811
Wrap <iden> addresses with [] and return / path URIs for proxy CONNECT;Fix MockWebserver for <iden> addresses;Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they cant be open. I think the motivation to make these non-final was pretty weak, and I dont mind breaking <iden> compatibility here.;Similar;0.6097739934921265
Wrap <iden> addresses with [] and return / path URIs for proxy CONNECT;Fix MockWebserver for <iden> addresses;Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;Similar;0.6961149573326111
Wrap <iden> addresses with [] and return / path URIs for proxy CONNECT;Fix MockWebserver for <iden> addresses;Include prerequisites in the releasing guide.;to provide necessary information for users;Similar;0.5411229133605957
Wrap <iden> addresses with [] and return / path URIs for proxy CONNECT;Fix MockWebserver for <iden> addresses;Convert <file_name> to Kotlin;"to Kotlin

Decision: Rename <file_name> to .kt";Similar;0.6855000257492065
Wrap <iden> addresses with [] and return / path URIs for proxy CONNECT;Fix MockWebserver for <iden> addresses;Introduce <method_name> ;This is the payoff that preceding changes have been working towards.;Similar;0.6167672872543335
Wrap <iden> addresses with [] and return / path URIs for proxy CONNECT;Fix MockWebserver for <iden> addresses;Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.;Similar;0.6271854639053345
Wrap <iden> addresses with [] and return / path URIs for proxy CONNECT;Fix MockWebserver for <iden> addresses;Fix some maven problems that are blocking the <version> release;blocking the <version> release;Similar;0.528997004032135
Wrap <iden> addresses with [] and return / path URIs for proxy CONNECT;Fix MockWebserver for <iden> addresses;Rename <method_name> to <iden()>;I prefer signed;Similar;0.6261409521102905
Wrap <iden> addresses with [] and return / path URIs for proxy CONNECT;Fix MockWebserver for <iden> addresses;Fixup <file_name> so that its worthy of production use.;This changes the default from the insecure 1024-bit <iden> to a secure 256-bit <iden> key. It adds a new option to use <iden> keys for interoperating with older clients.;Similar;0.6060391664505005
Wrap <iden> addresses with [] and return / path URIs for proxy CONNECT;Fix MockWebserver for <iden> addresses;Support client authentication in <file_name>;client authentication;Similar;0.8272972106933594
Wrap <iden> addresses with [] and return / path URIs for proxy CONNECT;Fix MockWebserver for <iden> addresses;Remove <iden>-mode <iden> cipher suites;This removes the following cipher suites as supported-by-default;Similar;0.5347778797149658
Wrap <iden> addresses with [] and return / path URIs for proxy CONNECT;Fix MockWebserver for <iden> addresses;Fix Javadoc builds with the jsr305 dependency  ;Because multiple modules share a package we need to share the dependency on everything in package-info.java;Similar;0.5394507646560669
Wrap <iden> addresses with [] and return / path URIs for proxy CONNECT;Fix MockWebserver for <iden> addresses;Make the  <file_name>  a little better.  <enter> <iden> threads by their URLs. Dont follow all fragments of the same <iden>;"For better organization; to prevent following all fragments of the same <iden>";Similar;0.651361882686615
Wrap <iden> addresses with [] and return / path URIs for proxy CONNECT;Fix MockWebserver for <iden> addresses;Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;Similar;0.6938364505767822
Wrap <iden> addresses with [] and return / path URIs for proxy CONNECT;Fix MockWebserver for <iden> addresses;Fix tests to share a common <iden>. Also fix the memory limit, which may prevent Travis from failing our tests.;share a common <iden>, memory limit, prevent Travis from failing our tests;Similar;0.553979218006134
Wrap <iden> addresses with [] and return / path URIs for proxy CONNECT;Fix MockWebserver for <iden> addresses;Update readme and changelog for <version>;<version>;Similar;0.7088736891746521
Wrap <iden> addresses with [] and return / path URIs for proxy CONNECT;Fix MockWebserver for <iden> addresses;New <file_name> class to normalize certificate chains  ;The goal of this is to get the root <iden> certificate into the certificate chain, so that it can be considered by the certificate pinner;Similar;0.6594604849815369
Wrap <iden> addresses with [] and return / path URIs for proxy CONNECT;Fix MockWebserver for <iden> addresses;Fix some get prefixes on <file_name> and <method_name>;"-
None";Similar;0.7354463934898376
Wrap <iden> addresses with [] and return / path URIs for proxy CONNECT;Fix MockWebserver for <iden> addresses;Write some new connection pool tests;These use the <iden> APIs. Theyre high-level so they wont break with the implementation rewrite.;Similar;0.5501294732093811
Wrap <iden> addresses with [] and return / path URIs for proxy CONNECT;Fix MockWebserver for <iden> addresses;Add <method_name>;Might be useful to expose this bookkeeping to app developers;Similar;0.6080878973007202
Wrap <iden> addresses with [] and return / path URIs for proxy CONNECT;Fix MockWebserver for <iden> addresses;Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Similar;0.6845912933349609
Wrap <iden> addresses with [] and return / path URIs for proxy CONNECT;Fix MockWebserver for <iden> addresses;Expose internal APIs for pluggable file systems, Also migrate all of our tests to use the <method_name>  ;We arent yet ready to make <iden> a public type, but I dont mind making it _almost_ available via an internal API for those brave enough to try that, Its simpler.;Similar;0.7161306738853455
Wrap <iden> addresses with [] and return / path URIs for proxy CONNECT;Fix MockWebserver for <iden> addresses;Fix <iden> post retransmit in the new API  ;We dont buffer response bodies in the new API. But we should retransmit POST bodies when a request fails.;Similar;0.6342344880104065
Wrap <iden> addresses with [] and return / path URIs for proxy CONNECT;Fix MockWebserver for <iden> addresses;Add a test for corner-case behavior;Im looking to make HttpURLConnectionImpl delegate to Job, and that means writing tests for all the weird things it does above HttpEngine.;Similar;0.5476661920547485
Wrap <iden> addresses with [] and return / path URIs for proxy CONNECT;Fix MockWebserver for <iden> addresses;Add some pings to force happens-before in <iden> tests;Previously we were relying on accidents to get our tests to pass;Similar;0.6023257970809937
Wrap <iden> addresses with [] and return / path URIs for proxy CONNECT;Fix MockWebserver for <iden> addresses;Track <file_name> ownership  ;<file_name> ownership is somewhat racy: when an HttpURLConnection reads the last byte of a connection, its ownership is released and given to the <method_name>;Similar;0.5494922399520874
Wrap <iden> addresses with [] and return / path URIs for proxy CONNECT;Fix MockWebserver for <iden> addresses;Move  <file_name>  pooling logic  ;"previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams; move  <file_name>  reuse to  <file_name>, with policy informed by  <method_name>  specifying what to do when the  <file_name>  becomes idle: pool, close or hold, so the  <file_name>  does what its told.";Similar;0.6327673196792603
Wrap <iden> addresses with [] and return / path URIs for proxy CONNECT;Fix MockWebserver for <iden> addresses;Implement moving bytes between OkBuffers  ;This is more complicated than Id anticipated;Similar;0.6213597059249878
Wrap <iden> addresses with [] and return / path URIs for proxy CONNECT;Fix MockWebserver for <iden> addresses;"Define async APIs and switch <file_name> to use <iden> directly. I think this is the best route going forward; and eventually we could invert this relationship to have <iden> depending on <file_name> directly rather than vice versa.";Using <iden> directly introduces some duplicated code with <iden>. It also breaks the <file_name> cache.;Similar;0.5340445041656494
Wrap <iden> addresses with [] and return / path URIs for proxy CONNECT;Fix MockWebserver for <iden> addresses;Fix checkstyle issues in new <iden> code;checkstyle issues;Similar;0.5747626423835754
Wrap <iden> addresses with [] and return / path URIs for proxy CONNECT;Fix MockWebserver for <iden> addresses;Introduce a <file_name> interface between engine and connection.;This breaks the direct dependency from <file_name> to <method_name>;Similar;0.7790470123291016
Wrap <iden> addresses with [] and return / path URIs for proxy CONNECT;Fix MockWebserver for <iden> addresses;Update to the latest <method_name>;Includes everything thru 8842981cbcfe20eb4721c0a2c867fa9a18233062;Similar;0.5030950903892517
Wrap <iden> addresses with [] and return / path URIs for proxy CONNECT;Fix MockWebserver for <iden> addresses;Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;Similar;0.5700075626373291
Wrap <iden> addresses with [] and return / path URIs for proxy CONNECT;Fix MockWebserver for <iden> addresses;Move out of the <file_name> package;To promote the code into AOSP, well keep this package as-is and do the jarjar in <iden> instead;Similar;0.5400406718254089
Wrap <iden> addresses with [] and return / path URIs for proxy CONNECT;Fix MockWebserver for <iden> addresses;Make the `<method_name>` return full working connections;Previously the returned connections required the caller to do extra work: setting up tunnels and performing an `<iden>` handshake. With this change, we make a complete working connection in `<method_name>`. This will make it easier to fix fallback when a single domain has multiple `<iden>` addresses that are not reachable. Also, this will make it easier to do SPDY through `<iden>` proxies.;Similar;0.6619113683700562
Wrap <iden> addresses with [] and return / path URIs for proxy CONNECT;Fix MockWebserver for <iden> addresses;Add error-prone compiler and fix its found issues;error-prone, its found issues;Similar;0.5146143436431885
Wrap <iden> addresses with [] and return / path URIs for proxy CONNECT;Fix MockWebserver for <iden> addresses;Remove old <iden> protocol method;old;Similar;0.5103890895843506
Wrap <iden> addresses with [] and return / path URIs for proxy CONNECT;Fix MockWebserver for <iden> addresses;Expose <iden> directly on <method_name>  ;direct;Similar;0.6512630581855774
Wrap <iden> addresses with [] and return / path URIs for proxy CONNECT;Fix MockWebserver for <iden> addresses;Use HTML entity for ampersand;to represent the ampersand symbol in HTML;Similar;0.6984280347824097
Wrap <iden> addresses with [] and return / path URIs for proxy CONNECT;Fix MockWebserver for <iden> addresses;Add convenience overload for <iden>-backed <method_name>;convenience;Similar;0.7038850784301758
Wrap <iden> addresses with [] and return / path URIs for proxy CONNECT;Fix MockWebserver for <iden> addresses;Transfer to/from <iden> directly from <iden>  ;<pr_link>;Similar;0.6137281656265259
Wrap <iden> addresses with [] and return / path URIs for proxy CONNECT;Fix MockWebserver for <iden> addresses;add @override for subclass override method;subclass override method;Similar;0.720500111579895
Wrap <iden> addresses with [] and return / path URIs for proxy CONNECT;Fix MockWebserver for <iden> addresses;Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Similar;0.5810745358467102
Wrap <iden> addresses with [] and return / path URIs for proxy CONNECT;Fix MockWebserver for <iden> addresses;Partially revert connection timeout behavior  ;The modification of the timeout behavior during connection caused problems;Similar;0.5202721357345581
Wrap <iden> addresses with [] and return / path URIs for proxy CONNECT;Fix MockWebserver for <iden> addresses;The changes to <iden>s  <file_name> have been ported  ;Upstream commit of <iden> / <iden> fix, This does not include the introduction of PlatformTest, which will be difficult to write so it works everywhere;Similar;0.7128896713256836
Wrap <iden> addresses with [] and return / path URIs for proxy CONNECT;Fix MockWebserver for <iden> addresses;Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Similar;0.6641791462898254
Wrap <iden> addresses with [] and return / path URIs for proxy CONNECT;Fix MockWebserver for <iden> addresses;Return <file_name> to previous (e.g. KitKat) behavior;this change required to handle this <iden> scenario;Similar;0.6481320858001709
Wrap <iden> addresses with [] and return / path URIs for proxy CONNECT;Fix MockWebserver for <iden> addresses;Document <file_name> throwing modes;To include the <pr_link> information;Similar;0.5918510556221008
Wrap <iden> addresses with [] and return / path URIs for proxy CONNECT;Fix MockWebserver for <iden> addresses;Convert <file_name> to Kotlin;<pr_link>, <iden>, <file_name>;Similar;0.6855000257492065
Wrap <iden> addresses with [] and return / path URIs for proxy CONNECT;Fix MockWebserver for <iden> addresses;Convert <file_name>, <file_name> to Kotlin  ;"to Kotlin

Decision: Rename <file_name> <version> to .kt (and others)  ";Similar;0.6934553980827332
Wrap <iden> addresses with [] and return / path URIs for proxy CONNECT;Fix MockWebserver for <iden> addresses;Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Similar;0.7180861830711365
Wrap <iden> addresses with [] and return / path URIs for proxy CONNECT;Fix MockWebserver for <iden> addresses;Just pass the <iden> and <iden> objects in directly;Dont summarize the request and response;Similar;0.559726357460022
Wrap <iden> addresses with [] and return / path URIs for proxy CONNECT;Fix MockWebserver for <iden> addresses;Fix a race in <method_name> ( <pr_link> );We were assuming on a client failure the server wouldnt have any further events. But it will get a failure if we give it a moment. This was causing some test flakiness.;Similar;0.6031609177589417
Wrap <iden> addresses with [] and return / path URIs for proxy CONNECT;Fix MockWebserver for <iden> addresses;Refactor <file_name> by using <iden>;We can use <iden> instead of overriding <iden> abstract class;Similar;0.7109666466712952
Wrap <iden> addresses with [] and return / path URIs for proxy CONNECT;Fix MockWebserver for <iden> addresses;Enable GitHub Security Scanning;To configure GitHub workflow for code security scanning;Similar;0.6650867462158203
Wrap <iden> addresses with [] and return / path URIs for proxy CONNECT;Fix MockWebserver for <iden> addresses;Fix bug where request body isnt sent when it should  ;request body isnt sent when it should;Similar;0.5250986218452454
Wrap <iden> addresses with [] and return / path URIs for proxy CONNECT;Fix MockWebserver for <iden> addresses;Add support for following <iden> 307 temporary redirects  ;Fixes Android bug 41739;Similar;0.6154494285583496
Wrap <iden> addresses with [] and return / path URIs for proxy CONNECT;Fix MockWebserver for <iden> addresses;Add wildcard hostnames support in <file_name>;support;Similar;0.775977611541748
Wrap <iden> addresses with [] and return / path URIs for proxy CONNECT;Fix MockWebserver for <iden> addresses;Fix correctness of WebSocketReader reserved flags test;reserved flags;Similar;0.6399991512298584
Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;Update  <file_name>  to temporarily ignore javadoc errors and compile tests but not run ( <pr_link> );temporarily ignore javadoc errors and compile tests;Similar;0.6241300106048584
Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;Fix travis build;Fix;Similar;0.5018699169158936
Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;Use IOException instead of <iden>;more specific in <file_name> API;Similar;0.6035704612731934
Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;Make  <file_name>  more capable.;more capable;Similar;0.6669646501541138
Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;fix <file_name> for Java 9;Java 9;Similar;0.5895585417747498
Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;document support for SNI;support for SNI;Similar;0.5585237741470337
Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;Limit recovery attempts for REFUSED_STREAM errors;We limit per-connection retries but not per-call retries, so this was creating large numbers of connections each of which called the server and accepted yet another REFUSED_STREAM.;Similar;0.7213516235351562
Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;Add HTTP/2 and <iden><version> columns to our security providers doc ;to enhance our security documentation;Similar;0.6232813000679016
Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;Use  <file_name> s built-in <iden> style  <enter>  ;The boilerplate to set this up is unfortunate;Similar;0.6982386112213135
Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;Use our test rule instead of the Maven Surefire listener  ;to Close the issue indicated by the link;Similar;0.5784292817115784
Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;Use <iden> in <file_name>  ;The utility here is negligible. Were sharing threads between HTTP, HTTP/2 and web sockets now.;Similar;0.7155923247337341
Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;Adopt idiomatic <iden> in <file_name>;idiomatic;Similar;0.7273622155189514
Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they cant be open. I think the motivation to make these non-final was pretty weak, and I dont mind breaking <iden> compatibility here.;Similar;0.7328864336013794
Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;Similar;0.6045894622802734
Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;Include prerequisites in the releasing guide.;to provide necessary information for users;Similar;0.5995931029319763
Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;Convert <file_name> to Kotlin;"to Kotlin

Decision: Rename <file_name> to .kt";Similar;0.6748058199882507
Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;Introduce <method_name> ;This is the payoff that preceding changes have been working towards.;Similar;0.6883807182312012
Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.;Similar;0.6543572545051575
Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;Fix some maven problems that are blocking the <version> release;blocking the <version> release;Similar;0.6248137950897217
Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;Rename <method_name> to <iden()>;I prefer signed;Similar;0.6975748538970947
Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;Fixup <file_name> so that its worthy of production use.;This changes the default from the insecure 1024-bit <iden> to a secure 256-bit <iden> key. It adds a new option to use <iden> keys for interoperating with older clients.;Similar;0.6918565630912781
Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;Support client authentication in <file_name>;client authentication;Similar;0.6225249767303467
Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;Remove <iden>-mode <iden> cipher suites;This removes the following cipher suites as supported-by-default;Similar;0.6969060897827148
Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;Fix Javadoc builds with the jsr305 dependency  ;Because multiple modules share a package we need to share the dependency on everything in package-info.java;Similar;0.5649152398109436
Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;Make the  <file_name>  a little better.  <enter> <iden> threads by their URLs. Dont follow all fragments of the same <iden>;"For better organization; to prevent following all fragments of the same <iden>";Similar;0.7087591886520386
Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;Similar;0.740601658821106
Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;Fix tests to share a common <iden>. Also fix the memory limit, which may prevent Travis from failing our tests.;share a common <iden>, memory limit, prevent Travis from failing our tests;Similar;0.5316087007522583
Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;Update readme and changelog for <version>;<version>;Similar;0.6117140054702759
Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;New <file_name> class to normalize certificate chains  ;The goal of this is to get the root <iden> certificate into the certificate chain, so that it can be considered by the certificate pinner;Similar;0.6223816871643066
Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;Fix some get prefixes on <file_name> and <method_name>;"-
None";Similar;0.6639647483825684
Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;Add <method_name>;Might be useful to expose this bookkeeping to app developers;Similar;0.6857293844223022
Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Similar;0.7535889148712158
Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;Drop our one remaining <iden> cipher suite;Tracking <iden> and Firefox, which have also dropped this cipher suite;Similar;0.6418857574462891
Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;Expose internal APIs for pluggable file systems, Also migrate all of our tests to use the <method_name>  ;We arent yet ready to make <iden> a public type, but I dont mind making it _almost_ available via an internal API for those brave enough to try that, Its simpler.;Similar;0.5304190516471863
Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;Change  <file_name>  to not implement java.net.ResponseCache;This marks some methods as  @deprecated and internal-only. Unfortunately we dont have a great mechanism to hide them from the documented <iden>.;Similar;0.6771141886711121
Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;The implementation is built around one oversized method that runs top to bottom;I found this was easier to follow than the switch statement recommended by the <iden> standard;Similar;0.5235474109649658
Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;Fix <iden> post retransmit in the new API  ;We dont buffer response bodies in the new API. But we should retransmit POST bodies when a request fails.;Similar;0.6162998080253601
Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;Add a test for corner-case behavior;Im looking to make HttpURLConnectionImpl delegate to Job, and that means writing tests for all the weird things it does above HttpEngine.;Similar;0.5797441005706787
Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;Add some pings to force happens-before in <iden> tests;Previously we were relying on accidents to get our tests to pass;Similar;0.5185993909835815
Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;Track <file_name> ownership  ;<file_name> ownership is somewhat racy: when an HttpURLConnection reads the last byte of a connection, its ownership is released and given to the <method_name>;Similar;0.5911044478416443
Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;Move  <file_name>  pooling logic  ;"previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams; move  <file_name>  reuse to  <file_name>, with policy informed by  <method_name>  specifying what to do when the  <file_name>  becomes idle: pool, close or hold, so the  <file_name>  does what its told.";Similar;0.6053957939147949
Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;Dont attempt <iden> modes we know will fail.;we know will fail;Similar;0.5307918190956116
Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;Remove <iden> 2 warnings;Small docs fixes;Similar;0.6479820609092712
Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;"Define async APIs and switch <file_name> to use <iden> directly. I think this is the best route going forward; and eventually we could invert this relationship to have <iden> depending on <file_name> directly rather than vice versa.";Using <iden> directly introduces some duplicated code with <iden>. It also breaks the <file_name> cache.;Similar;0.5022156238555908
Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;Fix checkstyle issues in new <iden> code;checkstyle issues;Similar;0.6167678236961365
Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;Kill <file_name> in the process  ;Teach <file_name> <iden>;Similar;0.5892252922058105
Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;Introduce a <file_name> interface between engine and connection.;This breaks the direct dependency from <file_name> to <method_name>;Similar;0.6669288873672485
Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;Make  <file_name> less flaky;I was seeing flaky results in the debugger because pooled connections were being evicted as the test ran;Similar;0.6450804471969604
Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;Update to the latest <method_name>;Includes everything thru 8842981cbcfe20eb4721c0a2c867fa9a18233062;Similar;0.5648026466369629
Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;Be more careful around IOExceptions;my goal is to make it easier to differentiate between protocol-level problems (bogus frames) from transport-level problems (closed sockets and EOF streams);Similar;0.6274203062057495
Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;Similar;0.6029433608055115
Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;Move out of the <file_name> package;To promote the code into AOSP, well keep this package as-is and do the jarjar in <iden> instead;Similar;0.645295262336731
Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;Make the `<method_name>` return full working connections;Previously the returned connections required the caller to do extra work: setting up tunnels and performing an `<iden>` handshake. With this change, we make a complete working connection in `<method_name>`. This will make it easier to fix fallback when a single domain has multiple `<iden>` addresses that are not reachable. Also, this will make it easier to do SPDY through `<iden>` proxies.;Similar;0.5280739068984985
Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;Fix <iden> which was being computed incorrectly;<enter> We were only returning true once we were already in a tunnel. This was bogus. In theory a <iden> tunnel sending extra data could be corrupted due to this bug.;Similar;0.5194310545921326
Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;Add error-prone compiler and fix its found issues;error-prone, its found issues;Similar;0.5698251724243164
Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;Remove old <iden> protocol method;old;Similar;0.6669065952301025
Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;Expose <iden> directly on <method_name>  ;direct;Similar;0.6553530097007751
Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;Use HTML entity for ampersand;to represent the ampersand symbol in HTML;Similar;0.6455790400505066
Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;Add convenience overload for <iden>-backed <method_name>;convenience;Similar;0.6744182705879211
Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;Drop unused dependencies;unused;Similar;0.5100470781326294
Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;Transfer to/from <iden> directly from <iden>  ;<pr_link>;Similar;0.5548189282417297
Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;add @override for subclass override method;subclass override method;Similar;0.6241961121559143
Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Similar;0.6722644567489624
Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;Partially revert connection timeout behavior  ;The modification of the timeout behavior during connection caused problems;Similar;0.5157483220100403
Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;This change logs the exception but prevent it from propagating out of the top of the call stack.;This decreases overall flakiness.;Similar;0.5515061616897583
Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;The changes to <iden>s  <file_name> have been ported  ;Upstream commit of <iden> / <iden> fix, This does not include the introduction of PlatformTest, which will be difficult to write so it works everywhere;Similar;0.5885613560676575
Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Similar;0.6695732474327087
Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;Return <file_name> to previous (e.g. KitKat) behavior;this change required to handle this <iden> scenario;Similar;0.5920236706733704
Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;Document <file_name> throwing modes;To include the <pr_link> information;Similar;0.6102170944213867
Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;Convert <file_name> to Kotlin;<pr_link>, <iden>, <file_name>;Similar;0.6748058199882507
Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;Convert <file_name>, <file_name> to Kotlin  ;"to Kotlin

Decision: Rename <file_name> <version> to .kt (and others)  ";Similar;0.6605590581893921
Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Similar;0.6492264270782471
Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;Fail HTTP/2 connections if the pong is not received;This removes the abstraction from our http2 package;Similar;0.5315200090408325
Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;Just pass the <iden> and <iden> objects in directly;Dont summarize the request and response;Similar;0.5523916482925415
Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;Fix a race in <method_name> ( <pr_link> );We were assuming on a client failure the server wouldnt have any further events. But it will get a failure if we give it a moment. This was causing some test flakiness.;Similar;0.6633682250976562
Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;fix <issue_link> : PROPFIND request should not redirect to GET request;PROPFIND request should not redirect to GET request;Similar;0.6065573692321777
Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;Refactor <file_name> by using <iden>;We can use <iden> instead of overriding <iden> abstract class;Similar;0.7242454886436462
Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;Remove unnecessary use of grouping parentheses  ;Lets remove warnings found by errorprone.;Similar;0.5697360038757324
Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;Enable GitHub Security Scanning;To configure GitHub workflow for code security scanning;Similar;0.5726015567779541
Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;load through bootstrap;-;Similar;0.5567136406898499
Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;Fix bug where request body isnt sent when it should  ;request body isnt sent when it should;Similar;0.6713618040084839
Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;Add support for following <iden> 307 temporary redirects  ;Fixes Android bug 41739;Similar;0.5888821482658386
Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;Add wildcard hostnames support in <file_name>;support;Similar;0.5946726202964783
Add a best practice restricted <iden> <file_name>  ;Restricted ciphers ;Fix correctness of WebSocketReader reserved flags test;reserved flags;Similar;0.7095285654067993
Update  <file_name>  to temporarily ignore javadoc errors and compile tests but not run ( <pr_link> );temporarily ignore javadoc errors and compile tests;Use IOException instead of <iden>;more specific in <file_name> API;Similar;0.5268866419792175
Update  <file_name>  to temporarily ignore javadoc errors and compile tests but not run ( <pr_link> );temporarily ignore javadoc errors and compile tests;fix <file_name> for Java 9;Java 9;Similar;0.568958580493927
Update  <file_name>  to temporarily ignore javadoc errors and compile tests but not run ( <pr_link> );temporarily ignore javadoc errors and compile tests;Limit recovery attempts for REFUSED_STREAM errors;We limit per-connection retries but not per-call retries, so this was creating large numbers of connections each of which called the server and accepted yet another REFUSED_STREAM.;Similar;0.7184830904006958
Update  <file_name>  to temporarily ignore javadoc errors and compile tests but not run ( <pr_link> );temporarily ignore javadoc errors and compile tests;Add HTTP/2 and <iden><version> columns to our security providers doc ;to enhance our security documentation;Similar;0.5439216494560242
Update  <file_name>  to temporarily ignore javadoc errors and compile tests but not run ( <pr_link> );temporarily ignore javadoc errors and compile tests;Use our test rule instead of the Maven Surefire listener  ;to Close the issue indicated by the link;Similar;0.5511749982833862
Update  <file_name>  to temporarily ignore javadoc errors and compile tests but not run ( <pr_link> );temporarily ignore javadoc errors and compile tests;Degrade connections after a timeout;This is based roughly on the <iden> Connections proposal here;Similar;0.5043577551841736
Update  <file_name>  to temporarily ignore javadoc errors and compile tests but not run ( <pr_link> );temporarily ignore javadoc errors and compile tests;Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;Similar;0.6121460795402527
Update  <file_name>  to temporarily ignore javadoc errors and compile tests but not run ( <pr_link> );temporarily ignore javadoc errors and compile tests;Fix some maven problems that are blocking the <version> release;blocking the <version> release;Similar;0.7340006232261658
Update  <file_name>  to temporarily ignore javadoc errors and compile tests but not run ( <pr_link> );temporarily ignore javadoc errors and compile tests;Fixup <file_name> so that its worthy of production use.;This changes the default from the insecure 1024-bit <iden> to a secure 256-bit <iden> key. It adds a new option to use <iden> keys for interoperating with older clients.;Similar;0.5228126049041748
Update  <file_name>  to temporarily ignore javadoc errors and compile tests but not run ( <pr_link> );temporarily ignore javadoc errors and compile tests;Support client authentication in <file_name>;client authentication;Similar;0.5198464393615723
Update  <file_name>  to temporarily ignore javadoc errors and compile tests but not run ( <pr_link> );temporarily ignore javadoc errors and compile tests;Remove <iden>-mode <iden> cipher suites;This removes the following cipher suites as supported-by-default;Similar;0.593483030796051
Update  <file_name>  to temporarily ignore javadoc errors and compile tests but not run ( <pr_link> );temporarily ignore javadoc errors and compile tests;Fix Javadoc builds with the jsr305 dependency  ;Because multiple modules share a package we need to share the dependency on everything in package-info.java;Similar;0.5966305732727051
Update  <file_name>  to temporarily ignore javadoc errors and compile tests but not run ( <pr_link> );temporarily ignore javadoc errors and compile tests;Make the  <file_name>  a little better.  <enter> <iden> threads by their URLs. Dont follow all fragments of the same <iden>;"For better organization; to prevent following all fragments of the same <iden>";Similar;0.6840779781341553
Update  <file_name>  to temporarily ignore javadoc errors and compile tests but not run ( <pr_link> );temporarily ignore javadoc errors and compile tests;Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;Similar;0.6430104374885559
Update  <file_name>  to temporarily ignore javadoc errors and compile tests but not run ( <pr_link> );temporarily ignore javadoc errors and compile tests;Fix tests to share a common <iden>. Also fix the memory limit, which may prevent Travis from failing our tests.;share a common <iden>, memory limit, prevent Travis from failing our tests;Similar;0.785670280456543
Update  <file_name>  to temporarily ignore javadoc errors and compile tests but not run ( <pr_link> );temporarily ignore javadoc errors and compile tests;Update readme and changelog for <version>;<version>;Similar;0.5953127145767212
Update  <file_name>  to temporarily ignore javadoc errors and compile tests but not run ( <pr_link> );temporarily ignore javadoc errors and compile tests;New <file_name> class to normalize certificate chains  ;The goal of this is to get the root <iden> certificate into the certificate chain, so that it can be considered by the certificate pinner;Similar;0.5223725438117981
Update  <file_name>  to temporarily ignore javadoc errors and compile tests but not run ( <pr_link> );temporarily ignore javadoc errors and compile tests;Fix some get prefixes on <file_name> and <method_name>;"-
None";Similar;0.5950839519500732
Update  <file_name>  to temporarily ignore javadoc errors and compile tests but not run ( <pr_link> );temporarily ignore javadoc errors and compile tests;Write some new connection pool tests;These use the <iden> APIs. Theyre high-level so they wont break with the implementation rewrite.;Similar;0.5427448749542236
Update  <file_name>  to temporarily ignore javadoc errors and compile tests but not run ( <pr_link> );temporarily ignore javadoc errors and compile tests;Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Similar;0.5874277353286743
Update  <file_name>  to temporarily ignore javadoc errors and compile tests but not run ( <pr_link> );temporarily ignore javadoc errors and compile tests;Drop our one remaining <iden> cipher suite;Tracking <iden> and Firefox, which have also dropped this cipher suite;Similar;0.5705838203430176
Update  <file_name>  to temporarily ignore javadoc errors and compile tests but not run ( <pr_link> );temporarily ignore javadoc errors and compile tests;Expose internal APIs for pluggable file systems, Also migrate all of our tests to use the <method_name>  ;We arent yet ready to make <iden> a public type, but I dont mind making it _almost_ available via an internal API for those brave enough to try that, Its simpler.;Similar;0.5652828812599182
Update  <file_name>  to temporarily ignore javadoc errors and compile tests but not run ( <pr_link> );temporarily ignore javadoc errors and compile tests;Change  <file_name>  to not implement java.net.ResponseCache;This marks some methods as  @deprecated and internal-only. Unfortunately we dont have a great mechanism to hide them from the documented <iden>.;Similar;0.7286356091499329
Update  <file_name>  to temporarily ignore javadoc errors and compile tests but not run ( <pr_link> );temporarily ignore javadoc errors and compile tests;Fix <iden> post retransmit in the new API  ;We dont buffer response bodies in the new API. But we should retransmit POST bodies when a request fails.;Similar;0.6634939908981323
Update  <file_name>  to temporarily ignore javadoc errors and compile tests but not run ( <pr_link> );temporarily ignore javadoc errors and compile tests;Add some pings to force happens-before in <iden> tests;Previously we were relying on accidents to get our tests to pass;Similar;0.64472895860672
Update  <file_name>  to temporarily ignore javadoc errors and compile tests but not run ( <pr_link> );temporarily ignore javadoc errors and compile tests;Remove <iden> 2 warnings;Small docs fixes;Similar;0.503308892250061
Update  <file_name>  to temporarily ignore javadoc errors and compile tests but not run ( <pr_link> );temporarily ignore javadoc errors and compile tests;Fix checkstyle issues in new <iden> code;checkstyle issues;Similar;0.6775027513504028
Update  <file_name>  to temporarily ignore javadoc errors and compile tests but not run ( <pr_link> );temporarily ignore javadoc errors and compile tests;Make  <file_name> less flaky;I was seeing flaky results in the debugger because pooled connections were being evicted as the test ran;Similar;0.5536621809005737
Update  <file_name>  to temporarily ignore javadoc errors and compile tests but not run ( <pr_link> );temporarily ignore javadoc errors and compile tests;Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;Similar;0.6085397601127625
Update  <file_name>  to temporarily ignore javadoc errors and compile tests but not run ( <pr_link> );temporarily ignore javadoc errors and compile tests;Move out of the <file_name> package;To promote the code into AOSP, well keep this package as-is and do the jarjar in <iden> instead;Similar;0.5520007610321045
Update  <file_name>  to temporarily ignore javadoc errors and compile tests but not run ( <pr_link> );temporarily ignore javadoc errors and compile tests;Fix <iden> which was being computed incorrectly;<enter> We were only returning true once we were already in a tunnel. This was bogus. In theory a <iden> tunnel sending extra data could be corrupted due to this bug.;Similar;0.5287816524505615
Update  <file_name>  to temporarily ignore javadoc errors and compile tests but not run ( <pr_link> );temporarily ignore javadoc errors and compile tests;Add error-prone compiler and fix its found issues;error-prone, its found issues;Similar;0.616295576095581
Update  <file_name>  to temporarily ignore javadoc errors and compile tests but not run ( <pr_link> );temporarily ignore javadoc errors and compile tests;Remove old <iden> protocol method;old;Similar;0.5003774166107178
Update  <file_name>  to temporarily ignore javadoc errors and compile tests but not run ( <pr_link> );temporarily ignore javadoc errors and compile tests;Add convenience overload for <iden>-backed <method_name>;convenience;Similar;0.5195302963256836
Update  <file_name>  to temporarily ignore javadoc errors and compile tests but not run ( <pr_link> );temporarily ignore javadoc errors and compile tests;Update website to the latest design  ;latest design;Similar;0.5211735963821411
Update  <file_name>  to temporarily ignore javadoc errors and compile tests but not run ( <pr_link> );temporarily ignore javadoc errors and compile tests;Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Similar;0.6344464421272278
Update  <file_name>  to temporarily ignore javadoc errors and compile tests but not run ( <pr_link> );temporarily ignore javadoc errors and compile tests;Partially revert connection timeout behavior  ;The modification of the timeout behavior during connection caused problems;Similar;0.518856406211853
Update  <file_name>  to temporarily ignore javadoc errors and compile tests but not run ( <pr_link> );temporarily ignore javadoc errors and compile tests;This change logs the exception but prevent it from propagating out of the top of the call stack.;This decreases overall flakiness.;Similar;0.7406090497970581
Update  <file_name>  to temporarily ignore javadoc errors and compile tests but not run ( <pr_link> );temporarily ignore javadoc errors and compile tests;The changes to <iden>s  <file_name> have been ported  ;Upstream commit of <iden> / <iden> fix, This does not include the introduction of PlatformTest, which will be difficult to write so it works everywhere;Similar;0.5746897459030151
Update  <file_name>  to temporarily ignore javadoc errors and compile tests but not run ( <pr_link> );temporarily ignore javadoc errors and compile tests;Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Similar;0.6194730401039124
Update  <file_name>  to temporarily ignore javadoc errors and compile tests but not run ( <pr_link> );temporarily ignore javadoc errors and compile tests;Fail HTTP/2 connections if the pong is not received;This removes the abstraction from our http2 package;Similar;0.6527068614959717
Update  <file_name>  to temporarily ignore javadoc errors and compile tests but not run ( <pr_link> );temporarily ignore javadoc errors and compile tests;Fix a race in <method_name> ( <pr_link> );We were assuming on a client failure the server wouldnt have any further events. But it will get a failure if we give it a moment. This was causing some test flakiness.;Similar;0.5854833722114563
Update  <file_name>  to temporarily ignore javadoc errors and compile tests but not run ( <pr_link> );temporarily ignore javadoc errors and compile tests;fix <issue_link> : PROPFIND request should not redirect to GET request;PROPFIND request should not redirect to GET request;Similar;0.6143407821655273
Update  <file_name>  to temporarily ignore javadoc errors and compile tests but not run ( <pr_link> );temporarily ignore javadoc errors and compile tests;Remove unnecessary use of grouping parentheses  ;Lets remove warnings found by errorprone.;Similar;0.5171962976455688
Update  <file_name>  to temporarily ignore javadoc errors and compile tests but not run ( <pr_link> );temporarily ignore javadoc errors and compile tests;Fix bug where request body isnt sent when it should  ;request body isnt sent when it should;Similar;0.7379062175750732
Update  <file_name>  to temporarily ignore javadoc errors and compile tests but not run ( <pr_link> );temporarily ignore javadoc errors and compile tests;Add support for following <iden> 307 temporary redirects  ;Fixes Android bug 41739;Similar;0.5136592984199524
Update  <file_name>  to temporarily ignore javadoc errors and compile tests but not run ( <pr_link> );temporarily ignore javadoc errors and compile tests;Fix correctness of WebSocketReader reserved flags test;reserved flags;Similar;0.6886641979217529
Fix travis build;Fix;Make  <file_name>  more capable.;more capable;Similar;0.5733453035354614
Fix travis build;Fix;fix <file_name> for Java 9;Java 9;Similar;0.5232575535774231
Fix travis build;Fix;Use  <file_name> s built-in <iden> style  <enter>  ;The boilerplate to set this up is unfortunate;Similar;0.5063872933387756
Fix travis build;Fix;Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;Similar;0.5280779600143433
Fix travis build;Fix;Include prerequisites in the releasing guide.;to provide necessary information for users;Similar;0.5089759826660156
Fix travis build;Fix;Convert <file_name> to Kotlin;"to Kotlin

Decision: Rename <file_name> to .kt";Similar;0.5101243257522583
Fix travis build;Fix;Introduce <method_name> ;This is the payoff that preceding changes have been working towards.;Similar;0.5812922716140747
Fix travis build;Fix;Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.;Similar;0.5763027667999268
Fix travis build;Fix;Rename <method_name> to <iden()>;I prefer signed;Similar;0.506037712097168
Fix travis build;Fix;Fixup <file_name> so that its worthy of production use.;This changes the default from the insecure 1024-bit <iden> to a secure 256-bit <iden> key. It adds a new option to use <iden> keys for interoperating with older clients.;Similar;0.6155723333358765
Fix travis build;Fix;Fix Javadoc builds with the jsr305 dependency  ;Because multiple modules share a package we need to share the dependency on everything in package-info.java;Similar;0.6210296154022217
Fix travis build;Fix;New <file_name> class to normalize certificate chains  ;The goal of this is to get the root <iden> certificate into the certificate chain, so that it can be considered by the certificate pinner;Similar;0.5037044882774353
Fix travis build;Fix;Write some new connection pool tests;These use the <iden> APIs. Theyre high-level so they wont break with the implementation rewrite.;Similar;0.5228445529937744
Fix travis build;Fix;Add <method_name>;Might be useful to expose this bookkeeping to app developers;Similar;0.6121394634246826
Fix travis build;Fix;Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Similar;0.6060909032821655
Fix travis build;Fix;Fix <iden> post retransmit in the new API  ;We dont buffer response bodies in the new API. But we should retransmit POST bodies when a request fails.;Similar;0.5678699016571045
Fix travis build;Fix;Add a test for corner-case behavior;Im looking to make HttpURLConnectionImpl delegate to Job, and that means writing tests for all the weird things it does above HttpEngine.;Similar;0.5379348993301392
Fix travis build;Fix;Add some pings to force happens-before in <iden> tests;Previously we were relying on accidents to get our tests to pass;Similar;0.5484885573387146
Fix travis build;Fix;Move  <file_name>  pooling logic  ;"previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams; move  <file_name>  reuse to  <file_name>, with policy informed by  <method_name>  specifying what to do when the  <file_name>  becomes idle: pool, close or hold, so the  <file_name>  does what its told.";Similar;0.5663448572158813
Fix travis build;Fix;Implement moving bytes between OkBuffers  ;This is more complicated than Id anticipated;Similar;0.5011908411979675
Fix travis build;Fix;Fix checkstyle issues in new <iden> code;checkstyle issues;Similar;0.5593734383583069
Fix travis build;Fix;Update to the latest <method_name>;Includes everything thru 8842981cbcfe20eb4721c0a2c867fa9a18233062;Similar;0.5702716708183289
Fix travis build;Fix;Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;Similar;0.6384415030479431
Fix travis build;Fix;Make the `<method_name>` return full working connections;Previously the returned connections required the caller to do extra work: setting up tunnels and performing an `<iden>` handshake. With this change, we make a complete working connection in `<method_name>`. This will make it easier to fix fallback when a single domain has multiple `<iden>` addresses that are not reachable. Also, this will make it easier to do SPDY through `<iden>` proxies.;Similar;0.5261791944503784
Fix travis build;Fix;Fix <iden> which was being computed incorrectly;<enter> We were only returning true once we were already in a tunnel. This was bogus. In theory a <iden> tunnel sending extra data could be corrupted due to this bug.;Similar;0.516013503074646
Fix travis build;Fix;Add error-prone compiler and fix its found issues;error-prone, its found issues;Similar;0.5778307318687439
Fix travis build;Fix;Add convenience overload for <iden>-backed <method_name>;convenience;Similar;0.5388599038124084
Fix travis build;Fix;Update website to the latest design  ;latest design;Similar;0.5166307687759399
Fix travis build;Fix;add @override for subclass override method;subclass override method;Similar;0.5304197072982788
Fix travis build;Fix;Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Similar;0.6237223744392395
Fix travis build;Fix;Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Similar;0.5300148725509644
Fix travis build;Fix;Return <file_name> to previous (e.g. KitKat) behavior;this change required to handle this <iden> scenario;Similar;0.5139000415802002
Fix travis build;Fix;Convert <file_name> to Kotlin;<pr_link>, <iden>, <file_name>;Similar;0.5101243257522583
Fix travis build;Fix;Convert <file_name>, <file_name> to Kotlin  ;"to Kotlin

Decision: Rename <file_name> <version> to .kt (and others)  ";Similar;0.5090753436088562
Fix travis build;Fix;Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Similar;0.5751861333847046
Fix travis build;Fix;Fix a race in <method_name> ( <pr_link> );We were assuming on a client failure the server wouldnt have any further events. But it will get a failure if we give it a moment. This was causing some test flakiness.;Similar;0.6000202894210815
Fix travis build;Fix;Improve some Markdown;improve;Similar;0.568917989730835
Fix travis build;Fix;Fix bug where request body isnt sent when it should  ;request body isnt sent when it should;Similar;0.5447455644607544
Fix travis build;Fix;Add support for following <iden> 307 temporary redirects  ;Fixes Android bug 41739;Similar;0.5165281891822815
Use IOException instead of <iden>;more specific in <file_name> API;Make  <file_name>  more capable.;more capable;Similar;0.6296842694282532
Use IOException instead of <iden>;more specific in <file_name> API;fix <file_name> for Java 9;Java 9;Similar;0.5166828036308289
Use IOException instead of <iden>;more specific in <file_name> API;document support for SNI;support for SNI;Similar;0.6660041809082031
Use IOException instead of <iden>;more specific in <file_name> API;Limit recovery attempts for REFUSED_STREAM errors;We limit per-connection retries but not per-call retries, so this was creating large numbers of connections each of which called the server and accepted yet another REFUSED_STREAM.;Similar;0.6073703765869141
Use IOException instead of <iden>;more specific in <file_name> API;Use  <file_name> s built-in <iden> style  <enter>  ;The boilerplate to set this up is unfortunate;Similar;0.657680094242096
Use IOException instead of <iden>;more specific in <file_name> API;Use our test rule instead of the Maven Surefire listener  ;to Close the issue indicated by the link;Similar;0.743552029132843
Use IOException instead of <iden>;more specific in <file_name> API;Use <iden> in <file_name>  ;The utility here is negligible. Were sharing threads between HTTP, HTTP/2 and web sockets now.;Similar;0.6884545087814331
Use IOException instead of <iden>;more specific in <file_name> API;Adopt idiomatic <iden> in <file_name>;idiomatic;Similar;0.6808226704597473
Use IOException instead of <iden>;more specific in <file_name> API;Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they cant be open. I think the motivation to make these non-final was pretty weak, and I dont mind breaking <iden> compatibility here.;Similar;0.5595271587371826
Use IOException instead of <iden>;more specific in <file_name> API;Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;Similar;0.5294877290725708
Use IOException instead of <iden>;more specific in <file_name> API;Convert <file_name> to Kotlin;"to Kotlin

Decision: Rename <file_name> to .kt";Similar;0.6515453457832336
Use IOException instead of <iden>;more specific in <file_name> API;Introduce <method_name> ;This is the payoff that preceding changes have been working towards.;Similar;0.6791182160377502
Use IOException instead of <iden>;more specific in <file_name> API;Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.;Similar;0.6560049057006836
Use IOException instead of <iden>;more specific in <file_name> API;Rename <method_name> to <iden()>;I prefer signed;Similar;0.7361040711402893
Use IOException instead of <iden>;more specific in <file_name> API;Fixup <file_name> so that its worthy of production use.;This changes the default from the insecure 1024-bit <iden> to a secure 256-bit <iden> key. It adds a new option to use <iden> keys for interoperating with older clients.;Similar;0.5139747858047485
Use IOException instead of <iden>;more specific in <file_name> API;Support client authentication in <file_name>;client authentication;Similar;0.5326513051986694
Use IOException instead of <iden>;more specific in <file_name> API;Remove <iden>-mode <iden> cipher suites;This removes the following cipher suites as supported-by-default;Similar;0.6636875867843628
Use IOException instead of <iden>;more specific in <file_name> API;Fix Javadoc builds with the jsr305 dependency  ;Because multiple modules share a package we need to share the dependency on everything in package-info.java;Similar;0.5192617177963257
Use IOException instead of <iden>;more specific in <file_name> API;Make the  <file_name>  a little better.  <enter> <iden> threads by their URLs. Dont follow all fragments of the same <iden>;"For better organization; to prevent following all fragments of the same <iden>";Similar;0.6137195825576782
Use IOException instead of <iden>;more specific in <file_name> API;Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;Similar;0.6389582753181458
Use IOException instead of <iden>;more specific in <file_name> API;Collapse interceptors into a single chain;Instead of having a chain of application interceptors and a separate chain of network interceptors, this makes a single heterogeneous chain. It makes the <iden> core and network caller into interceptors.;Similar;0.5355267524719238
Use IOException instead of <iden>;more specific in <file_name> API;Update readme and changelog for <version>;<version>;Similar;0.6392592191696167
Use IOException instead of <iden>;more specific in <file_name> API;Fix some get prefixes on <file_name> and <method_name>;"-
None";Similar;0.5843087434768677
Use IOException instead of <iden>;more specific in <file_name> API;Add <method_name>;Might be useful to expose this bookkeeping to app developers;Similar;0.6663496494293213
Use IOException instead of <iden>;more specific in <file_name> API;Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Similar;0.6827818155288696
Use IOException instead of <iden>;more specific in <file_name> API;Drop our one remaining <iden> cipher suite;Tracking <iden> and Firefox, which have also dropped this cipher suite;Similar;0.5910443663597107
Use IOException instead of <iden>;more specific in <file_name> API;Change  <file_name>  to not implement java.net.ResponseCache;This marks some methods as  @deprecated and internal-only. Unfortunately we dont have a great mechanism to hide them from the documented <iden>.;Similar;0.6732200384140015
Use IOException instead of <iden>;more specific in <file_name> API;Fix <iden> post retransmit in the new API  ;We dont buffer response bodies in the new API. But we should retransmit POST bodies when a request fails.;Similar;0.5514424443244934
Use IOException instead of <iden>;more specific in <file_name> API;Add a test for corner-case behavior;Im looking to make HttpURLConnectionImpl delegate to Job, and that means writing tests for all the weird things it does above HttpEngine.;Similar;0.5618638396263123
Use IOException instead of <iden>;more specific in <file_name> API;Add some pings to force happens-before in <iden> tests;Previously we were relying on accidents to get our tests to pass;Similar;0.5232604742050171
Use IOException instead of <iden>;more specific in <file_name> API;Track <file_name> ownership  ;<file_name> ownership is somewhat racy: when an HttpURLConnection reads the last byte of a connection, its ownership is released and given to the <method_name>;Similar;0.5761194825172424
Use IOException instead of <iden>;more specific in <file_name> API;Move  <file_name>  pooling logic  ;"previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams; move  <file_name>  reuse to  <file_name>, with policy informed by  <method_name>  specifying what to do when the  <file_name>  becomes idle: pool, close or hold, so the  <file_name>  does what its told.";Similar;0.6232476234436035
Use IOException instead of <iden>;more specific in <file_name> API;Implement moving bytes between OkBuffers  ;This is more complicated than Id anticipated;Similar;0.5741704702377319
Use IOException instead of <iden>;more specific in <file_name> API;Dont attempt <iden> modes we know will fail.;we know will fail;Similar;0.5295405387878418
Use IOException instead of <iden>;more specific in <file_name> API;Remove <iden> 2 warnings;Small docs fixes;Similar;0.6394467353820801
Use IOException instead of <iden>;more specific in <file_name> API;Dont use <iden> APIs not in Gingerbread;APIs not in Gingerbread;Similar;0.5812118649482727
Use IOException instead of <iden>;more specific in <file_name> API;Introduce a <file_name> interface between engine and connection.;This breaks the direct dependency from <file_name> to <method_name>;Similar;0.6034897565841675
Use IOException instead of <iden>;more specific in <file_name> API;Make  <file_name> less flaky;I was seeing flaky results in the debugger because pooled connections were being evicted as the test ran;Similar;0.6100475192070007
Use IOException instead of <iden>;more specific in <file_name> API;Update to the latest <method_name>;Includes everything thru 8842981cbcfe20eb4721c0a2c867fa9a18233062;Similar;0.5364254117012024
Use IOException instead of <iden>;more specific in <file_name> API;Be more careful around IOExceptions;my goal is to make it easier to differentiate between protocol-level problems (bogus frames) from transport-level problems (closed sockets and EOF streams);Similar;0.6865612268447876
Use IOException instead of <iden>;more specific in <file_name> API;Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;Similar;0.5951076149940491
Use IOException instead of <iden>;more specific in <file_name> API;Move out of the <file_name> package;To promote the code into AOSP, well keep this package as-is and do the jarjar in <iden> instead;Similar;0.7078229188919067
Use IOException instead of <iden>;more specific in <file_name> API;Remove old <iden> protocol method;old;Similar;0.6630718111991882
Use IOException instead of <iden>;more specific in <file_name> API;Expose <iden> directly on <method_name>  ;direct;Similar;0.6760064959526062
Use IOException instead of <iden>;more specific in <file_name> API;Use HTML entity for ampersand;to represent the ampersand symbol in HTML;Similar;0.6195670962333679
Use IOException instead of <iden>;more specific in <file_name> API;Add convenience overload for <iden>-backed <method_name>;convenience;Similar;0.6705665588378906
Use IOException instead of <iden>;more specific in <file_name> API;Use consistent camel casing of <iden>;consistent camel casing;Similar;0.5062888264656067
Use IOException instead of <iden>;more specific in <file_name> API;Drop unused dependencies;unused;Similar;0.6553940773010254
Use IOException instead of <iden>;more specific in <file_name> API;HTTP/2 initial window size is 65535 not 65536  ;not 65536;Similar;0.521747887134552
Use IOException instead of <iden>;more specific in <file_name> API;Transfer to/from <iden> directly from <iden>  ;<pr_link>;Similar;0.7293663024902344
Use IOException instead of <iden>;more specific in <file_name> API;add @override for subclass override method;subclass override method;Similar;0.6218169927597046
Use IOException instead of <iden>;more specific in <file_name> API;Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Similar;0.6515417098999023
Use IOException instead of <iden>;more specific in <file_name> API;Partially revert connection timeout behavior  ;The modification of the timeout behavior during connection caused problems;Similar;0.6421207189559937
Use IOException instead of <iden>;more specific in <file_name> API;The changes to <iden>s  <file_name> have been ported  ;Upstream commit of <iden> / <iden> fix, This does not include the introduction of PlatformTest, which will be difficult to write so it works everywhere;Similar;0.5731865167617798
Use IOException instead of <iden>;more specific in <file_name> API;Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Similar;0.7352859377861023
Use IOException instead of <iden>;more specific in <file_name> API;Return <file_name> to previous (e.g. KitKat) behavior;this change required to handle this <iden> scenario;Similar;0.62662273645401
Use IOException instead of <iden>;more specific in <file_name> API;Document <file_name> throwing modes;To include the <pr_link> information;Similar;0.6259542107582092
Use IOException instead of <iden>;more specific in <file_name> API;Convert <file_name> to Kotlin;<pr_link>, <iden>, <file_name>;Similar;0.6515453457832336
Use IOException instead of <iden>;more specific in <file_name> API;Convert <file_name>, <file_name> to Kotlin  ;"to Kotlin

Decision: Rename <file_name> <version> to .kt (and others)  ";Similar;0.651273787021637
Use IOException instead of <iden>;more specific in <file_name> API;Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Similar;0.5928322076797485
Use IOException instead of <iden>;more specific in <file_name> API;Fail HTTP/2 connections if the pong is not received;This removes the abstraction from our http2 package;Similar;0.5382660627365112
Use IOException instead of <iden>;more specific in <file_name> API;Just pass the <iden> and <iden> objects in directly;Dont summarize the request and response;Similar;0.6774754524230957
Use IOException instead of <iden>;more specific in <file_name> API;fix <issue_link> : PROPFIND request should not redirect to GET request;PROPFIND request should not redirect to GET request;Similar;0.6228020191192627
Use IOException instead of <iden>;more specific in <file_name> API;Refactor <file_name> by using <iden>;We can use <iden> instead of overriding <iden> abstract class;Similar;0.6817581057548523
Use IOException instead of <iden>;more specific in <file_name> API;Remove unnecessary use of grouping parentheses  ;Lets remove warnings found by errorprone.;Similar;0.6009079217910767
Use IOException instead of <iden>;more specific in <file_name> API;load through bootstrap;-;Similar;0.5353044271469116
Use IOException instead of <iden>;more specific in <file_name> API;Fix bug where request body isnt sent when it should  ;request body isnt sent when it should;Similar;0.6340625882148743
Use IOException instead of <iden>;more specific in <file_name> API;Add support for following <iden> 307 temporary redirects  ;Fixes Android bug 41739;Similar;0.5864764451980591
Use IOException instead of <iden>;more specific in <file_name> API;Add wildcard hostnames support in <file_name>;support;Similar;0.5397729873657227
Make  <file_name>  more capable.;more capable;fix <file_name> for Java 9;Java 9;Similar;0.5955820083618164
Make  <file_name>  more capable.;more capable;document support for SNI;support for SNI;Similar;0.6905667185783386
Make  <file_name>  more capable.;more capable;Limit recovery attempts for REFUSED_STREAM errors;We limit per-connection retries but not per-call retries, so this was creating large numbers of connections each of which called the server and accepted yet another REFUSED_STREAM.;Similar;0.5337736010551453
Make  <file_name>  more capable.;more capable;Add HTTP/2 and <iden><version> columns to our security providers doc ;to enhance our security documentation;Similar;0.5715675354003906
Make  <file_name>  more capable.;more capable;Use  <file_name> s built-in <iden> style  <enter>  ;The boilerplate to set this up is unfortunate;Similar;0.7825347185134888
Make  <file_name>  more capable.;more capable;Use <iden> in <file_name>  ;The utility here is negligible. Were sharing threads between HTTP, HTTP/2 and web sockets now.;Similar;0.7787944078445435
Make  <file_name>  more capable.;more capable;Adopt idiomatic <iden> in <file_name>;idiomatic;Similar;0.8216081857681274
Make  <file_name>  more capable.;more capable;Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they cant be open. I think the motivation to make these non-final was pretty weak, and I dont mind breaking <iden> compatibility here.;Similar;0.7056167125701904
Make  <file_name>  more capable.;more capable;Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;Similar;0.6194355487823486
Make  <file_name>  more capable.;more capable;Include prerequisites in the releasing guide.;to provide necessary information for users;Similar;0.6248056888580322
Make  <file_name>  more capable.;more capable;Convert <file_name> to Kotlin;"to Kotlin

Decision: Rename <file_name> to .kt";Similar;0.7545959949493408
Make  <file_name>  more capable.;more capable;Introduce <method_name> ;This is the payoff that preceding changes have been working towards.;Similar;0.8089792728424072
Make  <file_name>  more capable.;more capable;Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.;Similar;0.7820039987564087
Make  <file_name>  more capable.;more capable;Fix some maven problems that are blocking the <version> release;blocking the <version> release;Similar;0.5644351243972778
Make  <file_name>  more capable.;more capable;Rename <method_name> to <iden()>;I prefer signed;Similar;0.7967735528945923
Make  <file_name>  more capable.;more capable;Fixup <file_name> so that its worthy of production use.;This changes the default from the insecure 1024-bit <iden> to a secure 256-bit <iden> key. It adds a new option to use <iden> keys for interoperating with older clients.;Similar;0.8032547235488892
Make  <file_name>  more capable.;more capable;Support client authentication in <file_name>;client authentication;Similar;0.6628053188323975
Make  <file_name>  more capable.;more capable;Remove <iden>-mode <iden> cipher suites;This removes the following cipher suites as supported-by-default;Similar;0.5401144623756409
Make  <file_name>  more capable.;more capable;Fix Javadoc builds with the jsr305 dependency  ;Because multiple modules share a package we need to share the dependency on everything in package-info.java;Similar;0.565801203250885
Make  <file_name>  more capable.;more capable;Make the  <file_name>  a little better.  <enter> <iden> threads by their URLs. Dont follow all fragments of the same <iden>;"For better organization; to prevent following all fragments of the same <iden>";Similar;0.6088098287582397
Make  <file_name>  more capable.;more capable;Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;Similar;0.7840591669082642
Make  <file_name>  more capable.;more capable;Update readme and changelog for <version>;<version>;Similar;0.7408398389816284
Make  <file_name>  more capable.;more capable;New <file_name> class to normalize certificate chains  ;The goal of this is to get the root <iden> certificate into the certificate chain, so that it can be considered by the certificate pinner;Similar;0.7057377696037292
Make  <file_name>  more capable.;more capable;Fix some get prefixes on <file_name> and <method_name>;"-
None";Similar;0.7871990203857422
Make  <file_name>  more capable.;more capable;Write some new connection pool tests;These use the <iden> APIs. Theyre high-level so they wont break with the implementation rewrite.;Similar;0.5152466893196106
Make  <file_name>  more capable.;more capable;Add <method_name>;Might be useful to expose this bookkeeping to app developers;Similar;0.8398206233978271
Make  <file_name>  more capable.;more capable;Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Similar;0.7928151488304138
Make  <file_name>  more capable.;more capable;The implementation is built around one oversized method that runs top to bottom;I found this was easier to follow than the switch statement recommended by the <iden> standard;Similar;0.5178453326225281
Make  <file_name>  more capable.;more capable;Fix <iden> post retransmit in the new API  ;We dont buffer response bodies in the new API. But we should retransmit POST bodies when a request fails.;Similar;0.6149846911430359
Make  <file_name>  more capable.;more capable;Add a test for corner-case behavior;Im looking to make HttpURLConnectionImpl delegate to Job, and that means writing tests for all the weird things it does above HttpEngine.;Similar;0.6511681079864502
Make  <file_name>  more capable.;more capable;Add some pings to force happens-before in <iden> tests;Previously we were relying on accidents to get our tests to pass;Similar;0.5569192171096802
Make  <file_name>  more capable.;more capable;Track <file_name> ownership  ;<file_name> ownership is somewhat racy: when an HttpURLConnection reads the last byte of a connection, its ownership is released and given to the <method_name>;Similar;0.684475302696228
Make  <file_name>  more capable.;more capable;Move  <file_name>  pooling logic  ;"previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams; move  <file_name>  reuse to  <file_name>, with policy informed by  <method_name>  specifying what to do when the  <file_name>  becomes idle: pool, close or hold, so the  <file_name>  does what its told.";Similar;0.7420161962509155
Make  <file_name>  more capable.;more capable;Implement moving bytes between OkBuffers  ;This is more complicated than Id anticipated;Similar;0.6452566385269165
Make  <file_name>  more capable.;more capable;Dont attempt <iden> modes we know will fail.;we know will fail;Similar;0.5181524753570557
Make  <file_name>  more capable.;more capable;Remove <iden> 2 warnings;Small docs fixes;Similar;0.5275748372077942
Make  <file_name>  more capable.;more capable;"Define async APIs and switch <file_name> to use <iden> directly. I think this is the best route going forward; and eventually we could invert this relationship to have <iden> depending on <file_name> directly rather than vice versa.";Using <iden> directly introduces some duplicated code with <iden>. It also breaks the <file_name> cache.;Similar;0.5926138758659363
Make  <file_name>  more capable.;more capable;Fix checkstyle issues in new <iden> code;checkstyle issues;Similar;0.637900710105896
Make  <file_name>  more capable.;more capable;Introduce a <file_name> interface between engine and connection.;This breaks the direct dependency from <file_name> to <method_name>;Similar;0.7620515823364258
Make  <file_name>  more capable.;more capable;Make  <file_name> less flaky;I was seeing flaky results in the debugger because pooled connections were being evicted as the test ran;Similar;0.6266642808914185
Make  <file_name>  more capable.;more capable;Update to the latest <method_name>;Includes everything thru 8842981cbcfe20eb4721c0a2c867fa9a18233062;Similar;0.722004234790802
Make  <file_name>  more capable.;more capable;Be more careful around IOExceptions;my goal is to make it easier to differentiate between protocol-level problems (bogus frames) from transport-level problems (closed sockets and EOF streams);Similar;0.7068047523498535
Make  <file_name>  more capable.;more capable;Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;Similar;0.7106738090515137
Make  <file_name>  more capable.;more capable;Move out of the <file_name> package;To promote the code into AOSP, well keep this package as-is and do the jarjar in <iden> instead;Similar;0.6344377994537354
Make  <file_name>  more capable.;more capable;Make the `<method_name>` return full working connections;Previously the returned connections required the caller to do extra work: setting up tunnels and performing an `<iden>` handshake. With this change, we make a complete working connection in `<method_name>`. This will make it easier to fix fallback when a single domain has multiple `<iden>` addresses that are not reachable. Also, this will make it easier to do SPDY through `<iden>` proxies.;Similar;0.7182096838951111
Make  <file_name>  more capable.;more capable;Add error-prone compiler and fix its found issues;error-prone, its found issues;Similar;0.5923298597335815
Make  <file_name>  more capable.;more capable;Remove old <iden> protocol method;old;Similar;0.5779706239700317
Make  <file_name>  more capable.;more capable;Expose <iden> directly on <method_name>  ;direct;Similar;0.7517213225364685
Make  <file_name>  more capable.;more capable;Use HTML entity for ampersand;to represent the ampersand symbol in HTML;Similar;0.710258960723877
Make  <file_name>  more capable.;more capable;Add convenience overload for <iden>-backed <method_name>;convenience;Similar;0.8416121006011963
Make  <file_name>  more capable.;more capable;Use consistent camel casing of <iden>;consistent camel casing;Similar;0.5371959209442139
Make  <file_name>  more capable.;more capable;Update website to the latest design  ;latest design;Similar;0.5460450649261475
Make  <file_name>  more capable.;more capable;Transfer to/from <iden> directly from <iden>  ;<pr_link>;Similar;0.7396264672279358
Make  <file_name>  more capable.;more capable;add @override for subclass override method;subclass override method;Similar;0.7285727262496948
Make  <file_name>  more capable.;more capable;Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Similar;0.6306648850440979
Make  <file_name>  more capable.;more capable;Partially revert connection timeout behavior  ;The modification of the timeout behavior during connection caused problems;Similar;0.6436537504196167
Make  <file_name>  more capable.;more capable;The changes to <iden>s  <file_name> have been ported  ;Upstream commit of <iden> / <iden> fix, This does not include the introduction of PlatformTest, which will be difficult to write so it works everywhere;Similar;0.7055240273475647
Make  <file_name>  more capable.;more capable;Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Similar;0.76300448179245
Make  <file_name>  more capable.;more capable;Return <file_name> to previous (e.g. KitKat) behavior;this change required to handle this <iden> scenario;Similar;0.7026995420455933
Make  <file_name>  more capable.;more capable;Document <file_name> throwing modes;To include the <pr_link> information;Similar;0.6750879287719727
Make  <file_name>  more capable.;more capable;Convert <file_name> to Kotlin;<pr_link>, <iden>, <file_name>;Similar;0.7545959949493408
Make  <file_name>  more capable.;more capable;Convert <file_name>, <file_name> to Kotlin  ;"to Kotlin

Decision: Rename <file_name> <version> to .kt (and others)  ";Similar;0.7673303484916687
Make  <file_name>  more capable.;more capable;Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Similar;0.6983739733695984
Make  <file_name>  more capable.;more capable;Just pass the <iden> and <iden> objects in directly;Dont summarize the request and response;Similar;0.641937255859375
Make  <file_name>  more capable.;more capable;Fix a race in <method_name> ( <pr_link> );We were assuming on a client failure the server wouldnt have any further events. But it will get a failure if we give it a moment. This was causing some test flakiness.;Similar;0.6094108819961548
Make  <file_name>  more capable.;more capable;Improve some Markdown;improve;Similar;0.7427532076835632
Make  <file_name>  more capable.;more capable;Refactor <file_name> by using <iden>;We can use <iden> instead of overriding <iden> abstract class;Similar;0.8028213977813721
Make  <file_name>  more capable.;more capable;Enable GitHub Security Scanning;To configure GitHub workflow for code security scanning;Similar;0.5959148406982422
Make  <file_name>  more capable.;more capable;load through bootstrap;-;Similar;0.6241564750671387
Make  <file_name>  more capable.;more capable;Fix bug where request body isnt sent when it should  ;request body isnt sent when it should;Similar;0.5559524297714233
Make  <file_name>  more capable.;more capable;Add support for following <iden> 307 temporary redirects  ;Fixes Android bug 41739;Similar;0.6935457587242126
Make  <file_name>  more capable.;more capable;Add wildcard hostnames support in <file_name>;support;Similar;0.7080876231193542
Make  <file_name>  more capable.;more capable;Fix correctness of WebSocketReader reserved flags test;reserved flags;Similar;0.5663433074951172
fix <file_name> for Java 9;Java 9;Add HTTP/2 and <iden><version> columns to our security providers doc ;to enhance our security documentation;Similar;0.5895271897315979
fix <file_name> for Java 9;Java 9;Use  <file_name> s built-in <iden> style  <enter>  ;The boilerplate to set this up is unfortunate;Similar;0.683843195438385
fix <file_name> for Java 9;Java 9;Use <iden> in <file_name>  ;The utility here is negligible. Were sharing threads between HTTP, HTTP/2 and web sockets now.;Similar;0.6358588337898254
fix <file_name> for Java 9;Java 9;Adopt idiomatic <iden> in <file_name>;idiomatic;Similar;0.6572208404541016
fix <file_name> for Java 9;Java 9;Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they cant be open. I think the motivation to make these non-final was pretty weak, and I dont mind breaking <iden> compatibility here.;Similar;0.6001017093658447
fix <file_name> for Java 9;Java 9;Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;Similar;0.5795789361000061
fix <file_name> for Java 9;Java 9;Convert <file_name> to Kotlin;"to Kotlin

Decision: Rename <file_name> to .kt";Similar;0.6737020015716553
fix <file_name> for Java 9;Java 9;Introduce <method_name> ;This is the payoff that preceding changes have been working towards.;Similar;0.6135595440864563
fix <file_name> for Java 9;Java 9;Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.;Similar;0.5454921126365662
fix <file_name> for Java 9;Java 9;Fix some maven problems that are blocking the <version> release;blocking the <version> release;Similar;0.548737645149231
fix <file_name> for Java 9;Java 9;Rename <method_name> to <iden()>;I prefer signed;Similar;0.6417553424835205
fix <file_name> for Java 9;Java 9;Fixup <file_name> so that its worthy of production use.;This changes the default from the insecure 1024-bit <iden> to a secure 256-bit <iden> key. It adds a new option to use <iden> keys for interoperating with older clients.;Similar;0.6081950068473816
fix <file_name> for Java 9;Java 9;Support client authentication in <file_name>;client authentication;Similar;0.5600302219390869
fix <file_name> for Java 9;Java 9;Remove <iden>-mode <iden> cipher suites;This removes the following cipher suites as supported-by-default;Similar;0.52001953125
fix <file_name> for Java 9;Java 9;Fix Javadoc builds with the jsr305 dependency  ;Because multiple modules share a package we need to share the dependency on everything in package-info.java;Similar;0.7886071801185608
fix <file_name> for Java 9;Java 9;Make the  <file_name>  a little better.  <enter> <iden> threads by their URLs. Dont follow all fragments of the same <iden>;"For better organization; to prevent following all fragments of the same <iden>";Similar;0.5028782486915588
fix <file_name> for Java 9;Java 9;Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;Similar;0.5947269201278687
fix <file_name> for Java 9;Java 9;Update readme and changelog for <version>;<version>;Similar;0.6531648635864258
fix <file_name> for Java 9;Java 9;New <file_name> class to normalize certificate chains  ;The goal of this is to get the root <iden> certificate into the certificate chain, so that it can be considered by the certificate pinner;Similar;0.688215434551239
fix <file_name> for Java 9;Java 9;Fix some get prefixes on <file_name> and <method_name>;"-
None";Similar;0.6828356981277466
fix <file_name> for Java 9;Java 9;Write some new connection pool tests;These use the <iden> APIs. Theyre high-level so they wont break with the implementation rewrite.;Similar;0.5083537697792053
fix <file_name> for Java 9;Java 9;Add <method_name>;Might be useful to expose this bookkeeping to app developers;Similar;0.6567080616950989
fix <file_name> for Java 9;Java 9;Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Similar;0.6696759462356567
fix <file_name> for Java 9;Java 9;Expose internal APIs for pluggable file systems, Also migrate all of our tests to use the <method_name>  ;We arent yet ready to make <iden> a public type, but I dont mind making it _almost_ available via an internal API for those brave enough to try that, Its simpler.;Similar;0.5456517338752747
fix <file_name> for Java 9;Java 9;Fix <iden> post retransmit in the new API  ;We dont buffer response bodies in the new API. But we should retransmit POST bodies when a request fails.;Similar;0.711645245552063
fix <file_name> for Java 9;Java 9;Add a test for corner-case behavior;Im looking to make HttpURLConnectionImpl delegate to Job, and that means writing tests for all the weird things it does above HttpEngine.;Similar;0.5046106576919556
fix <file_name> for Java 9;Java 9;Add some pings to force happens-before in <iden> tests;Previously we were relying on accidents to get our tests to pass;Similar;0.5315191149711609
fix <file_name> for Java 9;Java 9;Move  <file_name>  pooling logic  ;"previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams; move  <file_name>  reuse to  <file_name>, with policy informed by  <method_name>  specifying what to do when the  <file_name>  becomes idle: pool, close or hold, so the  <file_name>  does what its told.";Similar;0.5830729007720947
fix <file_name> for Java 9;Java 9;Implement moving bytes between OkBuffers  ;This is more complicated than Id anticipated;Similar;0.5314246416091919
fix <file_name> for Java 9;Java 9;Fix checkstyle issues in new <iden> code;checkstyle issues;Similar;0.6967068910598755
fix <file_name> for Java 9;Java 9;Introduce a <file_name> interface between engine and connection.;This breaks the direct dependency from <file_name> to <method_name>;Similar;0.6125475168228149
fix <file_name> for Java 9;Java 9;Update to the latest <method_name>;Includes everything thru 8842981cbcfe20eb4721c0a2c867fa9a18233062;Similar;0.6655752658843994
fix <file_name> for Java 9;Java 9;Move out of the <file_name> package;To promote the code into AOSP, well keep this package as-is and do the jarjar in <iden> instead;Similar;0.520947277545929
fix <file_name> for Java 9;Java 9;Make the `<method_name>` return full working connections;Previously the returned connections required the caller to do extra work: setting up tunnels and performing an `<iden>` handshake. With this change, we make a complete working connection in `<method_name>`. This will make it easier to fix fallback when a single domain has multiple `<iden>` addresses that are not reachable. Also, this will make it easier to do SPDY through `<iden>` proxies.;Similar;0.5677698850631714
fix <file_name> for Java 9;Java 9;Add error-prone compiler and fix its found issues;error-prone, its found issues;Similar;0.6067213416099548
fix <file_name> for Java 9;Java 9;Expose <iden> directly on <method_name>  ;direct;Similar;0.5714720487594604
fix <file_name> for Java 9;Java 9;Use HTML entity for ampersand;to represent the ampersand symbol in HTML;Similar;0.658719539642334
fix <file_name> for Java 9;Java 9;Add convenience overload for <iden>-backed <method_name>;convenience;Similar;0.6224267482757568
fix <file_name> for Java 9;Java 9;Update website to the latest design  ;latest design;Similar;0.5831257700920105
fix <file_name> for Java 9;Java 9;add @override for subclass override method;subclass override method;Similar;0.6468894481658936
fix <file_name> for Java 9;Java 9;Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Similar;0.6933392286300659
fix <file_name> for Java 9;Java 9;The changes to <iden>s  <file_name> have been ported  ;Upstream commit of <iden> / <iden> fix, This does not include the introduction of PlatformTest, which will be difficult to write so it works everywhere;Similar;0.6210439801216125
fix <file_name> for Java 9;Java 9;Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Similar;0.6187912821769714
fix <file_name> for Java 9;Java 9;Return <file_name> to previous (e.g. KitKat) behavior;this change required to handle this <iden> scenario;Similar;0.5756951570510864
fix <file_name> for Java 9;Java 9;Document <file_name> throwing modes;To include the <pr_link> information;Similar;0.5034759044647217
fix <file_name> for Java 9;Java 9;Convert <file_name> to Kotlin;<pr_link>, <iden>, <file_name>;Similar;0.6737020015716553
fix <file_name> for Java 9;Java 9;Convert <file_name>, <file_name> to Kotlin  ;"to Kotlin

Decision: Rename <file_name> <version> to .kt (and others)  ";Similar;0.6641718745231628
fix <file_name> for Java 9;Java 9;Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Similar;0.6598358750343323
fix <file_name> for Java 9;Java 9;Fix a race in <method_name> ( <pr_link> );We were assuming on a client failure the server wouldnt have any further events. But it will get a failure if we give it a moment. This was causing some test flakiness.;Similar;0.6393320560455322
fix <file_name> for Java 9;Java 9;Refactor <file_name> by using <iden>;We can use <iden> instead of overriding <iden> abstract class;Similar;0.6520573496818542
fix <file_name> for Java 9;Java 9;Fix bug where request body isnt sent when it should  ;request body isnt sent when it should;Similar;0.5284488201141357
fix <file_name> for Java 9;Java 9;Add support for following <iden> 307 temporary redirects  ;Fixes Android bug 41739;Similar;0.59536212682724
fix <file_name> for Java 9;Java 9;Add wildcard hostnames support in <file_name>;support;Similar;0.5929639339447021
fix <file_name> for Java 9;Java 9;Fix correctness of WebSocketReader reserved flags test;reserved flags;Similar;0.5953551530838013
document support for SNI;support for SNI;Limit recovery attempts for REFUSED_STREAM errors;We limit per-connection retries but not per-call retries, so this was creating large numbers of connections each of which called the server and accepted yet another REFUSED_STREAM.;Similar;0.5341641902923584
document support for SNI;support for SNI;Add HTTP/2 and <iden><version> columns to our security providers doc ;to enhance our security documentation;Similar;0.5310788154602051
document support for SNI;support for SNI;Use  <file_name> s built-in <iden> style  <enter>  ;The boilerplate to set this up is unfortunate;Similar;0.6344045400619507
document support for SNI;support for SNI;Use our test rule instead of the Maven Surefire listener  ;to Close the issue indicated by the link;Similar;0.534440815448761
document support for SNI;support for SNI;Use <iden> in <file_name>  ;The utility here is negligible. Were sharing threads between HTTP, HTTP/2 and web sockets now.;Similar;0.6830825209617615
document support for SNI;support for SNI;Adopt idiomatic <iden> in <file_name>;idiomatic;Similar;0.674723744392395
document support for SNI;support for SNI;Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they cant be open. I think the motivation to make these non-final was pretty weak, and I dont mind breaking <iden> compatibility here.;Similar;0.5917158722877502
document support for SNI;support for SNI;Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;Similar;0.5208643674850464
document support for SNI;support for SNI;Include prerequisites in the releasing guide.;to provide necessary information for users;Similar;0.680057168006897
document support for SNI;support for SNI;Convert <file_name> to Kotlin;"to Kotlin

Decision: Rename <file_name> to .kt";Similar;0.6494718790054321
document support for SNI;support for SNI;Introduce <method_name> ;This is the payoff that preceding changes have been working towards.;Similar;0.6920301914215088
document support for SNI;support for SNI;Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.;Similar;0.6695170998573303
document support for SNI;support for SNI;Fix some maven problems that are blocking the <version> release;blocking the <version> release;Similar;0.5105506181716919
document support for SNI;support for SNI;Rename <method_name> to <iden()>;I prefer signed;Similar;0.6373976469039917
document support for SNI;support for SNI;Fixup <file_name> so that its worthy of production use.;This changes the default from the insecure 1024-bit <iden> to a secure 256-bit <iden> key. It adds a new option to use <iden> keys for interoperating with older clients.;Similar;0.6159282922744751
document support for SNI;support for SNI;Support client authentication in <file_name>;client authentication;Similar;0.6193600296974182
document support for SNI;support for SNI;Fix Javadoc builds with the jsr305 dependency  ;Because multiple modules share a package we need to share the dependency on everything in package-info.java;Similar;0.5330899357795715
document support for SNI;support for SNI;Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;Similar;0.5823898315429688
document support for SNI;support for SNI;Update readme and changelog for <version>;<version>;Similar;0.6877703666687012
document support for SNI;support for SNI;Fix some get prefixes on <file_name> and <method_name>;"-
None";Similar;0.616614580154419
document support for SNI;support for SNI;Add <method_name>;Might be useful to expose this bookkeeping to app developers;Similar;0.691379725933075
document support for SNI;support for SNI;Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Similar;0.6878032684326172
document support for SNI;support for SNI;Fix <iden> post retransmit in the new API  ;We dont buffer response bodies in the new API. But we should retransmit POST bodies when a request fails.;Similar;0.5659869909286499
document support for SNI;support for SNI;Add a test for corner-case behavior;Im looking to make HttpURLConnectionImpl delegate to Job, and that means writing tests for all the weird things it does above HttpEngine.;Similar;0.684227705001831
document support for SNI;support for SNI;Add some pings to force happens-before in <iden> tests;Previously we were relying on accidents to get our tests to pass;Similar;0.5183596611022949
document support for SNI;support for SNI;Track <file_name> ownership  ;<file_name> ownership is somewhat racy: when an HttpURLConnection reads the last byte of a connection, its ownership is released and given to the <method_name>;Similar;0.5878610610961914
document support for SNI;support for SNI;Move  <file_name>  pooling logic  ;"previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams; move  <file_name>  reuse to  <file_name>, with policy informed by  <method_name>  specifying what to do when the  <file_name>  becomes idle: pool, close or hold, so the  <file_name>  does what its told.";Similar;0.6048774123191833
document support for SNI;support for SNI;Implement moving bytes between OkBuffers  ;This is more complicated than Id anticipated;Similar;0.6316748857498169
document support for SNI;support for SNI;Dont attempt <iden> modes we know will fail.;we know will fail;Similar;0.5411627888679504
document support for SNI;support for SNI;Remove <iden> 2 warnings;Small docs fixes;Similar;0.5273022055625916
document support for SNI;support for SNI;Fix checkstyle issues in new <iden> code;checkstyle issues;Similar;0.5261105298995972
document support for SNI;support for SNI;Introduce a <file_name> interface between engine and connection.;This breaks the direct dependency from <file_name> to <method_name>;Similar;0.63616544008255
document support for SNI;support for SNI;Make  <file_name> less flaky;I was seeing flaky results in the debugger because pooled connections were being evicted as the test ran;Similar;0.5395669937133789
document support for SNI;support for SNI;Update to the latest <method_name>;Includes everything thru 8842981cbcfe20eb4721c0a2c867fa9a18233062;Similar;0.548161506652832
document support for SNI;support for SNI;Be more careful around IOExceptions;my goal is to make it easier to differentiate between protocol-level problems (bogus frames) from transport-level problems (closed sockets and EOF streams);Similar;0.6117687225341797
document support for SNI;support for SNI;Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;Similar;0.6474694013595581
document support for SNI;support for SNI;Move out of the <file_name> package;To promote the code into AOSP, well keep this package as-is and do the jarjar in <iden> instead;Similar;0.5173642039299011
document support for SNI;support for SNI;Make the `<method_name>` return full working connections;Previously the returned connections required the caller to do extra work: setting up tunnels and performing an `<iden>` handshake. With this change, we make a complete working connection in `<method_name>`. This will make it easier to fix fallback when a single domain has multiple `<iden>` addresses that are not reachable. Also, this will make it easier to do SPDY through `<iden>` proxies.;Similar;0.5832794904708862
document support for SNI;support for SNI;Remove old <iden> protocol method;old;Similar;0.5220218896865845
document support for SNI;support for SNI;Expose <iden> directly on <method_name>  ;direct;Similar;0.6565211415290833
document support for SNI;support for SNI;Use HTML entity for ampersand;to represent the ampersand symbol in HTML;Similar;0.6523078083992004
document support for SNI;support for SNI;Add convenience overload for <iden>-backed <method_name>;convenience;Similar;0.6909990906715393
document support for SNI;support for SNI;Use consistent camel casing of <iden>;consistent camel casing;Similar;0.6094263792037964
document support for SNI;support for SNI;Drop unused dependencies;unused;Similar;0.538065493106842
document support for SNI;support for SNI;Transfer to/from <iden> directly from <iden>  ;<pr_link>;Similar;0.7178282737731934
document support for SNI;support for SNI;add @override for subclass override method;subclass override method;Similar;0.5971997976303101
document support for SNI;support for SNI;Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Similar;0.6535112857818604
document support for SNI;support for SNI;Partially revert connection timeout behavior  ;The modification of the timeout behavior during connection caused problems;Similar;0.6329224109649658
document support for SNI;support for SNI;The changes to <iden>s  <file_name> have been ported  ;Upstream commit of <iden> / <iden> fix, This does not include the introduction of PlatformTest, which will be difficult to write so it works everywhere;Similar;0.5976529717445374
document support for SNI;support for SNI;Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Similar;0.625973105430603
document support for SNI;support for SNI;Return <file_name> to previous (e.g. KitKat) behavior;this change required to handle this <iden> scenario;Similar;0.6472928524017334
document support for SNI;support for SNI;Document <file_name> throwing modes;To include the <pr_link> information;Similar;0.5548713803291321
document support for SNI;support for SNI;Convert <file_name> to Kotlin;<pr_link>, <iden>, <file_name>;Similar;0.6494718790054321
document support for SNI;support for SNI;Convert <file_name>, <file_name> to Kotlin  ;"to Kotlin

Decision: Rename <file_name> <version> to .kt (and others)  ";Similar;0.656583845615387
document support for SNI;support for SNI;Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Similar;0.6865817308425903
document support for SNI;support for SNI;Just pass the <iden> and <iden> objects in directly;Dont summarize the request and response;Similar;0.6723688840866089
document support for SNI;support for SNI;Improve some Markdown;improve;Similar;0.6289188861846924
document support for SNI;support for SNI;fix <issue_link> : PROPFIND request should not redirect to GET request;PROPFIND request should not redirect to GET request;Similar;0.51213538646698
document support for SNI;support for SNI;Refactor <file_name> by using <iden>;We can use <iden> instead of overriding <iden> abstract class;Similar;0.6834769248962402
document support for SNI;support for SNI;Enable GitHub Security Scanning;To configure GitHub workflow for code security scanning;Similar;0.5990018844604492
document support for SNI;support for SNI;load through bootstrap;-;Similar;0.5986162424087524
document support for SNI;support for SNI;Fix bug where request body isnt sent when it should  ;request body isnt sent when it should;Similar;0.547010600566864
document support for SNI;support for SNI;Add support for following <iden> 307 temporary redirects  ;Fixes Android bug 41739;Similar;0.6335670351982117
document support for SNI;support for SNI;Add wildcard hostnames support in <file_name>;support;Similar;0.5663898587226868
document support for SNI;support for SNI;Fix correctness of WebSocketReader reserved flags test;reserved flags;Similar;0.5425891876220703
Limit recovery attempts for REFUSED_STREAM errors;We limit per-connection retries but not per-call retries, so this was creating large numbers of connections each of which called the server and accepted yet another REFUSED_STREAM.;Use our test rule instead of the Maven Surefire listener  ;to Close the issue indicated by the link;Similar;0.5930975675582886
Limit recovery attempts for REFUSED_STREAM errors;We limit per-connection retries but not per-call retries, so this was creating large numbers of connections each of which called the server and accepted yet another REFUSED_STREAM.;Degrade connections after a timeout;This is based roughly on the <iden> Connections proposal here;Similar;0.5996897220611572
Limit recovery attempts for REFUSED_STREAM errors;We limit per-connection retries but not per-call retries, so this was creating large numbers of connections each of which called the server and accepted yet another REFUSED_STREAM.;Use <iden> in <file_name>  ;The utility here is negligible. Were sharing threads between HTTP, HTTP/2 and web sockets now.;Similar;0.5242696404457092
Limit recovery attempts for REFUSED_STREAM errors;We limit per-connection retries but not per-call retries, so this was creating large numbers of connections each of which called the server and accepted yet another REFUSED_STREAM.;Adopt idiomatic <iden> in <file_name>;idiomatic;Similar;0.5271304845809937
Limit recovery attempts for REFUSED_STREAM errors;We limit per-connection retries but not per-call retries, so this was creating large numbers of connections each of which called the server and accepted yet another REFUSED_STREAM.;Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they cant be open. I think the motivation to make these non-final was pretty weak, and I dont mind breaking <iden> compatibility here.;Similar;0.5267524123191833
Limit recovery attempts for REFUSED_STREAM errors;We limit per-connection retries but not per-call retries, so this was creating large numbers of connections each of which called the server and accepted yet another REFUSED_STREAM.;Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;Similar;0.641930341720581
Limit recovery attempts for REFUSED_STREAM errors;We limit per-connection retries but not per-call retries, so this was creating large numbers of connections each of which called the server and accepted yet another REFUSED_STREAM.;Include prerequisites in the releasing guide.;to provide necessary information for users;Similar;0.5052588582038879
Limit recovery attempts for REFUSED_STREAM errors;We limit per-connection retries but not per-call retries, so this was creating large numbers of connections each of which called the server and accepted yet another REFUSED_STREAM.;Convert <file_name> to Kotlin;"to Kotlin

Decision: Rename <file_name> to .kt";Similar;0.5162326097488403
Limit recovery attempts for REFUSED_STREAM errors;We limit per-connection retries but not per-call retries, so this was creating large numbers of connections each of which called the server and accepted yet another REFUSED_STREAM.;Introduce <method_name> ;This is the payoff that preceding changes have been working towards.;Similar;0.5251336693763733
Limit recovery attempts for REFUSED_STREAM errors;We limit per-connection retries but not per-call retries, so this was creating large numbers of connections each of which called the server and accepted yet another REFUSED_STREAM.;Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.;Similar;0.53721022605896
Limit recovery attempts for REFUSED_STREAM errors;We limit per-connection retries but not per-call retries, so this was creating large numbers of connections each of which called the server and accepted yet another REFUSED_STREAM.;Fix some maven problems that are blocking the <version> release;blocking the <version> release;Similar;0.7028579711914062
Limit recovery attempts for REFUSED_STREAM errors;We limit per-connection retries but not per-call retries, so this was creating large numbers of connections each of which called the server and accepted yet another REFUSED_STREAM.;Rename <method_name> to <iden()>;I prefer signed;Similar;0.541572630405426
Limit recovery attempts for REFUSED_STREAM errors;We limit per-connection retries but not per-call retries, so this was creating large numbers of connections each of which called the server and accepted yet another REFUSED_STREAM.;Fixup <file_name> so that its worthy of production use.;This changes the default from the insecure 1024-bit <iden> to a secure 256-bit <iden> key. It adds a new option to use <iden> keys for interoperating with older clients.;Similar;0.5284707546234131
Limit recovery attempts for REFUSED_STREAM errors;We limit per-connection retries but not per-call retries, so this was creating large numbers of connections each of which called the server and accepted yet another REFUSED_STREAM.;Support client authentication in <file_name>;client authentication;Similar;0.5175924301147461
Limit recovery attempts for REFUSED_STREAM errors;We limit per-connection retries but not per-call retries, so this was creating large numbers of connections each of which called the server and accepted yet another REFUSED_STREAM.;Remove <iden>-mode <iden> cipher suites;This removes the following cipher suites as supported-by-default;Similar;0.6642870903015137
Limit recovery attempts for REFUSED_STREAM errors;We limit per-connection retries but not per-call retries, so this was creating large numbers of connections each of which called the server and accepted yet another REFUSED_STREAM.;Make the  <file_name>  a little better.  <enter> <iden> threads by their URLs. Dont follow all fragments of the same <iden>;"For better organization; to prevent following all fragments of the same <iden>";Similar;0.6247573494911194
Limit recovery attempts for REFUSED_STREAM errors;We limit per-connection retries but not per-call retries, so this was creating large numbers of connections each of which called the server and accepted yet another REFUSED_STREAM.;Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;Similar;0.6601927280426025
Limit recovery attempts for REFUSED_STREAM errors;We limit per-connection retries but not per-call retries, so this was creating large numbers of connections each of which called the server and accepted yet another REFUSED_STREAM.;Fix tests to share a common <iden>. Also fix the memory limit, which may prevent Travis from failing our tests.;share a common <iden>, memory limit, prevent Travis from failing our tests;Similar;0.6459925770759583
Limit recovery attempts for REFUSED_STREAM errors;We limit per-connection retries but not per-call retries, so this was creating large numbers of connections each of which called the server and accepted yet another REFUSED_STREAM.;Update readme and changelog for <version>;<version>;Similar;0.574189305305481
Limit recovery attempts for REFUSED_STREAM errors;We limit per-connection retries but not per-call retries, so this was creating large numbers of connections each of which called the server and accepted yet another REFUSED_STREAM.;Fix some get prefixes on <file_name> and <method_name>;"-
None";Similar;0.5989493727684021
Limit recovery attempts for REFUSED_STREAM errors;We limit per-connection retries but not per-call retries, so this was creating large numbers of connections each of which called the server and accepted yet another REFUSED_STREAM.;Add <method_name>;Might be useful to expose this bookkeeping to app developers;Similar;0.5273832678794861
Limit recovery attempts for REFUSED_STREAM errors;We limit per-connection retries but not per-call retries, so this was creating large numbers of connections each of which called the server and accepted yet another REFUSED_STREAM.;Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Similar;0.6929873824119568
Limit recovery attempts for REFUSED_STREAM errors;We limit per-connection retries but not per-call retries, so this was creating large numbers of connections each of which called the server and accepted yet another REFUSED_STREAM.;Drop our one remaining <iden> cipher suite;Tracking <iden> and Firefox, which have also dropped this cipher suite;Similar;0.6304506659507751
Limit recovery attempts for REFUSED_STREAM errors;We limit per-connection retries but not per-call retries, so this was creating large numbers of connections each of which called the server and accepted yet another REFUSED_STREAM.;Change  <file_name>  to not implement java.net.ResponseCache;This marks some methods as  @deprecated and internal-only. Unfortunately we dont have a great mechanism to hide them from the documented <iden>.;Similar;0.6840899586677551
Limit recovery attempts for REFUSED_STREAM errors;We limit per-connection retries but not per-call retries, so this was creating large numbers of connections each of which called the server and accepted yet another REFUSED_STREAM.;Fix <iden> post retransmit in the new API  ;We dont buffer response bodies in the new API. But we should retransmit POST bodies when a request fails.;Similar;0.5076462030410767
Limit recovery attempts for REFUSED_STREAM errors;We limit per-connection retries but not per-call retries, so this was creating large numbers of connections each of which called the server and accepted yet another REFUSED_STREAM.;Add a test for corner-case behavior;Im looking to make HttpURLConnectionImpl delegate to Job, and that means writing tests for all the weird things it does above HttpEngine.;Similar;0.608881950378418
Limit recovery attempts for REFUSED_STREAM errors;We limit per-connection retries but not per-call retries, so this was creating large numbers of connections each of which called the server and accepted yet another REFUSED_STREAM.;Add some pings to force happens-before in <iden> tests;Previously we were relying on accidents to get our tests to pass;Similar;0.5301083922386169
Limit recovery attempts for REFUSED_STREAM errors;We limit per-connection retries but not per-call retries, so this was creating large numbers of connections each of which called the server and accepted yet another REFUSED_STREAM.;Move  <file_name>  pooling logic  ;"previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams; move  <file_name>  reuse to  <file_name>, with policy informed by  <method_name>  specifying what to do when the  <file_name>  becomes idle: pool, close or hold, so the  <file_name>  does what its told.";Similar;0.5201644897460938
Limit recovery attempts for REFUSED_STREAM errors;We limit per-connection retries but not per-call retries, so this was creating large numbers of connections each of which called the server and accepted yet another REFUSED_STREAM.;Implement moving bytes between OkBuffers  ;This is more complicated than Id anticipated;Similar;0.5162988901138306
Limit recovery attempts for REFUSED_STREAM errors;We limit per-connection retries but not per-call retries, so this was creating large numbers of connections each of which called the server and accepted yet another REFUSED_STREAM.;Dont attempt <iden> modes we know will fail.;we know will fail;Similar;0.5949364900588989
Limit recovery attempts for REFUSED_STREAM errors;We limit per-connection retries but not per-call retries, so this was creating large numbers of connections each of which called the server and accepted yet another REFUSED_STREAM.;Remove <iden> 2 warnings;Small docs fixes;Similar;0.6550129055976868
Limit recovery attempts for REFUSED_STREAM errors;We limit per-connection retries but not per-call retries, so this was creating large numbers of connections each of which called the server and accepted yet another REFUSED_STREAM.;Fix checkstyle issues in new <iden> code;checkstyle issues;Similar;0.55946284532547
Limit recovery attempts for REFUSED_STREAM errors;We limit per-connection retries but not per-call retries, so this was creating large numbers of connections each of which called the server and accepted yet another REFUSED_STREAM.;Kill <file_name> in the process  ;Teach <file_name> <iden>;Similar;0.5170765519142151
Limit recovery attempts for REFUSED_STREAM errors;We limit per-connection retries but not per-call retries, so this was creating large numbers of connections each of which called the server and accepted yet another REFUSED_STREAM.;Introduce a <file_name> interface between engine and connection.;This breaks the direct dependency from <file_name> to <method_name>;Similar;0.5013265013694763
Limit recovery attempts for REFUSED_STREAM errors;We limit per-connection retries but not per-call retries, so this was creating large numbers of connections each of which called the server and accepted yet another REFUSED_STREAM.;Make  <file_name> less flaky;I was seeing flaky results in the debugger because pooled connections were being evicted as the test ran;Similar;0.6289412975311279
Limit recovery attempts for REFUSED_STREAM errors;We limit per-connection retries but not per-call retries, so this was creating large numbers of connections each of which called the server and accepted yet another REFUSED_STREAM.;Be more careful around IOExceptions;my goal is to make it easier to differentiate between protocol-level problems (bogus frames) from transport-level problems (closed sockets and EOF streams);Similar;0.5667893290519714
Limit recovery attempts for REFUSED_STREAM errors;We limit per-connection retries but not per-call retries, so this was creating large numbers of connections each of which called the server and accepted yet another REFUSED_STREAM.;Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;Similar;0.6776197552680969
Limit recovery attempts for REFUSED_STREAM errors;We limit per-connection retries but not per-call retries, so this was creating large numbers of connections each of which called the server and accepted yet another REFUSED_STREAM.;Move out of the <file_name> package;To promote the code into AOSP, well keep this package as-is and do the jarjar in <iden> instead;Similar;0.6215378642082214
Limit recovery attempts for REFUSED_STREAM errors;We limit per-connection retries but not per-call retries, so this was creating large numbers of connections each of which called the server and accepted yet another REFUSED_STREAM.;Fix <iden> which was being computed incorrectly;<enter> We were only returning true once we were already in a tunnel. This was bogus. In theory a <iden> tunnel sending extra data could be corrupted due to this bug.;Similar;0.5622621774673462
Limit recovery attempts for REFUSED_STREAM errors;We limit per-connection retries but not per-call retries, so this was creating large numbers of connections each of which called the server and accepted yet another REFUSED_STREAM.;Add error-prone compiler and fix its found issues;error-prone, its found issues;Similar;0.603983998298645
Limit recovery attempts for REFUSED_STREAM errors;We limit per-connection retries but not per-call retries, so this was creating large numbers of connections each of which called the server and accepted yet another REFUSED_STREAM.;Remove old <iden> protocol method;old;Similar;0.635900616645813
Limit recovery attempts for REFUSED_STREAM errors;We limit per-connection retries but not per-call retries, so this was creating large numbers of connections each of which called the server and accepted yet another REFUSED_STREAM.;Use HTML entity for ampersand;to represent the ampersand symbol in HTML;Similar;0.5077927112579346
Limit recovery attempts for REFUSED_STREAM errors;We limit per-connection retries but not per-call retries, so this was creating large numbers of connections each of which called the server and accepted yet another REFUSED_STREAM.;Add convenience overload for <iden>-backed <method_name>;convenience;Similar;0.6082772612571716
Limit recovery attempts for REFUSED_STREAM errors;We limit per-connection retries but not per-call retries, so this was creating large numbers of connections each of which called the server and accepted yet another REFUSED_STREAM.;Drop unused dependencies;unused;Similar;0.6946291923522949
Limit recovery attempts for REFUSED_STREAM errors;We limit per-connection retries but not per-call retries, so this was creating large numbers of connections each of which called the server and accepted yet another REFUSED_STREAM.;add @override for subclass override method;subclass override method;Similar;0.5869648456573486
Limit recovery attempts for REFUSED_STREAM errors;We limit per-connection retries but not per-call retries, so this was creating large numbers of connections each of which called the server and accepted yet another REFUSED_STREAM.;Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Similar;0.633297324180603
Limit recovery attempts for REFUSED_STREAM errors;We limit per-connection retries but not per-call retries, so this was creating large numbers of connections each of which called the server and accepted yet another REFUSED_STREAM.;Partially revert connection timeout behavior  ;The modification of the timeout behavior during connection caused problems;Similar;0.6754899024963379
Limit recovery attempts for REFUSED_STREAM errors;We limit per-connection retries but not per-call retries, so this was creating large numbers of connections each of which called the server and accepted yet another REFUSED_STREAM.;This change logs the exception but prevent it from propagating out of the top of the call stack.;This decreases overall flakiness.;Similar;0.6794049739837646
Limit recovery attempts for REFUSED_STREAM errors;We limit per-connection retries but not per-call retries, so this was creating large numbers of connections each of which called the server and accepted yet another REFUSED_STREAM.;The changes to <iden>s  <file_name> have been ported  ;Upstream commit of <iden> / <iden> fix, This does not include the introduction of PlatformTest, which will be difficult to write so it works everywhere;Similar;0.5166736245155334
Limit recovery attempts for REFUSED_STREAM errors;We limit per-connection retries but not per-call retries, so this was creating large numbers of connections each of which called the server and accepted yet another REFUSED_STREAM.;Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Similar;0.5960079431533813
Limit recovery attempts for REFUSED_STREAM errors;We limit per-connection retries but not per-call retries, so this was creating large numbers of connections each of which called the server and accepted yet another REFUSED_STREAM.;Return <file_name> to previous (e.g. KitKat) behavior;this change required to handle this <iden> scenario;Similar;0.516586422920227
Limit recovery attempts for REFUSED_STREAM errors;We limit per-connection retries but not per-call retries, so this was creating large numbers of connections each of which called the server and accepted yet another REFUSED_STREAM.;Document <file_name> throwing modes;To include the <pr_link> information;Similar;0.5089992880821228
Limit recovery attempts for REFUSED_STREAM errors;We limit per-connection retries but not per-call retries, so this was creating large numbers of connections each of which called the server and accepted yet another REFUSED_STREAM.;Convert <file_name> to Kotlin;<pr_link>, <iden>, <file_name>;Similar;0.5162326097488403
Limit recovery attempts for REFUSED_STREAM errors;We limit per-connection retries but not per-call retries, so this was creating large numbers of connections each of which called the server and accepted yet another REFUSED_STREAM.;Convert <file_name>, <file_name> to Kotlin  ;"to Kotlin

Decision: Rename <file_name> <version> to .kt (and others)  ";Similar;0.5087116360664368
Limit recovery attempts for REFUSED_STREAM errors;We limit per-connection retries but not per-call retries, so this was creating large numbers of connections each of which called the server and accepted yet another REFUSED_STREAM.;Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Similar;0.5927981734275818
Limit recovery attempts for REFUSED_STREAM errors;We limit per-connection retries but not per-call retries, so this was creating large numbers of connections each of which called the server and accepted yet another REFUSED_STREAM.;Fail HTTP/2 connections if the pong is not received;This removes the abstraction from our http2 package;Similar;0.6901854276657104
Limit recovery attempts for REFUSED_STREAM errors;We limit per-connection retries but not per-call retries, so this was creating large numbers of connections each of which called the server and accepted yet another REFUSED_STREAM.;Just pass the <iden> and <iden> objects in directly;Dont summarize the request and response;Similar;0.5054031014442444
Limit recovery attempts for REFUSED_STREAM errors;We limit per-connection retries but not per-call retries, so this was creating large numbers of connections each of which called the server and accepted yet another REFUSED_STREAM.;Fix a race in <method_name> ( <pr_link> );We were assuming on a client failure the server wouldnt have any further events. But it will get a failure if we give it a moment. This was causing some test flakiness.;Similar;0.5693618059158325
Limit recovery attempts for REFUSED_STREAM errors;We limit per-connection retries but not per-call retries, so this was creating large numbers of connections each of which called the server and accepted yet another REFUSED_STREAM.;Improve some Markdown;improve;Similar;0.570340633392334
Limit recovery attempts for REFUSED_STREAM errors;We limit per-connection retries but not per-call retries, so this was creating large numbers of connections each of which called the server and accepted yet another REFUSED_STREAM.;fix <issue_link> : PROPFIND request should not redirect to GET request;PROPFIND request should not redirect to GET request;Similar;0.6829617619514465
Limit recovery attempts for REFUSED_STREAM errors;We limit per-connection retries but not per-call retries, so this was creating large numbers of connections each of which called the server and accepted yet another REFUSED_STREAM.;Refactor <file_name> by using <iden>;We can use <iden> instead of overriding <iden> abstract class;Similar;0.5600621700286865
Limit recovery attempts for REFUSED_STREAM errors;We limit per-connection retries but not per-call retries, so this was creating large numbers of connections each of which called the server and accepted yet another REFUSED_STREAM.;Remove unnecessary use of grouping parentheses  ;Lets remove warnings found by errorprone.;Similar;0.6756255626678467
Limit recovery attempts for REFUSED_STREAM errors;We limit per-connection retries but not per-call retries, so this was creating large numbers of connections each of which called the server and accepted yet another REFUSED_STREAM.;Fix bug where request body isnt sent when it should  ;request body isnt sent when it should;Similar;0.774588406085968
Limit recovery attempts for REFUSED_STREAM errors;We limit per-connection retries but not per-call retries, so this was creating large numbers of connections each of which called the server and accepted yet another REFUSED_STREAM.;Add support for following <iden> 307 temporary redirects  ;Fixes Android bug 41739;Similar;0.5762916803359985
Limit recovery attempts for REFUSED_STREAM errors;We limit per-connection retries but not per-call retries, so this was creating large numbers of connections each of which called the server and accepted yet another REFUSED_STREAM.;Fix correctness of WebSocketReader reserved flags test;reserved flags;Similar;0.6438086032867432
Add HTTP/2 and <iden><version> columns to our security providers doc ;to enhance our security documentation;Use  <file_name> s built-in <iden> style  <enter>  ;The boilerplate to set this up is unfortunate;Similar;0.6683720350265503
Add HTTP/2 and <iden><version> columns to our security providers doc ;to enhance our security documentation;Use <iden> in <file_name>  ;The utility here is negligible. Were sharing threads between HTTP, HTTP/2 and web sockets now.;Similar;0.6379227042198181
Add HTTP/2 and <iden><version> columns to our security providers doc ;to enhance our security documentation;Adopt idiomatic <iden> in <file_name>;idiomatic;Similar;0.6865119338035583
Add HTTP/2 and <iden><version> columns to our security providers doc ;to enhance our security documentation;Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they cant be open. I think the motivation to make these non-final was pretty weak, and I dont mind breaking <iden> compatibility here.;Similar;0.6192007660865784
Add HTTP/2 and <iden><version> columns to our security providers doc ;to enhance our security documentation;Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;Similar;0.6183956861495972
Add HTTP/2 and <iden><version> columns to our security providers doc ;to enhance our security documentation;Include prerequisites in the releasing guide.;to provide necessary information for users;Similar;0.6059118509292603
Add HTTP/2 and <iden><version> columns to our security providers doc ;to enhance our security documentation;Convert <file_name> to Kotlin;"to Kotlin

Decision: Rename <file_name> to .kt";Similar;0.6500957608222961
Add HTTP/2 and <iden><version> columns to our security providers doc ;to enhance our security documentation;Introduce <method_name> ;This is the payoff that preceding changes have been working towards.;Similar;0.5858323574066162
Add HTTP/2 and <iden><version> columns to our security providers doc ;to enhance our security documentation;Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.;Similar;0.6335512399673462
Add HTTP/2 and <iden><version> columns to our security providers doc ;to enhance our security documentation;Fix some maven problems that are blocking the <version> release;blocking the <version> release;Similar;0.5252609848976135
Add HTTP/2 and <iden><version> columns to our security providers doc ;to enhance our security documentation;Rename <method_name> to <iden()>;I prefer signed;Similar;0.5895955562591553
Add HTTP/2 and <iden><version> columns to our security providers doc ;to enhance our security documentation;Fixup <file_name> so that its worthy of production use.;This changes the default from the insecure 1024-bit <iden> to a secure 256-bit <iden> key. It adds a new option to use <iden> keys for interoperating with older clients.;Similar;0.6345958113670349
Add HTTP/2 and <iden><version> columns to our security providers doc ;to enhance our security documentation;Support client authentication in <file_name>;client authentication;Similar;0.7641947269439697
Add HTTP/2 and <iden><version> columns to our security providers doc ;to enhance our security documentation;Remove <iden>-mode <iden> cipher suites;This removes the following cipher suites as supported-by-default;Similar;0.5106011629104614
Add HTTP/2 and <iden><version> columns to our security providers doc ;to enhance our security documentation;Fix Javadoc builds with the jsr305 dependency  ;Because multiple modules share a package we need to share the dependency on everything in package-info.java;Similar;0.6037548780441284
Add HTTP/2 and <iden><version> columns to our security providers doc ;to enhance our security documentation;Make the  <file_name>  a little better.  <enter> <iden> threads by their URLs. Dont follow all fragments of the same <iden>;"For better organization; to prevent following all fragments of the same <iden>";Similar;0.5845366716384888
Add HTTP/2 and <iden><version> columns to our security providers doc ;to enhance our security documentation;Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;Similar;0.648640513420105
Add HTTP/2 and <iden><version> columns to our security providers doc ;to enhance our security documentation;Fix tests to share a common <iden>. Also fix the memory limit, which may prevent Travis from failing our tests.;share a common <iden>, memory limit, prevent Travis from failing our tests;Similar;0.5158140063285828
Add HTTP/2 and <iden><version> columns to our security providers doc ;to enhance our security documentation;Update readme and changelog for <version>;<version>;Similar;0.72637939453125
Add HTTP/2 and <iden><version> columns to our security providers doc ;to enhance our security documentation;New <file_name> class to normalize certificate chains  ;The goal of this is to get the root <iden> certificate into the certificate chain, so that it can be considered by the certificate pinner;Similar;0.7383949756622314
Add HTTP/2 and <iden><version> columns to our security providers doc ;to enhance our security documentation;Fix some get prefixes on <file_name> and <method_name>;"-
None";Similar;0.6604998111724854
Add HTTP/2 and <iden><version> columns to our security providers doc ;to enhance our security documentation;Write some new connection pool tests;These use the <iden> APIs. Theyre high-level so they wont break with the implementation rewrite.;Similar;0.6071308255195618
Add HTTP/2 and <iden><version> columns to our security providers doc ;to enhance our security documentation;Add <method_name>;Might be useful to expose this bookkeeping to app developers;Similar;0.5828193426132202
Add HTTP/2 and <iden><version> columns to our security providers doc ;to enhance our security documentation;Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Similar;0.5968049764633179
Add HTTP/2 and <iden><version> columns to our security providers doc ;to enhance our security documentation;Expose internal APIs for pluggable file systems, Also migrate all of our tests to use the <method_name>  ;We arent yet ready to make <iden> a public type, but I dont mind making it _almost_ available via an internal API for those brave enough to try that, Its simpler.;Similar;0.7331712245941162
Add HTTP/2 and <iden><version> columns to our security providers doc ;to enhance our security documentation;Fix <iden> post retransmit in the new API  ;We dont buffer response bodies in the new API. But we should retransmit POST bodies when a request fails.;Similar;0.7259114980697632
Add HTTP/2 and <iden><version> columns to our security providers doc ;to enhance our security documentation;Add a test for corner-case behavior;Im looking to make HttpURLConnectionImpl delegate to Job, and that means writing tests for all the weird things it does above HttpEngine.;Similar;0.5097493529319763
Add HTTP/2 and <iden><version> columns to our security providers doc ;to enhance our security documentation;Add some pings to force happens-before in <iden> tests;Previously we were relying on accidents to get our tests to pass;Similar;0.6239961981773376
Add HTTP/2 and <iden><version> columns to our security providers doc ;to enhance our security documentation;Move  <file_name>  pooling logic  ;"previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams; move  <file_name>  reuse to  <file_name>, with policy informed by  <method_name>  specifying what to do when the  <file_name>  becomes idle: pool, close or hold, so the  <file_name>  does what its told.";Similar;0.6099571585655212
Add HTTP/2 and <iden><version> columns to our security providers doc ;to enhance our security documentation;Implement moving bytes between OkBuffers  ;This is more complicated than Id anticipated;Similar;0.5780546069145203
Add HTTP/2 and <iden><version> columns to our security providers doc ;to enhance our security documentation;"Define async APIs and switch <file_name> to use <iden> directly. I think this is the best route going forward; and eventually we could invert this relationship to have <iden> depending on <file_name> directly rather than vice versa.";Using <iden> directly introduces some duplicated code with <iden>. It also breaks the <file_name> cache.;Similar;0.5116362571716309
Add HTTP/2 and <iden><version> columns to our security providers doc ;to enhance our security documentation;Fix checkstyle issues in new <iden> code;checkstyle issues;Similar;0.6390963792800903
Add HTTP/2 and <iden><version> columns to our security providers doc ;to enhance our security documentation;Introduce a <file_name> interface between engine and connection.;This breaks the direct dependency from <file_name> to <method_name>;Similar;0.7454398274421692
Add HTTP/2 and <iden><version> columns to our security providers doc ;to enhance our security documentation;Update to the latest <method_name>;Includes everything thru 8842981cbcfe20eb4721c0a2c867fa9a18233062;Similar;0.6089592576026917
Add HTTP/2 and <iden><version> columns to our security providers doc ;to enhance our security documentation;Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;Similar;0.54487144947052
Add HTTP/2 and <iden><version> columns to our security providers doc ;to enhance our security documentation;Move out of the <file_name> package;To promote the code into AOSP, well keep this package as-is and do the jarjar in <iden> instead;Similar;0.506163477897644
Add HTTP/2 and <iden><version> columns to our security providers doc ;to enhance our security documentation;Make the `<method_name>` return full working connections;Previously the returned connections required the caller to do extra work: setting up tunnels and performing an `<iden>` handshake. With this change, we make a complete working connection in `<method_name>`. This will make it easier to fix fallback when a single domain has multiple `<iden>` addresses that are not reachable. Also, this will make it easier to do SPDY through `<iden>` proxies.;Similar;0.6488518118858337
Add HTTP/2 and <iden><version> columns to our security providers doc ;to enhance our security documentation;Expose <iden> directly on <method_name>  ;direct;Similar;0.612228512763977
Add HTTP/2 and <iden><version> columns to our security providers doc ;to enhance our security documentation;Use HTML entity for ampersand;to represent the ampersand symbol in HTML;Similar;0.6717772483825684
Add HTTP/2 and <iden><version> columns to our security providers doc ;to enhance our security documentation;Add convenience overload for <iden>-backed <method_name>;convenience;Similar;0.6499018669128418
Add HTTP/2 and <iden><version> columns to our security providers doc ;to enhance our security documentation;Update website to the latest design  ;latest design;Similar;0.6608397960662842
Add HTTP/2 and <iden><version> columns to our security providers doc ;to enhance our security documentation;Transfer to/from <iden> directly from <iden>  ;<pr_link>;Similar;0.5514907240867615
Add HTTP/2 and <iden><version> columns to our security providers doc ;to enhance our security documentation;add @override for subclass override method;subclass override method;Similar;0.6976035833358765
Add HTTP/2 and <iden><version> columns to our security providers doc ;to enhance our security documentation;Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Similar;0.5982801914215088
Add HTTP/2 and <iden><version> columns to our security providers doc ;to enhance our security documentation;The changes to <iden>s  <file_name> have been ported  ;Upstream commit of <iden> / <iden> fix, This does not include the introduction of PlatformTest, which will be difficult to write so it works everywhere;Similar;0.692253589630127
Add HTTP/2 and <iden><version> columns to our security providers doc ;to enhance our security documentation;Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Similar;0.6200740933418274
Add HTTP/2 and <iden><version> columns to our security providers doc ;to enhance our security documentation;Return <file_name> to previous (e.g. KitKat) behavior;this change required to handle this <iden> scenario;Similar;0.5708634853363037
Add HTTP/2 and <iden><version> columns to our security providers doc ;to enhance our security documentation;Document <file_name> throwing modes;To include the <pr_link> information;Similar;0.5664718151092529
Add HTTP/2 and <iden><version> columns to our security providers doc ;to enhance our security documentation;Convert <file_name> to Kotlin;<pr_link>, <iden>, <file_name>;Similar;0.6500957608222961
Add HTTP/2 and <iden><version> columns to our security providers doc ;to enhance our security documentation;Convert <file_name>, <file_name> to Kotlin  ;"to Kotlin

Decision: Rename <file_name> <version> to .kt (and others)  ";Similar;0.6565646529197693
Add HTTP/2 and <iden><version> columns to our security providers doc ;to enhance our security documentation;Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Similar;0.6814161539077759
Add HTTP/2 and <iden><version> columns to our security providers doc ;to enhance our security documentation;Fix a race in <method_name> ( <pr_link> );We were assuming on a client failure the server wouldnt have any further events. But it will get a failure if we give it a moment. This was causing some test flakiness.;Similar;0.6659585237503052
Add HTTP/2 and <iden><version> columns to our security providers doc ;to enhance our security documentation;Refactor <file_name> by using <iden>;We can use <iden> instead of overriding <iden> abstract class;Similar;0.681470513343811
Add HTTP/2 and <iden><version> columns to our security providers doc ;to enhance our security documentation;Enable GitHub Security Scanning;To configure GitHub workflow for code security scanning;Similar;0.6973229646682739
Add HTTP/2 and <iden><version> columns to our security providers doc ;to enhance our security documentation;Add support for following <iden> 307 temporary redirects  ;Fixes Android bug 41739;Similar;0.6048058271408081
Add HTTP/2 and <iden><version> columns to our security providers doc ;to enhance our security documentation;Add wildcard hostnames support in <file_name>;support;Similar;0.7446991801261902
Add HTTP/2 and <iden><version> columns to our security providers doc ;to enhance our security documentation;Fix correctness of WebSocketReader reserved flags test;reserved flags;Similar;0.5863770246505737
Use  <file_name> s built-in <iden> style  <enter>  ;The boilerplate to set this up is unfortunate;Use <iden> in <file_name>  ;The utility here is negligible. Were sharing threads between HTTP, HTTP/2 and web sockets now.;Similar;0.9399679899215698
Use  <file_name> s built-in <iden> style  <enter>  ;The boilerplate to set this up is unfortunate;Adopt idiomatic <iden> in <file_name>;idiomatic;Similar;0.9184510707855225
Use  <file_name> s built-in <iden> style  <enter>  ;The boilerplate to set this up is unfortunate;Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they cant be open. I think the motivation to make these non-final was pretty weak, and I dont mind breaking <iden> compatibility here.;Similar;0.7543942928314209
Use  <file_name> s built-in <iden> style  <enter>  ;The boilerplate to set this up is unfortunate;Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;Similar;0.6369488835334778
Use  <file_name> s built-in <iden> style  <enter>  ;The boilerplate to set this up is unfortunate;Include prerequisites in the releasing guide.;to provide necessary information for users;Similar;0.6029112935066223
Use  <file_name> s built-in <iden> style  <enter>  ;The boilerplate to set this up is unfortunate;Convert <file_name> to Kotlin;"to Kotlin

Decision: Rename <file_name> to .kt";Similar;0.8341234922409058
Use  <file_name> s built-in <iden> style  <enter>  ;The boilerplate to set this up is unfortunate;Introduce <method_name> ;This is the payoff that preceding changes have been working towards.;Similar;0.8696999549865723
Use  <file_name> s built-in <iden> style  <enter>  ;The boilerplate to set this up is unfortunate;Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.;Similar;0.8183294534683228
Use  <file_name> s built-in <iden> style  <enter>  ;The boilerplate to set this up is unfortunate;Rename <method_name> to <iden()>;I prefer signed;Similar;0.8461126089096069
Use  <file_name> s built-in <iden> style  <enter>  ;The boilerplate to set this up is unfortunate;Fixup <file_name> so that its worthy of production use.;This changes the default from the insecure 1024-bit <iden> to a secure 256-bit <iden> key. It adds a new option to use <iden> keys for interoperating with older clients.;Similar;0.7315762042999268
Use  <file_name> s built-in <iden> style  <enter>  ;The boilerplate to set this up is unfortunate;Support client authentication in <file_name>;client authentication;Similar;0.7309250235557556
Use  <file_name> s built-in <iden> style  <enter>  ;The boilerplate to set this up is unfortunate;Remove <iden>-mode <iden> cipher suites;This removes the following cipher suites as supported-by-default;Similar;0.5958150625228882
Use  <file_name> s built-in <iden> style  <enter>  ;The boilerplate to set this up is unfortunate;Fix Javadoc builds with the jsr305 dependency  ;Because multiple modules share a package we need to share the dependency on everything in package-info.java;Similar;0.6202806830406189
Use  <file_name> s built-in <iden> style  <enter>  ;The boilerplate to set this up is unfortunate;Make the  <file_name>  a little better.  <enter> <iden> threads by their URLs. Dont follow all fragments of the same <iden>;"For better organization; to prevent following all fragments of the same <iden>";Similar;0.6169321537017822
Use  <file_name> s built-in <iden> style  <enter>  ;The boilerplate to set this up is unfortunate;Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;Similar;0.6941302418708801
Use  <file_name> s built-in <iden> style  <enter>  ;The boilerplate to set this up is unfortunate;Update readme and changelog for <version>;<version>;Similar;0.7479910254478455
Use  <file_name> s built-in <iden> style  <enter>  ;The boilerplate to set this up is unfortunate;New <file_name> class to normalize certificate chains  ;The goal of this is to get the root <iden> certificate into the certificate chain, so that it can be considered by the certificate pinner;Similar;0.7260594367980957
Use  <file_name> s built-in <iden> style  <enter>  ;The boilerplate to set this up is unfortunate;Fix some get prefixes on <file_name> and <method_name>;"-
None";Similar;0.7793525457382202
Use  <file_name> s built-in <iden> style  <enter>  ;The boilerplate to set this up is unfortunate;Add <method_name>;Might be useful to expose this bookkeeping to app developers;Similar;0.8888663053512573
Use  <file_name> s built-in <iden> style  <enter>  ;The boilerplate to set this up is unfortunate;Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Similar;0.7940650582313538
Use  <file_name> s built-in <iden> style  <enter>  ;The boilerplate to set this up is unfortunate;Expose internal APIs for pluggable file systems, Also migrate all of our tests to use the <method_name>  ;We arent yet ready to make <iden> a public type, but I dont mind making it _almost_ available via an internal API for those brave enough to try that, Its simpler.;Similar;0.5947681069374084
Use  <file_name> s built-in <iden> style  <enter>  ;The boilerplate to set this up is unfortunate;The implementation is built around one oversized method that runs top to bottom;I found this was easier to follow than the switch statement recommended by the <iden> standard;Similar;0.5073584914207458
Use  <file_name> s built-in <iden> style  <enter>  ;The boilerplate to set this up is unfortunate;Fix <iden> post retransmit in the new API  ;We dont buffer response bodies in the new API. But we should retransmit POST bodies when a request fails.;Similar;0.663835346698761
Use  <file_name> s built-in <iden> style  <enter>  ;The boilerplate to set this up is unfortunate;Add a test for corner-case behavior;Im looking to make HttpURLConnectionImpl delegate to Job, and that means writing tests for all the weird things it does above HttpEngine.;Similar;0.6014926433563232
Use  <file_name> s built-in <iden> style  <enter>  ;The boilerplate to set this up is unfortunate;Add some pings to force happens-before in <iden> tests;Previously we were relying on accidents to get our tests to pass;Similar;0.6017501950263977
Use  <file_name> s built-in <iden> style  <enter>  ;The boilerplate to set this up is unfortunate;Track <file_name> ownership  ;<file_name> ownership is somewhat racy: when an HttpURLConnection reads the last byte of a connection, its ownership is released and given to the <method_name>;Similar;0.7564150094985962
Use  <file_name> s built-in <iden> style  <enter>  ;The boilerplate to set this up is unfortunate;Move  <file_name>  pooling logic  ;"previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams; move  <file_name>  reuse to  <file_name>, with policy informed by  <method_name>  specifying what to do when the  <file_name>  becomes idle: pool, close or hold, so the  <file_name>  does what its told.";Similar;0.8145403861999512
Use  <file_name> s built-in <iden> style  <enter>  ;The boilerplate to set this up is unfortunate;Implement moving bytes between OkBuffers  ;This is more complicated than Id anticipated;Similar;0.6873350739479065
Use  <file_name> s built-in <iden> style  <enter>  ;The boilerplate to set this up is unfortunate;"Define async APIs and switch <file_name> to use <iden> directly. I think this is the best route going forward; and eventually we could invert this relationship to have <iden> depending on <file_name> directly rather than vice versa.";Using <iden> directly introduces some duplicated code with <iden>. It also breaks the <file_name> cache.;Similar;0.5022282004356384
Use  <file_name> s built-in <iden> style  <enter>  ;The boilerplate to set this up is unfortunate;Fix checkstyle issues in new <iden> code;checkstyle issues;Similar;0.6636600494384766
Use  <file_name> s built-in <iden> style  <enter>  ;The boilerplate to set this up is unfortunate;Introduce a <file_name> interface between engine and connection.;This breaks the direct dependency from <file_name> to <method_name>;Similar;0.850824236869812
Use  <file_name> s built-in <iden> style  <enter>  ;The boilerplate to set this up is unfortunate;Update to the latest <method_name>;Includes everything thru 8842981cbcfe20eb4721c0a2c867fa9a18233062;Similar;0.6946359872817993
Use  <file_name> s built-in <iden> style  <enter>  ;The boilerplate to set this up is unfortunate;Be more careful around IOExceptions;my goal is to make it easier to differentiate between protocol-level problems (bogus frames) from transport-level problems (closed sockets and EOF streams);Similar;0.545055091381073
Use  <file_name> s built-in <iden> style  <enter>  ;The boilerplate to set this up is unfortunate;Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;Similar;0.5686391592025757
Use  <file_name> s built-in <iden> style  <enter>  ;The boilerplate to set this up is unfortunate;Move out of the <file_name> package;To promote the code into AOSP, well keep this package as-is and do the jarjar in <iden> instead;Similar;0.6391234397888184
Use  <file_name> s built-in <iden> style  <enter>  ;The boilerplate to set this up is unfortunate;Make the `<method_name>` return full working connections;Previously the returned connections required the caller to do extra work: setting up tunnels and performing an `<iden>` handshake. With this change, we make a complete working connection in `<method_name>`. This will make it easier to fix fallback when a single domain has multiple `<iden>` addresses that are not reachable. Also, this will make it easier to do SPDY through `<iden>` proxies.;Similar;0.7066544890403748
Use  <file_name> s built-in <iden> style  <enter>  ;The boilerplate to set this up is unfortunate;Add error-prone compiler and fix its found issues;error-prone, its found issues;Similar;0.5745977759361267
Use  <file_name> s built-in <iden> style  <enter>  ;The boilerplate to set this up is unfortunate;Remove old <iden> protocol method;old;Similar;0.5748071670532227
Use  <file_name> s built-in <iden> style  <enter>  ;The boilerplate to set this up is unfortunate;Expose <iden> directly on <method_name>  ;direct;Similar;0.8874961137771606
Use  <file_name> s built-in <iden> style  <enter>  ;The boilerplate to set this up is unfortunate;Use HTML entity for ampersand;to represent the ampersand symbol in HTML;Similar;0.7784017324447632
Use  <file_name> s built-in <iden> style  <enter>  ;The boilerplate to set this up is unfortunate;Add convenience overload for <iden>-backed <method_name>;convenience;Similar;0.7862458825111389
Use  <file_name> s built-in <iden> style  <enter>  ;The boilerplate to set this up is unfortunate;Use consistent camel casing of <iden>;consistent camel casing;Similar;0.577388346195221
Use  <file_name> s built-in <iden> style  <enter>  ;The boilerplate to set this up is unfortunate;Update website to the latest design  ;latest design;Similar;0.5234233140945435
Use  <file_name> s built-in <iden> style  <enter>  ;The boilerplate to set this up is unfortunate;Transfer to/from <iden> directly from <iden>  ;<pr_link>;Similar;0.7844254970550537
Use  <file_name> s built-in <iden> style  <enter>  ;The boilerplate to set this up is unfortunate;add @override for subclass override method;subclass override method;Similar;0.7690194249153137
Use  <file_name> s built-in <iden> style  <enter>  ;The boilerplate to set this up is unfortunate;Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Similar;0.6160280704498291
Use  <file_name> s built-in <iden> style  <enter>  ;The boilerplate to set this up is unfortunate;The changes to <iden>s  <file_name> have been ported  ;Upstream commit of <iden> / <iden> fix, This does not include the introduction of PlatformTest, which will be difficult to write so it works everywhere;Similar;0.7370842695236206
Use  <file_name> s built-in <iden> style  <enter>  ;The boilerplate to set this up is unfortunate;Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Similar;0.8127945065498352
Use  <file_name> s built-in <iden> style  <enter>  ;The boilerplate to set this up is unfortunate;Return <file_name> to previous (e.g. KitKat) behavior;this change required to handle this <iden> scenario;Similar;0.7663925886154175
Use  <file_name> s built-in <iden> style  <enter>  ;The boilerplate to set this up is unfortunate;Document <file_name> throwing modes;To include the <pr_link> information;Similar;0.7646714448928833
Use  <file_name> s built-in <iden> style  <enter>  ;The boilerplate to set this up is unfortunate;Convert <file_name> to Kotlin;<pr_link>, <iden>, <file_name>;Similar;0.8341234922409058
Use  <file_name> s built-in <iden> style  <enter>  ;The boilerplate to set this up is unfortunate;Convert <file_name>, <file_name> to Kotlin  ;"to Kotlin

Decision: Rename <file_name> <version> to .kt (and others)  ";Similar;0.8300237655639648
Use  <file_name> s built-in <iden> style  <enter>  ;The boilerplate to set this up is unfortunate;Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Similar;0.7088595032691956
Use  <file_name> s built-in <iden> style  <enter>  ;The boilerplate to set this up is unfortunate;Just pass the <iden> and <iden> objects in directly;Dont summarize the request and response;Similar;0.6732332110404968
Use  <file_name> s built-in <iden> style  <enter>  ;The boilerplate to set this up is unfortunate;Fix a race in <method_name> ( <pr_link> );We were assuming on a client failure the server wouldnt have any further events. But it will get a failure if we give it a moment. This was causing some test flakiness.;Similar;0.6304763555526733
Use  <file_name> s built-in <iden> style  <enter>  ;The boilerplate to set this up is unfortunate;Improve some Markdown;improve;Similar;0.5234350562095642
Use  <file_name> s built-in <iden> style  <enter>  ;The boilerplate to set this up is unfortunate;Refactor <file_name> by using <iden>;We can use <iden> instead of overriding <iden> abstract class;Similar;0.9286356568336487
Use  <file_name> s built-in <iden> style  <enter>  ;The boilerplate to set this up is unfortunate;Enable GitHub Security Scanning;To configure GitHub workflow for code security scanning;Similar;0.6212539672851562
Use  <file_name> s built-in <iden> style  <enter>  ;The boilerplate to set this up is unfortunate;load through bootstrap;-;Similar;0.638755202293396
Use  <file_name> s built-in <iden> style  <enter>  ;The boilerplate to set this up is unfortunate;Fix bug where request body isnt sent when it should  ;request body isnt sent when it should;Similar;0.5252722501754761
Use  <file_name> s built-in <iden> style  <enter>  ;The boilerplate to set this up is unfortunate;Add support for following <iden> 307 temporary redirects  ;Fixes Android bug 41739;Similar;0.6587196588516235
Use  <file_name> s built-in <iden> style  <enter>  ;The boilerplate to set this up is unfortunate;Add wildcard hostnames support in <file_name>;support;Similar;0.774104654788971
Use  <file_name> s built-in <iden> style  <enter>  ;The boilerplate to set this up is unfortunate;Fix correctness of WebSocketReader reserved flags test;reserved flags;Similar;0.600563108921051
Use our test rule instead of the Maven Surefire listener  ;to Close the issue indicated by the link;Adopt idiomatic <iden> in <file_name>;idiomatic;Similar;0.5253289341926575
Use our test rule instead of the Maven Surefire listener  ;to Close the issue indicated by the link;Include prerequisites in the releasing guide.;to provide necessary information for users;Similar;0.5042595863342285
Use our test rule instead of the Maven Surefire listener  ;to Close the issue indicated by the link;Introduce <method_name> ;This is the payoff that preceding changes have been working towards.;Similar;0.5443292856216431
Use our test rule instead of the Maven Surefire listener  ;to Close the issue indicated by the link;Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.;Similar;0.5823054313659668
Use our test rule instead of the Maven Surefire listener  ;to Close the issue indicated by the link;Rename <method_name> to <iden()>;I prefer signed;Similar;0.5568632483482361
Use our test rule instead of the Maven Surefire listener  ;to Close the issue indicated by the link;Remove <iden>-mode <iden> cipher suites;This removes the following cipher suites as supported-by-default;Similar;0.6048592925071716
Use our test rule instead of the Maven Surefire listener  ;to Close the issue indicated by the link;Make the  <file_name>  a little better.  <enter> <iden> threads by their URLs. Dont follow all fragments of the same <iden>;"For better organization; to prevent following all fragments of the same <iden>";Similar;0.5428782105445862
Use our test rule instead of the Maven Surefire listener  ;to Close the issue indicated by the link;Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;Similar;0.5738455653190613
Use our test rule instead of the Maven Surefire listener  ;to Close the issue indicated by the link;Collapse interceptors into a single chain;Instead of having a chain of application interceptors and a separate chain of network interceptors, this makes a single heterogeneous chain. It makes the <iden> core and network caller into interceptors.;Similar;0.5295400619506836
Use our test rule instead of the Maven Surefire listener  ;to Close the issue indicated by the link;Update readme and changelog for <version>;<version>;Similar;0.5297572016716003
Use our test rule instead of the Maven Surefire listener  ;to Close the issue indicated by the link;Add <method_name>;Might be useful to expose this bookkeeping to app developers;Similar;0.5012497305870056
Use our test rule instead of the Maven Surefire listener  ;to Close the issue indicated by the link;Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Similar;0.5723195672035217
Use our test rule instead of the Maven Surefire listener  ;to Close the issue indicated by the link;Drop our one remaining <iden> cipher suite;Tracking <iden> and Firefox, which have also dropped this cipher suite;Similar;0.6298202276229858
Use our test rule instead of the Maven Surefire listener  ;to Close the issue indicated by the link;Change  <file_name>  to not implement java.net.ResponseCache;This marks some methods as  @deprecated and internal-only. Unfortunately we dont have a great mechanism to hide them from the documented <iden>.;Similar;0.6255772113800049
Use our test rule instead of the Maven Surefire listener  ;to Close the issue indicated by the link;The implementation is built around one oversized method that runs top to bottom;I found this was easier to follow than the switch statement recommended by the <iden> standard;Similar;0.5098272562026978
Use our test rule instead of the Maven Surefire listener  ;to Close the issue indicated by the link;Fix <iden> post retransmit in the new API  ;We dont buffer response bodies in the new API. But we should retransmit POST bodies when a request fails.;Similar;0.5054802894592285
Use our test rule instead of the Maven Surefire listener  ;to Close the issue indicated by the link;Add a test for corner-case behavior;Im looking to make HttpURLConnectionImpl delegate to Job, and that means writing tests for all the weird things it does above HttpEngine.;Similar;0.5858985781669617
Use our test rule instead of the Maven Surefire listener  ;to Close the issue indicated by the link;Add some pings to force happens-before in <iden> tests;Previously we were relying on accidents to get our tests to pass;Similar;0.5212752223014832
Use our test rule instead of the Maven Surefire listener  ;to Close the issue indicated by the link;Move  <file_name>  pooling logic  ;"previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams; move  <file_name>  reuse to  <file_name>, with policy informed by  <method_name>  specifying what to do when the  <file_name>  becomes idle: pool, close or hold, so the  <file_name>  does what its told.";Similar;0.5241656303405762
Use our test rule instead of the Maven Surefire listener  ;to Close the issue indicated by the link;Dont attempt <iden> modes we know will fail.;we know will fail;Similar;0.5351828336715698
Use our test rule instead of the Maven Surefire listener  ;to Close the issue indicated by the link;Remove <iden> 2 warnings;Small docs fixes;Similar;0.6321579813957214
Use our test rule instead of the Maven Surefire listener  ;to Close the issue indicated by the link;"Define async APIs and switch <file_name> to use <iden> directly. I think this is the best route going forward; and eventually we could invert this relationship to have <iden> depending on <file_name> directly rather than vice versa.";Using <iden> directly introduces some duplicated code with <iden>. It also breaks the <file_name> cache.;Similar;0.5005903244018555
Use our test rule instead of the Maven Surefire listener  ;to Close the issue indicated by the link;Dont use <iden> APIs not in Gingerbread;APIs not in Gingerbread;Similar;0.5291836261749268
Use our test rule instead of the Maven Surefire listener  ;to Close the issue indicated by the link;Make  <file_name> less flaky;I was seeing flaky results in the debugger because pooled connections were being evicted as the test ran;Similar;0.5644738674163818
Use our test rule instead of the Maven Surefire listener  ;to Close the issue indicated by the link;Be more careful around IOExceptions;my goal is to make it easier to differentiate between protocol-level problems (bogus frames) from transport-level problems (closed sockets and EOF streams);Similar;0.5410577058792114
Use our test rule instead of the Maven Surefire listener  ;to Close the issue indicated by the link;Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;Similar;0.5700329542160034
Use our test rule instead of the Maven Surefire listener  ;to Close the issue indicated by the link;Move out of the <file_name> package;To promote the code into AOSP, well keep this package as-is and do the jarjar in <iden> instead;Similar;0.6156492233276367
Use our test rule instead of the Maven Surefire listener  ;to Close the issue indicated by the link;Remove old <iden> protocol method;old;Similar;0.6154646873474121
Use our test rule instead of the Maven Surefire listener  ;to Close the issue indicated by the link;Expose <iden> directly on <method_name>  ;direct;Similar;0.5271527767181396
Use our test rule instead of the Maven Surefire listener  ;to Close the issue indicated by the link;Add convenience overload for <iden>-backed <method_name>;convenience;Similar;0.5419948101043701
Use our test rule instead of the Maven Surefire listener  ;to Close the issue indicated by the link;Drop unused dependencies;unused;Similar;0.606559157371521
Use our test rule instead of the Maven Surefire listener  ;to Close the issue indicated by the link;Transfer to/from <iden> directly from <iden>  ;<pr_link>;Similar;0.5416260957717896
Use our test rule instead of the Maven Surefire listener  ;to Close the issue indicated by the link;add @override for subclass override method;subclass override method;Similar;0.5074107050895691
Use our test rule instead of the Maven Surefire listener  ;to Close the issue indicated by the link;Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Similar;0.5986448526382446
Use our test rule instead of the Maven Surefire listener  ;to Close the issue indicated by the link;Partially revert connection timeout behavior  ;The modification of the timeout behavior during connection caused problems;Similar;0.5704828500747681
Use our test rule instead of the Maven Surefire listener  ;to Close the issue indicated by the link;This change logs the exception but prevent it from propagating out of the top of the call stack.;This decreases overall flakiness.;Similar;0.5337846279144287
Use our test rule instead of the Maven Surefire listener  ;to Close the issue indicated by the link;Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Similar;0.611238956451416
Use our test rule instead of the Maven Surefire listener  ;to Close the issue indicated by the link;Return <file_name> to previous (e.g. KitKat) behavior;this change required to handle this <iden> scenario;Similar;0.5475319623947144
Use our test rule instead of the Maven Surefire listener  ;to Close the issue indicated by the link;Document <file_name> throwing modes;To include the <pr_link> information;Similar;0.5116729140281677
Use our test rule instead of the Maven Surefire listener  ;to Close the issue indicated by the link;Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Similar;0.5044142007827759
Use our test rule instead of the Maven Surefire listener  ;to Close the issue indicated by the link;Just pass the <iden> and <iden> objects in directly;Dont summarize the request and response;Similar;0.5930140614509583
Use our test rule instead of the Maven Surefire listener  ;to Close the issue indicated by the link;fix <issue_link> : PROPFIND request should not redirect to GET request;PROPFIND request should not redirect to GET request;Similar;0.5959986448287964
Use our test rule instead of the Maven Surefire listener  ;to Close the issue indicated by the link;Remove unnecessary use of grouping parentheses  ;Lets remove warnings found by errorprone.;Similar;0.6011790037155151
Use our test rule instead of the Maven Surefire listener  ;to Close the issue indicated by the link;Fix bug where request body isnt sent when it should  ;request body isnt sent when it should;Similar;0.6554620265960693
Degrade connections after a timeout;This is based roughly on the <iden> Connections proposal here;Fix some maven problems that are blocking the <version> release;blocking the <version> release;Similar;0.615982174873352
Degrade connections after a timeout;This is based roughly on the <iden> Connections proposal here;Remove <iden>-mode <iden> cipher suites;This removes the following cipher suites as supported-by-default;Similar;0.6643175482749939
Degrade connections after a timeout;This is based roughly on the <iden> Connections proposal here;Collapse interceptors into a single chain;Instead of having a chain of application interceptors and a separate chain of network interceptors, this makes a single heterogeneous chain. It makes the <iden> core and network caller into interceptors.;Similar;0.5351619720458984
Degrade connections after a timeout;This is based roughly on the <iden> Connections proposal here;Drop our one remaining <iden> cipher suite;Tracking <iden> and Firefox, which have also dropped this cipher suite;Similar;0.6777244210243225
Degrade connections after a timeout;This is based roughly on the <iden> Connections proposal here;Change  <file_name>  to not implement java.net.ResponseCache;This marks some methods as  @deprecated and internal-only. Unfortunately we dont have a great mechanism to hide them from the documented <iden>.;Similar;0.6202545762062073
Degrade connections after a timeout;This is based roughly on the <iden> Connections proposal here;Remove <iden> 2 warnings;Small docs fixes;Similar;0.6810163855552673
Degrade connections after a timeout;This is based roughly on the <iden> Connections proposal here;Kill <file_name> in the process  ;Teach <file_name> <iden>;Similar;0.5756143927574158
Degrade connections after a timeout;This is based roughly on the <iden> Connections proposal here;Make  <file_name> less flaky;I was seeing flaky results in the debugger because pooled connections were being evicted as the test ran;Similar;0.6200767159461975
Degrade connections after a timeout;This is based roughly on the <iden> Connections proposal here;Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;Similar;0.5122687816619873
Degrade connections after a timeout;This is based roughly on the <iden> Connections proposal here;Move out of the <file_name> package;To promote the code into AOSP, well keep this package as-is and do the jarjar in <iden> instead;Similar;0.6671446561813354
Degrade connections after a timeout;This is based roughly on the <iden> Connections proposal here;Fix <iden> which was being computed incorrectly;<enter> We were only returning true once we were already in a tunnel. This was bogus. In theory a <iden> tunnel sending extra data could be corrupted due to this bug.;Similar;0.6889855265617371
Degrade connections after a timeout;This is based roughly on the <iden> Connections proposal here;Remove old <iden> protocol method;old;Similar;0.7400543689727783
Degrade connections after a timeout;This is based roughly on the <iden> Connections proposal here;Drop unused dependencies;unused;Similar;0.7440943121910095
Degrade connections after a timeout;This is based roughly on the <iden> Connections proposal here;Partially revert connection timeout behavior  ;The modification of the timeout behavior during connection caused problems;Similar;0.6220349073410034
Degrade connections after a timeout;This is based roughly on the <iden> Connections proposal here;This change logs the exception but prevent it from propagating out of the top of the call stack.;This decreases overall flakiness.;Similar;0.5558051466941833
Degrade connections after a timeout;This is based roughly on the <iden> Connections proposal here;Fail HTTP/2 connections if the pong is not received;This removes the abstraction from our http2 package;Similar;0.7139251828193665
Degrade connections after a timeout;This is based roughly on the <iden> Connections proposal here;Improve some Markdown;improve;Similar;0.5222394466400146
Degrade connections after a timeout;This is based roughly on the <iden> Connections proposal here;fix <issue_link> : PROPFIND request should not redirect to GET request;PROPFIND request should not redirect to GET request;Similar;0.5263630151748657
Degrade connections after a timeout;This is based roughly on the <iden> Connections proposal here;Remove unnecessary use of grouping parentheses  ;Lets remove warnings found by errorprone.;Similar;0.7164087891578674
Degrade connections after a timeout;This is based roughly on the <iden> Connections proposal here;Fix bug where request body isnt sent when it should  ;request body isnt sent when it should;Similar;0.6027919054031372
Use <iden> in <file_name>  ;The utility here is negligible. Were sharing threads between HTTP, HTTP/2 and web sockets now.;Adopt idiomatic <iden> in <file_name>;idiomatic;Similar;0.9073805809020996
Use <iden> in <file_name>  ;The utility here is negligible. Were sharing threads between HTTP, HTTP/2 and web sockets now.;Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they cant be open. I think the motivation to make these non-final was pretty weak, and I dont mind breaking <iden> compatibility here.;Similar;0.7732869386672974
Use <iden> in <file_name>  ;The utility here is negligible. Were sharing threads between HTTP, HTTP/2 and web sockets now.;Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;Similar;0.6374239325523376
Use <iden> in <file_name>  ;The utility here is negligible. Were sharing threads between HTTP, HTTP/2 and web sockets now.;Include prerequisites in the releasing guide.;to provide necessary information for users;Similar;0.5835415124893188
Use <iden> in <file_name>  ;The utility here is negligible. Were sharing threads between HTTP, HTTP/2 and web sockets now.;Convert <file_name> to Kotlin;"to Kotlin

Decision: Rename <file_name> to .kt";Similar;0.8694837093353271
Use <iden> in <file_name>  ;The utility here is negligible. Were sharing threads between HTTP, HTTP/2 and web sockets now.;Introduce <method_name> ;This is the payoff that preceding changes have been working towards.;Similar;0.8797539472579956
Use <iden> in <file_name>  ;The utility here is negligible. Were sharing threads between HTTP, HTTP/2 and web sockets now.;Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.;Similar;0.8022246956825256
Use <iden> in <file_name>  ;The utility here is negligible. Were sharing threads between HTTP, HTTP/2 and web sockets now.;Rename <method_name> to <iden()>;I prefer signed;Similar;0.869030237197876
Use <iden> in <file_name>  ;The utility here is negligible. Were sharing threads between HTTP, HTTP/2 and web sockets now.;Fixup <file_name> so that its worthy of production use.;This changes the default from the insecure 1024-bit <iden> to a secure 256-bit <iden> key. It adds a new option to use <iden> keys for interoperating with older clients.;Similar;0.6932231187820435
Use <iden> in <file_name>  ;The utility here is negligible. Were sharing threads between HTTP, HTTP/2 and web sockets now.;Support client authentication in <file_name>;client authentication;Similar;0.7315236330032349
Use <iden> in <file_name>  ;The utility here is negligible. Were sharing threads between HTTP, HTTP/2 and web sockets now.;Remove <iden>-mode <iden> cipher suites;This removes the following cipher suites as supported-by-default;Similar;0.6164798140525818
Use <iden> in <file_name>  ;The utility here is negligible. Were sharing threads between HTTP, HTTP/2 and web sockets now.;Fix Javadoc builds with the jsr305 dependency  ;Because multiple modules share a package we need to share the dependency on everything in package-info.java;Similar;0.5534238815307617
Use <iden> in <file_name>  ;The utility here is negligible. Were sharing threads between HTTP, HTTP/2 and web sockets now.;Make the  <file_name>  a little better.  <enter> <iden> threads by their URLs. Dont follow all fragments of the same <iden>;"For better organization; to prevent following all fragments of the same <iden>";Similar;0.5776601433753967
Use <iden> in <file_name>  ;The utility here is negligible. Were sharing threads between HTTP, HTTP/2 and web sockets now.;Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;Similar;0.668893039226532
Use <iden> in <file_name>  ;The utility here is negligible. Were sharing threads between HTTP, HTTP/2 and web sockets now.;Update readme and changelog for <version>;<version>;Similar;0.7489446401596069
Use <iden> in <file_name>  ;The utility here is negligible. Were sharing threads between HTTP, HTTP/2 and web sockets now.;New <file_name> class to normalize certificate chains  ;The goal of this is to get the root <iden> certificate into the certificate chain, so that it can be considered by the certificate pinner;Similar;0.6513193249702454
Use <iden> in <file_name>  ;The utility here is negligible. Were sharing threads between HTTP, HTTP/2 and web sockets now.;Fix some get prefixes on <file_name> and <method_name>;"-
None";Similar;0.7738968133926392
Use <iden> in <file_name>  ;The utility here is negligible. Were sharing threads between HTTP, HTTP/2 and web sockets now.;Add <method_name>;Might be useful to expose this bookkeeping to app developers;Similar;0.9023157358169556
Use <iden> in <file_name>  ;The utility here is negligible. Were sharing threads between HTTP, HTTP/2 and web sockets now.;Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Similar;0.8194610476493835
Use <iden> in <file_name>  ;The utility here is negligible. Were sharing threads between HTTP, HTTP/2 and web sockets now.;Expose internal APIs for pluggable file systems, Also migrate all of our tests to use the <method_name>  ;We arent yet ready to make <iden> a public type, but I dont mind making it _almost_ available via an internal API for those brave enough to try that, Its simpler.;Similar;0.5191944241523743
Use <iden> in <file_name>  ;The utility here is negligible. Were sharing threads between HTTP, HTTP/2 and web sockets now.;Change  <file_name>  to not implement java.net.ResponseCache;This marks some methods as  @deprecated and internal-only. Unfortunately we dont have a great mechanism to hide them from the documented <iden>.;Similar;0.5056520700454712
Use <iden> in <file_name>  ;The utility here is negligible. Were sharing threads between HTTP, HTTP/2 and web sockets now.;The implementation is built around one oversized method that runs top to bottom;I found this was easier to follow than the switch statement recommended by the <iden> standard;Similar;0.5027458071708679
Use <iden> in <file_name>  ;The utility here is negligible. Were sharing threads between HTTP, HTTP/2 and web sockets now.;Fix <iden> post retransmit in the new API  ;We dont buffer response bodies in the new API. But we should retransmit POST bodies when a request fails.;Similar;0.6004140973091125
Use <iden> in <file_name>  ;The utility here is negligible. Were sharing threads between HTTP, HTTP/2 and web sockets now.;Add a test for corner-case behavior;Im looking to make HttpURLConnectionImpl delegate to Job, and that means writing tests for all the weird things it does above HttpEngine.;Similar;0.5958459377288818
Use <iden> in <file_name>  ;The utility here is negligible. Were sharing threads between HTTP, HTTP/2 and web sockets now.;Add some pings to force happens-before in <iden> tests;Previously we were relying on accidents to get our tests to pass;Similar;0.531755805015564
Use <iden> in <file_name>  ;The utility here is negligible. Were sharing threads between HTTP, HTTP/2 and web sockets now.;Track <file_name> ownership  ;<file_name> ownership is somewhat racy: when an HttpURLConnection reads the last byte of a connection, its ownership is released and given to the <method_name>;Similar;0.8027901649475098
Use <iden> in <file_name>  ;The utility here is negligible. Were sharing threads between HTTP, HTTP/2 and web sockets now.;Move  <file_name>  pooling logic  ;"previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams; move  <file_name>  reuse to  <file_name>, with policy informed by  <method_name>  specifying what to do when the  <file_name>  becomes idle: pool, close or hold, so the  <file_name>  does what its told.";Similar;0.7947936058044434
Use <iden> in <file_name>  ;The utility here is negligible. Were sharing threads between HTTP, HTTP/2 and web sockets now.;Implement moving bytes between OkBuffers  ;This is more complicated than Id anticipated;Similar;0.661352276802063
Use <iden> in <file_name>  ;The utility here is negligible. Were sharing threads between HTTP, HTTP/2 and web sockets now.;Remove <iden> 2 warnings;Small docs fixes;Similar;0.5348817706108093
Use <iden> in <file_name>  ;The utility here is negligible. Were sharing threads between HTTP, HTTP/2 and web sockets now.;Fix checkstyle issues in new <iden> code;checkstyle issues;Similar;0.5757634043693542
Use <iden> in <file_name>  ;The utility here is negligible. Were sharing threads between HTTP, HTTP/2 and web sockets now.;Introduce a <file_name> interface between engine and connection.;This breaks the direct dependency from <file_name> to <method_name>;Similar;0.8631467819213867
Use <iden> in <file_name>  ;The utility here is negligible. Were sharing threads between HTTP, HTTP/2 and web sockets now.;Make  <file_name> less flaky;I was seeing flaky results in the debugger because pooled connections were being evicted as the test ran;Similar;0.5266789793968201
Use <iden> in <file_name>  ;The utility here is negligible. Were sharing threads between HTTP, HTTP/2 and web sockets now.;Update to the latest <method_name>;Includes everything thru 8842981cbcfe20eb4721c0a2c867fa9a18233062;Similar;0.6649898290634155
Use <iden> in <file_name>  ;The utility here is negligible. Were sharing threads between HTTP, HTTP/2 and web sockets now.;Be more careful around IOExceptions;my goal is to make it easier to differentiate between protocol-level problems (bogus frames) from transport-level problems (closed sockets and EOF streams);Similar;0.542896032333374
Use <iden> in <file_name>  ;The utility here is negligible. Were sharing threads between HTTP, HTTP/2 and web sockets now.;Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;Similar;0.5778083801269531
Use <iden> in <file_name>  ;The utility here is negligible. Were sharing threads between HTTP, HTTP/2 and web sockets now.;Move out of the <file_name> package;To promote the code into AOSP, well keep this package as-is and do the jarjar in <iden> instead;Similar;0.6648383140563965
Use <iden> in <file_name>  ;The utility here is negligible. Were sharing threads between HTTP, HTTP/2 and web sockets now.;Make the `<method_name>` return full working connections;Previously the returned connections required the caller to do extra work: setting up tunnels and performing an `<iden>` handshake. With this change, we make a complete working connection in `<method_name>`. This will make it easier to fix fallback when a single domain has multiple `<iden>` addresses that are not reachable. Also, this will make it easier to do SPDY through `<iden>` proxies.;Similar;0.6667568683624268
Use <iden> in <file_name>  ;The utility here is negligible. Were sharing threads between HTTP, HTTP/2 and web sockets now.;Add error-prone compiler and fix its found issues;error-prone, its found issues;Similar;0.5238471627235413
Use <iden> in <file_name>  ;The utility here is negligible. Were sharing threads between HTTP, HTTP/2 and web sockets now.;Remove old <iden> protocol method;old;Similar;0.6241742372512817
Use <iden> in <file_name>  ;The utility here is negligible. Were sharing threads between HTTP, HTTP/2 and web sockets now.;Expose <iden> directly on <method_name>  ;direct;Similar;0.8855987787246704
Use <iden> in <file_name>  ;The utility here is negligible. Were sharing threads between HTTP, HTTP/2 and web sockets now.;Use HTML entity for ampersand;to represent the ampersand symbol in HTML;Similar;0.8104650378227234
Use <iden> in <file_name>  ;The utility here is negligible. Were sharing threads between HTTP, HTTP/2 and web sockets now.;Add convenience overload for <iden>-backed <method_name>;convenience;Similar;0.7474852800369263
Use <iden> in <file_name>  ;The utility here is negligible. Were sharing threads between HTTP, HTTP/2 and web sockets now.;Use consistent camel casing of <iden>;consistent camel casing;Similar;0.5623312592506409
Use <iden> in <file_name>  ;The utility here is negligible. Were sharing threads between HTTP, HTTP/2 and web sockets now.;Transfer to/from <iden> directly from <iden>  ;<pr_link>;Similar;0.8208762407302856
Use <iden> in <file_name>  ;The utility here is negligible. Were sharing threads between HTTP, HTTP/2 and web sockets now.;add @override for subclass override method;subclass override method;Similar;0.7529849410057068
Use <iden> in <file_name>  ;The utility here is negligible. Were sharing threads between HTTP, HTTP/2 and web sockets now.;Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Similar;0.6029902696609497
Use <iden> in <file_name>  ;The utility here is negligible. Were sharing threads between HTTP, HTTP/2 and web sockets now.;Partially revert connection timeout behavior  ;The modification of the timeout behavior during connection caused problems;Similar;0.5263014435768127
Use <iden> in <file_name>  ;The utility here is negligible. Were sharing threads between HTTP, HTTP/2 and web sockets now.;The changes to <iden>s  <file_name> have been ported  ;Upstream commit of <iden> / <iden> fix, This does not include the introduction of PlatformTest, which will be difficult to write so it works everywhere;Similar;0.7018280029296875
Use <iden> in <file_name>  ;The utility here is negligible. Were sharing threads between HTTP, HTTP/2 and web sockets now.;Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Similar;0.8065530061721802
Use <iden> in <file_name>  ;The utility here is negligible. Were sharing threads between HTTP, HTTP/2 and web sockets now.;Return <file_name> to previous (e.g. KitKat) behavior;this change required to handle this <iden> scenario;Similar;0.7737368941307068
Use <iden> in <file_name>  ;The utility here is negligible. Were sharing threads between HTTP, HTTP/2 and web sockets now.;Document <file_name> throwing modes;To include the <pr_link> information;Similar;0.7520318031311035
Use <iden> in <file_name>  ;The utility here is negligible. Were sharing threads between HTTP, HTTP/2 and web sockets now.;Convert <file_name> to Kotlin;<pr_link>, <iden>, <file_name>;Similar;0.8694837093353271
Use <iden> in <file_name>  ;The utility here is negligible. Were sharing threads between HTTP, HTTP/2 and web sockets now.;Convert <file_name>, <file_name> to Kotlin  ;"to Kotlin

Decision: Rename <file_name> <version> to .kt (and others)  ";Similar;0.8628828525543213
Use <iden> in <file_name>  ;The utility here is negligible. Were sharing threads between HTTP, HTTP/2 and web sockets now.;Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Similar;0.6817571520805359
Use <iden> in <file_name>  ;The utility here is negligible. Were sharing threads between HTTP, HTTP/2 and web sockets now.;Just pass the <iden> and <iden> objects in directly;Dont summarize the request and response;Similar;0.685208797454834
Use <iden> in <file_name>  ;The utility here is negligible. Were sharing threads between HTTP, HTTP/2 and web sockets now.;Fix a race in <method_name> ( <pr_link> );We were assuming on a client failure the server wouldnt have any further events. But it will get a failure if we give it a moment. This was causing some test flakiness.;Similar;0.6166743040084839
Use <iden> in <file_name>  ;The utility here is negligible. Were sharing threads between HTTP, HTTP/2 and web sockets now.;Improve some Markdown;improve;Similar;0.5098281502723694
Use <iden> in <file_name>  ;The utility here is negligible. Were sharing threads between HTTP, HTTP/2 and web sockets now.;Refactor <file_name> by using <iden>;We can use <iden> instead of overriding <iden> abstract class;Similar;0.9606412649154663
Use <iden> in <file_name>  ;The utility here is negligible. Were sharing threads between HTTP, HTTP/2 and web sockets now.;Enable GitHub Security Scanning;To configure GitHub workflow for code security scanning;Similar;0.6153664588928223
Use <iden> in <file_name>  ;The utility here is negligible. Were sharing threads between HTTP, HTTP/2 and web sockets now.;load through bootstrap;-;Similar;0.6555506587028503
Use <iden> in <file_name>  ;The utility here is negligible. Were sharing threads between HTTP, HTTP/2 and web sockets now.;Fix bug where request body isnt sent when it should  ;request body isnt sent when it should;Similar;0.5406768321990967
Use <iden> in <file_name>  ;The utility here is negligible. Were sharing threads between HTTP, HTTP/2 and web sockets now.;Add support for following <iden> 307 temporary redirects  ;Fixes Android bug 41739;Similar;0.6541503071784973
Use <iden> in <file_name>  ;The utility here is negligible. Were sharing threads between HTTP, HTTP/2 and web sockets now.;Add wildcard hostnames support in <file_name>;support;Similar;0.7447266578674316
Use <iden> in <file_name>  ;The utility here is negligible. Were sharing threads between HTTP, HTTP/2 and web sockets now.;Fix correctness of WebSocketReader reserved flags test;reserved flags;Similar;0.5733286738395691
Adopt idiomatic <iden> in <file_name>;idiomatic;Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they cant be open. I think the motivation to make these non-final was pretty weak, and I dont mind breaking <iden> compatibility here.;Similar;0.8106222152709961
Adopt idiomatic <iden> in <file_name>;idiomatic;Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;Similar;0.6806347370147705
Adopt idiomatic <iden> in <file_name>;idiomatic;Include prerequisites in the releasing guide.;to provide necessary information for users;Similar;0.6373831629753113
Adopt idiomatic <iden> in <file_name>;idiomatic;Convert <file_name> to Kotlin;"to Kotlin

Decision: Rename <file_name> to .kt";Similar;0.8619725704193115
Adopt idiomatic <iden> in <file_name>;idiomatic;Introduce <method_name> ;This is the payoff that preceding changes have been working towards.;Similar;0.8970745205879211
Adopt idiomatic <iden> in <file_name>;idiomatic;Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.;Similar;0.8473001718521118
Adopt idiomatic <iden> in <file_name>;idiomatic;Rename <method_name> to <iden()>;I prefer signed;Similar;0.8943504095077515
Adopt idiomatic <iden> in <file_name>;idiomatic;Fixup <file_name> so that its worthy of production use.;This changes the default from the insecure 1024-bit <iden> to a secure 256-bit <iden> key. It adds a new option to use <iden> keys for interoperating with older clients.;Similar;0.7464141249656677
Adopt idiomatic <iden> in <file_name>;idiomatic;Support client authentication in <file_name>;client authentication;Similar;0.7165267467498779
Adopt idiomatic <iden> in <file_name>;idiomatic;Remove <iden>-mode <iden> cipher suites;This removes the following cipher suites as supported-by-default;Similar;0.6530652046203613
Adopt idiomatic <iden> in <file_name>;idiomatic;Fix Javadoc builds with the jsr305 dependency  ;Because multiple modules share a package we need to share the dependency on everything in package-info.java;Similar;0.6142237782478333
Adopt idiomatic <iden> in <file_name>;idiomatic;Make the  <file_name>  a little better.  <enter> <iden> threads by their URLs. Dont follow all fragments of the same <iden>;"For better organization; to prevent following all fragments of the same <iden>";Similar;0.6295235753059387
Adopt idiomatic <iden> in <file_name>;idiomatic;Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;Similar;0.7645864486694336
Adopt idiomatic <iden> in <file_name>;idiomatic;Update readme and changelog for <version>;<version>;Similar;0.800493597984314
Adopt idiomatic <iden> in <file_name>;idiomatic;New <file_name> class to normalize certificate chains  ;The goal of this is to get the root <iden> certificate into the certificate chain, so that it can be considered by the certificate pinner;Similar;0.7624589800834656
Adopt idiomatic <iden> in <file_name>;idiomatic;Fix some get prefixes on <file_name> and <method_name>;"-
None";Similar;0.7870061993598938
Adopt idiomatic <iden> in <file_name>;idiomatic;Write some new connection pool tests;These use the <iden> APIs. Theyre high-level so they wont break with the implementation rewrite.;Similar;0.5026426911354065
Adopt idiomatic <iden> in <file_name>;idiomatic;Add <method_name>;Might be useful to expose this bookkeeping to app developers;Similar;0.8924567103385925
Adopt idiomatic <iden> in <file_name>;idiomatic;Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Similar;0.8245652318000793
Adopt idiomatic <iden> in <file_name>;idiomatic;Drop our one remaining <iden> cipher suite;Tracking <iden> and Firefox, which have also dropped this cipher suite;Similar;0.5051158666610718
Adopt idiomatic <iden> in <file_name>;idiomatic;Expose internal APIs for pluggable file systems, Also migrate all of our tests to use the <method_name>  ;We arent yet ready to make <iden> a public type, but I dont mind making it _almost_ available via an internal API for those brave enough to try that, Its simpler.;Similar;0.6343954801559448
Adopt idiomatic <iden> in <file_name>;idiomatic;Change  <file_name>  to not implement java.net.ResponseCache;This marks some methods as  @deprecated and internal-only. Unfortunately we dont have a great mechanism to hide them from the documented <iden>.;Similar;0.5189101696014404
Adopt idiomatic <iden> in <file_name>;idiomatic;The implementation is built around one oversized method that runs top to bottom;I found this was easier to follow than the switch statement recommended by the <iden> standard;Similar;0.5116169452667236
Adopt idiomatic <iden> in <file_name>;idiomatic;Fix <iden> post retransmit in the new API  ;We dont buffer response bodies in the new API. But we should retransmit POST bodies when a request fails.;Similar;0.6894820928573608
Adopt idiomatic <iden> in <file_name>;idiomatic;Add a test for corner-case behavior;Im looking to make HttpURLConnectionImpl delegate to Job, and that means writing tests for all the weird things it does above HttpEngine.;Similar;0.6378671526908875
Adopt idiomatic <iden> in <file_name>;idiomatic;Add some pings to force happens-before in <iden> tests;Previously we were relying on accidents to get our tests to pass;Similar;0.603348970413208
Adopt idiomatic <iden> in <file_name>;idiomatic;Track <file_name> ownership  ;<file_name> ownership is somewhat racy: when an HttpURLConnection reads the last byte of a connection, its ownership is released and given to the <method_name>;Similar;0.7326574325561523
Adopt idiomatic <iden> in <file_name>;idiomatic;Move  <file_name>  pooling logic  ;"previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams; move  <file_name>  reuse to  <file_name>, with policy informed by  <method_name>  specifying what to do when the  <file_name>  becomes idle: pool, close or hold, so the  <file_name>  does what its told.";Similar;0.8179054260253906
Adopt idiomatic <iden> in <file_name>;idiomatic;Implement moving bytes between OkBuffers  ;This is more complicated than Id anticipated;Similar;0.7044318318367004
Adopt idiomatic <iden> in <file_name>;idiomatic;Remove <iden> 2 warnings;Small docs fixes;Similar;0.5812781453132629
Adopt idiomatic <iden> in <file_name>;idiomatic;"Define async APIs and switch <file_name> to use <iden> directly. I think this is the best route going forward; and eventually we could invert this relationship to have <iden> depending on <file_name> directly rather than vice versa.";Using <iden> directly introduces some duplicated code with <iden>. It also breaks the <file_name> cache.;Similar;0.5543948411941528
Adopt idiomatic <iden> in <file_name>;idiomatic;Fix checkstyle issues in new <iden> code;checkstyle issues;Similar;0.6464613080024719
Adopt idiomatic <iden> in <file_name>;idiomatic;Introduce a <file_name> interface between engine and connection.;This breaks the direct dependency from <file_name> to <method_name>;Similar;0.8642762303352356
Adopt idiomatic <iden> in <file_name>;idiomatic;Make  <file_name> less flaky;I was seeing flaky results in the debugger because pooled connections were being evicted as the test ran;Similar;0.5536887645721436
Adopt idiomatic <iden> in <file_name>;idiomatic;Update to the latest <method_name>;Includes everything thru 8842981cbcfe20eb4721c0a2c867fa9a18233062;Similar;0.7275660037994385
Adopt idiomatic <iden> in <file_name>;idiomatic;Be more careful around IOExceptions;my goal is to make it easier to differentiate between protocol-level problems (bogus frames) from transport-level problems (closed sockets and EOF streams);Similar;0.5776175856590271
Adopt idiomatic <iden> in <file_name>;idiomatic;Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;Similar;0.635942816734314
Adopt idiomatic <iden> in <file_name>;idiomatic;Move out of the <file_name> package;To promote the code into AOSP, well keep this package as-is and do the jarjar in <iden> instead;Similar;0.702051043510437
Adopt idiomatic <iden> in <file_name>;idiomatic;Make the `<method_name>` return full working connections;Previously the returned connections required the caller to do extra work: setting up tunnels and performing an `<iden>` handshake. With this change, we make a complete working connection in `<method_name>`. This will make it easier to fix fallback when a single domain has multiple `<iden>` addresses that are not reachable. Also, this will make it easier to do SPDY through `<iden>` proxies.;Similar;0.7299888134002686
Adopt idiomatic <iden> in <file_name>;idiomatic;Add error-prone compiler and fix its found issues;error-prone, its found issues;Similar;0.5546079874038696
Adopt idiomatic <iden> in <file_name>;idiomatic;Remove old <iden> protocol method;old;Similar;0.6456148624420166
Adopt idiomatic <iden> in <file_name>;idiomatic;Expose <iden> directly on <method_name>  ;direct;Similar;0.879074215888977
Adopt idiomatic <iden> in <file_name>;idiomatic;Use HTML entity for ampersand;to represent the ampersand symbol in HTML;Similar;0.7820678949356079
Adopt idiomatic <iden> in <file_name>;idiomatic;Add convenience overload for <iden>-backed <method_name>;convenience;Similar;0.8201199173927307
Adopt idiomatic <iden> in <file_name>;idiomatic;Use consistent camel casing of <iden>;consistent camel casing;Similar;0.5963371396064758
Adopt idiomatic <iden> in <file_name>;idiomatic;Update website to the latest design  ;latest design;Similar;0.5550031661987305
Adopt idiomatic <iden> in <file_name>;idiomatic;Transfer to/from <iden> directly from <iden>  ;<pr_link>;Similar;0.7969492077827454
Adopt idiomatic <iden> in <file_name>;idiomatic;add @override for subclass override method;subclass override method;Similar;0.7527368068695068
Adopt idiomatic <iden> in <file_name>;idiomatic;Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Similar;0.6529627442359924
Adopt idiomatic <iden> in <file_name>;idiomatic;Partially revert connection timeout behavior  ;The modification of the timeout behavior during connection caused problems;Similar;0.5736554861068726
Adopt idiomatic <iden> in <file_name>;idiomatic;The changes to <iden>s  <file_name> have been ported  ;Upstream commit of <iden> / <iden> fix, This does not include the introduction of PlatformTest, which will be difficult to write so it works everywhere;Similar;0.784250795841217
Adopt idiomatic <iden> in <file_name>;idiomatic;Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Similar;0.8627616167068481
Adopt idiomatic <iden> in <file_name>;idiomatic;Return <file_name> to previous (e.g. KitKat) behavior;this change required to handle this <iden> scenario;Similar;0.793776273727417
Adopt idiomatic <iden> in <file_name>;idiomatic;Document <file_name> throwing modes;To include the <pr_link> information;Similar;0.7367240786552429
Adopt idiomatic <iden> in <file_name>;idiomatic;Convert <file_name> to Kotlin;<pr_link>, <iden>, <file_name>;Similar;0.8619725704193115
Adopt idiomatic <iden> in <file_name>;idiomatic;Convert <file_name>, <file_name> to Kotlin  ;"to Kotlin

Decision: Rename <file_name> <version> to .kt (and others)  ";Similar;0.8723697066307068
Adopt idiomatic <iden> in <file_name>;idiomatic;Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Similar;0.6893565654754639
Adopt idiomatic <iden> in <file_name>;idiomatic;Just pass the <iden> and <iden> objects in directly;Dont summarize the request and response;Similar;0.7219672203063965
Adopt idiomatic <iden> in <file_name>;idiomatic;Fix a race in <method_name> ( <pr_link> );We were assuming on a client failure the server wouldnt have any further events. But it will get a failure if we give it a moment. This was causing some test flakiness.;Similar;0.6527982950210571
Adopt idiomatic <iden> in <file_name>;idiomatic;Improve some Markdown;improve;Similar;0.577656090259552
Adopt idiomatic <iden> in <file_name>;idiomatic;Refactor <file_name> by using <iden>;We can use <iden> instead of overriding <iden> abstract class;Similar;0.9105337858200073
Adopt idiomatic <iden> in <file_name>;idiomatic;Enable GitHub Security Scanning;To configure GitHub workflow for code security scanning;Similar;0.5947686433792114
Adopt idiomatic <iden> in <file_name>;idiomatic;load through bootstrap;-;Similar;0.6412899494171143
Adopt idiomatic <iden> in <file_name>;idiomatic;Fix bug where request body isnt sent when it should  ;request body isnt sent when it should;Similar;0.5445613265037537
Adopt idiomatic <iden> in <file_name>;idiomatic;Add support for following <iden> 307 temporary redirects  ;Fixes Android bug 41739;Similar;0.6892942190170288
Adopt idiomatic <iden> in <file_name>;idiomatic;Add wildcard hostnames support in <file_name>;support;Similar;0.777152419090271
Adopt idiomatic <iden> in <file_name>;idiomatic;Fix correctness of WebSocketReader reserved flags test;reserved flags;Similar;0.6052127480506897
Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they cant be open. I think the motivation to make these non-final was pretty weak, and I dont mind breaking <iden> compatibility here.;Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;Similar;0.6123111248016357
Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they cant be open. I think the motivation to make these non-final was pretty weak, and I dont mind breaking <iden> compatibility here.;Include prerequisites in the releasing guide.;to provide necessary information for users;Similar;0.6453575491905212
Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they cant be open. I think the motivation to make these non-final was pretty weak, and I dont mind breaking <iden> compatibility here.;Convert <file_name> to Kotlin;"to Kotlin

Decision: Rename <file_name> to .kt";Similar;0.7466835975646973
Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they cant be open. I think the motivation to make these non-final was pretty weak, and I dont mind breaking <iden> compatibility here.;Introduce <method_name> ;This is the payoff that preceding changes have been working towards.;Similar;0.7914758920669556
Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they cant be open. I think the motivation to make these non-final was pretty weak, and I dont mind breaking <iden> compatibility here.;Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.;Similar;0.7483641505241394
Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they cant be open. I think the motivation to make these non-final was pretty weak, and I dont mind breaking <iden> compatibility here.;Rename <method_name> to <iden()>;I prefer signed;Similar;0.755842924118042
Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they cant be open. I think the motivation to make these non-final was pretty weak, and I dont mind breaking <iden> compatibility here.;Fixup <file_name> so that its worthy of production use.;This changes the default from the insecure 1024-bit <iden> to a secure 256-bit <iden> key. It adds a new option to use <iden> keys for interoperating with older clients.;Similar;0.6731838583946228
Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they cant be open. I think the motivation to make these non-final was pretty weak, and I dont mind breaking <iden> compatibility here.;Support client authentication in <file_name>;client authentication;Similar;0.6351523399353027
Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they cant be open. I think the motivation to make these non-final was pretty weak, and I dont mind breaking <iden> compatibility here.;Remove <iden>-mode <iden> cipher suites;This removes the following cipher suites as supported-by-default;Similar;0.6481122970581055
Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they cant be open. I think the motivation to make these non-final was pretty weak, and I dont mind breaking <iden> compatibility here.;Fix Javadoc builds with the jsr305 dependency  ;Because multiple modules share a package we need to share the dependency on everything in package-info.java;Similar;0.5197343826293945
Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they cant be open. I think the motivation to make these non-final was pretty weak, and I dont mind breaking <iden> compatibility here.;Make the  <file_name>  a little better.  <enter> <iden> threads by their URLs. Dont follow all fragments of the same <iden>;"For better organization; to prevent following all fragments of the same <iden>";Similar;0.5793706178665161
Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they cant be open. I think the motivation to make these non-final was pretty weak, and I dont mind breaking <iden> compatibility here.;Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;Similar;0.7520976066589355
Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they cant be open. I think the motivation to make these non-final was pretty weak, and I dont mind breaking <iden> compatibility here.;Update readme and changelog for <version>;<version>;Similar;0.7273964881896973
Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they cant be open. I think the motivation to make these non-final was pretty weak, and I dont mind breaking <iden> compatibility here.;New <file_name> class to normalize certificate chains  ;The goal of this is to get the root <iden> certificate into the certificate chain, so that it can be considered by the certificate pinner;Similar;0.7118942141532898
Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they cant be open. I think the motivation to make these non-final was pretty weak, and I dont mind breaking <iden> compatibility here.;Fix some get prefixes on <file_name> and <method_name>;"-
None";Similar;0.6991225481033325
Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they cant be open. I think the motivation to make these non-final was pretty weak, and I dont mind breaking <iden> compatibility here.;Add <method_name>;Might be useful to expose this bookkeeping to app developers;Similar;0.7722011208534241
Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they cant be open. I think the motivation to make these non-final was pretty weak, and I dont mind breaking <iden> compatibility here.;Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Similar;0.7371112108230591
Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they cant be open. I think the motivation to make these non-final was pretty weak, and I dont mind breaking <iden> compatibility here.;Drop our one remaining <iden> cipher suite;Tracking <iden> and Firefox, which have also dropped this cipher suite;Similar;0.6106890439987183
Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they cant be open. I think the motivation to make these non-final was pretty weak, and I dont mind breaking <iden> compatibility here.;Expose internal APIs for pluggable file systems, Also migrate all of our tests to use the <method_name>  ;We arent yet ready to make <iden> a public type, but I dont mind making it _almost_ available via an internal API for those brave enough to try that, Its simpler.;Similar;0.5565619468688965
Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they cant be open. I think the motivation to make these non-final was pretty weak, and I dont mind breaking <iden> compatibility here.;Change  <file_name>  to not implement java.net.ResponseCache;This marks some methods as  @deprecated and internal-only. Unfortunately we dont have a great mechanism to hide them from the documented <iden>.;Similar;0.510516881942749
Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they cant be open. I think the motivation to make these non-final was pretty weak, and I dont mind breaking <iden> compatibility here.;The implementation is built around one oversized method that runs top to bottom;I found this was easier to follow than the switch statement recommended by the <iden> standard;Similar;0.5528966784477234
Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they cant be open. I think the motivation to make these non-final was pretty weak, and I dont mind breaking <iden> compatibility here.;Fix <iden> post retransmit in the new API  ;We dont buffer response bodies in the new API. But we should retransmit POST bodies when a request fails.;Similar;0.6391735076904297
Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they cant be open. I think the motivation to make these non-final was pretty weak, and I dont mind breaking <iden> compatibility here.;Add a test for corner-case behavior;Im looking to make HttpURLConnectionImpl delegate to Job, and that means writing tests for all the weird things it does above HttpEngine.;Similar;0.5438007712364197
Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they cant be open. I think the motivation to make these non-final was pretty weak, and I dont mind breaking <iden> compatibility here.;Add some pings to force happens-before in <iden> tests;Previously we were relying on accidents to get our tests to pass;Similar;0.5750865340232849
Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they cant be open. I think the motivation to make these non-final was pretty weak, and I dont mind breaking <iden> compatibility here.;Track <file_name> ownership  ;<file_name> ownership is somewhat racy: when an HttpURLConnection reads the last byte of a connection, its ownership is released and given to the <method_name>;Similar;0.7066015005111694
Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they cant be open. I think the motivation to make these non-final was pretty weak, and I dont mind breaking <iden> compatibility here.;Move  <file_name>  pooling logic  ;"previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams; move  <file_name>  reuse to  <file_name>, with policy informed by  <method_name>  specifying what to do when the  <file_name>  becomes idle: pool, close or hold, so the  <file_name>  does what its told.";Similar;0.7474958896636963
Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they cant be open. I think the motivation to make these non-final was pretty weak, and I dont mind breaking <iden> compatibility here.;Implement moving bytes between OkBuffers  ;This is more complicated than Id anticipated;Similar;0.5871272683143616
Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they cant be open. I think the motivation to make these non-final was pretty weak, and I dont mind breaking <iden> compatibility here.;Dont attempt <iden> modes we know will fail.;we know will fail;Similar;0.531646192073822
Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they cant be open. I think the motivation to make these non-final was pretty weak, and I dont mind breaking <iden> compatibility here.;Remove <iden> 2 warnings;Small docs fixes;Similar;0.5523431301116943
Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they cant be open. I think the motivation to make these non-final was pretty weak, and I dont mind breaking <iden> compatibility here.;"Define async APIs and switch <file_name> to use <iden> directly. I think this is the best route going forward; and eventually we could invert this relationship to have <iden> depending on <file_name> directly rather than vice versa.";Using <iden> directly introduces some duplicated code with <iden>. It also breaks the <file_name> cache.;Similar;0.536515474319458
Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they cant be open. I think the motivation to make these non-final was pretty weak, and I dont mind breaking <iden> compatibility here.;Fix checkstyle issues in new <iden> code;checkstyle issues;Similar;0.5513790845870972
Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they cant be open. I think the motivation to make these non-final was pretty weak, and I dont mind breaking <iden> compatibility here.;Kill <file_name> in the process  ;Teach <file_name> <iden>;Similar;0.5717656016349792
Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they cant be open. I think the motivation to make these non-final was pretty weak, and I dont mind breaking <iden> compatibility here.;Introduce a <file_name> interface between engine and connection.;This breaks the direct dependency from <file_name> to <method_name>;Similar;0.7411215305328369
Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they cant be open. I think the motivation to make these non-final was pretty weak, and I dont mind breaking <iden> compatibility here.;Make  <file_name> less flaky;I was seeing flaky results in the debugger because pooled connections were being evicted as the test ran;Similar;0.5463314056396484
Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they cant be open. I think the motivation to make these non-final was pretty weak, and I dont mind breaking <iden> compatibility here.;Update to the latest <method_name>;Includes everything thru 8842981cbcfe20eb4721c0a2c867fa9a18233062;Similar;0.7572587728500366
Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they cant be open. I think the motivation to make these non-final was pretty weak, and I dont mind breaking <iden> compatibility here.;Be more careful around IOExceptions;my goal is to make it easier to differentiate between protocol-level problems (bogus frames) from transport-level problems (closed sockets and EOF streams);Similar;0.5559905767440796
Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they cant be open. I think the motivation to make these non-final was pretty weak, and I dont mind breaking <iden> compatibility here.;Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;Similar;0.6318758726119995
Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they cant be open. I think the motivation to make these non-final was pretty weak, and I dont mind breaking <iden> compatibility here.;Move out of the <file_name> package;To promote the code into AOSP, well keep this package as-is and do the jarjar in <iden> instead;Similar;0.673651933670044
Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they cant be open. I think the motivation to make these non-final was pretty weak, and I dont mind breaking <iden> compatibility here.;Make the `<method_name>` return full working connections;Previously the returned connections required the caller to do extra work: setting up tunnels and performing an `<iden>` handshake. With this change, we make a complete working connection in `<method_name>`. This will make it easier to fix fallback when a single domain has multiple `<iden>` addresses that are not reachable. Also, this will make it easier to do SPDY through `<iden>` proxies.;Similar;0.7215532064437866
Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they cant be open. I think the motivation to make these non-final was pretty weak, and I dont mind breaking <iden> compatibility here.;Add error-prone compiler and fix its found issues;error-prone, its found issues;Similar;0.5127951502799988
Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they cant be open. I think the motivation to make these non-final was pretty weak, and I dont mind breaking <iden> compatibility here.;Remove old <iden> protocol method;old;Similar;0.6881992220878601
Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they cant be open. I think the motivation to make these non-final was pretty weak, and I dont mind breaking <iden> compatibility here.;Expose <iden> directly on <method_name>  ;direct;Similar;0.7607997059822083
Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they cant be open. I think the motivation to make these non-final was pretty weak, and I dont mind breaking <iden> compatibility here.;Use HTML entity for ampersand;to represent the ampersand symbol in HTML;Similar;0.7113099098205566
Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they cant be open. I think the motivation to make these non-final was pretty weak, and I dont mind breaking <iden> compatibility here.;Add convenience overload for <iden>-backed <method_name>;convenience;Similar;0.6546418070793152
Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they cant be open. I think the motivation to make these non-final was pretty weak, and I dont mind breaking <iden> compatibility here.;Drop unused dependencies;unused;Similar;0.5069652795791626
Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they cant be open. I think the motivation to make these non-final was pretty weak, and I dont mind breaking <iden> compatibility here.;Update website to the latest design  ;latest design;Similar;0.5827230215072632
Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they cant be open. I think the motivation to make these non-final was pretty weak, and I dont mind breaking <iden> compatibility here.;Transfer to/from <iden> directly from <iden>  ;<pr_link>;Similar;0.6836488842964172
Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they cant be open. I think the motivation to make these non-final was pretty weak, and I dont mind breaking <iden> compatibility here.;add @override for subclass override method;subclass override method;Similar;0.6151334643363953
Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they cant be open. I think the motivation to make these non-final was pretty weak, and I dont mind breaking <iden> compatibility here.;Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Similar;0.6154120564460754
Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they cant be open. I think the motivation to make these non-final was pretty weak, and I dont mind breaking <iden> compatibility here.;Partially revert connection timeout behavior  ;The modification of the timeout behavior during connection caused problems;Similar;0.5832343697547913
Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they cant be open. I think the motivation to make these non-final was pretty weak, and I dont mind breaking <iden> compatibility here.;The changes to <iden>s  <file_name> have been ported  ;Upstream commit of <iden> / <iden> fix, This does not include the introduction of PlatformTest, which will be difficult to write so it works everywhere;Similar;0.6710377335548401
Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they cant be open. I think the motivation to make these non-final was pretty weak, and I dont mind breaking <iden> compatibility here.;Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Similar;0.776892900466919
Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they cant be open. I think the motivation to make these non-final was pretty weak, and I dont mind breaking <iden> compatibility here.;Return <file_name> to previous (e.g. KitKat) behavior;this change required to handle this <iden> scenario;Similar;0.7360684871673584
Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they cant be open. I think the motivation to make these non-final was pretty weak, and I dont mind breaking <iden> compatibility here.;Document <file_name> throwing modes;To include the <pr_link> information;Similar;0.6273680925369263
Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they cant be open. I think the motivation to make these non-final was pretty weak, and I dont mind breaking <iden> compatibility here.;Convert <file_name> to Kotlin;<pr_link>, <iden>, <file_name>;Similar;0.7466835975646973
Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they cant be open. I think the motivation to make these non-final was pretty weak, and I dont mind breaking <iden> compatibility here.;Convert <file_name>, <file_name> to Kotlin  ;"to Kotlin

Decision: Rename <file_name> <version> to .kt (and others)  ";Similar;0.760813295841217
Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they cant be open. I think the motivation to make these non-final was pretty weak, and I dont mind breaking <iden> compatibility here.;Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Similar;0.604610025882721
Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they cant be open. I think the motivation to make these non-final was pretty weak, and I dont mind breaking <iden> compatibility here.;Just pass the <iden> and <iden> objects in directly;Dont summarize the request and response;Similar;0.6907656192779541
Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they cant be open. I think the motivation to make these non-final was pretty weak, and I dont mind breaking <iden> compatibility here.;Fix a race in <method_name> ( <pr_link> );We were assuming on a client failure the server wouldnt have any further events. But it will get a failure if we give it a moment. This was causing some test flakiness.;Similar;0.628374457359314
Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they cant be open. I think the motivation to make these non-final was pretty weak, and I dont mind breaking <iden> compatibility here.;Improve some Markdown;improve;Similar;0.5184450149536133
Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they cant be open. I think the motivation to make these non-final was pretty weak, and I dont mind breaking <iden> compatibility here.;Refactor <file_name> by using <iden>;We can use <iden> instead of overriding <iden> abstract class;Similar;0.7701671719551086
Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they cant be open. I think the motivation to make these non-final was pretty weak, and I dont mind breaking <iden> compatibility here.;Enable GitHub Security Scanning;To configure GitHub workflow for code security scanning;Similar;0.5224909782409668
Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they cant be open. I think the motivation to make these non-final was pretty weak, and I dont mind breaking <iden> compatibility here.;load through bootstrap;-;Similar;0.6309012174606323
Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they cant be open. I think the motivation to make these non-final was pretty weak, and I dont mind breaking <iden> compatibility here.;Fix bug where request body isnt sent when it should  ;request body isnt sent when it should;Similar;0.5294625163078308
Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they cant be open. I think the motivation to make these non-final was pretty weak, and I dont mind breaking <iden> compatibility here.;Add support for following <iden> 307 temporary redirects  ;Fixes Android bug 41739;Similar;0.6839711666107178
Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they cant be open. I think the motivation to make these non-final was pretty weak, and I dont mind breaking <iden> compatibility here.;Add wildcard hostnames support in <file_name>;support;Similar;0.5783706307411194
Make <file_name> accessors final  ;If we want these to be vals to Kotlin, they cant be open. I think the motivation to make these non-final was pretty weak, and I dont mind breaking <iden> compatibility here.;Fix correctness of WebSocketReader reserved flags test;reserved flags;Similar;0.5783458352088928
Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;Include prerequisites in the releasing guide.;to provide necessary information for users;Similar;0.5319391489028931
Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;Convert <file_name> to Kotlin;"to Kotlin

Decision: Rename <file_name> to .kt";Similar;0.7022145986557007
Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;Introduce <method_name> ;This is the payoff that preceding changes have been working towards.;Similar;0.6360681056976318
Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.;Similar;0.6525357365608215
Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;Fix some maven problems that are blocking the <version> release;blocking the <version> release;Similar;0.6867812871932983
Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;Rename <method_name> to <iden()>;I prefer signed;Similar;0.6566321849822998
Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;Fixup <file_name> so that its worthy of production use.;This changes the default from the insecure 1024-bit <iden> to a secure 256-bit <iden> key. It adds a new option to use <iden> keys for interoperating with older clients.;Similar;0.6704766750335693
Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;Support client authentication in <file_name>;client authentication;Similar;0.6638697385787964
Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;Remove <iden>-mode <iden> cipher suites;This removes the following cipher suites as supported-by-default;Similar;0.6707510352134705
Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;Fix Javadoc builds with the jsr305 dependency  ;Because multiple modules share a package we need to share the dependency on everything in package-info.java;Similar;0.6472999453544617
Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;Make the  <file_name>  a little better.  <enter> <iden> threads by their URLs. Dont follow all fragments of the same <iden>;"For better organization; to prevent following all fragments of the same <iden>";Similar;0.5965227484703064
Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;Similar;0.7189369201660156
Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;Fix tests to share a common <iden>. Also fix the memory limit, which may prevent Travis from failing our tests.;share a common <iden>, memory limit, prevent Travis from failing our tests;Similar;0.6421675086021423
Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;Update readme and changelog for <version>;<version>;Similar;0.735964834690094
Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;New <file_name> class to normalize certificate chains  ;The goal of this is to get the root <iden> certificate into the certificate chain, so that it can be considered by the certificate pinner;Similar;0.6433930993080139
Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;Fix some get prefixes on <file_name> and <method_name>;"-
None";Similar;0.7613746523857117
Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;Write some new connection pool tests;These use the <iden> APIs. Theyre high-level so they wont break with the implementation rewrite.;Similar;0.6209850311279297
Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;Add <method_name>;Might be useful to expose this bookkeeping to app developers;Similar;0.6288280487060547
Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Similar;0.7827518582344055
Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;Drop our one remaining <iden> cipher suite;Tracking <iden> and Firefox, which have also dropped this cipher suite;Similar;0.5413424968719482
Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;Expose internal APIs for pluggable file systems, Also migrate all of our tests to use the <method_name>  ;We arent yet ready to make <iden> a public type, but I dont mind making it _almost_ available via an internal API for those brave enough to try that, Its simpler.;Similar;0.614334225654602
Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;Fix <iden> post retransmit in the new API  ;We dont buffer response bodies in the new API. But we should retransmit POST bodies when a request fails.;Similar;0.6965671181678772
Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;Add a test for corner-case behavior;Im looking to make HttpURLConnectionImpl delegate to Job, and that means writing tests for all the weird things it does above HttpEngine.;Similar;0.6716494560241699
Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;Add some pings to force happens-before in <iden> tests;Previously we were relying on accidents to get our tests to pass;Similar;0.656530499458313
Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;Track <file_name> ownership  ;<file_name> ownership is somewhat racy: when an HttpURLConnection reads the last byte of a connection, its ownership is released and given to the <method_name>;Similar;0.5055994987487793
Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;Move  <file_name>  pooling logic  ;"previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams; move  <file_name>  reuse to  <file_name>, with policy informed by  <method_name>  specifying what to do when the  <file_name>  becomes idle: pool, close or hold, so the  <file_name>  does what its told.";Similar;0.6925395727157593
Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;Implement moving bytes between OkBuffers  ;This is more complicated than Id anticipated;Similar;0.7391135096549988
Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;Remove <iden> 2 warnings;Small docs fixes;Similar;0.5281464457511902
Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;"Define async APIs and switch <file_name> to use <iden> directly. I think this is the best route going forward; and eventually we could invert this relationship to have <iden> depending on <file_name> directly rather than vice versa.";Using <iden> directly introduces some duplicated code with <iden>. It also breaks the <file_name> cache.;Similar;0.5088295340538025
Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;Fix checkstyle issues in new <iden> code;checkstyle issues;Similar;0.7373157143592834
Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;Kill <file_name> in the process  ;Teach <file_name> <iden>;Similar;0.5536896586418152
Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;Introduce a <file_name> interface between engine and connection.;This breaks the direct dependency from <file_name> to <method_name>;Similar;0.7141129970550537
Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;Update to the latest <method_name>;Includes everything thru 8842981cbcfe20eb4721c0a2c867fa9a18233062;Similar;0.5525317788124084
Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;Similar;0.735112190246582
Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;Move out of the <file_name> package;To promote the code into AOSP, well keep this package as-is and do the jarjar in <iden> instead;Similar;0.6276890635490417
Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;Make the `<method_name>` return full working connections;Previously the returned connections required the caller to do extra work: setting up tunnels and performing an `<iden>` handshake. With this change, we make a complete working connection in `<method_name>`. This will make it easier to fix fallback when a single domain has multiple `<iden>` addresses that are not reachable. Also, this will make it easier to do SPDY through `<iden>` proxies.;Similar;0.6069301962852478
Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;Fix <iden> which was being computed incorrectly;<enter> We were only returning true once we were already in a tunnel. This was bogus. In theory a <iden> tunnel sending extra data could be corrupted due to this bug.;Similar;0.6134738922119141
Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;Add error-prone compiler and fix its found issues;error-prone, its found issues;Similar;0.8022259473800659
Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;Remove old <iden> protocol method;old;Similar;0.6092793941497803
Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;Expose <iden> directly on <method_name>  ;direct;Similar;0.5994580984115601
Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;Use HTML entity for ampersand;to represent the ampersand symbol in HTML;Similar;0.6560683250427246
Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;Add convenience overload for <iden>-backed <method_name>;convenience;Similar;0.6589483618736267
Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;Drop unused dependencies;unused;Similar;0.5151323080062866
Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;Update website to the latest design  ;latest design;Similar;0.5136626362800598
Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;Transfer to/from <iden> directly from <iden>  ;<pr_link>;Similar;0.5921267867088318
Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;add @override for subclass override method;subclass override method;Similar;0.6544758677482605
Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Similar;0.6684218645095825
Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;Partially revert connection timeout behavior  ;The modification of the timeout behavior during connection caused problems;Similar;0.6208977699279785
Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;This change logs the exception but prevent it from propagating out of the top of the call stack.;This decreases overall flakiness.;Similar;0.522504985332489
Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;The changes to <iden>s  <file_name> have been ported  ;Upstream commit of <iden> / <iden> fix, This does not include the introduction of PlatformTest, which will be difficult to write so it works everywhere;Similar;0.7132526636123657
Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Similar;0.7219765186309814
Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;Return <file_name> to previous (e.g. KitKat) behavior;this change required to handle this <iden> scenario;Similar;0.6576437950134277
Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;Document <file_name> throwing modes;To include the <pr_link> information;Similar;0.598590612411499
Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;Convert <file_name> to Kotlin;<pr_link>, <iden>, <file_name>;Similar;0.7022145986557007
Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;Convert <file_name>, <file_name> to Kotlin  ;"to Kotlin

Decision: Rename <file_name> <version> to .kt (and others)  ";Similar;0.6970734000205994
Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Similar;0.7407706379890442
Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;Fail HTTP/2 connections if the pong is not received;This removes the abstraction from our http2 package;Similar;0.5295908451080322
Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;Just pass the <iden> and <iden> objects in directly;Dont summarize the request and response;Similar;0.5145244002342224
Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;Fix a race in <method_name> ( <pr_link> );We were assuming on a client failure the server wouldnt have any further events. But it will get a failure if we give it a moment. This was causing some test flakiness.;Similar;0.6891570687294006
Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;Improve some Markdown;improve;Similar;0.5892981290817261
Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;Refactor <file_name> by using <iden>;We can use <iden> instead of overriding <iden> abstract class;Similar;0.6980341672897339
Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;Enable GitHub Security Scanning;To configure GitHub workflow for code security scanning;Similar;0.6012083888053894
Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;load through bootstrap;-;Similar;0.6161447763442993
Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;Fix bug where request body isnt sent when it should  ;request body isnt sent when it should;Similar;0.6974954605102539
Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;Add support for following <iden> 307 temporary redirects  ;Fixes Android bug 41739;Similar;0.6162758469581604
Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;Add wildcard hostnames support in <file_name>;support;Similar;0.627345085144043
Fix a regression in combining cache headers;This was introduced with our migration to Kotlin. Iterating over the indices of the header names doesnt work because header names are not distinct.;Fix correctness of WebSocketReader reserved flags test;reserved flags;Similar;0.7027179598808289
Include prerequisites in the releasing guide.;to provide necessary information for users;Convert <file_name> to Kotlin;"to Kotlin

Decision: Rename <file_name> to .kt";Similar;0.5903992652893066
Include prerequisites in the releasing guide.;to provide necessary information for users;Introduce <method_name> ;This is the payoff that preceding changes have been working towards.;Similar;0.642125129699707
Include prerequisites in the releasing guide.;to provide necessary information for users;Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.;Similar;0.6997908353805542
Include prerequisites in the releasing guide.;to provide necessary information for users;Fix some maven problems that are blocking the <version> release;blocking the <version> release;Similar;0.5646631717681885
Include prerequisites in the releasing guide.;to provide necessary information for users;Rename <method_name> to <iden()>;I prefer signed;Similar;0.5710128545761108
Include prerequisites in the releasing guide.;to provide necessary information for users;Fixup <file_name> so that its worthy of production use.;This changes the default from the insecure 1024-bit <iden> to a secure 256-bit <iden> key. It adds a new option to use <iden> keys for interoperating with older clients.;Similar;0.6189693212509155
Include prerequisites in the releasing guide.;to provide necessary information for users;Support client authentication in <file_name>;client authentication;Similar;0.5956208109855652
Include prerequisites in the releasing guide.;to provide necessary information for users;Fix Javadoc builds with the jsr305 dependency  ;Because multiple modules share a package we need to share the dependency on everything in package-info.java;Similar;0.5386931896209717
Include prerequisites in the releasing guide.;to provide necessary information for users;Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;Similar;0.5796018242835999
Include prerequisites in the releasing guide.;to provide necessary information for users;Update readme and changelog for <version>;<version>;Similar;0.6734254956245422
Include prerequisites in the releasing guide.;to provide necessary information for users;New <file_name> class to normalize certificate chains  ;The goal of this is to get the root <iden> certificate into the certificate chain, so that it can be considered by the certificate pinner;Similar;0.6315028667449951
Include prerequisites in the releasing guide.;to provide necessary information for users;Fix some get prefixes on <file_name> and <method_name>;"-
None";Similar;0.6012988686561584
Include prerequisites in the releasing guide.;to provide necessary information for users;Write some new connection pool tests;These use the <iden> APIs. Theyre high-level so they wont break with the implementation rewrite.;Similar;0.604899525642395
Include prerequisites in the releasing guide.;to provide necessary information for users;Add <method_name>;Might be useful to expose this bookkeeping to app developers;Similar;0.6212892532348633
Include prerequisites in the releasing guide.;to provide necessary information for users;Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Similar;0.5921227931976318
Include prerequisites in the releasing guide.;to provide necessary information for users;Fix <iden> post retransmit in the new API  ;We dont buffer response bodies in the new API. But we should retransmit POST bodies when a request fails.;Similar;0.6373878717422485
Include prerequisites in the releasing guide.;to provide necessary information for users;Add a test for corner-case behavior;Im looking to make HttpURLConnectionImpl delegate to Job, and that means writing tests for all the weird things it does above HttpEngine.;Similar;0.6876981854438782
Include prerequisites in the releasing guide.;to provide necessary information for users;Add some pings to force happens-before in <iden> tests;Previously we were relying on accidents to get our tests to pass;Similar;0.6148844361305237
Include prerequisites in the releasing guide.;to provide necessary information for users;Track <file_name> ownership  ;<file_name> ownership is somewhat racy: when an HttpURLConnection reads the last byte of a connection, its ownership is released and given to the <method_name>;Similar;0.6063749194145203
Include prerequisites in the releasing guide.;to provide necessary information for users;Move  <file_name>  pooling logic  ;"previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams; move  <file_name>  reuse to  <file_name>, with policy informed by  <method_name>  specifying what to do when the  <file_name>  becomes idle: pool, close or hold, so the  <file_name>  does what its told.";Similar;0.5778644680976868
Include prerequisites in the releasing guide.;to provide necessary information for users;Implement moving bytes between OkBuffers  ;This is more complicated than Id anticipated;Similar;0.5983540415763855
Include prerequisites in the releasing guide.;to provide necessary information for users;Dont attempt <iden> modes we know will fail.;we know will fail;Similar;0.5076029896736145
Include prerequisites in the releasing guide.;to provide necessary information for users;"Define async APIs and switch <file_name> to use <iden> directly. I think this is the best route going forward; and eventually we could invert this relationship to have <iden> depending on <file_name> directly rather than vice versa.";Using <iden> directly introduces some duplicated code with <iden>. It also breaks the <file_name> cache.;Similar;0.516150176525116
Include prerequisites in the releasing guide.;to provide necessary information for users;Fix checkstyle issues in new <iden> code;checkstyle issues;Similar;0.593291163444519
Include prerequisites in the releasing guide.;to provide necessary information for users;Introduce a <file_name> interface between engine and connection.;This breaks the direct dependency from <file_name> to <method_name>;Similar;0.6428442001342773
Include prerequisites in the releasing guide.;to provide necessary information for users;Update to the latest <method_name>;Includes everything thru 8842981cbcfe20eb4721c0a2c867fa9a18233062;Similar;0.6656018495559692
Include prerequisites in the releasing guide.;to provide necessary information for users;Be more careful around IOExceptions;my goal is to make it easier to differentiate between protocol-level problems (bogus frames) from transport-level problems (closed sockets and EOF streams);Similar;0.5437924861907959
Include prerequisites in the releasing guide.;to provide necessary information for users;Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;Similar;0.6396589279174805
Include prerequisites in the releasing guide.;to provide necessary information for users;Move out of the <file_name> package;To promote the code into AOSP, well keep this package as-is and do the jarjar in <iden> instead;Similar;0.5193984508514404
Include prerequisites in the releasing guide.;to provide necessary information for users;Make the `<method_name>` return full working connections;Previously the returned connections required the caller to do extra work: setting up tunnels and performing an `<iden>` handshake. With this change, we make a complete working connection in `<method_name>`. This will make it easier to fix fallback when a single domain has multiple `<iden>` addresses that are not reachable. Also, this will make it easier to do SPDY through `<iden>` proxies.;Similar;0.6050068140029907
Include prerequisites in the releasing guide.;to provide necessary information for users;Expose <iden> directly on <method_name>  ;direct;Similar;0.5974529981613159
Include prerequisites in the releasing guide.;to provide necessary information for users;Use HTML entity for ampersand;to represent the ampersand symbol in HTML;Similar;0.5884826183319092
Include prerequisites in the releasing guide.;to provide necessary information for users;Add convenience overload for <iden>-backed <method_name>;convenience;Similar;0.5827841758728027
Include prerequisites in the releasing guide.;to provide necessary information for users;Update website to the latest design  ;latest design;Similar;0.6011438965797424
Include prerequisites in the releasing guide.;to provide necessary information for users;Transfer to/from <iden> directly from <iden>  ;<pr_link>;Similar;0.6398490071296692
Include prerequisites in the releasing guide.;to provide necessary information for users;add @override for subclass override method;subclass override method;Similar;0.6105170249938965
Include prerequisites in the releasing guide.;to provide necessary information for users;Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Similar;0.5991666316986084
Include prerequisites in the releasing guide.;to provide necessary information for users;Partially revert connection timeout behavior  ;The modification of the timeout behavior during connection caused problems;Similar;0.6426117420196533
Include prerequisites in the releasing guide.;to provide necessary information for users;The changes to <iden>s  <file_name> have been ported  ;Upstream commit of <iden> / <iden> fix, This does not include the introduction of PlatformTest, which will be difficult to write so it works everywhere;Similar;0.6350407004356384
Include prerequisites in the releasing guide.;to provide necessary information for users;Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Similar;0.6198608875274658
Include prerequisites in the releasing guide.;to provide necessary information for users;Return <file_name> to previous (e.g. KitKat) behavior;this change required to handle this <iden> scenario;Similar;0.672723650932312
Include prerequisites in the releasing guide.;to provide necessary information for users;Document <file_name> throwing modes;To include the <pr_link> information;Similar;0.5253400206565857
Include prerequisites in the releasing guide.;to provide necessary information for users;Convert <file_name> to Kotlin;<pr_link>, <iden>, <file_name>;Similar;0.5903992652893066
Include prerequisites in the releasing guide.;to provide necessary information for users;Convert <file_name>, <file_name> to Kotlin  ;"to Kotlin

Decision: Rename <file_name> <version> to .kt (and others)  ";Similar;0.596168577671051
Include prerequisites in the releasing guide.;to provide necessary information for users;Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Similar;0.6537097096443176
Include prerequisites in the releasing guide.;to provide necessary information for users;Just pass the <iden> and <iden> objects in directly;Dont summarize the request and response;Similar;0.5980429649353027
Include prerequisites in the releasing guide.;to provide necessary information for users;Fix a race in <method_name> ( <pr_link> );We were assuming on a client failure the server wouldnt have any further events. But it will get a failure if we give it a moment. This was causing some test flakiness.;Similar;0.5552212595939636
Include prerequisites in the releasing guide.;to provide necessary information for users;Improve some Markdown;improve;Similar;0.585204005241394
Include prerequisites in the releasing guide.;to provide necessary information for users;Refactor <file_name> by using <iden>;We can use <iden> instead of overriding <iden> abstract class;Similar;0.6222912073135376
Include prerequisites in the releasing guide.;to provide necessary information for users;Enable GitHub Security Scanning;To configure GitHub workflow for code security scanning;Similar;0.5378157496452332
Include prerequisites in the releasing guide.;to provide necessary information for users;load through bootstrap;-;Similar;0.6167774796485901
Include prerequisites in the releasing guide.;to provide necessary information for users;Fix bug where request body isnt sent when it should  ;request body isnt sent when it should;Similar;0.5217993259429932
Include prerequisites in the releasing guide.;to provide necessary information for users;Add support for following <iden> 307 temporary redirects  ;Fixes Android bug 41739;Similar;0.5828180313110352
Include prerequisites in the releasing guide.;to provide necessary information for users;Add wildcard hostnames support in <file_name>;support;Similar;0.5710704326629639
Include prerequisites in the releasing guide.;to provide necessary information for users;Fix correctness of WebSocketReader reserved flags test;reserved flags;Similar;0.5324016213417053
Convert <file_name> to Kotlin;"to Kotlin

Decision: Rename <file_name> to .kt";Introduce <method_name> ;This is the payoff that preceding changes have been working towards.;Similar;0.8174008727073669
Convert <file_name> to Kotlin;"to Kotlin

Decision: Rename <file_name> to .kt";Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.;Similar;0.7538245916366577
Convert <file_name> to Kotlin;"to Kotlin

Decision: Rename <file_name> to .kt";Fix some maven problems that are blocking the <version> release;blocking the <version> release;Similar;0.5039196014404297
Convert <file_name> to Kotlin;"to Kotlin

Decision: Rename <file_name> to .kt";Rename <method_name> to <iden()>;I prefer signed;Similar;0.856165885925293
Convert <file_name> to Kotlin;"to Kotlin

Decision: Rename <file_name> to .kt";Fixup <file_name> so that its worthy of production use.;This changes the default from the insecure 1024-bit <iden> to a secure 256-bit <iden> key. It adds a new option to use <iden> keys for interoperating with older clients.;Similar;0.6663693189620972
Convert <file_name> to Kotlin;"to Kotlin

Decision: Rename <file_name> to .kt";Support client authentication in <file_name>;client authentication;Similar;0.6937079429626465
Convert <file_name> to Kotlin;"to Kotlin

Decision: Rename <file_name> to .kt";Remove <iden>-mode <iden> cipher suites;This removes the following cipher suites as supported-by-default;Similar;0.6519672870635986
Convert <file_name> to Kotlin;"to Kotlin

Decision: Rename <file_name> to .kt";Fix Javadoc builds with the jsr305 dependency  ;Because multiple modules share a package we need to share the dependency on everything in package-info.java;Similar;0.6528814435005188
Convert <file_name> to Kotlin;"to Kotlin

Decision: Rename <file_name> to .kt";Make the  <file_name>  a little better.  <enter> <iden> threads by their URLs. Dont follow all fragments of the same <iden>;"For better organization; to prevent following all fragments of the same <iden>";Similar;0.5719615817070007
Convert <file_name> to Kotlin;"to Kotlin

Decision: Rename <file_name> to .kt";Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;Similar;0.7063819766044617
Convert <file_name> to Kotlin;"to Kotlin

Decision: Rename <file_name> to .kt";Update readme and changelog for <version>;<version>;Similar;0.7386430501937866
Convert <file_name> to Kotlin;"to Kotlin

Decision: Rename <file_name> to .kt";New <file_name> class to normalize certificate chains  ;The goal of this is to get the root <iden> certificate into the certificate chain, so that it can be considered by the certificate pinner;Similar;0.686416506767273
Convert <file_name> to Kotlin;"to Kotlin

Decision: Rename <file_name> to .kt";Fix some get prefixes on <file_name> and <method_name>;"-
None";Similar;0.7854493856430054
Convert <file_name> to Kotlin;"to Kotlin

Decision: Rename <file_name> to .kt";Add <method_name>;Might be useful to expose this bookkeeping to app developers;Similar;0.8312495350837708
Convert <file_name> to Kotlin;"to Kotlin

Decision: Rename <file_name> to .kt";Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Similar;0.7975484132766724
Convert <file_name> to Kotlin;"to Kotlin

Decision: Rename <file_name> to .kt";Drop our one remaining <iden> cipher suite;Tracking <iden> and Firefox, which have also dropped this cipher suite;Similar;0.5041722059249878
Convert <file_name> to Kotlin;"to Kotlin

Decision: Rename <file_name> to .kt";Expose internal APIs for pluggable file systems, Also migrate all of our tests to use the <method_name>  ;We arent yet ready to make <iden> a public type, but I dont mind making it _almost_ available via an internal API for those brave enough to try that, Its simpler.;Similar;0.5961902141571045
Convert <file_name> to Kotlin;"to Kotlin

Decision: Rename <file_name> to .kt";Change  <file_name>  to not implement java.net.ResponseCache;This marks some methods as  @deprecated and internal-only. Unfortunately we dont have a great mechanism to hide them from the documented <iden>.;Similar;0.5415643453598022
Convert <file_name> to Kotlin;"to Kotlin

Decision: Rename <file_name> to .kt";Fix <iden> post retransmit in the new API  ;We dont buffer response bodies in the new API. But we should retransmit POST bodies when a request fails.;Similar;0.652011513710022
Convert <file_name> to Kotlin;"to Kotlin

Decision: Rename <file_name> to .kt";Add a test for corner-case behavior;Im looking to make HttpURLConnectionImpl delegate to Job, and that means writing tests for all the weird things it does above HttpEngine.;Similar;0.6250168085098267
Convert <file_name> to Kotlin;"to Kotlin

Decision: Rename <file_name> to .kt";Add some pings to force happens-before in <iden> tests;Previously we were relying on accidents to get our tests to pass;Similar;0.5448958873748779
Convert <file_name> to Kotlin;"to Kotlin

Decision: Rename <file_name> to .kt";Track <file_name> ownership  ;<file_name> ownership is somewhat racy: when an HttpURLConnection reads the last byte of a connection, its ownership is released and given to the <method_name>;Similar;0.7194485068321228
Convert <file_name> to Kotlin;"to Kotlin

Decision: Rename <file_name> to .kt";Move  <file_name>  pooling logic  ;"previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams; move  <file_name>  reuse to  <file_name>, with policy informed by  <method_name>  specifying what to do when the  <file_name>  becomes idle: pool, close or hold, so the  <file_name>  does what its told.";Similar;0.7765922546386719
Convert <file_name> to Kotlin;"to Kotlin

Decision: Rename <file_name> to .kt";Implement moving bytes between OkBuffers  ;This is more complicated than Id anticipated;Similar;0.7090263366699219
Convert <file_name> to Kotlin;"to Kotlin

Decision: Rename <file_name> to .kt";Remove <iden> 2 warnings;Small docs fixes;Similar;0.5899372100830078
Convert <file_name> to Kotlin;"to Kotlin

Decision: Rename <file_name> to .kt";Fix checkstyle issues in new <iden> code;checkstyle issues;Similar;0.5989861488342285
Convert <file_name> to Kotlin;"to Kotlin

Decision: Rename <file_name> to .kt";Kill <file_name> in the process  ;Teach <file_name> <iden>;Similar;0.5362300276756287
Convert <file_name> to Kotlin;"to Kotlin

Decision: Rename <file_name> to .kt";Introduce a <file_name> interface between engine and connection.;This breaks the direct dependency from <file_name> to <method_name>;Similar;0.829817533493042
Convert <file_name> to Kotlin;"to Kotlin

Decision: Rename <file_name> to .kt";Make  <file_name> less flaky;I was seeing flaky results in the debugger because pooled connections were being evicted as the test ran;Similar;0.511443018913269
Convert <file_name> to Kotlin;"to Kotlin

Decision: Rename <file_name> to .kt";Update to the latest <method_name>;Includes everything thru 8842981cbcfe20eb4721c0a2c867fa9a18233062;Similar;0.6750606298446655
Convert <file_name> to Kotlin;"to Kotlin

Decision: Rename <file_name> to .kt";Be more careful around IOExceptions;my goal is to make it easier to differentiate between protocol-level problems (bogus frames) from transport-level problems (closed sockets and EOF streams);Similar;0.5167925357818604
Convert <file_name> to Kotlin;"to Kotlin

Decision: Rename <file_name> to .kt";Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;Similar;0.6324610710144043
Convert <file_name> to Kotlin;"to Kotlin

Decision: Rename <file_name> to .kt";Move out of the <file_name> package;To promote the code into AOSP, well keep this package as-is and do the jarjar in <iden> instead;Similar;0.7068579196929932
Convert <file_name> to Kotlin;"to Kotlin

Decision: Rename <file_name> to .kt";Make the `<method_name>` return full working connections;Previously the returned connections required the caller to do extra work: setting up tunnels and performing an `<iden>` handshake. With this change, we make a complete working connection in `<method_name>`. This will make it easier to fix fallback when a single domain has multiple `<iden>` addresses that are not reachable. Also, this will make it easier to do SPDY through `<iden>` proxies.;Similar;0.6625909209251404
Convert <file_name> to Kotlin;"to Kotlin

Decision: Rename <file_name> to .kt";Add error-prone compiler and fix its found issues;error-prone, its found issues;Similar;0.5468877553939819
Convert <file_name> to Kotlin;"to Kotlin

Decision: Rename <file_name> to .kt";Remove old <iden> protocol method;old;Similar;0.6503089070320129
Convert <file_name> to Kotlin;"to Kotlin

Decision: Rename <file_name> to .kt";Expose <iden> directly on <method_name>  ;direct;Similar;0.7967020273208618
Convert <file_name> to Kotlin;"to Kotlin

Decision: Rename <file_name> to .kt";Use HTML entity for ampersand;to represent the ampersand symbol in HTML;Similar;0.7659462690353394
Convert <file_name> to Kotlin;"to Kotlin

Decision: Rename <file_name> to .kt";Add convenience overload for <iden>-backed <method_name>;convenience;Similar;0.701714038848877
Convert <file_name> to Kotlin;"to Kotlin

Decision: Rename <file_name> to .kt";Use consistent camel casing of <iden>;consistent camel casing;Similar;0.5204092264175415
Convert <file_name> to Kotlin;"to Kotlin

Decision: Rename <file_name> to .kt";Update website to the latest design  ;latest design;Similar;0.5010184645652771
Convert <file_name> to Kotlin;"to Kotlin

Decision: Rename <file_name> to .kt";Transfer to/from <iden> directly from <iden>  ;<pr_link>;Similar;0.7519081234931946
Convert <file_name> to Kotlin;"to Kotlin

Decision: Rename <file_name> to .kt";add @override for subclass override method;subclass override method;Similar;0.6901024580001831
Convert <file_name> to Kotlin;"to Kotlin

Decision: Rename <file_name> to .kt";Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Similar;0.646791398525238
Convert <file_name> to Kotlin;"to Kotlin

Decision: Rename <file_name> to .kt";Partially revert connection timeout behavior  ;The modification of the timeout behavior during connection caused problems;Similar;0.5849235653877258
Convert <file_name> to Kotlin;"to Kotlin

Decision: Rename <file_name> to .kt";The changes to <iden>s  <file_name> have been ported  ;Upstream commit of <iden> / <iden> fix, This does not include the introduction of PlatformTest, which will be difficult to write so it works everywhere;Similar;0.764236569404602
Convert <file_name> to Kotlin;"to Kotlin

Decision: Rename <file_name> to .kt";Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Similar;0.8098671436309814
Convert <file_name> to Kotlin;"to Kotlin

Decision: Rename <file_name> to .kt";Return <file_name> to previous (e.g. KitKat) behavior;this change required to handle this <iden> scenario;Similar;0.7924479246139526
Convert <file_name> to Kotlin;"to Kotlin

Decision: Rename <file_name> to .kt";Document <file_name> throwing modes;To include the <pr_link> information;Similar;0.6947643160820007
Convert <file_name> to Kotlin;"to Kotlin

Decision: Rename <file_name> to .kt";Convert <file_name> to Kotlin;<pr_link>, <iden>, <file_name>;Similar;1.0
Convert <file_name> to Kotlin;"to Kotlin

Decision: Rename <file_name> to .kt";Convert <file_name>, <file_name> to Kotlin  ;"to Kotlin

Decision: Rename <file_name> <version> to .kt (and others)  ";Similar;0.9855733513832092
Convert <file_name> to Kotlin;"to Kotlin

Decision: Rename <file_name> to .kt";Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Similar;0.7005361914634705
Convert <file_name> to Kotlin;"to Kotlin

Decision: Rename <file_name> to .kt";Just pass the <iden> and <iden> objects in directly;Dont summarize the request and response;Similar;0.6109901666641235
Convert <file_name> to Kotlin;"to Kotlin

Decision: Rename <file_name> to .kt";Fix a race in <method_name> ( <pr_link> );We were assuming on a client failure the server wouldnt have any further events. But it will get a failure if we give it a moment. This was causing some test flakiness.;Similar;0.6537832021713257
Convert <file_name> to Kotlin;"to Kotlin

Decision: Rename <file_name> to .kt";Improve some Markdown;improve;Similar;0.540614128112793
Convert <file_name> to Kotlin;"to Kotlin

Decision: Rename <file_name> to .kt";Refactor <file_name> by using <iden>;We can use <iden> instead of overriding <iden> abstract class;Similar;0.8696914911270142
Convert <file_name> to Kotlin;"to Kotlin

Decision: Rename <file_name> to .kt";Enable GitHub Security Scanning;To configure GitHub workflow for code security scanning;Similar;0.6089856624603271
Convert <file_name> to Kotlin;"to Kotlin

Decision: Rename <file_name> to .kt";load through bootstrap;-;Similar;0.6570061445236206
Convert <file_name> to Kotlin;"to Kotlin

Decision: Rename <file_name> to .kt";Fix bug where request body isnt sent when it should  ;request body isnt sent when it should;Similar;0.5530554056167603
Convert <file_name> to Kotlin;"to Kotlin

Decision: Rename <file_name> to .kt";Add support for following <iden> 307 temporary redirects  ;Fixes Android bug 41739;Similar;0.6825540065765381
Convert <file_name> to Kotlin;"to Kotlin

Decision: Rename <file_name> to .kt";Add wildcard hostnames support in <file_name>;support;Similar;0.7323089838027954
Convert <file_name> to Kotlin;"to Kotlin

Decision: Rename <file_name> to .kt";Fix correctness of WebSocketReader reserved flags test;reserved flags;Similar;0.5739616751670837
Introduce <method_name> ;This is the payoff that preceding changes have been working towards.;Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.;Similar;0.9375928640365601
Introduce <method_name> ;This is the payoff that preceding changes have been working towards.;Rename <method_name> to <iden()>;I prefer signed;Similar;0.8776825070381165
Introduce <method_name> ;This is the payoff that preceding changes have been working towards.;Fixup <file_name> so that its worthy of production use.;This changes the default from the insecure 1024-bit <iden> to a secure 256-bit <iden> key. It adds a new option to use <iden> keys for interoperating with older clients.;Similar;0.6933481693267822
Introduce <method_name> ;This is the payoff that preceding changes have been working towards.;Support client authentication in <file_name>;client authentication;Similar;0.6501327157020569
Introduce <method_name> ;This is the payoff that preceding changes have been working towards.;Remove <iden>-mode <iden> cipher suites;This removes the following cipher suites as supported-by-default;Similar;0.617585301399231
Introduce <method_name> ;This is the payoff that preceding changes have been working towards.;Fix Javadoc builds with the jsr305 dependency  ;Because multiple modules share a package we need to share the dependency on everything in package-info.java;Similar;0.5888795852661133
Introduce <method_name> ;This is the payoff that preceding changes have been working towards.;Make the  <file_name>  a little better.  <enter> <iden> threads by their URLs. Dont follow all fragments of the same <iden>;"For better organization; to prevent following all fragments of the same <iden>";Similar;0.5299439430236816
Introduce <method_name> ;This is the payoff that preceding changes have been working towards.;Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;Similar;0.7145506143569946
Introduce <method_name> ;This is the payoff that preceding changes have been working towards.;Update readme and changelog for <version>;<version>;Similar;0.7479224801063538
Introduce <method_name> ;This is the payoff that preceding changes have been working towards.;New <file_name> class to normalize certificate chains  ;The goal of this is to get the root <iden> certificate into the certificate chain, so that it can be considered by the certificate pinner;Similar;0.698075532913208
Introduce <method_name> ;This is the payoff that preceding changes have been working towards.;Fix some get prefixes on <file_name> and <method_name>;"-
None";Similar;0.7373632192611694
Introduce <method_name> ;This is the payoff that preceding changes have been working towards.;Add <method_name>;Might be useful to expose this bookkeeping to app developers;Similar;0.9622647762298584
Introduce <method_name> ;This is the payoff that preceding changes have been working towards.;Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Similar;0.8513545989990234
Introduce <method_name> ;This is the payoff that preceding changes have been working towards.;Drop our one remaining <iden> cipher suite;Tracking <iden> and Firefox, which have also dropped this cipher suite;Similar;0.5029140710830688
Introduce <method_name> ;This is the payoff that preceding changes have been working towards.;The implementation is built around one oversized method that runs top to bottom;I found this was easier to follow than the switch statement recommended by the <iden> standard;Similar;0.5531010627746582
Introduce <method_name> ;This is the payoff that preceding changes have been working towards.;Fix <iden> post retransmit in the new API  ;We dont buffer response bodies in the new API. But we should retransmit POST bodies when a request fails.;Similar;0.632766842842102
Introduce <method_name> ;This is the payoff that preceding changes have been working towards.;Add a test for corner-case behavior;Im looking to make HttpURLConnectionImpl delegate to Job, and that means writing tests for all the weird things it does above HttpEngine.;Similar;0.6515488624572754
Introduce <method_name> ;This is the payoff that preceding changes have been working towards.;Add some pings to force happens-before in <iden> tests;Previously we were relying on accidents to get our tests to pass;Similar;0.5483664274215698
Introduce <method_name> ;This is the payoff that preceding changes have been working towards.;Track <file_name> ownership  ;<file_name> ownership is somewhat racy: when an HttpURLConnection reads the last byte of a connection, its ownership is released and given to the <method_name>;Similar;0.7562660574913025
Introduce <method_name> ;This is the payoff that preceding changes have been working towards.;Move  <file_name>  pooling logic  ;"previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams; move  <file_name>  reuse to  <file_name>, with policy informed by  <method_name>  specifying what to do when the  <file_name>  becomes idle: pool, close or hold, so the  <file_name>  does what its told.";Similar;0.7959708571434021
Introduce <method_name> ;This is the payoff that preceding changes have been working towards.;Implement moving bytes between OkBuffers  ;This is more complicated than Id anticipated;Similar;0.6592201590538025
Introduce <method_name> ;This is the payoff that preceding changes have been working towards.;Remove <iden> 2 warnings;Small docs fixes;Similar;0.592086136341095
Introduce <method_name> ;This is the payoff that preceding changes have been working towards.;Fix checkstyle issues in new <iden> code;checkstyle issues;Similar;0.5711300373077393
Introduce <method_name> ;This is the payoff that preceding changes have been working towards.;Introduce a <file_name> interface between engine and connection.;This breaks the direct dependency from <file_name> to <method_name>;Similar;0.8247865438461304
Introduce <method_name> ;This is the payoff that preceding changes have been working towards.;Make  <file_name> less flaky;I was seeing flaky results in the debugger because pooled connections were being evicted as the test ran;Similar;0.5254617929458618
Introduce <method_name> ;This is the payoff that preceding changes have been working towards.;Update to the latest <method_name>;Includes everything thru 8842981cbcfe20eb4721c0a2c867fa9a18233062;Similar;0.7532956600189209
Introduce <method_name> ;This is the payoff that preceding changes have been working towards.;Be more careful around IOExceptions;my goal is to make it easier to differentiate between protocol-level problems (bogus frames) from transport-level problems (closed sockets and EOF streams);Similar;0.6036405563354492
Introduce <method_name> ;This is the payoff that preceding changes have been working towards.;Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;Similar;0.6612715721130371
Introduce <method_name> ;This is the payoff that preceding changes have been working towards.;Move out of the <file_name> package;To promote the code into AOSP, well keep this package as-is and do the jarjar in <iden> instead;Similar;0.6761559844017029
Introduce <method_name> ;This is the payoff that preceding changes have been working towards.;Make the `<method_name>` return full working connections;Previously the returned connections required the caller to do extra work: setting up tunnels and performing an `<iden>` handshake. With this change, we make a complete working connection in `<method_name>`. This will make it easier to fix fallback when a single domain has multiple `<iden>` addresses that are not reachable. Also, this will make it easier to do SPDY through `<iden>` proxies.;Similar;0.6964753866195679
Introduce <method_name> ;This is the payoff that preceding changes have been working towards.;Add error-prone compiler and fix its found issues;error-prone, its found issues;Similar;0.537817656993866
Introduce <method_name> ;This is the payoff that preceding changes have been working towards.;Remove old <iden> protocol method;old;Similar;0.6762384176254272
Introduce <method_name> ;This is the payoff that preceding changes have been working towards.;Expose <iden> directly on <method_name>  ;direct;Similar;0.9070591926574707
Introduce <method_name> ;This is the payoff that preceding changes have been working towards.;Use HTML entity for ampersand;to represent the ampersand symbol in HTML;Similar;0.7743801474571228
Introduce <method_name> ;This is the payoff that preceding changes have been working towards.;Add convenience overload for <iden>-backed <method_name>;convenience;Similar;0.7748998403549194
Introduce <method_name> ;This is the payoff that preceding changes have been working towards.;Use consistent camel casing of <iden>;consistent camel casing;Similar;0.5207989811897278
Introduce <method_name> ;This is the payoff that preceding changes have been working towards.;Drop unused dependencies;unused;Similar;0.5127151012420654
Introduce <method_name> ;This is the payoff that preceding changes have been working towards.;Update website to the latest design  ;latest design;Similar;0.5050157308578491
Introduce <method_name> ;This is the payoff that preceding changes have been working towards.;Transfer to/from <iden> directly from <iden>  ;<pr_link>;Similar;0.8277508020401001
Introduce <method_name> ;This is the payoff that preceding changes have been working towards.;add @override for subclass override method;subclass override method;Similar;0.7702250480651855
Introduce <method_name> ;This is the payoff that preceding changes have been working towards.;Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Similar;0.6555647850036621
Introduce <method_name> ;This is the payoff that preceding changes have been working towards.;Partially revert connection timeout behavior  ;The modification of the timeout behavior during connection caused problems;Similar;0.5753338932991028
Introduce <method_name> ;This is the payoff that preceding changes have been working towards.;The changes to <iden>s  <file_name> have been ported  ;Upstream commit of <iden> / <iden> fix, This does not include the introduction of PlatformTest, which will be difficult to write so it works everywhere;Similar;0.685775876045227
Introduce <method_name> ;This is the payoff that preceding changes have been working towards.;Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Similar;0.8558824062347412
Introduce <method_name> ;This is the payoff that preceding changes have been working towards.;Return <file_name> to previous (e.g. KitKat) behavior;this change required to handle this <iden> scenario;Similar;0.7676061391830444
Introduce <method_name> ;This is the payoff that preceding changes have been working towards.;Document <file_name> throwing modes;To include the <pr_link> information;Similar;0.7040932774543762
Introduce <method_name> ;This is the payoff that preceding changes have been working towards.;Convert <file_name> to Kotlin;<pr_link>, <iden>, <file_name>;Similar;0.8174008727073669
Introduce <method_name> ;This is the payoff that preceding changes have been working towards.;Convert <file_name>, <file_name> to Kotlin  ;"to Kotlin

Decision: Rename <file_name> <version> to .kt (and others)  ";Similar;0.8267107605934143
Introduce <method_name> ;This is the payoff that preceding changes have been working towards.;Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Similar;0.6523418426513672
Introduce <method_name> ;This is the payoff that preceding changes have been working towards.;Just pass the <iden> and <iden> objects in directly;Dont summarize the request and response;Similar;0.756216287612915
Introduce <method_name> ;This is the payoff that preceding changes have been working towards.;Fix a race in <method_name> ( <pr_link> );We were assuming on a client failure the server wouldnt have any further events. But it will get a failure if we give it a moment. This was causing some test flakiness.;Similar;0.6503729820251465
Introduce <method_name> ;This is the payoff that preceding changes have been working towards.;Improve some Markdown;improve;Similar;0.5957623720169067
Introduce <method_name> ;This is the payoff that preceding changes have been working towards.;Refactor <file_name> by using <iden>;We can use <iden> instead of overriding <iden> abstract class;Similar;0.8666090369224548
Introduce <method_name> ;This is the payoff that preceding changes have been working towards.;Remove unnecessary use of grouping parentheses  ;Lets remove warnings found by errorprone.;Similar;0.5240309834480286
Introduce <method_name> ;This is the payoff that preceding changes have been working towards.;Enable GitHub Security Scanning;To configure GitHub workflow for code security scanning;Similar;0.5066177845001221
Introduce <method_name> ;This is the payoff that preceding changes have been working towards.;load through bootstrap;-;Similar;0.7040114998817444
Introduce <method_name> ;This is the payoff that preceding changes have been working towards.;Fix bug where request body isnt sent when it should  ;request body isnt sent when it should;Similar;0.5569069981575012
Introduce <method_name> ;This is the payoff that preceding changes have been working towards.;Add support for following <iden> 307 temporary redirects  ;Fixes Android bug 41739;Similar;0.6606824398040771
Introduce <method_name> ;This is the payoff that preceding changes have been working towards.;Add wildcard hostnames support in <file_name>;support;Similar;0.6903875470161438
Introduce <method_name> ;This is the payoff that preceding changes have been working towards.;Fix correctness of WebSocketReader reserved flags test;reserved flags;Similar;0.5266895294189453
Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.;Fix some maven problems that are blocking the <version> release;blocking the <version> release;Similar;0.500555694103241
Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.;Rename <method_name> to <iden()>;I prefer signed;Similar;0.8145343661308289
Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.;Fixup <file_name> so that its worthy of production use.;This changes the default from the insecure 1024-bit <iden> to a secure 256-bit <iden> key. It adds a new option to use <iden> keys for interoperating with older clients.;Similar;0.6977600455284119
Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.;Support client authentication in <file_name>;client authentication;Similar;0.6447939872741699
Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.;Remove <iden>-mode <iden> cipher suites;This removes the following cipher suites as supported-by-default;Similar;0.5880820155143738
Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.;Fix Javadoc builds with the jsr305 dependency  ;Because multiple modules share a package we need to share the dependency on everything in package-info.java;Similar;0.586269736289978
Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.;Make the  <file_name>  a little better.  <enter> <iden> threads by their URLs. Dont follow all fragments of the same <iden>;"For better organization; to prevent following all fragments of the same <iden>";Similar;0.539150595664978
Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.;Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;Similar;0.7154518365859985
Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.;Collapse interceptors into a single chain;Instead of having a chain of application interceptors and a separate chain of network interceptors, this makes a single heterogeneous chain. It makes the <iden> core and network caller into interceptors.;Similar;0.5182719230651855
Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.;Update readme and changelog for <version>;<version>;Similar;0.7486208081245422
Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.;New <file_name> class to normalize certificate chains  ;The goal of this is to get the root <iden> certificate into the certificate chain, so that it can be considered by the certificate pinner;Similar;0.6923196911811829
Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.;Fix some get prefixes on <file_name> and <method_name>;"-
None";Similar;0.7130262851715088
Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.;Write some new connection pool tests;These use the <iden> APIs. Theyre high-level so they wont break with the implementation rewrite.;Similar;0.5296185612678528
Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.;Add <method_name>;Might be useful to expose this bookkeeping to app developers;Similar;0.8897522687911987
Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.;Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Similar;0.7949602007865906
Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.;Expose internal APIs for pluggable file systems, Also migrate all of our tests to use the <method_name>  ;We arent yet ready to make <iden> a public type, but I dont mind making it _almost_ available via an internal API for those brave enough to try that, Its simpler.;Similar;0.5045559406280518
Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.;The implementation is built around one oversized method that runs top to bottom;I found this was easier to follow than the switch statement recommended by the <iden> standard;Similar;0.5400221943855286
Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.;Fix <iden> post retransmit in the new API  ;We dont buffer response bodies in the new API. But we should retransmit POST bodies when a request fails.;Similar;0.6606634259223938
Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.;Add a test for corner-case behavior;Im looking to make HttpURLConnectionImpl delegate to Job, and that means writing tests for all the weird things it does above HttpEngine.;Similar;0.6967650651931763
Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.;Add some pings to force happens-before in <iden> tests;Previously we were relying on accidents to get our tests to pass;Similar;0.632607102394104
Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.;Track <file_name> ownership  ;<file_name> ownership is somewhat racy: when an HttpURLConnection reads the last byte of a connection, its ownership is released and given to the <method_name>;Similar;0.7342016696929932
Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.;Move  <file_name>  pooling logic  ;"previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams; move  <file_name>  reuse to  <file_name>, with policy informed by  <method_name>  specifying what to do when the  <file_name>  becomes idle: pool, close or hold, so the  <file_name>  does what its told.";Similar;0.7898304462432861
Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.;Implement moving bytes between OkBuffers  ;This is more complicated than Id anticipated;Similar;0.6975147128105164
Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.;Dont attempt <iden> modes we know will fail.;we know will fail;Similar;0.516514241695404
Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.;Remove <iden> 2 warnings;Small docs fixes;Similar;0.5866825580596924
Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.;"Define async APIs and switch <file_name> to use <iden> directly. I think this is the best route going forward; and eventually we could invert this relationship to have <iden> depending on <file_name> directly rather than vice versa.";Using <iden> directly introduces some duplicated code with <iden>. It also breaks the <file_name> cache.;Similar;0.5678173303604126
Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.;Fix checkstyle issues in new <iden> code;checkstyle issues;Similar;0.6085615754127502
Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.;Introduce a <file_name> interface between engine and connection.;This breaks the direct dependency from <file_name> to <method_name>;Similar;0.8112809062004089
Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.;Update to the latest <method_name>;Includes everything thru 8842981cbcfe20eb4721c0a2c867fa9a18233062;Similar;0.7645715475082397
Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.;Be more careful around IOExceptions;my goal is to make it easier to differentiate between protocol-level problems (bogus frames) from transport-level problems (closed sockets and EOF streams);Similar;0.6429033279418945
Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.;Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;Similar;0.7032769322395325
Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.;Move out of the <file_name> package;To promote the code into AOSP, well keep this package as-is and do the jarjar in <iden> instead;Similar;0.6440386176109314
Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.;Make the `<method_name>` return full working connections;Previously the returned connections required the caller to do extra work: setting up tunnels and performing an `<iden>` handshake. With this change, we make a complete working connection in `<method_name>`. This will make it easier to fix fallback when a single domain has multiple `<iden>` addresses that are not reachable. Also, this will make it easier to do SPDY through `<iden>` proxies.;Similar;0.7079161405563354
Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.;Add error-prone compiler and fix its found issues;error-prone, its found issues;Similar;0.5648465156555176
Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.;Remove old <iden> protocol method;old;Similar;0.6573118567466736
Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.;Expose <iden> directly on <method_name>  ;direct;Similar;0.8724842071533203
Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.;Use HTML entity for ampersand;to represent the ampersand symbol in HTML;Similar;0.7349882125854492
Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.;Add convenience overload for <iden>-backed <method_name>;convenience;Similar;0.7704942226409912
Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.;Update website to the latest design  ;latest design;Similar;0.5545013546943665
Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.;Transfer to/from <iden> directly from <iden>  ;<pr_link>;Similar;0.8282937407493591
Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.;add @override for subclass override method;subclass override method;Similar;0.7757701277732849
Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.;Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Similar;0.6576205492019653
Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.;Partially revert connection timeout behavior  ;The modification of the timeout behavior during connection caused problems;Similar;0.6349015831947327
Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.;The changes to <iden>s  <file_name> have been ported  ;Upstream commit of <iden> / <iden> fix, This does not include the introduction of PlatformTest, which will be difficult to write so it works everywhere;Similar;0.6903786659240723
Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.;Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Similar;0.8572410941123962
Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.;Return <file_name> to previous (e.g. KitKat) behavior;this change required to handle this <iden> scenario;Similar;0.7615320086479187
Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.;Document <file_name> throwing modes;To include the <pr_link> information;Similar;0.7032008171081543
Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.;Convert <file_name> to Kotlin;<pr_link>, <iden>, <file_name>;Similar;0.7538245916366577
Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.;Convert <file_name>, <file_name> to Kotlin  ;"to Kotlin

Decision: Rename <file_name> <version> to .kt (and others)  ";Similar;0.7682247161865234
Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.;Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Similar;0.6702969074249268
Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.;Just pass the <iden> and <iden> objects in directly;Dont summarize the request and response;Similar;0.7605780959129333
Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.;Fix a race in <method_name> ( <pr_link> );We were assuming on a client failure the server wouldnt have any further events. But it will get a failure if we give it a moment. This was causing some test flakiness.;Similar;0.6693962812423706
Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.;Improve some Markdown;improve;Similar;0.6061984896659851
Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.;Refactor <file_name> by using <iden>;We can use <iden> instead of overriding <iden> abstract class;Similar;0.8111620545387268
Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.;Enable GitHub Security Scanning;To configure GitHub workflow for code security scanning;Similar;0.5061280727386475
Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.;load through bootstrap;-;Similar;0.6962097883224487
Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.;Fix bug where request body isnt sent when it should  ;request body isnt sent when it should;Similar;0.5939209461212158
Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.;Add support for following <iden> 307 temporary redirects  ;Fixes Android bug 41739;Similar;0.6489834785461426
Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.;Add wildcard hostnames support in <file_name>;support;Similar;0.6832988262176514
Introduce <method_name> responseFailed events;These replace <iden>() / <iden>() in some failure scenarios. They may also be issued in cases where no event was published previously.;Fix correctness of WebSocketReader reserved flags test;reserved flags;Similar;0.512543797492981
Fix some maven problems that are blocking the <version> release;blocking the <version> release;Rename <method_name> to <iden()>;I prefer signed;Similar;0.5021551847457886
Fix some maven problems that are blocking the <version> release;blocking the <version> release;Fixup <file_name> so that its worthy of production use.;This changes the default from the insecure 1024-bit <iden> to a secure 256-bit <iden> key. It adds a new option to use <iden> keys for interoperating with older clients.;Similar;0.6149991154670715
Fix some maven problems that are blocking the <version> release;blocking the <version> release;Support client authentication in <file_name>;client authentication;Similar;0.5718990564346313
Fix some maven problems that are blocking the <version> release;blocking the <version> release;Remove <iden>-mode <iden> cipher suites;This removes the following cipher suites as supported-by-default;Similar;0.5682216882705688
Fix some maven problems that are blocking the <version> release;blocking the <version> release;Fix Javadoc builds with the jsr305 dependency  ;Because multiple modules share a package we need to share the dependency on everything in package-info.java;Similar;0.5591499209403992
Fix some maven problems that are blocking the <version> release;blocking the <version> release;Make the  <file_name>  a little better.  <enter> <iden> threads by their URLs. Dont follow all fragments of the same <iden>;"For better organization; to prevent following all fragments of the same <iden>";Similar;0.6074753999710083
Fix some maven problems that are blocking the <version> release;blocking the <version> release;Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;Similar;0.6338245272636414
Fix some maven problems that are blocking the <version> release;blocking the <version> release;Fix tests to share a common <iden>. Also fix the memory limit, which may prevent Travis from failing our tests.;share a common <iden>, memory limit, prevent Travis from failing our tests;Similar;0.7479733228683472
Fix some maven problems that are blocking the <version> release;blocking the <version> release;Update readme and changelog for <version>;<version>;Similar;0.6364502310752869
Fix some maven problems that are blocking the <version> release;blocking the <version> release;New <file_name> class to normalize certificate chains  ;The goal of this is to get the root <iden> certificate into the certificate chain, so that it can be considered by the certificate pinner;Similar;0.5263177752494812
Fix some maven problems that are blocking the <version> release;blocking the <version> release;Fix some get prefixes on <file_name> and <method_name>;"-
None";Similar;0.7180813550949097
Fix some maven problems that are blocking the <version> release;blocking the <version> release;Write some new connection pool tests;These use the <iden> APIs. Theyre high-level so they wont break with the implementation rewrite.;Similar;0.558420717716217
Fix some maven problems that are blocking the <version> release;blocking the <version> release;Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Similar;0.67613285779953
Fix some maven problems that are blocking the <version> release;blocking the <version> release;Change  <file_name>  to not implement java.net.ResponseCache;This marks some methods as  @deprecated and internal-only. Unfortunately we dont have a great mechanism to hide them from the documented <iden>.;Similar;0.5695940256118774
Fix some maven problems that are blocking the <version> release;blocking the <version> release;Fix <iden> post retransmit in the new API  ;We dont buffer response bodies in the new API. But we should retransmit POST bodies when a request fails.;Similar;0.676749587059021
Fix some maven problems that are blocking the <version> release;blocking the <version> release;Add a test for corner-case behavior;Im looking to make HttpURLConnectionImpl delegate to Job, and that means writing tests for all the weird things it does above HttpEngine.;Similar;0.6027976274490356
Fix some maven problems that are blocking the <version> release;blocking the <version> release;Add some pings to force happens-before in <iden> tests;Previously we were relying on accidents to get our tests to pass;Similar;0.6306115984916687
Fix some maven problems that are blocking the <version> release;blocking the <version> release;Implement moving bytes between OkBuffers  ;This is more complicated than Id anticipated;Similar;0.5539246797561646
Fix some maven problems that are blocking the <version> release;blocking the <version> release;Remove <iden> 2 warnings;Small docs fixes;Similar;0.5248934030532837
Fix some maven problems that are blocking the <version> release;blocking the <version> release;Fix checkstyle issues in new <iden> code;checkstyle issues;Similar;0.7759284973144531
Fix some maven problems that are blocking the <version> release;blocking the <version> release;Kill <file_name> in the process  ;Teach <file_name> <iden>;Similar;0.5333213806152344
Fix some maven problems that are blocking the <version> release;blocking the <version> release;Introduce a <file_name> interface between engine and connection.;This breaks the direct dependency from <file_name> to <method_name>;Similar;0.5167102813720703
Fix some maven problems that are blocking the <version> release;blocking the <version> release;Make  <file_name> less flaky;I was seeing flaky results in the debugger because pooled connections were being evicted as the test ran;Similar;0.5833328366279602
Fix some maven problems that are blocking the <version> release;blocking the <version> release;Update to the latest <method_name>;Includes everything thru 8842981cbcfe20eb4721c0a2c867fa9a18233062;Similar;0.5050443410873413
Fix some maven problems that are blocking the <version> release;blocking the <version> release;Be more careful around IOExceptions;my goal is to make it easier to differentiate between protocol-level problems (bogus frames) from transport-level problems (closed sockets and EOF streams);Similar;0.5415458679199219
Fix some maven problems that are blocking the <version> release;blocking the <version> release;Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;Similar;0.6841669082641602
Fix some maven problems that are blocking the <version> release;blocking the <version> release;Move out of the <file_name> package;To promote the code into AOSP, well keep this package as-is and do the jarjar in <iden> instead;Similar;0.560049831867218
Fix some maven problems that are blocking the <version> release;blocking the <version> release;Fix <iden> which was being computed incorrectly;<enter> We were only returning true once we were already in a tunnel. This was bogus. In theory a <iden> tunnel sending extra data could be corrupted due to this bug.;Similar;0.7429778575897217
Fix some maven problems that are blocking the <version> release;blocking the <version> release;Add error-prone compiler and fix its found issues;error-prone, its found issues;Similar;0.7372803092002869
Fix some maven problems that are blocking the <version> release;blocking the <version> release;Remove old <iden> protocol method;old;Similar;0.5591108798980713
Fix some maven problems that are blocking the <version> release;blocking the <version> release;Add convenience overload for <iden>-backed <method_name>;convenience;Similar;0.5661683678627014
Fix some maven problems that are blocking the <version> release;blocking the <version> release;Update website to the latest design  ;latest design;Similar;0.5446253418922424
Fix some maven problems that are blocking the <version> release;blocking the <version> release;add @override for subclass override method;subclass override method;Similar;0.558367908000946
Fix some maven problems that are blocking the <version> release;blocking the <version> release;Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Similar;0.6529668569564819
Fix some maven problems that are blocking the <version> release;blocking the <version> release;Partially revert connection timeout behavior  ;The modification of the timeout behavior during connection caused problems;Similar;0.6307637095451355
Fix some maven problems that are blocking the <version> release;blocking the <version> release;This change logs the exception but prevent it from propagating out of the top of the call stack.;This decreases overall flakiness.;Similar;0.6838544607162476
Fix some maven problems that are blocking the <version> release;blocking the <version> release;The changes to <iden>s  <file_name> have been ported  ;Upstream commit of <iden> / <iden> fix, This does not include the introduction of PlatformTest, which will be difficult to write so it works everywhere;Similar;0.6435322165489197
Fix some maven problems that are blocking the <version> release;blocking the <version> release;Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Similar;0.530939519405365
Fix some maven problems that are blocking the <version> release;blocking the <version> release;Convert <file_name> to Kotlin;<pr_link>, <iden>, <file_name>;Similar;0.5039196014404297
Fix some maven problems that are blocking the <version> release;blocking the <version> release;Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Similar;0.756744921207428
Fix some maven problems that are blocking the <version> release;blocking the <version> release;Fail HTTP/2 connections if the pong is not received;This removes the abstraction from our http2 package;Similar;0.6643417477607727
Fix some maven problems that are blocking the <version> release;blocking the <version> release;Fix a race in <method_name> ( <pr_link> );We were assuming on a client failure the server wouldnt have any further events. But it will get a failure if we give it a moment. This was causing some test flakiness.;Similar;0.6144393682479858
Fix some maven problems that are blocking the <version> release;blocking the <version> release;Improve some Markdown;improve;Similar;0.6811397075653076
Fix some maven problems that are blocking the <version> release;blocking the <version> release;fix <issue_link> : PROPFIND request should not redirect to GET request;PROPFIND request should not redirect to GET request;Similar;0.5275079011917114
Fix some maven problems that are blocking the <version> release;blocking the <version> release;Refactor <file_name> by using <iden>;We can use <iden> instead of overriding <iden> abstract class;Similar;0.5574353933334351
Fix some maven problems that are blocking the <version> release;blocking the <version> release;Remove unnecessary use of grouping parentheses  ;Lets remove warnings found by errorprone.;Similar;0.553166925907135
Fix some maven problems that are blocking the <version> release;blocking the <version> release;Enable GitHub Security Scanning;To configure GitHub workflow for code security scanning;Similar;0.5453625321388245
Fix some maven problems that are blocking the <version> release;blocking the <version> release;Fix bug where request body isnt sent when it should  ;request body isnt sent when it should;Similar;0.7845094203948975
Fix some maven problems that are blocking the <version> release;blocking the <version> release;Add support for following <iden> 307 temporary redirects  ;Fixes Android bug 41739;Similar;0.5547374486923218
Fix some maven problems that are blocking the <version> release;blocking the <version> release;Fix correctness of WebSocketReader reserved flags test;reserved flags;Similar;0.6628979444503784
Rename <method_name> to <iden()>;I prefer signed;Fixup <file_name> so that its worthy of production use.;This changes the default from the insecure 1024-bit <iden> to a secure 256-bit <iden> key. It adds a new option to use <iden> keys for interoperating with older clients.;Similar;0.6558136940002441
Rename <method_name> to <iden()>;I prefer signed;Support client authentication in <file_name>;client authentication;Similar;0.5989010334014893
Rename <method_name> to <iden()>;I prefer signed;Remove <iden>-mode <iden> cipher suites;This removes the following cipher suites as supported-by-default;Similar;0.7285463809967041
Rename <method_name> to <iden()>;I prefer signed;Fix Javadoc builds with the jsr305 dependency  ;Because multiple modules share a package we need to share the dependency on everything in package-info.java;Similar;0.5903364419937134
Rename <method_name> to <iden()>;I prefer signed;Make the  <file_name>  a little better.  <enter> <iden> threads by their URLs. Dont follow all fragments of the same <iden>;"For better organization; to prevent following all fragments of the same <iden>";Similar;0.5988230109214783
Rename <method_name> to <iden()>;I prefer signed;Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;Similar;0.7287518382072449
Rename <method_name> to <iden()>;I prefer signed;Update readme and changelog for <version>;<version>;Similar;0.7591021060943604
Rename <method_name> to <iden()>;I prefer signed;New <file_name> class to normalize certificate chains  ;The goal of this is to get the root <iden> certificate into the certificate chain, so that it can be considered by the certificate pinner;Similar;0.6443756818771362
Rename <method_name> to <iden()>;I prefer signed;Fix some get prefixes on <file_name> and <method_name>;"-
None";Similar;0.765109121799469
Rename <method_name> to <iden()>;I prefer signed;Add <method_name>;Might be useful to expose this bookkeeping to app developers;Similar;0.886548638343811
Rename <method_name> to <iden()>;I prefer signed;Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Similar;0.8107166290283203
Rename <method_name> to <iden()>;I prefer signed;Drop our one remaining <iden> cipher suite;Tracking <iden> and Firefox, which have also dropped this cipher suite;Similar;0.5362099409103394
Rename <method_name> to <iden()>;I prefer signed;Expose internal APIs for pluggable file systems, Also migrate all of our tests to use the <method_name>  ;We arent yet ready to make <iden> a public type, but I dont mind making it _almost_ available via an internal API for those brave enough to try that, Its simpler.;Similar;0.5318661332130432
Rename <method_name> to <iden()>;I prefer signed;Change  <file_name>  to not implement java.net.ResponseCache;This marks some methods as  @deprecated and internal-only. Unfortunately we dont have a great mechanism to hide them from the documented <iden>.;Similar;0.5762264728546143
Rename <method_name> to <iden()>;I prefer signed;The implementation is built around one oversized method that runs top to bottom;I found this was easier to follow than the switch statement recommended by the <iden> standard;Similar;0.5193198919296265
Rename <method_name> to <iden()>;I prefer signed;Fix <iden> post retransmit in the new API  ;We dont buffer response bodies in the new API. But we should retransmit POST bodies when a request fails.;Similar;0.6547616124153137
Rename <method_name> to <iden()>;I prefer signed;Add a test for corner-case behavior;Im looking to make HttpURLConnectionImpl delegate to Job, and that means writing tests for all the weird things it does above HttpEngine.;Similar;0.6162058115005493
Rename <method_name> to <iden()>;I prefer signed;Add some pings to force happens-before in <iden> tests;Previously we were relying on accidents to get our tests to pass;Similar;0.5693379044532776
Rename <method_name> to <iden()>;I prefer signed;Track <file_name> ownership  ;<file_name> ownership is somewhat racy: when an HttpURLConnection reads the last byte of a connection, its ownership is released and given to the <method_name>;Similar;0.6819167137145996
Rename <method_name> to <iden()>;I prefer signed;Move  <file_name>  pooling logic  ;"previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams; move  <file_name>  reuse to  <file_name>, with policy informed by  <method_name>  specifying what to do when the  <file_name>  becomes idle: pool, close or hold, so the  <file_name>  does what its told.";Similar;0.7529588341712952
Rename <method_name> to <iden()>;I prefer signed;Implement moving bytes between OkBuffers  ;This is more complicated than Id anticipated;Similar;0.6418556571006775
Rename <method_name> to <iden()>;I prefer signed;Remove <iden> 2 warnings;Small docs fixes;Similar;0.6707544326782227
Rename <method_name> to <iden()>;I prefer signed;Fix checkstyle issues in new <iden> code;checkstyle issues;Similar;0.6134979128837585
Rename <method_name> to <iden()>;I prefer signed;Kill <file_name> in the process  ;Teach <file_name> <iden>;Similar;0.5241459012031555
Rename <method_name> to <iden()>;I prefer signed;Introduce a <file_name> interface between engine and connection.;This breaks the direct dependency from <file_name> to <method_name>;Similar;0.7660729289054871
Rename <method_name> to <iden()>;I prefer signed;Make  <file_name> less flaky;I was seeing flaky results in the debugger because pooled connections were being evicted as the test ran;Similar;0.5842214822769165
Rename <method_name> to <iden()>;I prefer signed;Update to the latest <method_name>;Includes everything thru 8842981cbcfe20eb4721c0a2c867fa9a18233062;Similar;0.7241945862770081
Rename <method_name> to <iden()>;I prefer signed;Be more careful around IOExceptions;my goal is to make it easier to differentiate between protocol-level problems (bogus frames) from transport-level problems (closed sockets and EOF streams);Similar;0.5842961668968201
Rename <method_name> to <iden()>;I prefer signed;Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;Similar;0.6464110612869263
Rename <method_name> to <iden()>;I prefer signed;Move out of the <file_name> package;To promote the code into AOSP, well keep this package as-is and do the jarjar in <iden> instead;Similar;0.7427725791931152
Rename <method_name> to <iden()>;I prefer signed;Make the `<method_name>` return full working connections;Previously the returned connections required the caller to do extra work: setting up tunnels and performing an `<iden>` handshake. With this change, we make a complete working connection in `<method_name>`. This will make it easier to fix fallback when a single domain has multiple `<iden>` addresses that are not reachable. Also, this will make it easier to do SPDY through `<iden>` proxies.;Similar;0.6224053502082825
Rename <method_name> to <iden()>;I prefer signed;Fix <iden> which was being computed incorrectly;<enter> We were only returning true once we were already in a tunnel. This was bogus. In theory a <iden> tunnel sending extra data could be corrupted due to this bug.;Similar;0.5028815269470215
Rename <method_name> to <iden()>;I prefer signed;Add error-prone compiler and fix its found issues;error-prone, its found issues;Similar;0.5435360670089722
Rename <method_name> to <iden()>;I prefer signed;Remove old <iden> protocol method;old;Similar;0.7488968372344971
Rename <method_name> to <iden()>;I prefer signed;Expose <iden> directly on <method_name>  ;direct;Similar;0.8515671491622925
Rename <method_name> to <iden()>;I prefer signed;Use HTML entity for ampersand;to represent the ampersand symbol in HTML;Similar;0.761172354221344
Rename <method_name> to <iden()>;I prefer signed;Add convenience overload for <iden>-backed <method_name>;convenience;Similar;0.7664288282394409
Rename <method_name> to <iden()>;I prefer signed;Use consistent camel casing of <iden>;consistent camel casing;Similar;0.5150420069694519
Rename <method_name> to <iden()>;I prefer signed;Drop unused dependencies;unused;Similar;0.5515645742416382
Rename <method_name> to <iden()>;I prefer signed;Transfer to/from <iden> directly from <iden>  ;<pr_link>;Similar;0.8287271857261658
Rename <method_name> to <iden()>;I prefer signed;add @override for subclass override method;subclass override method;Similar;0.7227054834365845
Rename <method_name> to <iden()>;I prefer signed;Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Similar;0.6617635488510132
Rename <method_name> to <iden()>;I prefer signed;Partially revert connection timeout behavior  ;The modification of the timeout behavior during connection caused problems;Similar;0.6126574277877808
Rename <method_name> to <iden()>;I prefer signed;The changes to <iden>s  <file_name> have been ported  ;Upstream commit of <iden> / <iden> fix, This does not include the introduction of PlatformTest, which will be difficult to write so it works everywhere;Similar;0.745478630065918
Rename <method_name> to <iden()>;I prefer signed;Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Similar;0.8914456963539124
Rename <method_name> to <iden()>;I prefer signed;Return <file_name> to previous (e.g. KitKat) behavior;this change required to handle this <iden> scenario;Similar;0.7666487097740173
Rename <method_name> to <iden()>;I prefer signed;Document <file_name> throwing modes;To include the <pr_link> information;Similar;0.72737056016922
Rename <method_name> to <iden()>;I prefer signed;Convert <file_name> to Kotlin;<pr_link>, <iden>, <file_name>;Similar;0.856165885925293
Rename <method_name> to <iden()>;I prefer signed;Convert <file_name>, <file_name> to Kotlin  ;"to Kotlin

Decision: Rename <file_name> <version> to .kt (and others)  ";Similar;0.8680740594863892
Rename <method_name> to <iden()>;I prefer signed;Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Similar;0.6671930551528931
Rename <method_name> to <iden()>;I prefer signed;Just pass the <iden> and <iden> objects in directly;Dont summarize the request and response;Similar;0.6873182654380798
Rename <method_name> to <iden()>;I prefer signed;Fix a race in <method_name> ( <pr_link> );We were assuming on a client failure the server wouldnt have any further events. But it will get a failure if we give it a moment. This was causing some test flakiness.;Similar;0.6572808027267456
Rename <method_name> to <iden()>;I prefer signed;Improve some Markdown;improve;Similar;0.596513569355011
Rename <method_name> to <iden()>;I prefer signed;Refactor <file_name> by using <iden>;We can use <iden> instead of overriding <iden> abstract class;Similar;0.8851649761199951
Rename <method_name> to <iden()>;I prefer signed;Remove unnecessary use of grouping parentheses  ;Lets remove warnings found by errorprone.;Similar;0.566662609577179
Rename <method_name> to <iden()>;I prefer signed;load through bootstrap;-;Similar;0.6127701997756958
Rename <method_name> to <iden()>;I prefer signed;Fix bug where request body isnt sent when it should  ;request body isnt sent when it should;Similar;0.5531823635101318
Rename <method_name> to <iden()>;I prefer signed;Add support for following <iden> 307 temporary redirects  ;Fixes Android bug 41739;Similar;0.6790320873260498
Rename <method_name> to <iden()>;I prefer signed;Add wildcard hostnames support in <file_name>;support;Similar;0.678730845451355
Rename <method_name> to <iden()>;I prefer signed;Fix correctness of WebSocketReader reserved flags test;reserved flags;Similar;0.5200634598731995
Fixup <file_name> so that its worthy of production use.;This changes the default from the insecure 1024-bit <iden> to a secure 256-bit <iden> key. It adds a new option to use <iden> keys for interoperating with older clients.;Support client authentication in <file_name>;client authentication;Similar;0.7272597551345825
Fixup <file_name> so that its worthy of production use.;This changes the default from the insecure 1024-bit <iden> to a secure 256-bit <iden> key. It adds a new option to use <iden> keys for interoperating with older clients.;Remove <iden>-mode <iden> cipher suites;This removes the following cipher suites as supported-by-default;Similar;0.5063220262527466
Fixup <file_name> so that its worthy of production use.;This changes the default from the insecure 1024-bit <iden> to a secure 256-bit <iden> key. It adds a new option to use <iden> keys for interoperating with older clients.;Fix Javadoc builds with the jsr305 dependency  ;Because multiple modules share a package we need to share the dependency on everything in package-info.java;Similar;0.6034409403800964
Fixup <file_name> so that its worthy of production use.;This changes the default from the insecure 1024-bit <iden> to a secure 256-bit <iden> key. It adds a new option to use <iden> keys for interoperating with older clients.;Make the  <file_name>  a little better.  <enter> <iden> threads by their URLs. Dont follow all fragments of the same <iden>;"For better organization; to prevent following all fragments of the same <iden>";Similar;0.6000745296478271
Fixup <file_name> so that its worthy of production use.;This changes the default from the insecure 1024-bit <iden> to a secure 256-bit <iden> key. It adds a new option to use <iden> keys for interoperating with older clients.;Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;Similar;0.7155777812004089
Fixup <file_name> so that its worthy of production use.;This changes the default from the insecure 1024-bit <iden> to a secure 256-bit <iden> key. It adds a new option to use <iden> keys for interoperating with older clients.;Fix tests to share a common <iden>. Also fix the memory limit, which may prevent Travis from failing our tests.;share a common <iden>, memory limit, prevent Travis from failing our tests;Similar;0.5325076580047607
Fixup <file_name> so that its worthy of production use.;This changes the default from the insecure 1024-bit <iden> to a secure 256-bit <iden> key. It adds a new option to use <iden> keys for interoperating with older clients.;Update readme and changelog for <version>;<version>;Similar;0.6734446287155151
Fixup <file_name> so that its worthy of production use.;This changes the default from the insecure 1024-bit <iden> to a secure 256-bit <iden> key. It adds a new option to use <iden> keys for interoperating with older clients.;New <file_name> class to normalize certificate chains  ;The goal of this is to get the root <iden> certificate into the certificate chain, so that it can be considered by the certificate pinner;Similar;0.7117221355438232
Fixup <file_name> so that its worthy of production use.;This changes the default from the insecure 1024-bit <iden> to a secure 256-bit <iden> key. It adds a new option to use <iden> keys for interoperating with older clients.;Fix some get prefixes on <file_name> and <method_name>;"-
None";Similar;0.7296954989433289
Fixup <file_name> so that its worthy of production use.;This changes the default from the insecure 1024-bit <iden> to a secure 256-bit <iden> key. It adds a new option to use <iden> keys for interoperating with older clients.;Write some new connection pool tests;These use the <iden> APIs. Theyre high-level so they wont break with the implementation rewrite.;Similar;0.517751157283783
Fixup <file_name> so that its worthy of production use.;This changes the default from the insecure 1024-bit <iden> to a secure 256-bit <iden> key. It adds a new option to use <iden> keys for interoperating with older clients.;Add <method_name>;Might be useful to expose this bookkeeping to app developers;Similar;0.7215276956558228
Fixup <file_name> so that its worthy of production use.;This changes the default from the insecure 1024-bit <iden> to a secure 256-bit <iden> key. It adds a new option to use <iden> keys for interoperating with older clients.;Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Similar;0.774570107460022
Fixup <file_name> so that its worthy of production use.;This changes the default from the insecure 1024-bit <iden> to a secure 256-bit <iden> key. It adds a new option to use <iden> keys for interoperating with older clients.;Expose internal APIs for pluggable file systems, Also migrate all of our tests to use the <method_name>  ;We arent yet ready to make <iden> a public type, but I dont mind making it _almost_ available via an internal API for those brave enough to try that, Its simpler.;Similar;0.5834158658981323
Fixup <file_name> so that its worthy of production use.;This changes the default from the insecure 1024-bit <iden> to a secure 256-bit <iden> key. It adds a new option to use <iden> keys for interoperating with older clients.;Fix <iden> post retransmit in the new API  ;We dont buffer response bodies in the new API. But we should retransmit POST bodies when a request fails.;Similar;0.6626068353652954
Fixup <file_name> so that its worthy of production use.;This changes the default from the insecure 1024-bit <iden> to a secure 256-bit <iden> key. It adds a new option to use <iden> keys for interoperating with older clients.;Add a test for corner-case behavior;Im looking to make HttpURLConnectionImpl delegate to Job, and that means writing tests for all the weird things it does above HttpEngine.;Similar;0.6078855991363525
Fixup <file_name> so that its worthy of production use.;This changes the default from the insecure 1024-bit <iden> to a secure 256-bit <iden> key. It adds a new option to use <iden> keys for interoperating with older clients.;Add some pings to force happens-before in <iden> tests;Previously we were relying on accidents to get our tests to pass;Similar;0.5959110856056213
Fixup <file_name> so that its worthy of production use.;This changes the default from the insecure 1024-bit <iden> to a secure 256-bit <iden> key. It adds a new option to use <iden> keys for interoperating with older clients.;Track <file_name> ownership  ;<file_name> ownership is somewhat racy: when an HttpURLConnection reads the last byte of a connection, its ownership is released and given to the <method_name>;Similar;0.6329662799835205
Fixup <file_name> so that its worthy of production use.;This changes the default from the insecure 1024-bit <iden> to a secure 256-bit <iden> key. It adds a new option to use <iden> keys for interoperating with older clients.;Move  <file_name>  pooling logic  ;"previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams; move  <file_name>  reuse to  <file_name>, with policy informed by  <method_name>  specifying what to do when the  <file_name>  becomes idle: pool, close or hold, so the  <file_name>  does what its told.";Similar;0.7016720771789551
Fixup <file_name> so that its worthy of production use.;This changes the default from the insecure 1024-bit <iden> to a secure 256-bit <iden> key. It adds a new option to use <iden> keys for interoperating with older clients.;Implement moving bytes between OkBuffers  ;This is more complicated than Id anticipated;Similar;0.5742014646530151
Fixup <file_name> so that its worthy of production use.;This changes the default from the insecure 1024-bit <iden> to a secure 256-bit <iden> key. It adds a new option to use <iden> keys for interoperating with older clients.;"Define async APIs and switch <file_name> to use <iden> directly. I think this is the best route going forward; and eventually we could invert this relationship to have <iden> depending on <file_name> directly rather than vice versa.";Using <iden> directly introduces some duplicated code with <iden>. It also breaks the <file_name> cache.;Similar;0.6671181917190552
Fixup <file_name> so that its worthy of production use.;This changes the default from the insecure 1024-bit <iden> to a secure 256-bit <iden> key. It adds a new option to use <iden> keys for interoperating with older clients.;Fix checkstyle issues in new <iden> code;checkstyle issues;Similar;0.6863810420036316
Fixup <file_name> so that its worthy of production use.;This changes the default from the insecure 1024-bit <iden> to a secure 256-bit <iden> key. It adds a new option to use <iden> keys for interoperating with older clients.;Kill <file_name> in the process  ;Teach <file_name> <iden>;Similar;0.5042291879653931
Fixup <file_name> so that its worthy of production use.;This changes the default from the insecure 1024-bit <iden> to a secure 256-bit <iden> key. It adds a new option to use <iden> keys for interoperating with older clients.;Introduce a <file_name> interface between engine and connection.;This breaks the direct dependency from <file_name> to <method_name>;Similar;0.7306753993034363
Fixup <file_name> so that its worthy of production use.;This changes the default from the insecure 1024-bit <iden> to a secure 256-bit <iden> key. It adds a new option to use <iden> keys for interoperating with older clients.;Make  <file_name> less flaky;I was seeing flaky results in the debugger because pooled connections were being evicted as the test ran;Similar;0.5416723489761353
Fixup <file_name> so that its worthy of production use.;This changes the default from the insecure 1024-bit <iden> to a secure 256-bit <iden> key. It adds a new option to use <iden> keys for interoperating with older clients.;Update to the latest <method_name>;Includes everything thru 8842981cbcfe20eb4721c0a2c867fa9a18233062;Similar;0.6124613285064697
Fixup <file_name> so that its worthy of production use.;This changes the default from the insecure 1024-bit <iden> to a secure 256-bit <iden> key. It adds a new option to use <iden> keys for interoperating with older clients.;Be more careful around IOExceptions;my goal is to make it easier to differentiate between protocol-level problems (bogus frames) from transport-level problems (closed sockets and EOF streams);Similar;0.6067280769348145
Fixup <file_name> so that its worthy of production use.;This changes the default from the insecure 1024-bit <iden> to a secure 256-bit <iden> key. It adds a new option to use <iden> keys for interoperating with older clients.;Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;Similar;0.7148647904396057
Fixup <file_name> so that its worthy of production use.;This changes the default from the insecure 1024-bit <iden> to a secure 256-bit <iden> key. It adds a new option to use <iden> keys for interoperating with older clients.;Move out of the <file_name> package;To promote the code into AOSP, well keep this package as-is and do the jarjar in <iden> instead;Similar;0.5170572996139526
Fixup <file_name> so that its worthy of production use.;This changes the default from the insecure 1024-bit <iden> to a secure 256-bit <iden> key. It adds a new option to use <iden> keys for interoperating with older clients.;Make the `<method_name>` return full working connections;Previously the returned connections required the caller to do extra work: setting up tunnels and performing an `<iden>` handshake. With this change, we make a complete working connection in `<method_name>`. This will make it easier to fix fallback when a single domain has multiple `<iden>` addresses that are not reachable. Also, this will make it easier to do SPDY through `<iden>` proxies.;Similar;0.7518512010574341
Fixup <file_name> so that its worthy of production use.;This changes the default from the insecure 1024-bit <iden> to a secure 256-bit <iden> key. It adds a new option to use <iden> keys for interoperating with older clients.;Fix <iden> which was being computed incorrectly;<enter> We were only returning true once we were already in a tunnel. This was bogus. In theory a <iden> tunnel sending extra data could be corrupted due to this bug.;Similar;0.5019640326499939
Fixup <file_name> so that its worthy of production use.;This changes the default from the insecure 1024-bit <iden> to a secure 256-bit <iden> key. It adds a new option to use <iden> keys for interoperating with older clients.;Add error-prone compiler and fix its found issues;error-prone, its found issues;Similar;0.6968964338302612
Fixup <file_name> so that its worthy of production use.;This changes the default from the insecure 1024-bit <iden> to a secure 256-bit <iden> key. It adds a new option to use <iden> keys for interoperating with older clients.;Expose <iden> directly on <method_name>  ;direct;Similar;0.6915598511695862
Fixup <file_name> so that its worthy of production use.;This changes the default from the insecure 1024-bit <iden> to a secure 256-bit <iden> key. It adds a new option to use <iden> keys for interoperating with older clients.;Use HTML entity for ampersand;to represent the ampersand symbol in HTML;Similar;0.6472139358520508
Fixup <file_name> so that its worthy of production use.;This changes the default from the insecure 1024-bit <iden> to a secure 256-bit <iden> key. It adds a new option to use <iden> keys for interoperating with older clients.;Add convenience overload for <iden>-backed <method_name>;convenience;Similar;0.7939014434814453
Fixup <file_name> so that its worthy of production use.;This changes the default from the insecure 1024-bit <iden> to a secure 256-bit <iden> key. It adds a new option to use <iden> keys for interoperating with older clients.;Use consistent camel casing of <iden>;consistent camel casing;Similar;0.5344844460487366
Fixup <file_name> so that its worthy of production use.;This changes the default from the insecure 1024-bit <iden> to a secure 256-bit <iden> key. It adds a new option to use <iden> keys for interoperating with older clients.;Update website to the latest design  ;latest design;Similar;0.5862385630607605
Fixup <file_name> so that its worthy of production use.;This changes the default from the insecure 1024-bit <iden> to a secure 256-bit <iden> key. It adds a new option to use <iden> keys for interoperating with older clients.;Transfer to/from <iden> directly from <iden>  ;<pr_link>;Similar;0.6120105385780334
Fixup <file_name> so that its worthy of production use.;This changes the default from the insecure 1024-bit <iden> to a secure 256-bit <iden> key. It adds a new option to use <iden> keys for interoperating with older clients.;add @override for subclass override method;subclass override method;Similar;0.6775687336921692
Fixup <file_name> so that its worthy of production use.;This changes the default from the insecure 1024-bit <iden> to a secure 256-bit <iden> key. It adds a new option to use <iden> keys for interoperating with older clients.;Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Similar;0.6417595148086548
Fixup <file_name> so that its worthy of production use.;This changes the default from the insecure 1024-bit <iden> to a secure 256-bit <iden> key. It adds a new option to use <iden> keys for interoperating with older clients.;Partially revert connection timeout behavior  ;The modification of the timeout behavior during connection caused problems;Similar;0.536017656326294
Fixup <file_name> so that its worthy of production use.;This changes the default from the insecure 1024-bit <iden> to a secure 256-bit <iden> key. It adds a new option to use <iden> keys for interoperating with older clients.;The changes to <iden>s  <file_name> have been ported  ;Upstream commit of <iden> / <iden> fix, This does not include the introduction of PlatformTest, which will be difficult to write so it works everywhere;Similar;0.676426112651825
Fixup <file_name> so that its worthy of production use.;This changes the default from the insecure 1024-bit <iden> to a secure 256-bit <iden> key. It adds a new option to use <iden> keys for interoperating with older clients.;Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Similar;0.6425790786743164
Fixup <file_name> so that its worthy of production use.;This changes the default from the insecure 1024-bit <iden> to a secure 256-bit <iden> key. It adds a new option to use <iden> keys for interoperating with older clients.;Return <file_name> to previous (e.g. KitKat) behavior;this change required to handle this <iden> scenario;Similar;0.6450374126434326
Fixup <file_name> so that its worthy of production use.;This changes the default from the insecure 1024-bit <iden> to a secure 256-bit <iden> key. It adds a new option to use <iden> keys for interoperating with older clients.;Document <file_name> throwing modes;To include the <pr_link> information;Similar;0.6250675320625305
Fixup <file_name> so that its worthy of production use.;This changes the default from the insecure 1024-bit <iden> to a secure 256-bit <iden> key. It adds a new option to use <iden> keys for interoperating with older clients.;Convert <file_name> to Kotlin;<pr_link>, <iden>, <file_name>;Similar;0.6663693189620972
Fixup <file_name> so that its worthy of production use.;This changes the default from the insecure 1024-bit <iden> to a secure 256-bit <iden> key. It adds a new option to use <iden> keys for interoperating with older clients.;Convert <file_name>, <file_name> to Kotlin  ;"to Kotlin

Decision: Rename <file_name> <version> to .kt (and others)  ";Similar;0.6691349148750305
Fixup <file_name> so that its worthy of production use.;This changes the default from the insecure 1024-bit <iden> to a secure 256-bit <iden> key. It adds a new option to use <iden> keys for interoperating with older clients.;Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Similar;0.7591949701309204
Fixup <file_name> so that its worthy of production use.;This changes the default from the insecure 1024-bit <iden> to a secure 256-bit <iden> key. It adds a new option to use <iden> keys for interoperating with older clients.;Just pass the <iden> and <iden> objects in directly;Dont summarize the request and response;Similar;0.5659021139144897
Fixup <file_name> so that its worthy of production use.;This changes the default from the insecure 1024-bit <iden> to a secure 256-bit <iden> key. It adds a new option to use <iden> keys for interoperating with older clients.;Fix a race in <method_name> ( <pr_link> );We were assuming on a client failure the server wouldnt have any further events. But it will get a failure if we give it a moment. This was causing some test flakiness.;Similar;0.6490028500556946
Fixup <file_name> so that its worthy of production use.;This changes the default from the insecure 1024-bit <iden> to a secure 256-bit <iden> key. It adds a new option to use <iden> keys for interoperating with older clients.;Improve some Markdown;improve;Similar;0.6551250219345093
Fixup <file_name> so that its worthy of production use.;This changes the default from the insecure 1024-bit <iden> to a secure 256-bit <iden> key. It adds a new option to use <iden> keys for interoperating with older clients.;Refactor <file_name> by using <iden>;We can use <iden> instead of overriding <iden> abstract class;Similar;0.7549439668655396
Fixup <file_name> so that its worthy of production use.;This changes the default from the insecure 1024-bit <iden> to a secure 256-bit <iden> key. It adds a new option to use <iden> keys for interoperating with older clients.;Enable GitHub Security Scanning;To configure GitHub workflow for code security scanning;Similar;0.6774547100067139
Fixup <file_name> so that its worthy of production use.;This changes the default from the insecure 1024-bit <iden> to a secure 256-bit <iden> key. It adds a new option to use <iden> keys for interoperating with older clients.;load through bootstrap;-;Similar;0.5397374033927917
Fixup <file_name> so that its worthy of production use.;This changes the default from the insecure 1024-bit <iden> to a secure 256-bit <iden> key. It adds a new option to use <iden> keys for interoperating with older clients.;Fix bug where request body isnt sent when it should  ;request body isnt sent when it should;Similar;0.6157867908477783
Fixup <file_name> so that its worthy of production use.;This changes the default from the insecure 1024-bit <iden> to a secure 256-bit <iden> key. It adds a new option to use <iden> keys for interoperating with older clients.;Add support for following <iden> 307 temporary redirects  ;Fixes Android bug 41739;Similar;0.6231080293655396
Fixup <file_name> so that its worthy of production use.;This changes the default from the insecure 1024-bit <iden> to a secure 256-bit <iden> key. It adds a new option to use <iden> keys for interoperating with older clients.;Add wildcard hostnames support in <file_name>;support;Similar;0.6829620599746704
Fixup <file_name> so that its worthy of production use.;This changes the default from the insecure 1024-bit <iden> to a secure 256-bit <iden> key. It adds a new option to use <iden> keys for interoperating with older clients.;Fix correctness of WebSocketReader reserved flags test;reserved flags;Similar;0.6983884572982788
Support client authentication in <file_name>;client authentication;Remove <iden>-mode <iden> cipher suites;This removes the following cipher suites as supported-by-default;Similar;0.5099689364433289
Support client authentication in <file_name>;client authentication;Fix Javadoc builds with the jsr305 dependency  ;Because multiple modules share a package we need to share the dependency on everything in package-info.java;Similar;0.5311746597290039
Support client authentication in <file_name>;client authentication;Make the  <file_name>  a little better.  <enter> <iden> threads by their URLs. Dont follow all fragments of the same <iden>;"For better organization; to prevent following all fragments of the same <iden>";Similar;0.5527060031890869
Support client authentication in <file_name>;client authentication;Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;Similar;0.6657201051712036
Support client authentication in <file_name>;client authentication;Fix tests to share a common <iden>. Also fix the memory limit, which may prevent Travis from failing our tests.;share a common <iden>, memory limit, prevent Travis from failing our tests;Similar;0.5567172169685364
Support client authentication in <file_name>;client authentication;Update readme and changelog for <version>;<version>;Similar;0.6701607704162598
Support client authentication in <file_name>;client authentication;New <file_name> class to normalize certificate chains  ;The goal of this is to get the root <iden> certificate into the certificate chain, so that it can be considered by the certificate pinner;Similar;0.6749415397644043
Support client authentication in <file_name>;client authentication;Fix some get prefixes on <file_name> and <method_name>;"-
None";Similar;0.7334514856338501
Support client authentication in <file_name>;client authentication;Add <method_name>;Might be useful to expose this bookkeeping to app developers;Similar;0.6490374207496643
Support client authentication in <file_name>;client authentication;Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Similar;0.7234944105148315
Support client authentication in <file_name>;client authentication;Expose internal APIs for pluggable file systems, Also migrate all of our tests to use the <method_name>  ;We arent yet ready to make <iden> a public type, but I dont mind making it _almost_ available via an internal API for those brave enough to try that, Its simpler.;Similar;0.6322614550590515
Support client authentication in <file_name>;client authentication;Fix <iden> post retransmit in the new API  ;We dont buffer response bodies in the new API. But we should retransmit POST bodies when a request fails.;Similar;0.613166332244873
Support client authentication in <file_name>;client authentication;Add a test for corner-case behavior;Im looking to make HttpURLConnectionImpl delegate to Job, and that means writing tests for all the weird things it does above HttpEngine.;Similar;0.5438375473022461
Support client authentication in <file_name>;client authentication;Add some pings to force happens-before in <iden> tests;Previously we were relying on accidents to get our tests to pass;Similar;0.5562190413475037
Support client authentication in <file_name>;client authentication;Track <file_name> ownership  ;<file_name> ownership is somewhat racy: when an HttpURLConnection reads the last byte of a connection, its ownership is released and given to the <method_name>;Similar;0.6428771018981934
Support client authentication in <file_name>;client authentication;Move  <file_name>  pooling logic  ;"previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams; move  <file_name>  reuse to  <file_name>, with policy informed by  <method_name>  specifying what to do when the  <file_name>  becomes idle: pool, close or hold, so the  <file_name>  does what its told.";Similar;0.6521134972572327
Support client authentication in <file_name>;client authentication;Implement moving bytes between OkBuffers  ;This is more complicated than Id anticipated;Similar;0.5898657441139221
Support client authentication in <file_name>;client authentication;"Define async APIs and switch <file_name> to use <iden> directly. I think this is the best route going forward; and eventually we could invert this relationship to have <iden> depending on <file_name> directly rather than vice versa.";Using <iden> directly introduces some duplicated code with <iden>. It also breaks the <file_name> cache.;Similar;0.5083637237548828
Support client authentication in <file_name>;client authentication;Fix checkstyle issues in new <iden> code;checkstyle issues;Similar;0.6005402207374573
Support client authentication in <file_name>;client authentication;Introduce a <file_name> interface between engine and connection.;This breaks the direct dependency from <file_name> to <method_name>;Similar;0.7808568477630615
Support client authentication in <file_name>;client authentication;Update to the latest <method_name>;Includes everything thru 8842981cbcfe20eb4721c0a2c867fa9a18233062;Similar;0.5354070663452148
Support client authentication in <file_name>;client authentication;Be more careful around IOExceptions;my goal is to make it easier to differentiate between protocol-level problems (bogus frames) from transport-level problems (closed sockets and EOF streams);Similar;0.5103270411491394
Support client authentication in <file_name>;client authentication;Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;Similar;0.6111013293266296
Support client authentication in <file_name>;client authentication;Move out of the <file_name> package;To promote the code into AOSP, well keep this package as-is and do the jarjar in <iden> instead;Similar;0.5085105895996094
Support client authentication in <file_name>;client authentication;Make the `<method_name>` return full working connections;Previously the returned connections required the caller to do extra work: setting up tunnels and performing an `<iden>` handshake. With this change, we make a complete working connection in `<method_name>`. This will make it easier to fix fallback when a single domain has multiple `<iden>` addresses that are not reachable. Also, this will make it easier to do SPDY through `<iden>` proxies.;Similar;0.698230504989624
Support client authentication in <file_name>;client authentication;Add error-prone compiler and fix its found issues;error-prone, its found issues;Similar;0.5665981769561768
Support client authentication in <file_name>;client authentication;Expose <iden> directly on <method_name>  ;direct;Similar;0.6677184104919434
Support client authentication in <file_name>;client authentication;Use HTML entity for ampersand;to represent the ampersand symbol in HTML;Similar;0.6771645545959473
Support client authentication in <file_name>;client authentication;Add convenience overload for <iden>-backed <method_name>;convenience;Similar;0.6931890249252319
Support client authentication in <file_name>;client authentication;Update website to the latest design  ;latest design;Similar;0.5362682938575745
Support client authentication in <file_name>;client authentication;Transfer to/from <iden> directly from <iden>  ;<pr_link>;Similar;0.6080312132835388
Support client authentication in <file_name>;client authentication;add @override for subclass override method;subclass override method;Similar;0.6898893713951111
Support client authentication in <file_name>;client authentication;Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Similar;0.5392572283744812
Support client authentication in <file_name>;client authentication;Partially revert connection timeout behavior  ;The modification of the timeout behavior during connection caused problems;Similar;0.50042724609375
Support client authentication in <file_name>;client authentication;The changes to <iden>s  <file_name> have been ported  ;Upstream commit of <iden> / <iden> fix, This does not include the introduction of PlatformTest, which will be difficult to write so it works everywhere;Similar;0.6890202760696411
Support client authentication in <file_name>;client authentication;Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Similar;0.5850895643234253
Support client authentication in <file_name>;client authentication;Return <file_name> to previous (e.g. KitKat) behavior;this change required to handle this <iden> scenario;Similar;0.6749823689460754
Support client authentication in <file_name>;client authentication;Document <file_name> throwing modes;To include the <pr_link> information;Similar;0.5820460915565491
Support client authentication in <file_name>;client authentication;Convert <file_name> to Kotlin;<pr_link>, <iden>, <file_name>;Similar;0.6937079429626465
Support client authentication in <file_name>;client authentication;Convert <file_name>, <file_name> to Kotlin  ;"to Kotlin

Decision: Rename <file_name> <version> to .kt (and others)  ";Similar;0.6851098537445068
Support client authentication in <file_name>;client authentication;Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Similar;0.7535896301269531
Support client authentication in <file_name>;client authentication;Just pass the <iden> and <iden> objects in directly;Dont summarize the request and response;Similar;0.537756085395813
Support client authentication in <file_name>;client authentication;Fix a race in <method_name> ( <pr_link> );We were assuming on a client failure the server wouldnt have any further events. But it will get a failure if we give it a moment. This was causing some test flakiness.;Similar;0.6024665236473083
Support client authentication in <file_name>;client authentication;Refactor <file_name> by using <iden>;We can use <iden> instead of overriding <iden> abstract class;Similar;0.7741643190383911
Support client authentication in <file_name>;client authentication;Enable GitHub Security Scanning;To configure GitHub workflow for code security scanning;Similar;0.7943511009216309
Support client authentication in <file_name>;client authentication;load through bootstrap;-;Similar;0.5634257793426514
Support client authentication in <file_name>;client authentication;Fix bug where request body isnt sent when it should  ;request body isnt sent when it should;Similar;0.5374305844306946
Support client authentication in <file_name>;client authentication;Add support for following <iden> 307 temporary redirects  ;Fixes Android bug 41739;Similar;0.5683751106262207
Support client authentication in <file_name>;client authentication;Add wildcard hostnames support in <file_name>;support;Similar;0.7523443102836609
Support client authentication in <file_name>;client authentication;Fix correctness of WebSocketReader reserved flags test;reserved flags;Similar;0.6522696018218994
Remove <iden>-mode <iden> cipher suites;This removes the following cipher suites as supported-by-default;Make the  <file_name>  a little better.  <enter> <iden> threads by their URLs. Dont follow all fragments of the same <iden>;"For better organization; to prevent following all fragments of the same <iden>";Similar;0.6373013854026794
Remove <iden>-mode <iden> cipher suites;This removes the following cipher suites as supported-by-default;Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;Similar;0.6820234656333923
Remove <iden>-mode <iden> cipher suites;This removes the following cipher suites as supported-by-default;Collapse interceptors into a single chain;Instead of having a chain of application interceptors and a separate chain of network interceptors, this makes a single heterogeneous chain. It makes the <iden> core and network caller into interceptors.;Similar;0.6402645111083984
Remove <iden>-mode <iden> cipher suites;This removes the following cipher suites as supported-by-default;Update readme and changelog for <version>;<version>;Similar;0.5838868021965027
Remove <iden>-mode <iden> cipher suites;This removes the following cipher suites as supported-by-default;Fix some get prefixes on <file_name> and <method_name>;"-
None";Similar;0.5904664397239685
Remove <iden>-mode <iden> cipher suites;This removes the following cipher suites as supported-by-default;Add <method_name>;Might be useful to expose this bookkeeping to app developers;Similar;0.5981730222702026
Remove <iden>-mode <iden> cipher suites;This removes the following cipher suites as supported-by-default;Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Similar;0.6644097566604614
Remove <iden>-mode <iden> cipher suites;This removes the following cipher suites as supported-by-default;Drop our one remaining <iden> cipher suite;Tracking <iden> and Firefox, which have also dropped this cipher suite;Similar;0.8367103338241577
Remove <iden>-mode <iden> cipher suites;This removes the following cipher suites as supported-by-default;Expose internal APIs for pluggable file systems, Also migrate all of our tests to use the <method_name>  ;We arent yet ready to make <iden> a public type, but I dont mind making it _almost_ available via an internal API for those brave enough to try that, Its simpler.;Similar;0.5009482502937317
Remove <iden>-mode <iden> cipher suites;This removes the following cipher suites as supported-by-default;Change  <file_name>  to not implement java.net.ResponseCache;This marks some methods as  @deprecated and internal-only. Unfortunately we dont have a great mechanism to hide them from the documented <iden>.;Similar;0.7299588918685913
Remove <iden>-mode <iden> cipher suites;This removes the following cipher suites as supported-by-default;The implementation is built around one oversized method that runs top to bottom;I found this was easier to follow than the switch statement recommended by the <iden> standard;Similar;0.5341550707817078
Remove <iden>-mode <iden> cipher suites;This removes the following cipher suites as supported-by-default;Fix <iden> post retransmit in the new API  ;We dont buffer response bodies in the new API. But we should retransmit POST bodies when a request fails.;Similar;0.5369491577148438
Remove <iden>-mode <iden> cipher suites;This removes the following cipher suites as supported-by-default;Add some pings to force happens-before in <iden> tests;Previously we were relying on accidents to get our tests to pass;Similar;0.5231217741966248
Remove <iden>-mode <iden> cipher suites;This removes the following cipher suites as supported-by-default;Track <file_name> ownership  ;<file_name> ownership is somewhat racy: when an HttpURLConnection reads the last byte of a connection, its ownership is released and given to the <method_name>;Similar;0.5169403553009033
Remove <iden>-mode <iden> cipher suites;This removes the following cipher suites as supported-by-default;Move  <file_name>  pooling logic  ;"previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams; move  <file_name>  reuse to  <file_name>, with policy informed by  <method_name>  specifying what to do when the  <file_name>  becomes idle: pool, close or hold, so the  <file_name>  does what its told.";Similar;0.6325464844703674
Remove <iden>-mode <iden> cipher suites;This removes the following cipher suites as supported-by-default;Implement moving bytes between OkBuffers  ;This is more complicated than Id anticipated;Similar;0.5872673988342285
Remove <iden>-mode <iden> cipher suites;This removes the following cipher suites as supported-by-default;Remove <iden> 2 warnings;Small docs fixes;Similar;0.7959824800491333
Remove <iden>-mode <iden> cipher suites;This removes the following cipher suites as supported-by-default;Fix checkstyle issues in new <iden> code;checkstyle issues;Similar;0.5363190770149231
Remove <iden>-mode <iden> cipher suites;This removes the following cipher suites as supported-by-default;Kill <file_name> in the process  ;Teach <file_name> <iden>;Similar;0.6905872225761414
Remove <iden>-mode <iden> cipher suites;This removes the following cipher suites as supported-by-default;Dont use <iden> APIs not in Gingerbread;APIs not in Gingerbread;Similar;0.5373148918151855
Remove <iden>-mode <iden> cipher suites;This removes the following cipher suites as supported-by-default;Introduce a <file_name> interface between engine and connection.;This breaks the direct dependency from <file_name> to <method_name>;Similar;0.548835277557373
Remove <iden>-mode <iden> cipher suites;This removes the following cipher suites as supported-by-default;Make  <file_name> less flaky;I was seeing flaky results in the debugger because pooled connections were being evicted as the test ran;Similar;0.635663628578186
Remove <iden>-mode <iden> cipher suites;This removes the following cipher suites as supported-by-default;Update to the latest <method_name>;Includes everything thru 8842981cbcfe20eb4721c0a2c867fa9a18233062;Similar;0.5165865421295166
Remove <iden>-mode <iden> cipher suites;This removes the following cipher suites as supported-by-default;Be more careful around IOExceptions;my goal is to make it easier to differentiate between protocol-level problems (bogus frames) from transport-level problems (closed sockets and EOF streams);Similar;0.5264699459075928
Remove <iden>-mode <iden> cipher suites;This removes the following cipher suites as supported-by-default;Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;Similar;0.5764471292495728
Remove <iden>-mode <iden> cipher suites;This removes the following cipher suites as supported-by-default;Move out of the <file_name> package;To promote the code into AOSP, well keep this package as-is and do the jarjar in <iden> instead;Similar;0.8216295838356018
Remove <iden>-mode <iden> cipher suites;This removes the following cipher suites as supported-by-default;Fix <iden> which was being computed incorrectly;<enter> We were only returning true once we were already in a tunnel. This was bogus. In theory a <iden> tunnel sending extra data could be corrupted due to this bug.;Similar;0.6280367374420166
Remove <iden>-mode <iden> cipher suites;This removes the following cipher suites as supported-by-default;Add error-prone compiler and fix its found issues;error-prone, its found issues;Similar;0.5554891228675842
Remove <iden>-mode <iden> cipher suites;This removes the following cipher suites as supported-by-default;Remove old <iden> protocol method;old;Similar;0.8496418595314026
Remove <iden>-mode <iden> cipher suites;This removes the following cipher suites as supported-by-default;Expose <iden> directly on <method_name>  ;direct;Similar;0.6102444529533386
Remove <iden>-mode <iden> cipher suites;This removes the following cipher suites as supported-by-default;Use HTML entity for ampersand;to represent the ampersand symbol in HTML;Similar;0.589475691318512
Remove <iden>-mode <iden> cipher suites;This removes the following cipher suites as supported-by-default;Add convenience overload for <iden>-backed <method_name>;convenience;Similar;0.5581589937210083
Remove <iden>-mode <iden> cipher suites;This removes the following cipher suites as supported-by-default;Drop unused dependencies;unused;Similar;0.7264622449874878
Remove <iden>-mode <iden> cipher suites;This removes the following cipher suites as supported-by-default;Transfer to/from <iden> directly from <iden>  ;<pr_link>;Similar;0.6060274243354797
Remove <iden>-mode <iden> cipher suites;This removes the following cipher suites as supported-by-default;add @override for subclass override method;subclass override method;Similar;0.5054577589035034
Remove <iden>-mode <iden> cipher suites;This removes the following cipher suites as supported-by-default;Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Similar;0.6008577346801758
Remove <iden>-mode <iden> cipher suites;This removes the following cipher suites as supported-by-default;Partially revert connection timeout behavior  ;The modification of the timeout behavior during connection caused problems;Similar;0.5442087054252625
Remove <iden>-mode <iden> cipher suites;This removes the following cipher suites as supported-by-default;This change logs the exception but prevent it from propagating out of the top of the call stack.;This decreases overall flakiness.;Similar;0.5546399354934692
Remove <iden>-mode <iden> cipher suites;This removes the following cipher suites as supported-by-default;The changes to <iden>s  <file_name> have been ported  ;Upstream commit of <iden> / <iden> fix, This does not include the introduction of PlatformTest, which will be difficult to write so it works everywhere;Similar;0.5690796971321106
Remove <iden>-mode <iden> cipher suites;This removes the following cipher suites as supported-by-default;Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Similar;0.7439098954200745
Remove <iden>-mode <iden> cipher suites;This removes the following cipher suites as supported-by-default;Return <file_name> to previous (e.g. KitKat) behavior;this change required to handle this <iden> scenario;Similar;0.5869722962379456
Remove <iden>-mode <iden> cipher suites;This removes the following cipher suites as supported-by-default;Document <file_name> throwing modes;To include the <pr_link> information;Similar;0.6600468158721924
Remove <iden>-mode <iden> cipher suites;This removes the following cipher suites as supported-by-default;Convert <file_name> to Kotlin;<pr_link>, <iden>, <file_name>;Similar;0.6519672870635986
Remove <iden>-mode <iden> cipher suites;This removes the following cipher suites as supported-by-default;Convert <file_name>, <file_name> to Kotlin  ;"to Kotlin

Decision: Rename <file_name> <version> to .kt (and others)  ";Similar;0.6589320302009583
Remove <iden>-mode <iden> cipher suites;This removes the following cipher suites as supported-by-default;Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Similar;0.5559642910957336
Remove <iden>-mode <iden> cipher suites;This removes the following cipher suites as supported-by-default;Fail HTTP/2 connections if the pong is not received;This removes the abstraction from our http2 package;Similar;0.6691393256187439
Remove <iden>-mode <iden> cipher suites;This removes the following cipher suites as supported-by-default;Just pass the <iden> and <iden> objects in directly;Dont summarize the request and response;Similar;0.5787308812141418
Remove <iden>-mode <iden> cipher suites;This removes the following cipher suites as supported-by-default;Fix a race in <method_name> ( <pr_link> );We were assuming on a client failure the server wouldnt have any further events. But it will get a failure if we give it a moment. This was causing some test flakiness.;Similar;0.5583406090736389
Remove <iden>-mode <iden> cipher suites;This removes the following cipher suites as supported-by-default;Improve some Markdown;improve;Similar;0.5011264681816101
Remove <iden>-mode <iden> cipher suites;This removes the following cipher suites as supported-by-default;fix <issue_link> : PROPFIND request should not redirect to GET request;PROPFIND request should not redirect to GET request;Similar;0.5362069010734558
Remove <iden>-mode <iden> cipher suites;This removes the following cipher suites as supported-by-default;Refactor <file_name> by using <iden>;We can use <iden> instead of overriding <iden> abstract class;Similar;0.6398627161979675
Remove <iden>-mode <iden> cipher suites;This removes the following cipher suites as supported-by-default;Remove unnecessary use of grouping parentheses  ;Lets remove warnings found by errorprone.;Similar;0.7438495755195618
Remove <iden>-mode <iden> cipher suites;This removes the following cipher suites as supported-by-default;load through bootstrap;-;Similar;0.6051722764968872
Remove <iden>-mode <iden> cipher suites;This removes the following cipher suites as supported-by-default;Fix bug where request body isnt sent when it should  ;request body isnt sent when it should;Similar;0.6189207434654236
Remove <iden>-mode <iden> cipher suites;This removes the following cipher suites as supported-by-default;Add support for following <iden> 307 temporary redirects  ;Fixes Android bug 41739;Similar;0.5575644969940186
Remove <iden>-mode <iden> cipher suites;This removes the following cipher suites as supported-by-default;Fix correctness of WebSocketReader reserved flags test;reserved flags;Similar;0.525458574295044
Fix Javadoc builds with the jsr305 dependency  ;Because multiple modules share a package we need to share the dependency on everything in package-info.java;Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;Similar;0.6005683541297913
Fix Javadoc builds with the jsr305 dependency  ;Because multiple modules share a package we need to share the dependency on everything in package-info.java;Update readme and changelog for <version>;<version>;Similar;0.6697803735733032
Fix Javadoc builds with the jsr305 dependency  ;Because multiple modules share a package we need to share the dependency on everything in package-info.java;New <file_name> class to normalize certificate chains  ;The goal of this is to get the root <iden> certificate into the certificate chain, so that it can be considered by the certificate pinner;Similar;0.6335471272468567
Fix Javadoc builds with the jsr305 dependency  ;Because multiple modules share a package we need to share the dependency on everything in package-info.java;Fix some get prefixes on <file_name> and <method_name>;"-
None";Similar;0.6455446481704712
Fix Javadoc builds with the jsr305 dependency  ;Because multiple modules share a package we need to share the dependency on everything in package-info.java;Write some new connection pool tests;These use the <iden> APIs. Theyre high-level so they wont break with the implementation rewrite.;Similar;0.6228123307228088
Fix Javadoc builds with the jsr305 dependency  ;Because multiple modules share a package we need to share the dependency on everything in package-info.java;Add <method_name>;Might be useful to expose this bookkeeping to app developers;Similar;0.6116827130317688
Fix Javadoc builds with the jsr305 dependency  ;Because multiple modules share a package we need to share the dependency on everything in package-info.java;Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Similar;0.6645574569702148
Fix Javadoc builds with the jsr305 dependency  ;Because multiple modules share a package we need to share the dependency on everything in package-info.java;Expose internal APIs for pluggable file systems, Also migrate all of our tests to use the <method_name>  ;We arent yet ready to make <iden> a public type, but I dont mind making it _almost_ available via an internal API for those brave enough to try that, Its simpler.;Similar;0.5683462619781494
Fix Javadoc builds with the jsr305 dependency  ;Because multiple modules share a package we need to share the dependency on everything in package-info.java;Change  <file_name>  to not implement java.net.ResponseCache;This marks some methods as  @deprecated and internal-only. Unfortunately we dont have a great mechanism to hide them from the documented <iden>.;Similar;0.5144563913345337
Fix Javadoc builds with the jsr305 dependency  ;Because multiple modules share a package we need to share the dependency on everything in package-info.java;Fix <iden> post retransmit in the new API  ;We dont buffer response bodies in the new API. But we should retransmit POST bodies when a request fails.;Similar;0.7661961913108826
Fix Javadoc builds with the jsr305 dependency  ;Because multiple modules share a package we need to share the dependency on everything in package-info.java;Add a test for corner-case behavior;Im looking to make HttpURLConnectionImpl delegate to Job, and that means writing tests for all the weird things it does above HttpEngine.;Similar;0.6060460805892944
Fix Javadoc builds with the jsr305 dependency  ;Because multiple modules share a package we need to share the dependency on everything in package-info.java;Add some pings to force happens-before in <iden> tests;Previously we were relying on accidents to get our tests to pass;Similar;0.5976651906967163
Fix Javadoc builds with the jsr305 dependency  ;Because multiple modules share a package we need to share the dependency on everything in package-info.java;Move  <file_name>  pooling logic  ;"previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams; move  <file_name>  reuse to  <file_name>, with policy informed by  <method_name>  specifying what to do when the  <file_name>  becomes idle: pool, close or hold, so the  <file_name>  does what its told.";Similar;0.5986508727073669
Fix Javadoc builds with the jsr305 dependency  ;Because multiple modules share a package we need to share the dependency on everything in package-info.java;Implement moving bytes between OkBuffers  ;This is more complicated than Id anticipated;Similar;0.593806266784668
Fix Javadoc builds with the jsr305 dependency  ;Because multiple modules share a package we need to share the dependency on everything in package-info.java;Fix checkstyle issues in new <iden> code;checkstyle issues;Similar;0.7040594816207886
Fix Javadoc builds with the jsr305 dependency  ;Because multiple modules share a package we need to share the dependency on everything in package-info.java;Introduce a <file_name> interface between engine and connection.;This breaks the direct dependency from <file_name> to <method_name>;Similar;0.6335103511810303
Fix Javadoc builds with the jsr305 dependency  ;Because multiple modules share a package we need to share the dependency on everything in package-info.java;Update to the latest <method_name>;Includes everything thru 8842981cbcfe20eb4721c0a2c867fa9a18233062;Similar;0.6306509375572205
Fix Javadoc builds with the jsr305 dependency  ;Because multiple modules share a package we need to share the dependency on everything in package-info.java;Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;Similar;0.589846134185791
Fix Javadoc builds with the jsr305 dependency  ;Because multiple modules share a package we need to share the dependency on everything in package-info.java;Move out of the <file_name> package;To promote the code into AOSP, well keep this package as-is and do the jarjar in <iden> instead;Similar;0.5102306008338928
Fix Javadoc builds with the jsr305 dependency  ;Because multiple modules share a package we need to share the dependency on everything in package-info.java;Make the `<method_name>` return full working connections;Previously the returned connections required the caller to do extra work: setting up tunnels and performing an `<iden>` handshake. With this change, we make a complete working connection in `<method_name>`. This will make it easier to fix fallback when a single domain has multiple `<iden>` addresses that are not reachable. Also, this will make it easier to do SPDY through `<iden>` proxies.;Similar;0.578966498374939
Fix Javadoc builds with the jsr305 dependency  ;Because multiple modules share a package we need to share the dependency on everything in package-info.java;Add error-prone compiler and fix its found issues;error-prone, its found issues;Similar;0.6184581518173218
Fix Javadoc builds with the jsr305 dependency  ;Because multiple modules share a package we need to share the dependency on everything in package-info.java;Expose <iden> directly on <method_name>  ;direct;Similar;0.5431315898895264
Fix Javadoc builds with the jsr305 dependency  ;Because multiple modules share a package we need to share the dependency on everything in package-info.java;Use HTML entity for ampersand;to represent the ampersand symbol in HTML;Similar;0.5590535998344421
Fix Javadoc builds with the jsr305 dependency  ;Because multiple modules share a package we need to share the dependency on everything in package-info.java;Add convenience overload for <iden>-backed <method_name>;convenience;Similar;0.6242026090621948
Fix Javadoc builds with the jsr305 dependency  ;Because multiple modules share a package we need to share the dependency on everything in package-info.java;Update website to the latest design  ;latest design;Similar;0.6059948205947876
Fix Javadoc builds with the jsr305 dependency  ;Because multiple modules share a package we need to share the dependency on everything in package-info.java;add @override for subclass override method;subclass override method;Similar;0.6604923009872437
Fix Javadoc builds with the jsr305 dependency  ;Because multiple modules share a package we need to share the dependency on everything in package-info.java;Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Similar;0.7341834306716919
Fix Javadoc builds with the jsr305 dependency  ;Because multiple modules share a package we need to share the dependency on everything in package-info.java;Partially revert connection timeout behavior  ;The modification of the timeout behavior during connection caused problems;Similar;0.515056312084198
Fix Javadoc builds with the jsr305 dependency  ;Because multiple modules share a package we need to share the dependency on everything in package-info.java;The changes to <iden>s  <file_name> have been ported  ;Upstream commit of <iden> / <iden> fix, This does not include the introduction of PlatformTest, which will be difficult to write so it works everywhere;Similar;0.6579785346984863
Fix Javadoc builds with the jsr305 dependency  ;Because multiple modules share a package we need to share the dependency on everything in package-info.java;Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Similar;0.6202523112297058
Fix Javadoc builds with the jsr305 dependency  ;Because multiple modules share a package we need to share the dependency on everything in package-info.java;Return <file_name> to previous (e.g. KitKat) behavior;this change required to handle this <iden> scenario;Similar;0.5898822546005249
Fix Javadoc builds with the jsr305 dependency  ;Because multiple modules share a package we need to share the dependency on everything in package-info.java;Convert <file_name> to Kotlin;<pr_link>, <iden>, <file_name>;Similar;0.6528814435005188
Fix Javadoc builds with the jsr305 dependency  ;Because multiple modules share a package we need to share the dependency on everything in package-info.java;Convert <file_name>, <file_name> to Kotlin  ;"to Kotlin

Decision: Rename <file_name> <version> to .kt (and others)  ";Similar;0.6441131830215454
Fix Javadoc builds with the jsr305 dependency  ;Because multiple modules share a package we need to share the dependency on everything in package-info.java;Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Similar;0.7029802799224854
Fix Javadoc builds with the jsr305 dependency  ;Because multiple modules share a package we need to share the dependency on everything in package-info.java;Fix a race in <method_name> ( <pr_link> );We were assuming on a client failure the server wouldnt have any further events. But it will get a failure if we give it a moment. This was causing some test flakiness.;Similar;0.6633303165435791
Fix Javadoc builds with the jsr305 dependency  ;Because multiple modules share a package we need to share the dependency on everything in package-info.java;Refactor <file_name> by using <iden>;We can use <iden> instead of overriding <iden> abstract class;Similar;0.6008397936820984
Fix Javadoc builds with the jsr305 dependency  ;Because multiple modules share a package we need to share the dependency on everything in package-info.java;Fix bug where request body isnt sent when it should  ;request body isnt sent when it should;Similar;0.5878133773803711
Fix Javadoc builds with the jsr305 dependency  ;Because multiple modules share a package we need to share the dependency on everything in package-info.java;Add support for following <iden> 307 temporary redirects  ;Fixes Android bug 41739;Similar;0.5843781232833862
Fix Javadoc builds with the jsr305 dependency  ;Because multiple modules share a package we need to share the dependency on everything in package-info.java;Add wildcard hostnames support in <file_name>;support;Similar;0.6000585556030273
Fix Javadoc builds with the jsr305 dependency  ;Because multiple modules share a package we need to share the dependency on everything in package-info.java;Fix correctness of WebSocketReader reserved flags test;reserved flags;Similar;0.5994706749916077
Make the  <file_name>  a little better.  <enter> <iden> threads by their URLs. Dont follow all fragments of the same <iden>;"For better organization; to prevent following all fragments of the same <iden>";Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;Similar;0.7031486630439758
Make the  <file_name>  a little better.  <enter> <iden> threads by their URLs. Dont follow all fragments of the same <iden>;"For better organization; to prevent following all fragments of the same <iden>";Fix tests to share a common <iden>. Also fix the memory limit, which may prevent Travis from failing our tests.;share a common <iden>, memory limit, prevent Travis from failing our tests;Similar;0.6098715662956238
Make the  <file_name>  a little better.  <enter> <iden> threads by their URLs. Dont follow all fragments of the same <iden>;"For better organization; to prevent following all fragments of the same <iden>";Update readme and changelog for <version>;<version>;Similar;0.5803903341293335
Make the  <file_name>  a little better.  <enter> <iden> threads by their URLs. Dont follow all fragments of the same <iden>;"For better organization; to prevent following all fragments of the same <iden>";New <file_name> class to normalize certificate chains  ;The goal of this is to get the root <iden> certificate into the certificate chain, so that it can be considered by the certificate pinner;Similar;0.6022868156433105
Make the  <file_name>  a little better.  <enter> <iden> threads by their URLs. Dont follow all fragments of the same <iden>;"For better organization; to prevent following all fragments of the same <iden>";Fix some get prefixes on <file_name> and <method_name>;"-
None";Similar;0.6938799023628235
Make the  <file_name>  a little better.  <enter> <iden> threads by their URLs. Dont follow all fragments of the same <iden>;"For better organization; to prevent following all fragments of the same <iden>";Add <method_name>;Might be useful to expose this bookkeeping to app developers;Similar;0.5541200041770935
Make the  <file_name>  a little better.  <enter> <iden> threads by their URLs. Dont follow all fragments of the same <iden>;"For better organization; to prevent following all fragments of the same <iden>";Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Similar;0.6433582305908203
Make the  <file_name>  a little better.  <enter> <iden> threads by their URLs. Dont follow all fragments of the same <iden>;"For better organization; to prevent following all fragments of the same <iden>";Drop our one remaining <iden> cipher suite;Tracking <iden> and Firefox, which have also dropped this cipher suite;Similar;0.5631440281867981
Make the  <file_name>  a little better.  <enter> <iden> threads by their URLs. Dont follow all fragments of the same <iden>;"For better organization; to prevent following all fragments of the same <iden>";Expose internal APIs for pluggable file systems, Also migrate all of our tests to use the <method_name>  ;We arent yet ready to make <iden> a public type, but I dont mind making it _almost_ available via an internal API for those brave enough to try that, Its simpler.;Similar;0.6401084661483765
Make the  <file_name>  a little better.  <enter> <iden> threads by their URLs. Dont follow all fragments of the same <iden>;"For better organization; to prevent following all fragments of the same <iden>";Change  <file_name>  to not implement java.net.ResponseCache;This marks some methods as  @deprecated and internal-only. Unfortunately we dont have a great mechanism to hide them from the documented <iden>.;Similar;0.6553516387939453
Make the  <file_name>  a little better.  <enter> <iden> threads by their URLs. Dont follow all fragments of the same <iden>;"For better organization; to prevent following all fragments of the same <iden>";Fix <iden> post retransmit in the new API  ;We dont buffer response bodies in the new API. But we should retransmit POST bodies when a request fails.;Similar;0.5794721245765686
Make the  <file_name>  a little better.  <enter> <iden> threads by their URLs. Dont follow all fragments of the same <iden>;"For better organization; to prevent following all fragments of the same <iden>";Add some pings to force happens-before in <iden> tests;Previously we were relying on accidents to get our tests to pass;Similar;0.6043145656585693
Make the  <file_name>  a little better.  <enter> <iden> threads by their URLs. Dont follow all fragments of the same <iden>;"For better organization; to prevent following all fragments of the same <iden>";Move  <file_name>  pooling logic  ;"previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams; move  <file_name>  reuse to  <file_name>, with policy informed by  <method_name>  specifying what to do when the  <file_name>  becomes idle: pool, close or hold, so the  <file_name>  does what its told.";Similar;0.59870845079422
Make the  <file_name>  a little better.  <enter> <iden> threads by their URLs. Dont follow all fragments of the same <iden>;"For better organization; to prevent following all fragments of the same <iden>";Implement moving bytes between OkBuffers  ;This is more complicated than Id anticipated;Similar;0.5330994129180908
Make the  <file_name>  a little better.  <enter> <iden> threads by their URLs. Dont follow all fragments of the same <iden>;"For better organization; to prevent following all fragments of the same <iden>";Dont attempt <iden> modes we know will fail.;we know will fail;Similar;0.5176294445991516
Make the  <file_name>  a little better.  <enter> <iden> threads by their URLs. Dont follow all fragments of the same <iden>;"For better organization; to prevent following all fragments of the same <iden>";Remove <iden> 2 warnings;Small docs fixes;Similar;0.5088664293289185
Make the  <file_name>  a little better.  <enter> <iden> threads by their URLs. Dont follow all fragments of the same <iden>;"For better organization; to prevent following all fragments of the same <iden>";"Define async APIs and switch <file_name> to use <iden> directly. I think this is the best route going forward; and eventually we could invert this relationship to have <iden> depending on <file_name> directly rather than vice versa.";Using <iden> directly introduces some duplicated code with <iden>. It also breaks the <file_name> cache.;Similar;0.610716700553894
Make the  <file_name>  a little better.  <enter> <iden> threads by their URLs. Dont follow all fragments of the same <iden>;"For better organization; to prevent following all fragments of the same <iden>";Fix checkstyle issues in new <iden> code;checkstyle issues;Similar;0.6049550175666809
Make the  <file_name>  a little better.  <enter> <iden> threads by their URLs. Dont follow all fragments of the same <iden>;"For better organization; to prevent following all fragments of the same <iden>";Kill <file_name> in the process  ;Teach <file_name> <iden>;Similar;0.5367506742477417
Make the  <file_name>  a little better.  <enter> <iden> threads by their URLs. Dont follow all fragments of the same <iden>;"For better organization; to prevent following all fragments of the same <iden>";Introduce a <file_name> interface between engine and connection.;This breaks the direct dependency from <file_name> to <method_name>;Similar;0.58631432056427
Make the  <file_name>  a little better.  <enter> <iden> threads by their URLs. Dont follow all fragments of the same <iden>;"For better organization; to prevent following all fragments of the same <iden>";Make  <file_name> less flaky;I was seeing flaky results in the debugger because pooled connections were being evicted as the test ran;Similar;0.6213626265525818
Make the  <file_name>  a little better.  <enter> <iden> threads by their URLs. Dont follow all fragments of the same <iden>;"For better organization; to prevent following all fragments of the same <iden>";Update to the latest <method_name>;Includes everything thru 8842981cbcfe20eb4721c0a2c867fa9a18233062;Similar;0.503564178943634
Make the  <file_name>  a little better.  <enter> <iden> threads by their URLs. Dont follow all fragments of the same <iden>;"For better organization; to prevent following all fragments of the same <iden>";Be more careful around IOExceptions;my goal is to make it easier to differentiate between protocol-level problems (bogus frames) from transport-level problems (closed sockets and EOF streams);Similar;0.544965922832489
Make the  <file_name>  a little better.  <enter> <iden> threads by their URLs. Dont follow all fragments of the same <iden>;"For better organization; to prevent following all fragments of the same <iden>";Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;Similar;0.5078009366989136
Make the  <file_name>  a little better.  <enter> <iden> threads by their URLs. Dont follow all fragments of the same <iden>;"For better organization; to prevent following all fragments of the same <iden>";Move out of the <file_name> package;To promote the code into AOSP, well keep this package as-is and do the jarjar in <iden> instead;Similar;0.6373474597930908
Make the  <file_name>  a little better.  <enter> <iden> threads by their URLs. Dont follow all fragments of the same <iden>;"For better organization; to prevent following all fragments of the same <iden>";Make the `<method_name>` return full working connections;Previously the returned connections required the caller to do extra work: setting up tunnels and performing an `<iden>` handshake. With this change, we make a complete working connection in `<method_name>`. This will make it easier to fix fallback when a single domain has multiple `<iden>` addresses that are not reachable. Also, this will make it easier to do SPDY through `<iden>` proxies.;Similar;0.5086150169372559
Make the  <file_name>  a little better.  <enter> <iden> threads by their URLs. Dont follow all fragments of the same <iden>;"For better organization; to prevent following all fragments of the same <iden>";Add error-prone compiler and fix its found issues;error-prone, its found issues;Similar;0.5375122427940369
Make the  <file_name>  a little better.  <enter> <iden> threads by their URLs. Dont follow all fragments of the same <iden>;"For better organization; to prevent following all fragments of the same <iden>";Remove old <iden> protocol method;old;Similar;0.5523024797439575
Make the  <file_name>  a little better.  <enter> <iden> threads by their URLs. Dont follow all fragments of the same <iden>;"For better organization; to prevent following all fragments of the same <iden>";Expose <iden> directly on <method_name>  ;direct;Similar;0.5458216667175293
Make the  <file_name>  a little better.  <enter> <iden> threads by their URLs. Dont follow all fragments of the same <iden>;"For better organization; to prevent following all fragments of the same <iden>";Use HTML entity for ampersand;to represent the ampersand symbol in HTML;Similar;0.5537574887275696
Make the  <file_name>  a little better.  <enter> <iden> threads by their URLs. Dont follow all fragments of the same <iden>;"For better organization; to prevent following all fragments of the same <iden>";Add convenience overload for <iden>-backed <method_name>;convenience;Similar;0.647517204284668
Make the  <file_name>  a little better.  <enter> <iden> threads by their URLs. Dont follow all fragments of the same <iden>;"For better organization; to prevent following all fragments of the same <iden>";add @override for subclass override method;subclass override method;Similar;0.6007266044616699
Make the  <file_name>  a little better.  <enter> <iden> threads by their URLs. Dont follow all fragments of the same <iden>;"For better organization; to prevent following all fragments of the same <iden>";Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Similar;0.5814629793167114
Make the  <file_name>  a little better.  <enter> <iden> threads by their URLs. Dont follow all fragments of the same <iden>;"For better organization; to prevent following all fragments of the same <iden>";This change logs the exception but prevent it from propagating out of the top of the call stack.;This decreases overall flakiness.;Similar;0.6197996139526367
Make the  <file_name>  a little better.  <enter> <iden> threads by their URLs. Dont follow all fragments of the same <iden>;"For better organization; to prevent following all fragments of the same <iden>";The changes to <iden>s  <file_name> have been ported  ;Upstream commit of <iden> / <iden> fix, This does not include the introduction of PlatformTest, which will be difficult to write so it works everywhere;Similar;0.6467465758323669
Make the  <file_name>  a little better.  <enter> <iden> threads by their URLs. Dont follow all fragments of the same <iden>;"For better organization; to prevent following all fragments of the same <iden>";Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Similar;0.6487331390380859
Make the  <file_name>  a little better.  <enter> <iden> threads by their URLs. Dont follow all fragments of the same <iden>;"For better organization; to prevent following all fragments of the same <iden>";Return <file_name> to previous (e.g. KitKat) behavior;this change required to handle this <iden> scenario;Similar;0.5273209810256958
Make the  <file_name>  a little better.  <enter> <iden> threads by their URLs. Dont follow all fragments of the same <iden>;"For better organization; to prevent following all fragments of the same <iden>";Document <file_name> throwing modes;To include the <pr_link> information;Similar;0.6381928324699402
Make the  <file_name>  a little better.  <enter> <iden> threads by their URLs. Dont follow all fragments of the same <iden>;"For better organization; to prevent following all fragments of the same <iden>";Convert <file_name> to Kotlin;<pr_link>, <iden>, <file_name>;Similar;0.5719615817070007
Make the  <file_name>  a little better.  <enter> <iden> threads by their URLs. Dont follow all fragments of the same <iden>;"For better organization; to prevent following all fragments of the same <iden>";Convert <file_name>, <file_name> to Kotlin  ;"to Kotlin

Decision: Rename <file_name> <version> to .kt (and others)  ";Similar;0.5860164165496826
Make the  <file_name>  a little better.  <enter> <iden> threads by their URLs. Dont follow all fragments of the same <iden>;"For better organization; to prevent following all fragments of the same <iden>";Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Similar;0.5791329145431519
Make the  <file_name>  a little better.  <enter> <iden> threads by their URLs. Dont follow all fragments of the same <iden>;"For better organization; to prevent following all fragments of the same <iden>";Fail HTTP/2 connections if the pong is not received;This removes the abstraction from our http2 package;Similar;0.584555983543396
Make the  <file_name>  a little better.  <enter> <iden> threads by their URLs. Dont follow all fragments of the same <iden>;"For better organization; to prevent following all fragments of the same <iden>";Just pass the <iden> and <iden> objects in directly;Dont summarize the request and response;Similar;0.5110220909118652
Make the  <file_name>  a little better.  <enter> <iden> threads by their URLs. Dont follow all fragments of the same <iden>;"For better organization; to prevent following all fragments of the same <iden>";Fix a race in <method_name> ( <pr_link> );We were assuming on a client failure the server wouldnt have any further events. But it will get a failure if we give it a moment. This was causing some test flakiness.;Similar;0.5557056665420532
Make the  <file_name>  a little better.  <enter> <iden> threads by their URLs. Dont follow all fragments of the same <iden>;"For better organization; to prevent following all fragments of the same <iden>";fix <issue_link> : PROPFIND request should not redirect to GET request;PROPFIND request should not redirect to GET request;Similar;0.5614201426506042
Make the  <file_name>  a little better.  <enter> <iden> threads by their URLs. Dont follow all fragments of the same <iden>;"For better organization; to prevent following all fragments of the same <iden>";Refactor <file_name> by using <iden>;We can use <iden> instead of overriding <iden> abstract class;Similar;0.6103042364120483
Make the  <file_name>  a little better.  <enter> <iden> threads by their URLs. Dont follow all fragments of the same <iden>;"For better organization; to prevent following all fragments of the same <iden>";Remove unnecessary use of grouping parentheses  ;Lets remove warnings found by errorprone.;Similar;0.5310795307159424
Make the  <file_name>  a little better.  <enter> <iden> threads by their URLs. Dont follow all fragments of the same <iden>;"For better organization; to prevent following all fragments of the same <iden>";Fix bug where request body isnt sent when it should  ;request body isnt sent when it should;Similar;0.6458532810211182
Make the  <file_name>  a little better.  <enter> <iden> threads by their URLs. Dont follow all fragments of the same <iden>;"For better organization; to prevent following all fragments of the same <iden>";Add support for following <iden> 307 temporary redirects  ;Fixes Android bug 41739;Similar;0.5494461059570312
Make the  <file_name>  a little better.  <enter> <iden> threads by their URLs. Dont follow all fragments of the same <iden>;"For better organization; to prevent following all fragments of the same <iden>";Add wildcard hostnames support in <file_name>;support;Similar;0.6424965858459473
Make the  <file_name>  a little better.  <enter> <iden> threads by their URLs. Dont follow all fragments of the same <iden>;"For better organization; to prevent following all fragments of the same <iden>";Fix correctness of WebSocketReader reserved flags test;reserved flags;Similar;0.6324960589408875
Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;Fix tests to share a common <iden>. Also fix the memory limit, which may prevent Travis from failing our tests.;share a common <iden>, memory limit, prevent Travis from failing our tests;Similar;0.5857095122337341
Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;Update readme and changelog for <version>;<version>;Similar;0.7740658521652222
Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;New <file_name> class to normalize certificate chains  ;The goal of this is to get the root <iden> certificate into the certificate chain, so that it can be considered by the certificate pinner;Similar;0.7086483240127563
Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;Fix some get prefixes on <file_name> and <method_name>;"-
None";Similar;0.7956521511077881
Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;Write some new connection pool tests;These use the <iden> APIs. Theyre high-level so they wont break with the implementation rewrite.;Similar;0.5564485192298889
Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;Add <method_name>;Might be useful to expose this bookkeeping to app developers;Similar;0.714880645275116
Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Similar;0.7971256971359253
Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;Drop our one remaining <iden> cipher suite;Tracking <iden> and Firefox, which have also dropped this cipher suite;Similar;0.5534564852714539
Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;Expose internal APIs for pluggable file systems, Also migrate all of our tests to use the <method_name>  ;We arent yet ready to make <iden> a public type, but I dont mind making it _almost_ available via an internal API for those brave enough to try that, Its simpler.;Similar;0.5920978784561157
Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;Change  <file_name>  to not implement java.net.ResponseCache;This marks some methods as  @deprecated and internal-only. Unfortunately we dont have a great mechanism to hide them from the documented <iden>.;Similar;0.5558279752731323
Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;Fix <iden> post retransmit in the new API  ;We dont buffer response bodies in the new API. But we should retransmit POST bodies when a request fails.;Similar;0.6784218549728394
Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;Add a test for corner-case behavior;Im looking to make HttpURLConnectionImpl delegate to Job, and that means writing tests for all the weird things it does above HttpEngine.;Similar;0.6502856016159058
Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;Add some pings to force happens-before in <iden> tests;Previously we were relying on accidents to get our tests to pass;Similar;0.6325038075447083
Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;Track <file_name> ownership  ;<file_name> ownership is somewhat racy: when an HttpURLConnection reads the last byte of a connection, its ownership is released and given to the <method_name>;Similar;0.5773980617523193
Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;Move  <file_name>  pooling logic  ;"previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams; move  <file_name>  reuse to  <file_name>, with policy informed by  <method_name>  specifying what to do when the  <file_name>  becomes idle: pool, close or hold, so the  <file_name>  does what its told.";Similar;0.6861406564712524
Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;Implement moving bytes between OkBuffers  ;This is more complicated than Id anticipated;Similar;0.6082570552825928
Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;Dont attempt <iden> modes we know will fail.;we know will fail;Similar;0.5247452855110168
Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;Remove <iden> 2 warnings;Small docs fixes;Similar;0.6308388113975525
Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;"Define async APIs and switch <file_name> to use <iden> directly. I think this is the best route going forward; and eventually we could invert this relationship to have <iden> depending on <file_name> directly rather than vice versa.";Using <iden> directly introduces some duplicated code with <iden>. It also breaks the <file_name> cache.;Similar;0.6544212102890015
Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;Fix checkstyle issues in new <iden> code;checkstyle issues;Similar;0.6910722851753235
Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;Introduce a <file_name> interface between engine and connection.;This breaks the direct dependency from <file_name> to <method_name>;Similar;0.704278826713562
Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;Make  <file_name> less flaky;I was seeing flaky results in the debugger because pooled connections were being evicted as the test ran;Similar;0.6255084872245789
Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;Update to the latest <method_name>;Includes everything thru 8842981cbcfe20eb4721c0a2c867fa9a18233062;Similar;0.6932755708694458
Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;Be more careful around IOExceptions;my goal is to make it easier to differentiate between protocol-level problems (bogus frames) from transport-level problems (closed sockets and EOF streams);Similar;0.6725118160247803
Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;Similar;0.771489679813385
Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;Move out of the <file_name> package;To promote the code into AOSP, well keep this package as-is and do the jarjar in <iden> instead;Similar;0.6831454038619995
Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;Make the `<method_name>` return full working connections;Previously the returned connections required the caller to do extra work: setting up tunnels and performing an `<iden>` handshake. With this change, we make a complete working connection in `<method_name>`. This will make it easier to fix fallback when a single domain has multiple `<iden>` addresses that are not reachable. Also, this will make it easier to do SPDY through `<iden>` proxies.;Similar;0.6735549569129944
Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;Add error-prone compiler and fix its found issues;error-prone, its found issues;Similar;0.6466867327690125
Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;Remove old <iden> protocol method;old;Similar;0.68021160364151
Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;Expose <iden> directly on <method_name>  ;direct;Similar;0.6560606956481934
Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;Use HTML entity for ampersand;to represent the ampersand symbol in HTML;Similar;0.6098203659057617
Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;Add convenience overload for <iden>-backed <method_name>;convenience;Similar;0.809103786945343
Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;Use consistent camel casing of <iden>;consistent camel casing;Similar;0.5443301796913147
Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;Drop unused dependencies;unused;Similar;0.5238889455795288
Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;Update website to the latest design  ;latest design;Similar;0.5371280312538147
Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;Transfer to/from <iden> directly from <iden>  ;<pr_link>;Similar;0.6175974607467651
Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;add @override for subclass override method;subclass override method;Similar;0.6834317445755005
Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Similar;0.6756774187088013
Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;Partially revert connection timeout behavior  ;The modification of the timeout behavior during connection caused problems;Similar;0.6750405430793762
Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;This change logs the exception but prevent it from propagating out of the top of the call stack.;This decreases overall flakiness.;Similar;0.5262689590454102
Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;The changes to <iden>s  <file_name> have been ported  ;Upstream commit of <iden> / <iden> fix, This does not include the introduction of PlatformTest, which will be difficult to write so it works everywhere;Similar;0.7092775106430054
Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Similar;0.7838701009750366
Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;Return <file_name> to previous (e.g. KitKat) behavior;this change required to handle this <iden> scenario;Similar;0.7046821713447571
Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;Document <file_name> throwing modes;To include the <pr_link> information;Similar;0.5988410711288452
Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;Convert <file_name> to Kotlin;<pr_link>, <iden>, <file_name>;Similar;0.7063819766044617
Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;Convert <file_name>, <file_name> to Kotlin  ;"to Kotlin

Decision: Rename <file_name> <version> to .kt (and others)  ";Similar;0.7264810800552368
Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Similar;0.7320412993431091
Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;Just pass the <iden> and <iden> objects in directly;Dont summarize the request and response;Similar;0.6085458397865295
Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;Fix a race in <method_name> ( <pr_link> );We were assuming on a client failure the server wouldnt have any further events. But it will get a failure if we give it a moment. This was causing some test flakiness.;Similar;0.6945180892944336
Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;Improve some Markdown;improve;Similar;0.6664857864379883
Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;fix <issue_link> : PROPFIND request should not redirect to GET request;PROPFIND request should not redirect to GET request;Similar;0.5124526023864746
Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;Refactor <file_name> by using <iden>;We can use <iden> instead of overriding <iden> abstract class;Similar;0.7267904281616211
Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;Remove unnecessary use of grouping parentheses  ;Lets remove warnings found by errorprone.;Similar;0.5596909523010254
Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;Enable GitHub Security Scanning;To configure GitHub workflow for code security scanning;Similar;0.5528315305709839
Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;load through bootstrap;-;Similar;0.5677396655082703
Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;Fix bug where request body isnt sent when it should  ;request body isnt sent when it should;Similar;0.6545472741127014
Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;Add support for following <iden> 307 temporary redirects  ;Fixes Android bug 41739;Similar;0.7396537065505981
Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;Add wildcard hostnames support in <file_name>;support;Similar;0.6448971033096313
Inject a leading . for better matching under <file_name> <enter> Closes : <issue_link>;for better matching;Fix correctness of WebSocketReader reserved flags test;reserved flags;Similar;0.6761616468429565
Fix tests to share a common <iden>. Also fix the memory limit, which may prevent Travis from failing our tests.;share a common <iden>, memory limit, prevent Travis from failing our tests;Update readme and changelog for <version>;<version>;Similar;0.5004406571388245
Fix tests to share a common <iden>. Also fix the memory limit, which may prevent Travis from failing our tests.;share a common <iden>, memory limit, prevent Travis from failing our tests;New <file_name> class to normalize certificate chains  ;The goal of this is to get the root <iden> certificate into the certificate chain, so that it can be considered by the certificate pinner;Similar;0.5074352622032166
Fix tests to share a common <iden>. Also fix the memory limit, which may prevent Travis from failing our tests.;share a common <iden>, memory limit, prevent Travis from failing our tests;Fix some get prefixes on <file_name> and <method_name>;"-
None";Similar;0.6096988916397095
Fix tests to share a common <iden>. Also fix the memory limit, which may prevent Travis from failing our tests.;share a common <iden>, memory limit, prevent Travis from failing our tests;Write some new connection pool tests;These use the <iden> APIs. Theyre high-level so they wont break with the implementation rewrite.;Similar;0.5437077879905701
Fix tests to share a common <iden>. Also fix the memory limit, which may prevent Travis from failing our tests.;share a common <iden>, memory limit, prevent Travis from failing our tests;Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Similar;0.5284713506698608
Fix tests to share a common <iden>. Also fix the memory limit, which may prevent Travis from failing our tests.;share a common <iden>, memory limit, prevent Travis from failing our tests;Expose internal APIs for pluggable file systems, Also migrate all of our tests to use the <method_name>  ;We arent yet ready to make <iden> a public type, but I dont mind making it _almost_ available via an internal API for those brave enough to try that, Its simpler.;Similar;0.5522956252098083
Fix tests to share a common <iden>. Also fix the memory limit, which may prevent Travis from failing our tests.;share a common <iden>, memory limit, prevent Travis from failing our tests;Fix <iden> post retransmit in the new API  ;We dont buffer response bodies in the new API. But we should retransmit POST bodies when a request fails.;Similar;0.5600205063819885
Fix tests to share a common <iden>. Also fix the memory limit, which may prevent Travis from failing our tests.;share a common <iden>, memory limit, prevent Travis from failing our tests;Add some pings to force happens-before in <iden> tests;Previously we were relying on accidents to get our tests to pass;Similar;0.6318808794021606
Fix tests to share a common <iden>. Also fix the memory limit, which may prevent Travis from failing our tests.;share a common <iden>, memory limit, prevent Travis from failing our tests;"Define async APIs and switch <file_name> to use <iden> directly. I think this is the best route going forward; and eventually we could invert this relationship to have <iden> depending on <file_name> directly rather than vice versa.";Using <iden> directly introduces some duplicated code with <iden>. It also breaks the <file_name> cache.;Similar;0.5577659606933594
Fix tests to share a common <iden>. Also fix the memory limit, which may prevent Travis from failing our tests.;share a common <iden>, memory limit, prevent Travis from failing our tests;Fix checkstyle issues in new <iden> code;checkstyle issues;Similar;0.6821677684783936
Fix tests to share a common <iden>. Also fix the memory limit, which may prevent Travis from failing our tests.;share a common <iden>, memory limit, prevent Travis from failing our tests;Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;Similar;0.566415548324585
Fix tests to share a common <iden>. Also fix the memory limit, which may prevent Travis from failing our tests.;share a common <iden>, memory limit, prevent Travis from failing our tests;Add error-prone compiler and fix its found issues;error-prone, its found issues;Similar;0.6680731177330017
Fix tests to share a common <iden>. Also fix the memory limit, which may prevent Travis from failing our tests.;share a common <iden>, memory limit, prevent Travis from failing our tests;Add convenience overload for <iden>-backed <method_name>;convenience;Similar;0.5281273722648621
Fix tests to share a common <iden>. Also fix the memory limit, which may prevent Travis from failing our tests.;share a common <iden>, memory limit, prevent Travis from failing our tests;Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Similar;0.5220319628715515
Fix tests to share a common <iden>. Also fix the memory limit, which may prevent Travis from failing our tests.;share a common <iden>, memory limit, prevent Travis from failing our tests;This change logs the exception but prevent it from propagating out of the top of the call stack.;This decreases overall flakiness.;Similar;0.6734836101531982
Fix tests to share a common <iden>. Also fix the memory limit, which may prevent Travis from failing our tests.;share a common <iden>, memory limit, prevent Travis from failing our tests;The changes to <iden>s  <file_name> have been ported  ;Upstream commit of <iden> / <iden> fix, This does not include the introduction of PlatformTest, which will be difficult to write so it works everywhere;Similar;0.5302075147628784
Fix tests to share a common <iden>. Also fix the memory limit, which may prevent Travis from failing our tests.;share a common <iden>, memory limit, prevent Travis from failing our tests;Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Similar;0.6384619474411011
Fix tests to share a common <iden>. Also fix the memory limit, which may prevent Travis from failing our tests.;share a common <iden>, memory limit, prevent Travis from failing our tests;Fail HTTP/2 connections if the pong is not received;This removes the abstraction from our http2 package;Similar;0.5293562412261963
Fix tests to share a common <iden>. Also fix the memory limit, which may prevent Travis from failing our tests.;share a common <iden>, memory limit, prevent Travis from failing our tests;Fix a race in <method_name> ( <pr_link> );We were assuming on a client failure the server wouldnt have any further events. But it will get a failure if we give it a moment. This was causing some test flakiness.;Similar;0.581089198589325
Fix tests to share a common <iden>. Also fix the memory limit, which may prevent Travis from failing our tests.;share a common <iden>, memory limit, prevent Travis from failing our tests;Enable GitHub Security Scanning;To configure GitHub workflow for code security scanning;Similar;0.5547876954078674
Fix tests to share a common <iden>. Also fix the memory limit, which may prevent Travis from failing our tests.;share a common <iden>, memory limit, prevent Travis from failing our tests;Fix bug where request body isnt sent when it should  ;request body isnt sent when it should;Similar;0.6224064826965332
Fix tests to share a common <iden>. Also fix the memory limit, which may prevent Travis from failing our tests.;share a common <iden>, memory limit, prevent Travis from failing our tests;Fix correctness of WebSocketReader reserved flags test;reserved flags;Similar;0.6663365364074707
Collapse interceptors into a single chain;Instead of having a chain of application interceptors and a separate chain of network interceptors, this makes a single heterogeneous chain. It makes the <iden> core and network caller into interceptors.;Drop our one remaining <iden> cipher suite;Tracking <iden> and Firefox, which have also dropped this cipher suite;Similar;0.7119748592376709
Collapse interceptors into a single chain;Instead of having a chain of application interceptors and a separate chain of network interceptors, this makes a single heterogeneous chain. It makes the <iden> core and network caller into interceptors.;The implementation is built around one oversized method that runs top to bottom;I found this was easier to follow than the switch statement recommended by the <iden> standard;Similar;0.6548522710800171
Collapse interceptors into a single chain;Instead of having a chain of application interceptors and a separate chain of network interceptors, this makes a single heterogeneous chain. It makes the <iden> core and network caller into interceptors.;Move  <file_name>  pooling logic  ;"previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams; move  <file_name>  reuse to  <file_name>, with policy informed by  <method_name>  specifying what to do when the  <file_name>  becomes idle: pool, close or hold, so the  <file_name>  does what its told.";Similar;0.5156528353691101
Collapse interceptors into a single chain;Instead of having a chain of application interceptors and a separate chain of network interceptors, this makes a single heterogeneous chain. It makes the <iden> core and network caller into interceptors.;Implement moving bytes between OkBuffers  ;This is more complicated than Id anticipated;Similar;0.5149402618408203
Collapse interceptors into a single chain;Instead of having a chain of application interceptors and a separate chain of network interceptors, this makes a single heterogeneous chain. It makes the <iden> core and network caller into interceptors.;Dont attempt <iden> modes we know will fail.;we know will fail;Similar;0.5383060574531555
Collapse interceptors into a single chain;Instead of having a chain of application interceptors and a separate chain of network interceptors, this makes a single heterogeneous chain. It makes the <iden> core and network caller into interceptors.;Remove <iden> 2 warnings;Small docs fixes;Similar;0.6052353382110596
Collapse interceptors into a single chain;Instead of having a chain of application interceptors and a separate chain of network interceptors, this makes a single heterogeneous chain. It makes the <iden> core and network caller into interceptors.;Kill <file_name> in the process  ;Teach <file_name> <iden>;Similar;0.5699064135551453
Collapse interceptors into a single chain;Instead of having a chain of application interceptors and a separate chain of network interceptors, this makes a single heterogeneous chain. It makes the <iden> core and network caller into interceptors.;Move out of the <file_name> package;To promote the code into AOSP, well keep this package as-is and do the jarjar in <iden> instead;Similar;0.6267169117927551
Collapse interceptors into a single chain;Instead of having a chain of application interceptors and a separate chain of network interceptors, this makes a single heterogeneous chain. It makes the <iden> core and network caller into interceptors.;We dont need no stinkin braces;no stinkin braces;Similar;0.5412872433662415
Collapse interceptors into a single chain;Instead of having a chain of application interceptors and a separate chain of network interceptors, this makes a single heterogeneous chain. It makes the <iden> core and network caller into interceptors.;Remove old <iden> protocol method;old;Similar;0.6227705478668213
Collapse interceptors into a single chain;Instead of having a chain of application interceptors and a separate chain of network interceptors, this makes a single heterogeneous chain. It makes the <iden> core and network caller into interceptors.;Expose <iden> directly on <method_name>  ;direct;Similar;0.504381537437439
Collapse interceptors into a single chain;Instead of having a chain of application interceptors and a separate chain of network interceptors, this makes a single heterogeneous chain. It makes the <iden> core and network caller into interceptors.;Drop unused dependencies;unused;Similar;0.6241170167922974
Collapse interceptors into a single chain;Instead of having a chain of application interceptors and a separate chain of network interceptors, this makes a single heterogeneous chain. It makes the <iden> core and network caller into interceptors.;Transfer to/from <iden> directly from <iden>  ;<pr_link>;Similar;0.5343061685562134
Collapse interceptors into a single chain;Instead of having a chain of application interceptors and a separate chain of network interceptors, this makes a single heterogeneous chain. It makes the <iden> core and network caller into interceptors.;Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Similar;0.558653712272644
Collapse interceptors into a single chain;Instead of having a chain of application interceptors and a separate chain of network interceptors, this makes a single heterogeneous chain. It makes the <iden> core and network caller into interceptors.;Document <file_name> throwing modes;To include the <pr_link> information;Similar;0.557747483253479
Collapse interceptors into a single chain;Instead of having a chain of application interceptors and a separate chain of network interceptors, this makes a single heterogeneous chain. It makes the <iden> core and network caller into interceptors.;Fail HTTP/2 connections if the pong is not received;This removes the abstraction from our http2 package;Similar;0.512550950050354
Collapse interceptors into a single chain;Instead of having a chain of application interceptors and a separate chain of network interceptors, this makes a single heterogeneous chain. It makes the <iden> core and network caller into interceptors.;Just pass the <iden> and <iden> objects in directly;Dont summarize the request and response;Similar;0.58814936876297
Collapse interceptors into a single chain;Instead of having a chain of application interceptors and a separate chain of network interceptors, this makes a single heterogeneous chain. It makes the <iden> core and network caller into interceptors.;fix <issue_link> : PROPFIND request should not redirect to GET request;PROPFIND request should not redirect to GET request;Similar;0.5080738067626953
Collapse interceptors into a single chain;Instead of having a chain of application interceptors and a separate chain of network interceptors, this makes a single heterogeneous chain. It makes the <iden> core and network caller into interceptors.;Remove unnecessary use of grouping parentheses  ;Lets remove warnings found by errorprone.;Similar;0.5599199533462524
Collapse interceptors into a single chain;Instead of having a chain of application interceptors and a separate chain of network interceptors, this makes a single heterogeneous chain. It makes the <iden> core and network caller into interceptors.;load through bootstrap;-;Similar;0.6017379760742188
Update readme and changelog for <version>;<version>;New <file_name> class to normalize certificate chains  ;The goal of this is to get the root <iden> certificate into the certificate chain, so that it can be considered by the certificate pinner;Similar;0.7256036400794983
Update readme and changelog for <version>;<version>;Fix some get prefixes on <file_name> and <method_name>;"-
None";Similar;0.7910850644111633
Update readme and changelog for <version>;<version>;Write some new connection pool tests;These use the <iden> APIs. Theyre high-level so they wont break with the implementation rewrite.;Similar;0.6440942883491516
Update readme and changelog for <version>;<version>;Add <method_name>;Might be useful to expose this bookkeeping to app developers;Similar;0.752078652381897
Update readme and changelog for <version>;<version>;Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Similar;0.7866629362106323
Update readme and changelog for <version>;<version>;Expose internal APIs for pluggable file systems, Also migrate all of our tests to use the <method_name>  ;We arent yet ready to make <iden> a public type, but I dont mind making it _almost_ available via an internal API for those brave enough to try that, Its simpler.;Similar;0.6435671448707581
Update readme and changelog for <version>;<version>;Change  <file_name>  to not implement java.net.ResponseCache;This marks some methods as  @deprecated and internal-only. Unfortunately we dont have a great mechanism to hide them from the documented <iden>.;Similar;0.5238708257675171
Update readme and changelog for <version>;<version>;Fix <iden> post retransmit in the new API  ;We dont buffer response bodies in the new API. But we should retransmit POST bodies when a request fails.;Similar;0.7805946469306946
Update readme and changelog for <version>;<version>;Add a test for corner-case behavior;Im looking to make HttpURLConnectionImpl delegate to Job, and that means writing tests for all the weird things it does above HttpEngine.;Similar;0.6584755182266235
Update readme and changelog for <version>;<version>;Add some pings to force happens-before in <iden> tests;Previously we were relying on accidents to get our tests to pass;Similar;0.6937734484672546
Update readme and changelog for <version>;<version>;Track <file_name> ownership  ;<file_name> ownership is somewhat racy: when an HttpURLConnection reads the last byte of a connection, its ownership is released and given to the <method_name>;Similar;0.5807263255119324
Update readme and changelog for <version>;<version>;Move  <file_name>  pooling logic  ;"previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams; move  <file_name>  reuse to  <file_name>, with policy informed by  <method_name>  specifying what to do when the  <file_name>  becomes idle: pool, close or hold, so the  <file_name>  does what its told.";Similar;0.7254477143287659
Update readme and changelog for <version>;<version>;Implement moving bytes between OkBuffers  ;This is more complicated than Id anticipated;Similar;0.7270674109458923
Update readme and changelog for <version>;<version>;Remove <iden> 2 warnings;Small docs fixes;Similar;0.575228214263916
Update readme and changelog for <version>;<version>;"Define async APIs and switch <file_name> to use <iden> directly. I think this is the best route going forward; and eventually we could invert this relationship to have <iden> depending on <file_name> directly rather than vice versa.";Using <iden> directly introduces some duplicated code with <iden>. It also breaks the <file_name> cache.;Similar;0.5177392363548279
Update readme and changelog for <version>;<version>;Fix checkstyle issues in new <iden> code;checkstyle issues;Similar;0.7273125648498535
Update readme and changelog for <version>;<version>;Introduce a <file_name> interface between engine and connection.;This breaks the direct dependency from <file_name> to <method_name>;Similar;0.777956485748291
Update readme and changelog for <version>;<version>;Update to the latest <method_name>;Includes everything thru 8842981cbcfe20eb4721c0a2c867fa9a18233062;Similar;0.7824431657791138
Update readme and changelog for <version>;<version>;Be more careful around IOExceptions;my goal is to make it easier to differentiate between protocol-level problems (bogus frames) from transport-level problems (closed sockets and EOF streams);Similar;0.5432198643684387
Update readme and changelog for <version>;<version>;Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;Similar;0.7628676891326904
Update readme and changelog for <version>;<version>;Move out of the <file_name> package;To promote the code into AOSP, well keep this package as-is and do the jarjar in <iden> instead;Similar;0.6537180542945862
Update readme and changelog for <version>;<version>;Make the `<method_name>` return full working connections;Previously the returned connections required the caller to do extra work: setting up tunnels and performing an `<iden>` handshake. With this change, we make a complete working connection in `<method_name>`. This will make it easier to fix fallback when a single domain has multiple `<iden>` addresses that are not reachable. Also, this will make it easier to do SPDY through `<iden>` proxies.;Similar;0.6868831515312195
Update readme and changelog for <version>;<version>;Add error-prone compiler and fix its found issues;error-prone, its found issues;Similar;0.6056162118911743
Update readme and changelog for <version>;<version>;Remove old <iden> protocol method;old;Similar;0.592501163482666
Update readme and changelog for <version>;<version>;Expose <iden> directly on <method_name>  ;direct;Similar;0.6865264177322388
Update readme and changelog for <version>;<version>;Use HTML entity for ampersand;to represent the ampersand symbol in HTML;Similar;0.7302588820457458
Update readme and changelog for <version>;<version>;Add convenience overload for <iden>-backed <method_name>;convenience;Similar;0.746757984161377
Update readme and changelog for <version>;<version>;Use consistent camel casing of <iden>;consistent camel casing;Similar;0.5651673078536987
Update readme and changelog for <version>;<version>;Update website to the latest design  ;latest design;Similar;0.6920844316482544
Update readme and changelog for <version>;<version>;Transfer to/from <iden> directly from <iden>  ;<pr_link>;Similar;0.7028236389160156
Update readme and changelog for <version>;<version>;add @override for subclass override method;subclass override method;Similar;0.7564038038253784
Update readme and changelog for <version>;<version>;Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Similar;0.7304098606109619
Update readme and changelog for <version>;<version>;Partially revert connection timeout behavior  ;The modification of the timeout behavior during connection caused problems;Similar;0.6568067073822021
Update readme and changelog for <version>;<version>;The changes to <iden>s  <file_name> have been ported  ;Upstream commit of <iden> / <iden> fix, This does not include the introduction of PlatformTest, which will be difficult to write so it works everywhere;Similar;0.7910844683647156
Update readme and changelog for <version>;<version>;Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Similar;0.7884400486946106
Update readme and changelog for <version>;<version>;Return <file_name> to previous (e.g. KitKat) behavior;this change required to handle this <iden> scenario;Similar;0.7013523578643799
Update readme and changelog for <version>;<version>;Document <file_name> throwing modes;To include the <pr_link> information;Similar;0.6483595967292786
Update readme and changelog for <version>;<version>;Convert <file_name> to Kotlin;<pr_link>, <iden>, <file_name>;Similar;0.7386430501937866
Update readme and changelog for <version>;<version>;Convert <file_name>, <file_name> to Kotlin  ;"to Kotlin

Decision: Rename <file_name> <version> to .kt (and others)  ";Similar;0.7556087970733643
Update readme and changelog for <version>;<version>;Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Similar;0.746874988079071
Update readme and changelog for <version>;<version>;Just pass the <iden> and <iden> objects in directly;Dont summarize the request and response;Similar;0.6233513951301575
Update readme and changelog for <version>;<version>;Fix a race in <method_name> ( <pr_link> );We were assuming on a client failure the server wouldnt have any further events. But it will get a failure if we give it a moment. This was causing some test flakiness.;Similar;0.6944026947021484
Update readme and changelog for <version>;<version>;Improve some Markdown;improve;Similar;0.6503322720527649
Update readme and changelog for <version>;<version>;Refactor <file_name> by using <iden>;We can use <iden> instead of overriding <iden> abstract class;Similar;0.7995407581329346
Update readme and changelog for <version>;<version>;Enable GitHub Security Scanning;To configure GitHub workflow for code security scanning;Similar;0.5855761170387268
Update readme and changelog for <version>;<version>;load through bootstrap;-;Similar;0.5780968070030212
Update readme and changelog for <version>;<version>;Fix bug where request body isnt sent when it should  ;request body isnt sent when it should;Similar;0.6354313492774963
Update readme and changelog for <version>;<version>;Add support for following <iden> 307 temporary redirects  ;Fixes Android bug 41739;Similar;0.7155448794364929
Update readme and changelog for <version>;<version>;Add wildcard hostnames support in <file_name>;support;Similar;0.672881007194519
Update readme and changelog for <version>;<version>;Fix correctness of WebSocketReader reserved flags test;reserved flags;Similar;0.6646535396575928
New <file_name> class to normalize certificate chains  ;The goal of this is to get the root <iden> certificate into the certificate chain, so that it can be considered by the certificate pinner;Fix some get prefixes on <file_name> and <method_name>;"-
None";Similar;0.7209340333938599
New <file_name> class to normalize certificate chains  ;The goal of this is to get the root <iden> certificate into the certificate chain, so that it can be considered by the certificate pinner;Write some new connection pool tests;These use the <iden> APIs. Theyre high-level so they wont break with the implementation rewrite.;Similar;0.705066442489624
New <file_name> class to normalize certificate chains  ;The goal of this is to get the root <iden> certificate into the certificate chain, so that it can be considered by the certificate pinner;Add <method_name>;Might be useful to expose this bookkeeping to app developers;Similar;0.6900738477706909
New <file_name> class to normalize certificate chains  ;The goal of this is to get the root <iden> certificate into the certificate chain, so that it can be considered by the certificate pinner;Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Similar;0.662281334400177
New <file_name> class to normalize certificate chains  ;The goal of this is to get the root <iden> certificate into the certificate chain, so that it can be considered by the certificate pinner;Expose internal APIs for pluggable file systems, Also migrate all of our tests to use the <method_name>  ;We arent yet ready to make <iden> a public type, but I dont mind making it _almost_ available via an internal API for those brave enough to try that, Its simpler.;Similar;0.715298593044281
New <file_name> class to normalize certificate chains  ;The goal of this is to get the root <iden> certificate into the certificate chain, so that it can be considered by the certificate pinner;Fix <iden> post retransmit in the new API  ;We dont buffer response bodies in the new API. But we should retransmit POST bodies when a request fails.;Similar;0.7563874125480652
New <file_name> class to normalize certificate chains  ;The goal of this is to get the root <iden> certificate into the certificate chain, so that it can be considered by the certificate pinner;Add a test for corner-case behavior;Im looking to make HttpURLConnectionImpl delegate to Job, and that means writing tests for all the weird things it does above HttpEngine.;Similar;0.553654134273529
New <file_name> class to normalize certificate chains  ;The goal of this is to get the root <iden> certificate into the certificate chain, so that it can be considered by the certificate pinner;Add some pings to force happens-before in <iden> tests;Previously we were relying on accidents to get our tests to pass;Similar;0.6259155869483948
New <file_name> class to normalize certificate chains  ;The goal of this is to get the root <iden> certificate into the certificate chain, so that it can be considered by the certificate pinner;Track <file_name> ownership  ;<file_name> ownership is somewhat racy: when an HttpURLConnection reads the last byte of a connection, its ownership is released and given to the <method_name>;Similar;0.5434051156044006
New <file_name> class to normalize certificate chains  ;The goal of this is to get the root <iden> certificate into the certificate chain, so that it can be considered by the certificate pinner;Move  <file_name>  pooling logic  ;"previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams; move  <file_name>  reuse to  <file_name>, with policy informed by  <method_name>  specifying what to do when the  <file_name>  becomes idle: pool, close or hold, so the  <file_name>  does what its told.";Similar;0.6915703415870667
New <file_name> class to normalize certificate chains  ;The goal of this is to get the root <iden> certificate into the certificate chain, so that it can be considered by the certificate pinner;Implement moving bytes between OkBuffers  ;This is more complicated than Id anticipated;Similar;0.5843079090118408
New <file_name> class to normalize certificate chains  ;The goal of this is to get the root <iden> certificate into the certificate chain, so that it can be considered by the certificate pinner;"Define async APIs and switch <file_name> to use <iden> directly. I think this is the best route going forward; and eventually we could invert this relationship to have <iden> depending on <file_name> directly rather than vice versa.";Using <iden> directly introduces some duplicated code with <iden>. It also breaks the <file_name> cache.;Similar;0.6044787168502808
New <file_name> class to normalize certificate chains  ;The goal of this is to get the root <iden> certificate into the certificate chain, so that it can be considered by the certificate pinner;Fix checkstyle issues in new <iden> code;checkstyle issues;Similar;0.7427782416343689
New <file_name> class to normalize certificate chains  ;The goal of this is to get the root <iden> certificate into the certificate chain, so that it can be considered by the certificate pinner;Introduce a <file_name> interface between engine and connection.;This breaks the direct dependency from <file_name> to <method_name>;Similar;0.7618825435638428
New <file_name> class to normalize certificate chains  ;The goal of this is to get the root <iden> certificate into the certificate chain, so that it can be considered by the certificate pinner;Update to the latest <method_name>;Includes everything thru 8842981cbcfe20eb4721c0a2c867fa9a18233062;Similar;0.7034433484077454
New <file_name> class to normalize certificate chains  ;The goal of this is to get the root <iden> certificate into the certificate chain, so that it can be considered by the certificate pinner;Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;Similar;0.6145005226135254
New <file_name> class to normalize certificate chains  ;The goal of this is to get the root <iden> certificate into the certificate chain, so that it can be considered by the certificate pinner;Move out of the <file_name> package;To promote the code into AOSP, well keep this package as-is and do the jarjar in <iden> instead;Similar;0.5266000628471375
New <file_name> class to normalize certificate chains  ;The goal of this is to get the root <iden> certificate into the certificate chain, so that it can be considered by the certificate pinner;Make the `<method_name>` return full working connections;Previously the returned connections required the caller to do extra work: setting up tunnels and performing an `<iden>` handshake. With this change, we make a complete working connection in `<method_name>`. This will make it easier to fix fallback when a single domain has multiple `<iden>` addresses that are not reachable. Also, this will make it easier to do SPDY through `<iden>` proxies.;Similar;0.7303141355514526
New <file_name> class to normalize certificate chains  ;The goal of this is to get the root <iden> certificate into the certificate chain, so that it can be considered by the certificate pinner;Add error-prone compiler and fix its found issues;error-prone, its found issues;Similar;0.586033284664154
New <file_name> class to normalize certificate chains  ;The goal of this is to get the root <iden> certificate into the certificate chain, so that it can be considered by the certificate pinner;Expose <iden> directly on <method_name>  ;direct;Similar;0.6562291979789734
New <file_name> class to normalize certificate chains  ;The goal of this is to get the root <iden> certificate into the certificate chain, so that it can be considered by the certificate pinner;Use HTML entity for ampersand;to represent the ampersand symbol in HTML;Similar;0.6273809671401978
New <file_name> class to normalize certificate chains  ;The goal of this is to get the root <iden> certificate into the certificate chain, so that it can be considered by the certificate pinner;Add convenience overload for <iden>-backed <method_name>;convenience;Similar;0.6788619160652161
New <file_name> class to normalize certificate chains  ;The goal of this is to get the root <iden> certificate into the certificate chain, so that it can be considered by the certificate pinner;Update website to the latest design  ;latest design;Similar;0.692449152469635
New <file_name> class to normalize certificate chains  ;The goal of this is to get the root <iden> certificate into the certificate chain, so that it can be considered by the certificate pinner;Transfer to/from <iden> directly from <iden>  ;<pr_link>;Similar;0.5643934607505798
New <file_name> class to normalize certificate chains  ;The goal of this is to get the root <iden> certificate into the certificate chain, so that it can be considered by the certificate pinner;add @override for subclass override method;subclass override method;Similar;0.702538013458252
New <file_name> class to normalize certificate chains  ;The goal of this is to get the root <iden> certificate into the certificate chain, so that it can be considered by the certificate pinner;Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Similar;0.5892245769500732
New <file_name> class to normalize certificate chains  ;The goal of this is to get the root <iden> certificate into the certificate chain, so that it can be considered by the certificate pinner;The changes to <iden>s  <file_name> have been ported  ;Upstream commit of <iden> / <iden> fix, This does not include the introduction of PlatformTest, which will be difficult to write so it works everywhere;Similar;0.7245754599571228
New <file_name> class to normalize certificate chains  ;The goal of this is to get the root <iden> certificate into the certificate chain, so that it can be considered by the certificate pinner;Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Similar;0.6751589179039001
New <file_name> class to normalize certificate chains  ;The goal of this is to get the root <iden> certificate into the certificate chain, so that it can be considered by the certificate pinner;Return <file_name> to previous (e.g. KitKat) behavior;this change required to handle this <iden> scenario;Similar;0.6204023361206055
New <file_name> class to normalize certificate chains  ;The goal of this is to get the root <iden> certificate into the certificate chain, so that it can be considered by the certificate pinner;Document <file_name> throwing modes;To include the <pr_link> information;Similar;0.5494303107261658
New <file_name> class to normalize certificate chains  ;The goal of this is to get the root <iden> certificate into the certificate chain, so that it can be considered by the certificate pinner;Convert <file_name> to Kotlin;<pr_link>, <iden>, <file_name>;Similar;0.686416506767273
New <file_name> class to normalize certificate chains  ;The goal of this is to get the root <iden> certificate into the certificate chain, so that it can be considered by the certificate pinner;Convert <file_name>, <file_name> to Kotlin  ;"to Kotlin

Decision: Rename <file_name> <version> to .kt (and others)  ";Similar;0.6982196569442749
New <file_name> class to normalize certificate chains  ;The goal of this is to get the root <iden> certificate into the certificate chain, so that it can be considered by the certificate pinner;Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Similar;0.6891887784004211
New <file_name> class to normalize certificate chains  ;The goal of this is to get the root <iden> certificate into the certificate chain, so that it can be considered by the certificate pinner;Just pass the <iden> and <iden> objects in directly;Dont summarize the request and response;Similar;0.5062816739082336
New <file_name> class to normalize certificate chains  ;The goal of this is to get the root <iden> certificate into the certificate chain, so that it can be considered by the certificate pinner;Fix a race in <method_name> ( <pr_link> );We were assuming on a client failure the server wouldnt have any further events. But it will get a failure if we give it a moment. This was causing some test flakiness.;Similar;0.6710159182548523
New <file_name> class to normalize certificate chains  ;The goal of this is to get the root <iden> certificate into the certificate chain, so that it can be considered by the certificate pinner;Refactor <file_name> by using <iden>;We can use <iden> instead of overriding <iden> abstract class;Similar;0.698238730430603
New <file_name> class to normalize certificate chains  ;The goal of this is to get the root <iden> certificate into the certificate chain, so that it can be considered by the certificate pinner;Enable GitHub Security Scanning;To configure GitHub workflow for code security scanning;Similar;0.5894611477851868
New <file_name> class to normalize certificate chains  ;The goal of this is to get the root <iden> certificate into the certificate chain, so that it can be considered by the certificate pinner;load through bootstrap;-;Similar;0.5091256499290466
New <file_name> class to normalize certificate chains  ;The goal of this is to get the root <iden> certificate into the certificate chain, so that it can be considered by the certificate pinner;Add support for following <iden> 307 temporary redirects  ;Fixes Android bug 41739;Similar;0.627477765083313
New <file_name> class to normalize certificate chains  ;The goal of this is to get the root <iden> certificate into the certificate chain, so that it can be considered by the certificate pinner;Add wildcard hostnames support in <file_name>;support;Similar;0.7081865668296814
New <file_name> class to normalize certificate chains  ;The goal of this is to get the root <iden> certificate into the certificate chain, so that it can be considered by the certificate pinner;Fix correctness of WebSocketReader reserved flags test;reserved flags;Similar;0.6148194670677185
Fix some get prefixes on <file_name> and <method_name>;"-
None";Write some new connection pool tests;These use the <iden> APIs. Theyre high-level so they wont break with the implementation rewrite.;Similar;0.6100224852561951
Fix some get prefixes on <file_name> and <method_name>;"-
None";Add <method_name>;Might be useful to expose this bookkeeping to app developers;Similar;0.7867249250411987
Fix some get prefixes on <file_name> and <method_name>;"-
None";Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Similar;0.8411275148391724
Fix some get prefixes on <file_name> and <method_name>;"-
None";Expose internal APIs for pluggable file systems, Also migrate all of our tests to use the <method_name>  ;We arent yet ready to make <iden> a public type, but I dont mind making it _almost_ available via an internal API for those brave enough to try that, Its simpler.;Similar;0.6475767493247986
Fix some get prefixes on <file_name> and <method_name>;"-
None";Fix <iden> post retransmit in the new API  ;We dont buffer response bodies in the new API. But we should retransmit POST bodies when a request fails.;Similar;0.7119543552398682
Fix some get prefixes on <file_name> and <method_name>;"-
None";Add a test for corner-case behavior;Im looking to make HttpURLConnectionImpl delegate to Job, and that means writing tests for all the weird things it does above HttpEngine.;Similar;0.6691312789916992
Fix some get prefixes on <file_name> and <method_name>;"-
None";Add some pings to force happens-before in <iden> tests;Previously we were relying on accidents to get our tests to pass;Similar;0.6841598153114319
Fix some get prefixes on <file_name> and <method_name>;"-
None";Track <file_name> ownership  ;<file_name> ownership is somewhat racy: when an HttpURLConnection reads the last byte of a connection, its ownership is released and given to the <method_name>;Similar;0.6100876927375793
Fix some get prefixes on <file_name> and <method_name>;"-
None";Move  <file_name>  pooling logic  ;"previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams; move  <file_name>  reuse to  <file_name>, with policy informed by  <method_name>  specifying what to do when the  <file_name>  becomes idle: pool, close or hold, so the  <file_name>  does what its told.";Similar;0.6961756944656372
Fix some get prefixes on <file_name> and <method_name>;"-
None";Implement moving bytes between OkBuffers  ;This is more complicated than Id anticipated;Similar;0.667076051235199
Fix some get prefixes on <file_name> and <method_name>;"-
None";Remove <iden> 2 warnings;Small docs fixes;Similar;0.5311736464500427
Fix some get prefixes on <file_name> and <method_name>;"-
None";"Define async APIs and switch <file_name> to use <iden> directly. I think this is the best route going forward; and eventually we could invert this relationship to have <iden> depending on <file_name> directly rather than vice versa.";Using <iden> directly introduces some duplicated code with <iden>. It also breaks the <file_name> cache.;Similar;0.5889264941215515
Fix some get prefixes on <file_name> and <method_name>;"-
None";Fix checkstyle issues in new <iden> code;checkstyle issues;Similar;0.7594248056411743
Fix some get prefixes on <file_name> and <method_name>;"-
None";Introduce a <file_name> interface between engine and connection.;This breaks the direct dependency from <file_name> to <method_name>;Similar;0.7693618535995483
Fix some get prefixes on <file_name> and <method_name>;"-
None";Make  <file_name> less flaky;I was seeing flaky results in the debugger because pooled connections were being evicted as the test ran;Similar;0.5590730309486389
Fix some get prefixes on <file_name> and <method_name>;"-
None";Update to the latest <method_name>;Includes everything thru 8842981cbcfe20eb4721c0a2c867fa9a18233062;Similar;0.6776095032691956
Fix some get prefixes on <file_name> and <method_name>;"-
None";Be more careful around IOExceptions;my goal is to make it easier to differentiate between protocol-level problems (bogus frames) from transport-level problems (closed sockets and EOF streams);Similar;0.5429434776306152
Fix some get prefixes on <file_name> and <method_name>;"-
None";Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;Similar;0.7116402983665466
Fix some get prefixes on <file_name> and <method_name>;"-
None";Move out of the <file_name> package;To promote the code into AOSP, well keep this package as-is and do the jarjar in <iden> instead;Similar;0.6179918050765991
Fix some get prefixes on <file_name> and <method_name>;"-
None";Make the `<method_name>` return full working connections;Previously the returned connections required the caller to do extra work: setting up tunnels and performing an `<iden>` handshake. With this change, we make a complete working connection in `<method_name>`. This will make it easier to fix fallback when a single domain has multiple `<iden>` addresses that are not reachable. Also, this will make it easier to do SPDY through `<iden>` proxies.;Similar;0.7054514288902283
Fix some get prefixes on <file_name> and <method_name>;"-
None";Fix <iden> which was being computed incorrectly;<enter> We were only returning true once we were already in a tunnel. This was bogus. In theory a <iden> tunnel sending extra data could be corrupted due to this bug.;Similar;0.5457810163497925
Fix some get prefixes on <file_name> and <method_name>;"-
None";Add error-prone compiler and fix its found issues;error-prone, its found issues;Similar;0.7112146615982056
Fix some get prefixes on <file_name> and <method_name>;"-
None";Remove old <iden> protocol method;old;Similar;0.6023970246315002
Fix some get prefixes on <file_name> and <method_name>;"-
None";Expose <iden> directly on <method_name>  ;direct;Similar;0.6990005970001221
Fix some get prefixes on <file_name> and <method_name>;"-
None";Use HTML entity for ampersand;to represent the ampersand symbol in HTML;Similar;0.6890308856964111
Fix some get prefixes on <file_name> and <method_name>;"-
None";Add convenience overload for <iden>-backed <method_name>;convenience;Similar;0.7843689918518066
Fix some get prefixes on <file_name> and <method_name>;"-
None";Use consistent camel casing of <iden>;consistent camel casing;Similar;0.5008285045623779
Fix some get prefixes on <file_name> and <method_name>;"-
None";Update website to the latest design  ;latest design;Similar;0.5521273612976074
Fix some get prefixes on <file_name> and <method_name>;"-
None";Transfer to/from <iden> directly from <iden>  ;<pr_link>;Similar;0.6591992378234863
Fix some get prefixes on <file_name> and <method_name>;"-
None";add @override for subclass override method;subclass override method;Similar;0.7607490420341492
Fix some get prefixes on <file_name> and <method_name>;"-
None";Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Similar;0.687041163444519
Fix some get prefixes on <file_name> and <method_name>;"-
None";Partially revert connection timeout behavior  ;The modification of the timeout behavior during connection caused problems;Similar;0.6439833045005798
Fix some get prefixes on <file_name> and <method_name>;"-
None";The changes to <iden>s  <file_name> have been ported  ;Upstream commit of <iden> / <iden> fix, This does not include the introduction of PlatformTest, which will be difficult to write so it works everywhere;Similar;0.8068647384643555
Fix some get prefixes on <file_name> and <method_name>;"-
None";Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Similar;0.760561466217041
Fix some get prefixes on <file_name> and <method_name>;"-
None";Return <file_name> to previous (e.g. KitKat) behavior;this change required to handle this <iden> scenario;Similar;0.7252564430236816
Fix some get prefixes on <file_name> and <method_name>;"-
None";Document <file_name> throwing modes;To include the <pr_link> information;Similar;0.6368889808654785
Fix some get prefixes on <file_name> and <method_name>;"-
None";Convert <file_name> to Kotlin;<pr_link>, <iden>, <file_name>;Similar;0.7854493856430054
Fix some get prefixes on <file_name> and <method_name>;"-
None";Convert <file_name>, <file_name> to Kotlin  ;"to Kotlin

Decision: Rename <file_name> <version> to .kt (and others)  ";Similar;0.7994056344032288
Fix some get prefixes on <file_name> and <method_name>;"-
None";Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Similar;0.8346084356307983
Fix some get prefixes on <file_name> and <method_name>;"-
None";Just pass the <iden> and <iden> objects in directly;Dont summarize the request and response;Similar;0.5855435132980347
Fix some get prefixes on <file_name> and <method_name>;"-
None";Fix a race in <method_name> ( <pr_link> );We were assuming on a client failure the server wouldnt have any further events. But it will get a failure if we give it a moment. This was causing some test flakiness.;Similar;0.7125051021575928
Fix some get prefixes on <file_name> and <method_name>;"-
None";Improve some Markdown;improve;Similar;0.6888139247894287
Fix some get prefixes on <file_name> and <method_name>;"-
None";Refactor <file_name> by using <iden>;We can use <iden> instead of overriding <iden> abstract class;Similar;0.82420414686203
Fix some get prefixes on <file_name> and <method_name>;"-
None";Enable GitHub Security Scanning;To configure GitHub workflow for code security scanning;Similar;0.5893927216529846
Fix some get prefixes on <file_name> and <method_name>;"-
None";load through bootstrap;-;Similar;0.5655131936073303
Fix some get prefixes on <file_name> and <method_name>;"-
None";Fix bug where request body isnt sent when it should  ;request body isnt sent when it should;Similar;0.6564885377883911
Fix some get prefixes on <file_name> and <method_name>;"-
None";Add support for following <iden> 307 temporary redirects  ;Fixes Android bug 41739;Similar;0.7301395535469055
Fix some get prefixes on <file_name> and <method_name>;"-
None";Add wildcard hostnames support in <file_name>;support;Similar;0.7245350480079651
Fix some get prefixes on <file_name> and <method_name>;"-
None";Fix correctness of WebSocketReader reserved flags test;reserved flags;Similar;0.6861402988433838
Write some new connection pool tests;These use the <iden> APIs. Theyre high-level so they wont break with the implementation rewrite.;Expose internal APIs for pluggable file systems, Also migrate all of our tests to use the <method_name>  ;We arent yet ready to make <iden> a public type, but I dont mind making it _almost_ available via an internal API for those brave enough to try that, Its simpler.;Similar;0.6184670925140381
Write some new connection pool tests;These use the <iden> APIs. Theyre high-level so they wont break with the implementation rewrite.;Fix <iden> post retransmit in the new API  ;We dont buffer response bodies in the new API. But we should retransmit POST bodies when a request fails.;Similar;0.7241008281707764
Write some new connection pool tests;These use the <iden> APIs. Theyre high-level so they wont break with the implementation rewrite.;Add a test for corner-case behavior;Im looking to make HttpURLConnectionImpl delegate to Job, and that means writing tests for all the weird things it does above HttpEngine.;Similar;0.6370599865913391
Write some new connection pool tests;These use the <iden> APIs. Theyre high-level so they wont break with the implementation rewrite.;Add some pings to force happens-before in <iden> tests;Previously we were relying on accidents to get our tests to pass;Similar;0.7454859018325806
Write some new connection pool tests;These use the <iden> APIs. Theyre high-level so they wont break with the implementation rewrite.;Move  <file_name>  pooling logic  ;"previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams; move  <file_name>  reuse to  <file_name>, with policy informed by  <method_name>  specifying what to do when the  <file_name>  becomes idle: pool, close or hold, so the  <file_name>  does what its told.";Similar;0.6151467561721802
Write some new connection pool tests;These use the <iden> APIs. Theyre high-level so they wont break with the implementation rewrite.;Implement moving bytes between OkBuffers  ;This is more complicated than Id anticipated;Similar;0.5622948408126831
Write some new connection pool tests;These use the <iden> APIs. Theyre high-level so they wont break with the implementation rewrite.;"Define async APIs and switch <file_name> to use <iden> directly. I think this is the best route going forward; and eventually we could invert this relationship to have <iden> depending on <file_name> directly rather than vice versa.";Using <iden> directly introduces some duplicated code with <iden>. It also breaks the <file_name> cache.;Similar;0.5514432787895203
Write some new connection pool tests;These use the <iden> APIs. Theyre high-level so they wont break with the implementation rewrite.;Fix checkstyle issues in new <iden> code;checkstyle issues;Similar;0.7407324314117432
Write some new connection pool tests;These use the <iden> APIs. Theyre high-level so they wont break with the implementation rewrite.;Introduce a <file_name> interface between engine and connection.;This breaks the direct dependency from <file_name> to <method_name>;Similar;0.5764101147651672
Write some new connection pool tests;These use the <iden> APIs. Theyre high-level so they wont break with the implementation rewrite.;Update to the latest <method_name>;Includes everything thru 8842981cbcfe20eb4721c0a2c867fa9a18233062;Similar;0.5977291464805603
Write some new connection pool tests;These use the <iden> APIs. Theyre high-level so they wont break with the implementation rewrite.;Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;Similar;0.610343337059021
Write some new connection pool tests;These use the <iden> APIs. Theyre high-level so they wont break with the implementation rewrite.;Make the `<method_name>` return full working connections;Previously the returned connections required the caller to do extra work: setting up tunnels and performing an `<iden>` handshake. With this change, we make a complete working connection in `<method_name>`. This will make it easier to fix fallback when a single domain has multiple `<iden>` addresses that are not reachable. Also, this will make it easier to do SPDY through `<iden>` proxies.;Similar;0.5405838489532471
Write some new connection pool tests;These use the <iden> APIs. Theyre high-level so they wont break with the implementation rewrite.;Add error-prone compiler and fix its found issues;error-prone, its found issues;Similar;0.5495283007621765
Write some new connection pool tests;These use the <iden> APIs. Theyre high-level so they wont break with the implementation rewrite.;Add convenience overload for <iden>-backed <method_name>;convenience;Similar;0.5206656455993652
Write some new connection pool tests;These use the <iden> APIs. Theyre high-level so they wont break with the implementation rewrite.;Update website to the latest design  ;latest design;Similar;0.7104009389877319
Write some new connection pool tests;These use the <iden> APIs. Theyre high-level so they wont break with the implementation rewrite.;add @override for subclass override method;subclass override method;Similar;0.596503734588623
Write some new connection pool tests;These use the <iden> APIs. Theyre high-level so they wont break with the implementation rewrite.;Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Similar;0.5530418157577515
Write some new connection pool tests;These use the <iden> APIs. Theyre high-level so they wont break with the implementation rewrite.;Partially revert connection timeout behavior  ;The modification of the timeout behavior during connection caused problems;Similar;0.5249862670898438
Write some new connection pool tests;These use the <iden> APIs. Theyre high-level so they wont break with the implementation rewrite.;The changes to <iden>s  <file_name> have been ported  ;Upstream commit of <iden> / <iden> fix, This does not include the introduction of PlatformTest, which will be difficult to write so it works everywhere;Similar;0.6728703379631042
Write some new connection pool tests;These use the <iden> APIs. Theyre high-level so they wont break with the implementation rewrite.;Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Similar;0.5517439842224121
Write some new connection pool tests;These use the <iden> APIs. Theyre high-level so they wont break with the implementation rewrite.;Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Similar;0.6207848787307739
Write some new connection pool tests;These use the <iden> APIs. Theyre high-level so they wont break with the implementation rewrite.;Fix a race in <method_name> ( <pr_link> );We were assuming on a client failure the server wouldnt have any further events. But it will get a failure if we give it a moment. This was causing some test flakiness.;Similar;0.6532188653945923
Write some new connection pool tests;These use the <iden> APIs. Theyre high-level so they wont break with the implementation rewrite.;Add support for following <iden> 307 temporary redirects  ;Fixes Android bug 41739;Similar;0.5287134051322937
Write some new connection pool tests;These use the <iden> APIs. Theyre high-level so they wont break with the implementation rewrite.;Add wildcard hostnames support in <file_name>;support;Similar;0.5669798851013184
Write some new connection pool tests;These use the <iden> APIs. Theyre high-level so they wont break with the implementation rewrite.;Fix correctness of WebSocketReader reserved flags test;reserved flags;Similar;0.5304194092750549
Add <method_name>;Might be useful to expose this bookkeeping to app developers;Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Similar;0.8494690656661987
Add <method_name>;Might be useful to expose this bookkeeping to app developers;Expose internal APIs for pluggable file systems, Also migrate all of our tests to use the <method_name>  ;We arent yet ready to make <iden> a public type, but I dont mind making it _almost_ available via an internal API for those brave enough to try that, Its simpler.;Similar;0.500694751739502
Add <method_name>;Might be useful to expose this bookkeeping to app developers;The implementation is built around one oversized method that runs top to bottom;I found this was easier to follow than the switch statement recommended by the <iden> standard;Similar;0.5425068140029907
Add <method_name>;Might be useful to expose this bookkeeping to app developers;Fix <iden> post retransmit in the new API  ;We dont buffer response bodies in the new API. But we should retransmit POST bodies when a request fails.;Similar;0.6391451358795166
Add <method_name>;Might be useful to expose this bookkeeping to app developers;Add a test for corner-case behavior;Im looking to make HttpURLConnectionImpl delegate to Job, and that means writing tests for all the weird things it does above HttpEngine.;Similar;0.652834415435791
Add <method_name>;Might be useful to expose this bookkeeping to app developers;Add some pings to force happens-before in <iden> tests;Previously we were relying on accidents to get our tests to pass;Similar;0.5714567303657532
Add <method_name>;Might be useful to expose this bookkeeping to app developers;Track <file_name> ownership  ;<file_name> ownership is somewhat racy: when an HttpURLConnection reads the last byte of a connection, its ownership is released and given to the <method_name>;Similar;0.758001446723938
Add <method_name>;Might be useful to expose this bookkeeping to app developers;Move  <file_name>  pooling logic  ;"previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams; move  <file_name>  reuse to  <file_name>, with policy informed by  <method_name>  specifying what to do when the  <file_name>  becomes idle: pool, close or hold, so the  <file_name>  does what its told.";Similar;0.8028959035873413
Add <method_name>;Might be useful to expose this bookkeeping to app developers;Implement moving bytes between OkBuffers  ;This is more complicated than Id anticipated;Similar;0.6541014313697815
Add <method_name>;Might be useful to expose this bookkeeping to app developers;Remove <iden> 2 warnings;Small docs fixes;Similar;0.5604836940765381
Add <method_name>;Might be useful to expose this bookkeeping to app developers;"Define async APIs and switch <file_name> to use <iden> directly. I think this is the best route going forward; and eventually we could invert this relationship to have <iden> depending on <file_name> directly rather than vice versa.";Using <iden> directly introduces some duplicated code with <iden>. It also breaks the <file_name> cache.;Similar;0.5054664015769958
Add <method_name>;Might be useful to expose this bookkeeping to app developers;Fix checkstyle issues in new <iden> code;checkstyle issues;Similar;0.601646900177002
Add <method_name>;Might be useful to expose this bookkeeping to app developers;Introduce a <file_name> interface between engine and connection.;This breaks the direct dependency from <file_name> to <method_name>;Similar;0.8090704679489136
Add <method_name>;Might be useful to expose this bookkeeping to app developers;Make  <file_name> less flaky;I was seeing flaky results in the debugger because pooled connections were being evicted as the test ran;Similar;0.5232945680618286
Add <method_name>;Might be useful to expose this bookkeeping to app developers;Update to the latest <method_name>;Includes everything thru 8842981cbcfe20eb4721c0a2c867fa9a18233062;Similar;0.7516286969184875
Add <method_name>;Might be useful to expose this bookkeeping to app developers;Be more careful around IOExceptions;my goal is to make it easier to differentiate between protocol-level problems (bogus frames) from transport-level problems (closed sockets and EOF streams);Similar;0.5835999846458435
Add <method_name>;Might be useful to expose this bookkeeping to app developers;Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;Similar;0.6642999649047852
Add <method_name>;Might be useful to expose this bookkeeping to app developers;Move out of the <file_name> package;To promote the code into AOSP, well keep this package as-is and do the jarjar in <iden> instead;Similar;0.648788571357727
Add <method_name>;Might be useful to expose this bookkeeping to app developers;Make the `<method_name>` return full working connections;Previously the returned connections required the caller to do extra work: setting up tunnels and performing an `<iden>` handshake. With this change, we make a complete working connection in `<method_name>`. This will make it easier to fix fallback when a single domain has multiple `<iden>` addresses that are not reachable. Also, this will make it easier to do SPDY through `<iden>` proxies.;Similar;0.7106103301048279
Add <method_name>;Might be useful to expose this bookkeeping to app developers;Add error-prone compiler and fix its found issues;error-prone, its found issues;Similar;0.5776246786117554
Add <method_name>;Might be useful to expose this bookkeeping to app developers;Remove old <iden> protocol method;old;Similar;0.6279754042625427
Add <method_name>;Might be useful to expose this bookkeeping to app developers;Expose <iden> directly on <method_name>  ;direct;Similar;0.8863537311553955
Add <method_name>;Might be useful to expose this bookkeeping to app developers;Use HTML entity for ampersand;to represent the ampersand symbol in HTML;Similar;0.7685708403587341
Add <method_name>;Might be useful to expose this bookkeeping to app developers;Add convenience overload for <iden>-backed <method_name>;convenience;Similar;0.8025314807891846
Add <method_name>;Might be useful to expose this bookkeeping to app developers;Use consistent camel casing of <iden>;consistent camel casing;Similar;0.5412923097610474
Add <method_name>;Might be useful to expose this bookkeeping to app developers;Update website to the latest design  ;latest design;Similar;0.5038274526596069
Add <method_name>;Might be useful to expose this bookkeeping to app developers;Transfer to/from <iden> directly from <iden>  ;<pr_link>;Similar;0.8208955526351929
Add <method_name>;Might be useful to expose this bookkeeping to app developers;add @override for subclass override method;subclass override method;Similar;0.799747109413147
Add <method_name>;Might be useful to expose this bookkeeping to app developers;Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Similar;0.6459962129592896
Add <method_name>;Might be useful to expose this bookkeeping to app developers;Partially revert connection timeout behavior  ;The modification of the timeout behavior during connection caused problems;Similar;0.568292498588562
Add <method_name>;Might be useful to expose this bookkeeping to app developers;The changes to <iden>s  <file_name> have been ported  ;Upstream commit of <iden> / <iden> fix, This does not include the introduction of PlatformTest, which will be difficult to write so it works everywhere;Similar;0.6965098977088928
Add <method_name>;Might be useful to expose this bookkeeping to app developers;Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Similar;0.8482534885406494
Add <method_name>;Might be useful to expose this bookkeeping to app developers;Return <file_name> to previous (e.g. KitKat) behavior;this change required to handle this <iden> scenario;Similar;0.7618670463562012
Add <method_name>;Might be useful to expose this bookkeeping to app developers;Document <file_name> throwing modes;To include the <pr_link> information;Similar;0.703913688659668
Add <method_name>;Might be useful to expose this bookkeeping to app developers;Convert <file_name> to Kotlin;<pr_link>, <iden>, <file_name>;Similar;0.8312495350837708
Add <method_name>;Might be useful to expose this bookkeeping to app developers;Convert <file_name>, <file_name> to Kotlin  ;"to Kotlin

Decision: Rename <file_name> <version> to .kt (and others)  ";Similar;0.8418799638748169
Add <method_name>;Might be useful to expose this bookkeeping to app developers;Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Similar;0.6869788765907288
Add <method_name>;Might be useful to expose this bookkeeping to app developers;Just pass the <iden> and <iden> objects in directly;Dont summarize the request and response;Similar;0.7170095443725586
Add <method_name>;Might be useful to expose this bookkeeping to app developers;Fix a race in <method_name> ( <pr_link> );We were assuming on a client failure the server wouldnt have any further events. But it will get a failure if we give it a moment. This was causing some test flakiness.;Similar;0.6527698040008545
Add <method_name>;Might be useful to expose this bookkeeping to app developers;Improve some Markdown;improve;Similar;0.6257301568984985
Add <method_name>;Might be useful to expose this bookkeeping to app developers;Refactor <file_name> by using <iden>;We can use <iden> instead of overriding <iden> abstract class;Similar;0.8945944309234619
Add <method_name>;Might be useful to expose this bookkeeping to app developers;Remove unnecessary use of grouping parentheses  ;Lets remove warnings found by errorprone.;Similar;0.5108330249786377
Add <method_name>;Might be useful to expose this bookkeeping to app developers;Enable GitHub Security Scanning;To configure GitHub workflow for code security scanning;Similar;0.5271850824356079
Add <method_name>;Might be useful to expose this bookkeeping to app developers;load through bootstrap;-;Similar;0.664154052734375
Add <method_name>;Might be useful to expose this bookkeeping to app developers;Fix bug where request body isnt sent when it should  ;request body isnt sent when it should;Similar;0.5528464913368225
Add <method_name>;Might be useful to expose this bookkeeping to app developers;Add support for following <iden> 307 temporary redirects  ;Fixes Android bug 41739;Similar;0.6892954707145691
Add <method_name>;Might be useful to expose this bookkeeping to app developers;Add wildcard hostnames support in <file_name>;support;Similar;0.7284328937530518
Add <method_name>;Might be useful to expose this bookkeeping to app developers;Fix correctness of WebSocketReader reserved flags test;reserved flags;Similar;0.5423333644866943
Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Drop our one remaining <iden> cipher suite;Tracking <iden> and Firefox, which have also dropped this cipher suite;Similar;0.5526172518730164
Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Expose internal APIs for pluggable file systems, Also migrate all of our tests to use the <method_name>  ;We arent yet ready to make <iden> a public type, but I dont mind making it _almost_ available via an internal API for those brave enough to try that, Its simpler.;Similar;0.5195000767707825
Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Change  <file_name>  to not implement java.net.ResponseCache;This marks some methods as  @deprecated and internal-only. Unfortunately we dont have a great mechanism to hide them from the documented <iden>.;Similar;0.5681403875350952
Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;The implementation is built around one oversized method that runs top to bottom;I found this was easier to follow than the switch statement recommended by the <iden> standard;Similar;0.5554066896438599
Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Fix <iden> post retransmit in the new API  ;We dont buffer response bodies in the new API. But we should retransmit POST bodies when a request fails.;Similar;0.6833263039588928
Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Add a test for corner-case behavior;Im looking to make HttpURLConnectionImpl delegate to Job, and that means writing tests for all the weird things it does above HttpEngine.;Similar;0.6955968141555786
Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Add some pings to force happens-before in <iden> tests;Previously we were relying on accidents to get our tests to pass;Similar;0.5905694961547852
Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Track <file_name> ownership  ;<file_name> ownership is somewhat racy: when an HttpURLConnection reads the last byte of a connection, its ownership is released and given to the <method_name>;Similar;0.68712317943573
Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Move  <file_name>  pooling logic  ;"previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams; move  <file_name>  reuse to  <file_name>, with policy informed by  <method_name>  specifying what to do when the  <file_name>  becomes idle: pool, close or hold, so the  <file_name>  does what its told.";Similar;0.750211238861084
Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Implement moving bytes between OkBuffers  ;This is more complicated than Id anticipated;Similar;0.6462796330451965
Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Dont attempt <iden> modes we know will fail.;we know will fail;Similar;0.5163998603820801
Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Remove <iden> 2 warnings;Small docs fixes;Similar;0.5997139811515808
Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;"Define async APIs and switch <file_name> to use <iden> directly. I think this is the best route going forward; and eventually we could invert this relationship to have <iden> depending on <file_name> directly rather than vice versa.";Using <iden> directly introduces some duplicated code with <iden>. It also breaks the <file_name> cache.;Similar;0.5135931968688965
Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Fix checkstyle issues in new <iden> code;checkstyle issues;Similar;0.713144838809967
Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Kill <file_name> in the process  ;Teach <file_name> <iden>;Similar;0.5214094519615173
Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Introduce a <file_name> interface between engine and connection.;This breaks the direct dependency from <file_name> to <method_name>;Similar;0.777941107749939
Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Make  <file_name> less flaky;I was seeing flaky results in the debugger because pooled connections were being evicted as the test ran;Similar;0.6745643019676208
Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Update to the latest <method_name>;Includes everything thru 8842981cbcfe20eb4721c0a2c867fa9a18233062;Similar;0.6981647610664368
Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Be more careful around IOExceptions;my goal is to make it easier to differentiate between protocol-level problems (bogus frames) from transport-level problems (closed sockets and EOF streams);Similar;0.6369858980178833
Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;Similar;0.7738515734672546
Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Move out of the <file_name> package;To promote the code into AOSP, well keep this package as-is and do the jarjar in <iden> instead;Similar;0.6736952066421509
Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Make the `<method_name>` return full working connections;Previously the returned connections required the caller to do extra work: setting up tunnels and performing an `<iden>` handshake. With this change, we make a complete working connection in `<method_name>`. This will make it easier to fix fallback when a single domain has multiple `<iden>` addresses that are not reachable. Also, this will make it easier to do SPDY through `<iden>` proxies.;Similar;0.6872304677963257
Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Fix <iden> which was being computed incorrectly;<enter> We were only returning true once we were already in a tunnel. This was bogus. In theory a <iden> tunnel sending extra data could be corrupted due to this bug.;Similar;0.6029244661331177
Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Add error-prone compiler and fix its found issues;error-prone, its found issues;Similar;0.7183621525764465
Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Remove old <iden> protocol method;old;Similar;0.6884116530418396
Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Expose <iden> directly on <method_name>  ;direct;Similar;0.7762870788574219
Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Use HTML entity for ampersand;to represent the ampersand symbol in HTML;Similar;0.729878842830658
Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Add convenience overload for <iden>-backed <method_name>;convenience;Similar;0.8238540291786194
Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Use consistent camel casing of <iden>;consistent camel casing;Similar;0.5638901591300964
Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Drop unused dependencies;unused;Similar;0.5942040681838989
Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Update website to the latest design  ;latest design;Similar;0.519036054611206
Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Transfer to/from <iden> directly from <iden>  ;<pr_link>;Similar;0.7152315378189087
Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;add @override for subclass override method;subclass override method;Similar;0.7663799524307251
Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Similar;0.7899837493896484
Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Partially revert connection timeout behavior  ;The modification of the timeout behavior during connection caused problems;Similar;0.6561880707740784
Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;This change logs the exception but prevent it from propagating out of the top of the call stack.;This decreases overall flakiness.;Similar;0.5004315376281738
Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;The changes to <iden>s  <file_name> have been ported  ;Upstream commit of <iden> / <iden> fix, This does not include the introduction of PlatformTest, which will be difficult to write so it works everywhere;Similar;0.7173570394515991
Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Similar;0.8015931248664856
Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Return <file_name> to previous (e.g. KitKat) behavior;this change required to handle this <iden> scenario;Similar;0.7525848150253296
Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Document <file_name> throwing modes;To include the <pr_link> information;Similar;0.6669285297393799
Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Convert <file_name> to Kotlin;<pr_link>, <iden>, <file_name>;Similar;0.7975484132766724
Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Convert <file_name>, <file_name> to Kotlin  ;"to Kotlin

Decision: Rename <file_name> <version> to .kt (and others)  ";Similar;0.7874354720115662
Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Similar;0.8060399889945984
Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Fail HTTP/2 connections if the pong is not received;This removes the abstraction from our http2 package;Similar;0.5278849601745605
Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Just pass the <iden> and <iden> objects in directly;Dont summarize the request and response;Similar;0.6634762287139893
Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Fix a race in <method_name> ( <pr_link> );We were assuming on a client failure the server wouldnt have any further events. But it will get a failure if we give it a moment. This was causing some test flakiness.;Similar;0.7348625063896179
Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Improve some Markdown;improve;Similar;0.7048768997192383
Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;fix <issue_link> : PROPFIND request should not redirect to GET request;PROPFIND request should not redirect to GET request;Similar;0.541607677936554
Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Refactor <file_name> by using <iden>;We can use <iden> instead of overriding <iden> abstract class;Similar;0.8431010842323303
Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Remove unnecessary use of grouping parentheses  ;Lets remove warnings found by errorprone.;Similar;0.5818809270858765
Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Enable GitHub Security Scanning;To configure GitHub workflow for code security scanning;Similar;0.6112340092658997
Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;load through bootstrap;-;Similar;0.6446858048439026
Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Fix bug where request body isnt sent when it should  ;request body isnt sent when it should;Similar;0.7634654641151428
Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Add support for following <iden> 307 temporary redirects  ;Fixes Android bug 41739;Similar;0.7275086641311646
Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Add wildcard hostnames support in <file_name>;support;Similar;0.6681356430053711
Fix flakiness in <method_name>  ;Theres a race where the HTTP engine has been created, but not yet connected and the cancel isnt as immediate as it could be. Fix the test by making sure theres a response to be retrieved. With the upcoming connection pool changes we might make the implementation more robust.;Fix correctness of WebSocketReader reserved flags test;reserved flags;Similar;0.7603688836097717
Drop our one remaining <iden> cipher suite;Tracking <iden> and Firefox, which have also dropped this cipher suite;Change  <file_name>  to not implement java.net.ResponseCache;This marks some methods as  @deprecated and internal-only. Unfortunately we dont have a great mechanism to hide them from the documented <iden>.;Similar;0.7172492742538452
Drop our one remaining <iden> cipher suite;Tracking <iden> and Firefox, which have also dropped this cipher suite;The implementation is built around one oversized method that runs top to bottom;I found this was easier to follow than the switch statement recommended by the <iden> standard;Similar;0.601518452167511
Drop our one remaining <iden> cipher suite;Tracking <iden> and Firefox, which have also dropped this cipher suite;Track <file_name> ownership  ;<file_name> ownership is somewhat racy: when an HttpURLConnection reads the last byte of a connection, its ownership is released and given to the <method_name>;Similar;0.5008347034454346
Drop our one remaining <iden> cipher suite;Tracking <iden> and Firefox, which have also dropped this cipher suite;Move  <file_name>  pooling logic  ;"previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams; move  <file_name>  reuse to  <file_name>, with policy informed by  <method_name>  specifying what to do when the  <file_name>  becomes idle: pool, close or hold, so the  <file_name>  does what its told.";Similar;0.52152019739151
Drop our one remaining <iden> cipher suite;Tracking <iden> and Firefox, which have also dropped this cipher suite;Dont attempt <iden> modes we know will fail.;we know will fail;Similar;0.5692290663719177
Drop our one remaining <iden> cipher suite;Tracking <iden> and Firefox, which have also dropped this cipher suite;Remove <iden> 2 warnings;Small docs fixes;Similar;0.6979678869247437
Drop our one remaining <iden> cipher suite;Tracking <iden> and Firefox, which have also dropped this cipher suite;Kill <file_name> in the process  ;Teach <file_name> <iden>;Similar;0.6195226907730103
Drop our one remaining <iden> cipher suite;Tracking <iden> and Firefox, which have also dropped this cipher suite;Dont use <iden> APIs not in Gingerbread;APIs not in Gingerbread;Similar;0.6141401529312134
Drop our one remaining <iden> cipher suite;Tracking <iden> and Firefox, which have also dropped this cipher suite;Make  <file_name> less flaky;I was seeing flaky results in the debugger because pooled connections were being evicted as the test ran;Similar;0.5849499106407166
Drop our one remaining <iden> cipher suite;Tracking <iden> and Firefox, which have also dropped this cipher suite;Move out of the <file_name> package;To promote the code into AOSP, well keep this package as-is and do the jarjar in <iden> instead;Similar;0.7426099181175232
Drop our one remaining <iden> cipher suite;Tracking <iden> and Firefox, which have also dropped this cipher suite;We dont need no stinkin braces;no stinkin braces;Similar;0.5917516946792603
Drop our one remaining <iden> cipher suite;Tracking <iden> and Firefox, which have also dropped this cipher suite;Fix <iden> which was being computed incorrectly;<enter> We were only returning true once we were already in a tunnel. This was bogus. In theory a <iden> tunnel sending extra data could be corrupted due to this bug.;Similar;0.5563147664070129
Drop our one remaining <iden> cipher suite;Tracking <iden> and Firefox, which have also dropped this cipher suite;Remove old <iden> protocol method;old;Similar;0.7336390018463135
Drop our one remaining <iden> cipher suite;Tracking <iden> and Firefox, which have also dropped this cipher suite;Drop unused dependencies;unused;Similar;0.7719961404800415
Drop our one remaining <iden> cipher suite;Tracking <iden> and Firefox, which have also dropped this cipher suite;HTTP/2 initial window size is 65535 not 65536  ;not 65536;Similar;0.5114319324493408
Drop our one remaining <iden> cipher suite;Tracking <iden> and Firefox, which have also dropped this cipher suite;Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Similar;0.550603985786438
Drop our one remaining <iden> cipher suite;Tracking <iden> and Firefox, which have also dropped this cipher suite;Partially revert connection timeout behavior  ;The modification of the timeout behavior during connection caused problems;Similar;0.5049463510513306
Drop our one remaining <iden> cipher suite;Tracking <iden> and Firefox, which have also dropped this cipher suite;This change logs the exception but prevent it from propagating out of the top of the call stack.;This decreases overall flakiness.;Similar;0.6026216149330139
Drop our one remaining <iden> cipher suite;Tracking <iden> and Firefox, which have also dropped this cipher suite;Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Similar;0.5824627876281738
Drop our one remaining <iden> cipher suite;Tracking <iden> and Firefox, which have also dropped this cipher suite;Return <file_name> to previous (e.g. KitKat) behavior;this change required to handle this <iden> scenario;Similar;0.5063461065292358
Drop our one remaining <iden> cipher suite;Tracking <iden> and Firefox, which have also dropped this cipher suite;Document <file_name> throwing modes;To include the <pr_link> information;Similar;0.5257754325866699
Drop our one remaining <iden> cipher suite;Tracking <iden> and Firefox, which have also dropped this cipher suite;Convert <file_name> to Kotlin;<pr_link>, <iden>, <file_name>;Similar;0.5041722059249878
Drop our one remaining <iden> cipher suite;Tracking <iden> and Firefox, which have also dropped this cipher suite;Fail HTTP/2 connections if the pong is not received;This removes the abstraction from our http2 package;Similar;0.6740360856056213
Drop our one remaining <iden> cipher suite;Tracking <iden> and Firefox, which have also dropped this cipher suite;Just pass the <iden> and <iden> objects in directly;Dont summarize the request and response;Similar;0.5659118890762329
Drop our one remaining <iden> cipher suite;Tracking <iden> and Firefox, which have also dropped this cipher suite;fix <issue_link> : PROPFIND request should not redirect to GET request;PROPFIND request should not redirect to GET request;Similar;0.6200610399246216
Drop our one remaining <iden> cipher suite;Tracking <iden> and Firefox, which have also dropped this cipher suite;Remove unnecessary use of grouping parentheses  ;Lets remove warnings found by errorprone.;Similar;0.6766290664672852
Drop our one remaining <iden> cipher suite;Tracking <iden> and Firefox, which have also dropped this cipher suite;load through bootstrap;-;Similar;0.5336360931396484
Drop our one remaining <iden> cipher suite;Tracking <iden> and Firefox, which have also dropped this cipher suite;Fix bug where request body isnt sent when it should  ;request body isnt sent when it should;Similar;0.5913627743721008
Expose internal APIs for pluggable file systems, Also migrate all of our tests to use the <method_name>  ;We arent yet ready to make <iden> a public type, but I dont mind making it _almost_ available via an internal API for those brave enough to try that, Its simpler.;Fix <iden> post retransmit in the new API  ;We dont buffer response bodies in the new API. But we should retransmit POST bodies when a request fails.;Similar;0.7104527950286865
Expose internal APIs for pluggable file systems, Also migrate all of our tests to use the <method_name>  ;We arent yet ready to make <iden> a public type, but I dont mind making it _almost_ available via an internal API for those brave enough to try that, Its simpler.;Add some pings to force happens-before in <iden> tests;Previously we were relying on accidents to get our tests to pass;Similar;0.640569806098938
Expose internal APIs for pluggable file systems, Also migrate all of our tests to use the <method_name>  ;We arent yet ready to make <iden> a public type, but I dont mind making it _almost_ available via an internal API for those brave enough to try that, Its simpler.;Move  <file_name>  pooling logic  ;"previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams; move  <file_name>  reuse to  <file_name>, with policy informed by  <method_name>  specifying what to do when the  <file_name>  becomes idle: pool, close or hold, so the  <file_name>  does what its told.";Similar;0.6048719882965088
Expose internal APIs for pluggable file systems, Also migrate all of our tests to use the <method_name>  ;We arent yet ready to make <iden> a public type, but I dont mind making it _almost_ available via an internal API for those brave enough to try that, Its simpler.;Implement moving bytes between OkBuffers  ;This is more complicated than Id anticipated;Similar;0.5885789394378662
Expose internal APIs for pluggable file systems, Also migrate all of our tests to use the <method_name>  ;We arent yet ready to make <iden> a public type, but I dont mind making it _almost_ available via an internal API for those brave enough to try that, Its simpler.;"Define async APIs and switch <file_name> to use <iden> directly. I think this is the best route going forward; and eventually we could invert this relationship to have <iden> depending on <file_name> directly rather than vice versa.";Using <iden> directly introduces some duplicated code with <iden>. It also breaks the <file_name> cache.;Similar;0.581656277179718
Expose internal APIs for pluggable file systems, Also migrate all of our tests to use the <method_name>  ;We arent yet ready to make <iden> a public type, but I dont mind making it _almost_ available via an internal API for those brave enough to try that, Its simpler.;Fix checkstyle issues in new <iden> code;checkstyle issues;Similar;0.5742154717445374
Expose internal APIs for pluggable file systems, Also migrate all of our tests to use the <method_name>  ;We arent yet ready to make <iden> a public type, but I dont mind making it _almost_ available via an internal API for those brave enough to try that, Its simpler.;Introduce a <file_name> interface between engine and connection.;This breaks the direct dependency from <file_name> to <method_name>;Similar;0.6891226768493652
Expose internal APIs for pluggable file systems, Also migrate all of our tests to use the <method_name>  ;We arent yet ready to make <iden> a public type, but I dont mind making it _almost_ available via an internal API for those brave enough to try that, Its simpler.;Update to the latest <method_name>;Includes everything thru 8842981cbcfe20eb4721c0a2c867fa9a18233062;Similar;0.5088289380073547
Expose internal APIs for pluggable file systems, Also migrate all of our tests to use the <method_name>  ;We arent yet ready to make <iden> a public type, but I dont mind making it _almost_ available via an internal API for those brave enough to try that, Its simpler.;Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;Similar;0.5140756964683533
Expose internal APIs for pluggable file systems, Also migrate all of our tests to use the <method_name>  ;We arent yet ready to make <iden> a public type, but I dont mind making it _almost_ available via an internal API for those brave enough to try that, Its simpler.;Move out of the <file_name> package;To promote the code into AOSP, well keep this package as-is and do the jarjar in <iden> instead;Similar;0.5457843542098999
Expose internal APIs for pluggable file systems, Also migrate all of our tests to use the <method_name>  ;We arent yet ready to make <iden> a public type, but I dont mind making it _almost_ available via an internal API for those brave enough to try that, Its simpler.;Make the `<method_name>` return full working connections;Previously the returned connections required the caller to do extra work: setting up tunnels and performing an `<iden>` handshake. With this change, we make a complete working connection in `<method_name>`. This will make it easier to fix fallback when a single domain has multiple `<iden>` addresses that are not reachable. Also, this will make it easier to do SPDY through `<iden>` proxies.;Similar;0.6623145937919617
Expose internal APIs for pluggable file systems, Also migrate all of our tests to use the <method_name>  ;We arent yet ready to make <iden> a public type, but I dont mind making it _almost_ available via an internal API for those brave enough to try that, Its simpler.;Expose <iden> directly on <method_name>  ;direct;Similar;0.5433130264282227
Expose internal APIs for pluggable file systems, Also migrate all of our tests to use the <method_name>  ;We arent yet ready to make <iden> a public type, but I dont mind making it _almost_ available via an internal API for those brave enough to try that, Its simpler.;Use HTML entity for ampersand;to represent the ampersand symbol in HTML;Similar;0.5182232856750488
Expose internal APIs for pluggable file systems, Also migrate all of our tests to use the <method_name>  ;We arent yet ready to make <iden> a public type, but I dont mind making it _almost_ available via an internal API for those brave enough to try that, Its simpler.;Add convenience overload for <iden>-backed <method_name>;convenience;Similar;0.5569895505905151
Expose internal APIs for pluggable file systems, Also migrate all of our tests to use the <method_name>  ;We arent yet ready to make <iden> a public type, but I dont mind making it _almost_ available via an internal API for those brave enough to try that, Its simpler.;Update website to the latest design  ;latest design;Similar;0.5624542236328125
Expose internal APIs for pluggable file systems, Also migrate all of our tests to use the <method_name>  ;We arent yet ready to make <iden> a public type, but I dont mind making it _almost_ available via an internal API for those brave enough to try that, Its simpler.;add @override for subclass override method;subclass override method;Similar;0.6030287742614746
Expose internal APIs for pluggable file systems, Also migrate all of our tests to use the <method_name>  ;We arent yet ready to make <iden> a public type, but I dont mind making it _almost_ available via an internal API for those brave enough to try that, Its simpler.;The changes to <iden>s  <file_name> have been ported  ;Upstream commit of <iden> / <iden> fix, This does not include the introduction of PlatformTest, which will be difficult to write so it works everywhere;Similar;0.7353423237800598
Expose internal APIs for pluggable file systems, Also migrate all of our tests to use the <method_name>  ;We arent yet ready to make <iden> a public type, but I dont mind making it _almost_ available via an internal API for those brave enough to try that, Its simpler.;Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Similar;0.5949808359146118
Expose internal APIs for pluggable file systems, Also migrate all of our tests to use the <method_name>  ;We arent yet ready to make <iden> a public type, but I dont mind making it _almost_ available via an internal API for those brave enough to try that, Its simpler.;Document <file_name> throwing modes;To include the <pr_link> information;Similar;0.5743757486343384
Expose internal APIs for pluggable file systems, Also migrate all of our tests to use the <method_name>  ;We arent yet ready to make <iden> a public type, but I dont mind making it _almost_ available via an internal API for those brave enough to try that, Its simpler.;Convert <file_name> to Kotlin;<pr_link>, <iden>, <file_name>;Similar;0.5961902141571045
Expose internal APIs for pluggable file systems, Also migrate all of our tests to use the <method_name>  ;We arent yet ready to make <iden> a public type, but I dont mind making it _almost_ available via an internal API for those brave enough to try that, Its simpler.;Convert <file_name>, <file_name> to Kotlin  ;"to Kotlin

Decision: Rename <file_name> <version> to .kt (and others)  ";Similar;0.6255183219909668
Expose internal APIs for pluggable file systems, Also migrate all of our tests to use the <method_name>  ;We arent yet ready to make <iden> a public type, but I dont mind making it _almost_ available via an internal API for those brave enough to try that, Its simpler.;Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Similar;0.596831202507019
Expose internal APIs for pluggable file systems, Also migrate all of our tests to use the <method_name>  ;We arent yet ready to make <iden> a public type, but I dont mind making it _almost_ available via an internal API for those brave enough to try that, Its simpler.;Fix a race in <method_name> ( <pr_link> );We were assuming on a client failure the server wouldnt have any further events. But it will get a failure if we give it a moment. This was causing some test flakiness.;Similar;0.596517026424408
Expose internal APIs for pluggable file systems, Also migrate all of our tests to use the <method_name>  ;We arent yet ready to make <iden> a public type, but I dont mind making it _almost_ available via an internal API for those brave enough to try that, Its simpler.;Refactor <file_name> by using <iden>;We can use <iden> instead of overriding <iden> abstract class;Similar;0.5639757513999939
Expose internal APIs for pluggable file systems, Also migrate all of our tests to use the <method_name>  ;We arent yet ready to make <iden> a public type, but I dont mind making it _almost_ available via an internal API for those brave enough to try that, Its simpler.;Enable GitHub Security Scanning;To configure GitHub workflow for code security scanning;Similar;0.5145473480224609
Expose internal APIs for pluggable file systems, Also migrate all of our tests to use the <method_name>  ;We arent yet ready to make <iden> a public type, but I dont mind making it _almost_ available via an internal API for those brave enough to try that, Its simpler.;Add support for following <iden> 307 temporary redirects  ;Fixes Android bug 41739;Similar;0.5468759536743164
Expose internal APIs for pluggable file systems, Also migrate all of our tests to use the <method_name>  ;We arent yet ready to make <iden> a public type, but I dont mind making it _almost_ available via an internal API for those brave enough to try that, Its simpler.;Add wildcard hostnames support in <file_name>;support;Similar;0.7340301871299744
Expose internal APIs for pluggable file systems, Also migrate all of our tests to use the <method_name>  ;We arent yet ready to make <iden> a public type, but I dont mind making it _almost_ available via an internal API for those brave enough to try that, Its simpler.;Fix correctness of WebSocketReader reserved flags test;reserved flags;Similar;0.5526658296585083
Change  <file_name>  to not implement java.net.ResponseCache;This marks some methods as  @deprecated and internal-only. Unfortunately we dont have a great mechanism to hide them from the documented <iden>.;Fix <iden> post retransmit in the new API  ;We dont buffer response bodies in the new API. But we should retransmit POST bodies when a request fails.;Similar;0.5353381633758545
Change  <file_name>  to not implement java.net.ResponseCache;This marks some methods as  @deprecated and internal-only. Unfortunately we dont have a great mechanism to hide them from the documented <iden>.;Remove <iden> 2 warnings;Small docs fixes;Similar;0.6936160922050476
Change  <file_name>  to not implement java.net.ResponseCache;This marks some methods as  @deprecated and internal-only. Unfortunately we dont have a great mechanism to hide them from the documented <iden>.;Kill <file_name> in the process  ;Teach <file_name> <iden>;Similar;0.5498738288879395
Change  <file_name>  to not implement java.net.ResponseCache;This marks some methods as  @deprecated and internal-only. Unfortunately we dont have a great mechanism to hide them from the documented <iden>.;Dont use <iden> APIs not in Gingerbread;APIs not in Gingerbread;Similar;0.7934090495109558
Change  <file_name>  to not implement java.net.ResponseCache;This marks some methods as  @deprecated and internal-only. Unfortunately we dont have a great mechanism to hide them from the documented <iden>.;Make  <file_name> less flaky;I was seeing flaky results in the debugger because pooled connections were being evicted as the test ran;Similar;0.6359240412712097
Change  <file_name>  to not implement java.net.ResponseCache;This marks some methods as  @deprecated and internal-only. Unfortunately we dont have a great mechanism to hide them from the documented <iden>.;Move out of the <file_name> package;To promote the code into AOSP, well keep this package as-is and do the jarjar in <iden> instead;Similar;0.7663751840591431
Change  <file_name>  to not implement java.net.ResponseCache;This marks some methods as  @deprecated and internal-only. Unfortunately we dont have a great mechanism to hide them from the documented <iden>.;We dont need no stinkin braces;no stinkin braces;Similar;0.5724363923072815
Change  <file_name>  to not implement java.net.ResponseCache;This marks some methods as  @deprecated and internal-only. Unfortunately we dont have a great mechanism to hide them from the documented <iden>.;Fix <iden> which was being computed incorrectly;<enter> We were only returning true once we were already in a tunnel. This was bogus. In theory a <iden> tunnel sending extra data could be corrupted due to this bug.;Similar;0.5523782968521118
Change  <file_name>  to not implement java.net.ResponseCache;This marks some methods as  @deprecated and internal-only. Unfortunately we dont have a great mechanism to hide them from the documented <iden>.;Remove old <iden> protocol method;old;Similar;0.7038915157318115
Change  <file_name>  to not implement java.net.ResponseCache;This marks some methods as  @deprecated and internal-only. Unfortunately we dont have a great mechanism to hide them from the documented <iden>.;Drop unused dependencies;unused;Similar;0.6360753774642944
Change  <file_name>  to not implement java.net.ResponseCache;This marks some methods as  @deprecated and internal-only. Unfortunately we dont have a great mechanism to hide them from the documented <iden>.;HTTP/2 initial window size is 65535 not 65536  ;not 65536;Similar;0.5330096483230591
Change  <file_name>  to not implement java.net.ResponseCache;This marks some methods as  @deprecated and internal-only. Unfortunately we dont have a great mechanism to hide them from the documented <iden>.;Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Similar;0.5614681243896484
Change  <file_name>  to not implement java.net.ResponseCache;This marks some methods as  @deprecated and internal-only. Unfortunately we dont have a great mechanism to hide them from the documented <iden>.;This change logs the exception but prevent it from propagating out of the top of the call stack.;This decreases overall flakiness.;Similar;0.6331748962402344
Change  <file_name>  to not implement java.net.ResponseCache;This marks some methods as  @deprecated and internal-only. Unfortunately we dont have a great mechanism to hide them from the documented <iden>.;The changes to <iden>s  <file_name> have been ported  ;Upstream commit of <iden> / <iden> fix, This does not include the introduction of PlatformTest, which will be difficult to write so it works everywhere;Similar;0.5190526247024536
Change  <file_name>  to not implement java.net.ResponseCache;This marks some methods as  @deprecated and internal-only. Unfortunately we dont have a great mechanism to hide them from the documented <iden>.;Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Similar;0.579897403717041
Change  <file_name>  to not implement java.net.ResponseCache;This marks some methods as  @deprecated and internal-only. Unfortunately we dont have a great mechanism to hide them from the documented <iden>.;Document <file_name> throwing modes;To include the <pr_link> information;Similar;0.552219808101654
Change  <file_name>  to not implement java.net.ResponseCache;This marks some methods as  @deprecated and internal-only. Unfortunately we dont have a great mechanism to hide them from the documented <iden>.;Convert <file_name> to Kotlin;<pr_link>, <iden>, <file_name>;Similar;0.5415643453598022
Change  <file_name>  to not implement java.net.ResponseCache;This marks some methods as  @deprecated and internal-only. Unfortunately we dont have a great mechanism to hide them from the documented <iden>.;Convert <file_name>, <file_name> to Kotlin  ;"to Kotlin

Decision: Rename <file_name> <version> to .kt (and others)  ";Similar;0.5342282652854919
Change  <file_name>  to not implement java.net.ResponseCache;This marks some methods as  @deprecated and internal-only. Unfortunately we dont have a great mechanism to hide them from the documented <iden>.;Fail HTTP/2 connections if the pong is not received;This removes the abstraction from our http2 package;Similar;0.7645673155784607
Change  <file_name>  to not implement java.net.ResponseCache;This marks some methods as  @deprecated and internal-only. Unfortunately we dont have a great mechanism to hide them from the documented <iden>.;Fix a race in <method_name> ( <pr_link> );We were assuming on a client failure the server wouldnt have any further events. But it will get a failure if we give it a moment. This was causing some test flakiness.;Similar;0.5127548575401306
Change  <file_name>  to not implement java.net.ResponseCache;This marks some methods as  @deprecated and internal-only. Unfortunately we dont have a great mechanism to hide them from the documented <iden>.;fix <issue_link> : PROPFIND request should not redirect to GET request;PROPFIND request should not redirect to GET request;Similar;0.76893550157547
Change  <file_name>  to not implement java.net.ResponseCache;This marks some methods as  @deprecated and internal-only. Unfortunately we dont have a great mechanism to hide them from the documented <iden>.;Refactor <file_name> by using <iden>;We can use <iden> instead of overriding <iden> abstract class;Similar;0.5148695707321167
Change  <file_name>  to not implement java.net.ResponseCache;This marks some methods as  @deprecated and internal-only. Unfortunately we dont have a great mechanism to hide them from the documented <iden>.;Remove unnecessary use of grouping parentheses  ;Lets remove warnings found by errorprone.;Similar;0.668831467628479
Change  <file_name>  to not implement java.net.ResponseCache;This marks some methods as  @deprecated and internal-only. Unfortunately we dont have a great mechanism to hide them from the documented <iden>.;Fix bug where request body isnt sent when it should  ;request body isnt sent when it should;Similar;0.6877754330635071
Change  <file_name>  to not implement java.net.ResponseCache;This marks some methods as  @deprecated and internal-only. Unfortunately we dont have a great mechanism to hide them from the documented <iden>.;Fix correctness of WebSocketReader reserved flags test;reserved flags;Similar;0.5062724351882935
The implementation is built around one oversized method that runs top to bottom;I found this was easier to follow than the switch statement recommended by the <iden> standard;Track <file_name> ownership  ;<file_name> ownership is somewhat racy: when an HttpURLConnection reads the last byte of a connection, its ownership is released and given to the <method_name>;Similar;0.5418366193771362
The implementation is built around one oversized method that runs top to bottom;I found this was easier to follow than the switch statement recommended by the <iden> standard;Move  <file_name>  pooling logic  ;"previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams; move  <file_name>  reuse to  <file_name>, with policy informed by  <method_name>  specifying what to do when the  <file_name>  becomes idle: pool, close or hold, so the  <file_name>  does what its told.";Similar;0.5519493222236633
The implementation is built around one oversized method that runs top to bottom;I found this was easier to follow than the switch statement recommended by the <iden> standard;Implement moving bytes between OkBuffers  ;This is more complicated than Id anticipated;Similar;0.5163551568984985
The implementation is built around one oversized method that runs top to bottom;I found this was easier to follow than the switch statement recommended by the <iden> standard;Remove <iden> 2 warnings;Small docs fixes;Similar;0.5109992027282715
The implementation is built around one oversized method that runs top to bottom;I found this was easier to follow than the switch statement recommended by the <iden> standard;Make  <file_name> less flaky;I was seeing flaky results in the debugger because pooled connections were being evicted as the test ran;Similar;0.5107488632202148
The implementation is built around one oversized method that runs top to bottom;I found this was easier to follow than the switch statement recommended by the <iden> standard;Move out of the <file_name> package;To promote the code into AOSP, well keep this package as-is and do the jarjar in <iden> instead;Similar;0.5642563104629517
The implementation is built around one oversized method that runs top to bottom;I found this was easier to follow than the switch statement recommended by the <iden> standard;Remove old <iden> protocol method;old;Similar;0.547082245349884
The implementation is built around one oversized method that runs top to bottom;I found this was easier to follow than the switch statement recommended by the <iden> standard;Expose <iden> directly on <method_name>  ;direct;Similar;0.5620650053024292
The implementation is built around one oversized method that runs top to bottom;I found this was easier to follow than the switch statement recommended by the <iden> standard;Drop unused dependencies;unused;Similar;0.5510100722312927
The implementation is built around one oversized method that runs top to bottom;I found this was easier to follow than the switch statement recommended by the <iden> standard;Transfer to/from <iden> directly from <iden>  ;<pr_link>;Similar;0.5182098150253296
The implementation is built around one oversized method that runs top to bottom;I found this was easier to follow than the switch statement recommended by the <iden> standard;Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Similar;0.5095630288124084
The implementation is built around one oversized method that runs top to bottom;I found this was easier to follow than the switch statement recommended by the <iden> standard;Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Similar;0.5910274386405945
The implementation is built around one oversized method that runs top to bottom;I found this was easier to follow than the switch statement recommended by the <iden> standard;Document <file_name> throwing modes;To include the <pr_link> information;Similar;0.5539196729660034
The implementation is built around one oversized method that runs top to bottom;I found this was easier to follow than the switch statement recommended by the <iden> standard;Just pass the <iden> and <iden> objects in directly;Dont summarize the request and response;Similar;0.5559372901916504
The implementation is built around one oversized method that runs top to bottom;I found this was easier to follow than the switch statement recommended by the <iden> standard;Remove unnecessary use of grouping parentheses  ;Lets remove warnings found by errorprone.;Similar;0.5178169012069702
The implementation is built around one oversized method that runs top to bottom;I found this was easier to follow than the switch statement recommended by the <iden> standard;load through bootstrap;-;Similar;0.6143179535865784
Fix <iden> post retransmit in the new API  ;We dont buffer response bodies in the new API. But we should retransmit POST bodies when a request fails.;Add a test for corner-case behavior;Im looking to make HttpURLConnectionImpl delegate to Job, and that means writing tests for all the weird things it does above HttpEngine.;Similar;0.6019609570503235
Fix <iden> post retransmit in the new API  ;We dont buffer response bodies in the new API. But we should retransmit POST bodies when a request fails.;Add some pings to force happens-before in <iden> tests;Previously we were relying on accidents to get our tests to pass;Similar;0.7237867116928101
Fix <iden> post retransmit in the new API  ;We dont buffer response bodies in the new API. But we should retransmit POST bodies when a request fails.;Move  <file_name>  pooling logic  ;"previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams; move  <file_name>  reuse to  <file_name>, with policy informed by  <method_name>  specifying what to do when the  <file_name>  becomes idle: pool, close or hold, so the  <file_name>  does what its told.";Similar;0.6121358871459961
Fix <iden> post retransmit in the new API  ;We dont buffer response bodies in the new API. But we should retransmit POST bodies when a request fails.;Implement moving bytes between OkBuffers  ;This is more complicated than Id anticipated;Similar;0.6551133990287781
Fix <iden> post retransmit in the new API  ;We dont buffer response bodies in the new API. But we should retransmit POST bodies when a request fails.;"Define async APIs and switch <file_name> to use <iden> directly. I think this is the best route going forward; and eventually we could invert this relationship to have <iden> depending on <file_name> directly rather than vice versa.";Using <iden> directly introduces some duplicated code with <iden>. It also breaks the <file_name> cache.;Similar;0.6049140095710754
Fix <iden> post retransmit in the new API  ;We dont buffer response bodies in the new API. But we should retransmit POST bodies when a request fails.;Fix checkstyle issues in new <iden> code;checkstyle issues;Similar;0.834945797920227
Fix <iden> post retransmit in the new API  ;We dont buffer response bodies in the new API. But we should retransmit POST bodies when a request fails.;Introduce a <file_name> interface between engine and connection.;This breaks the direct dependency from <file_name> to <method_name>;Similar;0.7036687731742859
Fix <iden> post retransmit in the new API  ;We dont buffer response bodies in the new API. But we should retransmit POST bodies when a request fails.;Update to the latest <method_name>;Includes everything thru 8842981cbcfe20eb4721c0a2c867fa9a18233062;Similar;0.7157018184661865
Fix <iden> post retransmit in the new API  ;We dont buffer response bodies in the new API. But we should retransmit POST bodies when a request fails.;Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;Similar;0.6648795008659363
Fix <iden> post retransmit in the new API  ;We dont buffer response bodies in the new API. But we should retransmit POST bodies when a request fails.;Move out of the <file_name> package;To promote the code into AOSP, well keep this package as-is and do the jarjar in <iden> instead;Similar;0.5985937714576721
Fix <iden> post retransmit in the new API  ;We dont buffer response bodies in the new API. But we should retransmit POST bodies when a request fails.;Make the `<method_name>` return full working connections;Previously the returned connections required the caller to do extra work: setting up tunnels and performing an `<iden>` handshake. With this change, we make a complete working connection in `<method_name>`. This will make it easier to fix fallback when a single domain has multiple `<iden>` addresses that are not reachable. Also, this will make it easier to do SPDY through `<iden>` proxies.;Similar;0.6334781050682068
Fix <iden> post retransmit in the new API  ;We dont buffer response bodies in the new API. But we should retransmit POST bodies when a request fails.;Fix <iden> which was being computed incorrectly;<enter> We were only returning true once we were already in a tunnel. This was bogus. In theory a <iden> tunnel sending extra data could be corrupted due to this bug.;Similar;0.5114359259605408
Fix <iden> post retransmit in the new API  ;We dont buffer response bodies in the new API. But we should retransmit POST bodies when a request fails.;Add error-prone compiler and fix its found issues;error-prone, its found issues;Similar;0.674734354019165
Fix <iden> post retransmit in the new API  ;We dont buffer response bodies in the new API. But we should retransmit POST bodies when a request fails.;Remove old <iden> protocol method;old;Similar;0.5205515027046204
Fix <iden> post retransmit in the new API  ;We dont buffer response bodies in the new API. But we should retransmit POST bodies when a request fails.;Expose <iden> directly on <method_name>  ;direct;Similar;0.6017543077468872
Fix <iden> post retransmit in the new API  ;We dont buffer response bodies in the new API. But we should retransmit POST bodies when a request fails.;Use HTML entity for ampersand;to represent the ampersand symbol in HTML;Similar;0.598771333694458
Fix <iden> post retransmit in the new API  ;We dont buffer response bodies in the new API. But we should retransmit POST bodies when a request fails.;Add convenience overload for <iden>-backed <method_name>;convenience;Similar;0.6603369116783142
Fix <iden> post retransmit in the new API  ;We dont buffer response bodies in the new API. But we should retransmit POST bodies when a request fails.;Update website to the latest design  ;latest design;Similar;0.778986930847168
Fix <iden> post retransmit in the new API  ;We dont buffer response bodies in the new API. But we should retransmit POST bodies when a request fails.;Transfer to/from <iden> directly from <iden>  ;<pr_link>;Similar;0.5780633687973022
Fix <iden> post retransmit in the new API  ;We dont buffer response bodies in the new API. But we should retransmit POST bodies when a request fails.;add @override for subclass override method;subclass override method;Similar;0.6975432634353638
Fix <iden> post retransmit in the new API  ;We dont buffer response bodies in the new API. But we should retransmit POST bodies when a request fails.;Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Similar;0.693675696849823
Fix <iden> post retransmit in the new API  ;We dont buffer response bodies in the new API. But we should retransmit POST bodies when a request fails.;Partially revert connection timeout behavior  ;The modification of the timeout behavior during connection caused problems;Similar;0.5435091853141785
Fix <iden> post retransmit in the new API  ;We dont buffer response bodies in the new API. But we should retransmit POST bodies when a request fails.;This change logs the exception but prevent it from propagating out of the top of the call stack.;This decreases overall flakiness.;Similar;0.5046756267547607
Fix <iden> post retransmit in the new API  ;We dont buffer response bodies in the new API. But we should retransmit POST bodies when a request fails.;The changes to <iden>s  <file_name> have been ported  ;Upstream commit of <iden> / <iden> fix, This does not include the introduction of PlatformTest, which will be difficult to write so it works everywhere;Similar;0.7993025779724121
Fix <iden> post retransmit in the new API  ;We dont buffer response bodies in the new API. But we should retransmit POST bodies when a request fails.;Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Similar;0.6922405362129211
Fix <iden> post retransmit in the new API  ;We dont buffer response bodies in the new API. But we should retransmit POST bodies when a request fails.;Return <file_name> to previous (e.g. KitKat) behavior;this change required to handle this <iden> scenario;Similar;0.6174116134643555
Fix <iden> post retransmit in the new API  ;We dont buffer response bodies in the new API. But we should retransmit POST bodies when a request fails.;Document <file_name> throwing modes;To include the <pr_link> information;Similar;0.5501038432121277
Fix <iden> post retransmit in the new API  ;We dont buffer response bodies in the new API. But we should retransmit POST bodies when a request fails.;Convert <file_name> to Kotlin;<pr_link>, <iden>, <file_name>;Similar;0.652011513710022
Fix <iden> post retransmit in the new API  ;We dont buffer response bodies in the new API. But we should retransmit POST bodies when a request fails.;Convert <file_name>, <file_name> to Kotlin  ;"to Kotlin

Decision: Rename <file_name> <version> to .kt (and others)  ";Similar;0.6548006534576416
Fix <iden> post retransmit in the new API  ;We dont buffer response bodies in the new API. But we should retransmit POST bodies when a request fails.;Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Similar;0.7915887236595154
Fix <iden> post retransmit in the new API  ;We dont buffer response bodies in the new API. But we should retransmit POST bodies when a request fails.;Just pass the <iden> and <iden> objects in directly;Dont summarize the request and response;Similar;0.5231954455375671
Fix <iden> post retransmit in the new API  ;We dont buffer response bodies in the new API. But we should retransmit POST bodies when a request fails.;Fix a race in <method_name> ( <pr_link> );We were assuming on a client failure the server wouldnt have any further events. But it will get a failure if we give it a moment. This was causing some test flakiness.;Similar;0.7296634912490845
Fix <iden> post retransmit in the new API  ;We dont buffer response bodies in the new API. But we should retransmit POST bodies when a request fails.;Improve some Markdown;improve;Similar;0.5356979966163635
Fix <iden> post retransmit in the new API  ;We dont buffer response bodies in the new API. But we should retransmit POST bodies when a request fails.;Refactor <file_name> by using <iden>;We can use <iden> instead of overriding <iden> abstract class;Similar;0.6703790426254272
Fix <iden> post retransmit in the new API  ;We dont buffer response bodies in the new API. But we should retransmit POST bodies when a request fails.;Enable GitHub Security Scanning;To configure GitHub workflow for code security scanning;Similar;0.5249933004379272
Fix <iden> post retransmit in the new API  ;We dont buffer response bodies in the new API. But we should retransmit POST bodies when a request fails.;Fix bug where request body isnt sent when it should  ;request body isnt sent when it should;Similar;0.6540137529373169
Fix <iden> post retransmit in the new API  ;We dont buffer response bodies in the new API. But we should retransmit POST bodies when a request fails.;Add support for following <iden> 307 temporary redirects  ;Fixes Android bug 41739;Similar;0.6479432582855225
Fix <iden> post retransmit in the new API  ;We dont buffer response bodies in the new API. But we should retransmit POST bodies when a request fails.;Add wildcard hostnames support in <file_name>;support;Similar;0.6656397581100464
Fix <iden> post retransmit in the new API  ;We dont buffer response bodies in the new API. But we should retransmit POST bodies when a request fails.;Fix correctness of WebSocketReader reserved flags test;reserved flags;Similar;0.6596017479896545
Add a test for corner-case behavior;Im looking to make HttpURLConnectionImpl delegate to Job, and that means writing tests for all the weird things it does above HttpEngine.;Add some pings to force happens-before in <iden> tests;Previously we were relying on accidents to get our tests to pass;Similar;0.6790411472320557
Add a test for corner-case behavior;Im looking to make HttpURLConnectionImpl delegate to Job, and that means writing tests for all the weird things it does above HttpEngine.;Track <file_name> ownership  ;<file_name> ownership is somewhat racy: when an HttpURLConnection reads the last byte of a connection, its ownership is released and given to the <method_name>;Similar;0.5482643246650696
Add a test for corner-case behavior;Im looking to make HttpURLConnectionImpl delegate to Job, and that means writing tests for all the weird things it does above HttpEngine.;Move  <file_name>  pooling logic  ;"previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams; move  <file_name>  reuse to  <file_name>, with policy informed by  <method_name>  specifying what to do when the  <file_name>  becomes idle: pool, close or hold, so the  <file_name>  does what its told.";Similar;0.6593226194381714
Add a test for corner-case behavior;Im looking to make HttpURLConnectionImpl delegate to Job, and that means writing tests for all the weird things it does above HttpEngine.;Implement moving bytes between OkBuffers  ;This is more complicated than Id anticipated;Similar;0.6032390594482422
Add a test for corner-case behavior;Im looking to make HttpURLConnectionImpl delegate to Job, and that means writing tests for all the weird things it does above HttpEngine.;Remove <iden> 2 warnings;Small docs fixes;Similar;0.5303115844726562
Add a test for corner-case behavior;Im looking to make HttpURLConnectionImpl delegate to Job, and that means writing tests for all the weird things it does above HttpEngine.;Fix checkstyle issues in new <iden> code;checkstyle issues;Similar;0.6725407838821411
Add a test for corner-case behavior;Im looking to make HttpURLConnectionImpl delegate to Job, and that means writing tests for all the weird things it does above HttpEngine.;Introduce a <file_name> interface between engine and connection.;This breaks the direct dependency from <file_name> to <method_name>;Similar;0.6184129118919373
Add a test for corner-case behavior;Im looking to make HttpURLConnectionImpl delegate to Job, and that means writing tests for all the weird things it does above HttpEngine.;Update to the latest <method_name>;Includes everything thru 8842981cbcfe20eb4721c0a2c867fa9a18233062;Similar;0.5734083652496338
Add a test for corner-case behavior;Im looking to make HttpURLConnectionImpl delegate to Job, and that means writing tests for all the weird things it does above HttpEngine.;Be more careful around IOExceptions;my goal is to make it easier to differentiate between protocol-level problems (bogus frames) from transport-level problems (closed sockets and EOF streams);Similar;0.6262912154197693
Add a test for corner-case behavior;Im looking to make HttpURLConnectionImpl delegate to Job, and that means writing tests for all the weird things it does above HttpEngine.;Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;Similar;0.6913796663284302
Add a test for corner-case behavior;Im looking to make HttpURLConnectionImpl delegate to Job, and that means writing tests for all the weird things it does above HttpEngine.;Move out of the <file_name> package;To promote the code into AOSP, well keep this package as-is and do the jarjar in <iden> instead;Similar;0.5152215361595154
Add a test for corner-case behavior;Im looking to make HttpURLConnectionImpl delegate to Job, and that means writing tests for all the weird things it does above HttpEngine.;Make the `<method_name>` return full working connections;Previously the returned connections required the caller to do extra work: setting up tunnels and performing an `<iden>` handshake. With this change, we make a complete working connection in `<method_name>`. This will make it easier to fix fallback when a single domain has multiple `<iden>` addresses that are not reachable. Also, this will make it easier to do SPDY through `<iden>` proxies.;Similar;0.5267819166183472
Add a test for corner-case behavior;Im looking to make HttpURLConnectionImpl delegate to Job, and that means writing tests for all the weird things it does above HttpEngine.;Fix <iden> which was being computed incorrectly;<enter> We were only returning true once we were already in a tunnel. This was bogus. In theory a <iden> tunnel sending extra data could be corrupted due to this bug.;Similar;0.5345572233200073
Add a test for corner-case behavior;Im looking to make HttpURLConnectionImpl delegate to Job, and that means writing tests for all the weird things it does above HttpEngine.;Add error-prone compiler and fix its found issues;error-prone, its found issues;Similar;0.6403141021728516
Add a test for corner-case behavior;Im looking to make HttpURLConnectionImpl delegate to Job, and that means writing tests for all the weird things it does above HttpEngine.;Expose <iden> directly on <method_name>  ;direct;Similar;0.6078940033912659
Add a test for corner-case behavior;Im looking to make HttpURLConnectionImpl delegate to Job, and that means writing tests for all the weird things it does above HttpEngine.;Use HTML entity for ampersand;to represent the ampersand symbol in HTML;Similar;0.576171338558197
Add a test for corner-case behavior;Im looking to make HttpURLConnectionImpl delegate to Job, and that means writing tests for all the weird things it does above HttpEngine.;Add convenience overload for <iden>-backed <method_name>;convenience;Similar;0.6849838495254517
Add a test for corner-case behavior;Im looking to make HttpURLConnectionImpl delegate to Job, and that means writing tests for all the weird things it does above HttpEngine.;Use consistent camel casing of <iden>;consistent camel casing;Similar;0.503173828125
Add a test for corner-case behavior;Im looking to make HttpURLConnectionImpl delegate to Job, and that means writing tests for all the weird things it does above HttpEngine.;Transfer to/from <iden> directly from <iden>  ;<pr_link>;Similar;0.6243696808815002
Add a test for corner-case behavior;Im looking to make HttpURLConnectionImpl delegate to Job, and that means writing tests for all the weird things it does above HttpEngine.;add @override for subclass override method;subclass override method;Similar;0.6334018707275391
Add a test for corner-case behavior;Im looking to make HttpURLConnectionImpl delegate to Job, and that means writing tests for all the weird things it does above HttpEngine.;Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Similar;0.6684909462928772
Add a test for corner-case behavior;Im looking to make HttpURLConnectionImpl delegate to Job, and that means writing tests for all the weird things it does above HttpEngine.;Partially revert connection timeout behavior  ;The modification of the timeout behavior during connection caused problems;Similar;0.6849038600921631
Add a test for corner-case behavior;Im looking to make HttpURLConnectionImpl delegate to Job, and that means writing tests for all the weird things it does above HttpEngine.;The changes to <iden>s  <file_name> have been ported  ;Upstream commit of <iden> / <iden> fix, This does not include the introduction of PlatformTest, which will be difficult to write so it works everywhere;Similar;0.5978922843933105
Add a test for corner-case behavior;Im looking to make HttpURLConnectionImpl delegate to Job, and that means writing tests for all the weird things it does above HttpEngine.;Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Similar;0.6836332082748413
Add a test for corner-case behavior;Im looking to make HttpURLConnectionImpl delegate to Job, and that means writing tests for all the weird things it does above HttpEngine.;Return <file_name> to previous (e.g. KitKat) behavior;this change required to handle this <iden> scenario;Similar;0.6237852573394775
Add a test for corner-case behavior;Im looking to make HttpURLConnectionImpl delegate to Job, and that means writing tests for all the weird things it does above HttpEngine.;Document <file_name> throwing modes;To include the <pr_link> information;Similar;0.5290742516517639
Add a test for corner-case behavior;Im looking to make HttpURLConnectionImpl delegate to Job, and that means writing tests for all the weird things it does above HttpEngine.;Convert <file_name> to Kotlin;<pr_link>, <iden>, <file_name>;Similar;0.6250168085098267
Add a test for corner-case behavior;Im looking to make HttpURLConnectionImpl delegate to Job, and that means writing tests for all the weird things it does above HttpEngine.;Convert <file_name>, <file_name> to Kotlin  ;"to Kotlin

Decision: Rename <file_name> <version> to .kt (and others)  ";Similar;0.6288301944732666
Add a test for corner-case behavior;Im looking to make HttpURLConnectionImpl delegate to Job, and that means writing tests for all the weird things it does above HttpEngine.;Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Similar;0.6745239496231079
Add a test for corner-case behavior;Im looking to make HttpURLConnectionImpl delegate to Job, and that means writing tests for all the weird things it does above HttpEngine.;Just pass the <iden> and <iden> objects in directly;Dont summarize the request and response;Similar;0.5929147005081177
Add a test for corner-case behavior;Im looking to make HttpURLConnectionImpl delegate to Job, and that means writing tests for all the weird things it does above HttpEngine.;Fix a race in <method_name> ( <pr_link> );We were assuming on a client failure the server wouldnt have any further events. But it will get a failure if we give it a moment. This was causing some test flakiness.;Similar;0.6315508484840393
Add a test for corner-case behavior;Im looking to make HttpURLConnectionImpl delegate to Job, and that means writing tests for all the weird things it does above HttpEngine.;Improve some Markdown;improve;Similar;0.6759733557701111
Add a test for corner-case behavior;Im looking to make HttpURLConnectionImpl delegate to Job, and that means writing tests for all the weird things it does above HttpEngine.;Refactor <file_name> by using <iden>;We can use <iden> instead of overriding <iden> abstract class;Similar;0.6276249885559082
Add a test for corner-case behavior;Im looking to make HttpURLConnectionImpl delegate to Job, and that means writing tests for all the weird things it does above HttpEngine.;Enable GitHub Security Scanning;To configure GitHub workflow for code security scanning;Similar;0.5499088764190674
Add a test for corner-case behavior;Im looking to make HttpURLConnectionImpl delegate to Job, and that means writing tests for all the weird things it does above HttpEngine.;load through bootstrap;-;Similar;0.593525767326355
Add a test for corner-case behavior;Im looking to make HttpURLConnectionImpl delegate to Job, and that means writing tests for all the weird things it does above HttpEngine.;Fix bug where request body isnt sent when it should  ;request body isnt sent when it should;Similar;0.630737841129303
Add a test for corner-case behavior;Im looking to make HttpURLConnectionImpl delegate to Job, and that means writing tests for all the weird things it does above HttpEngine.;Add support for following <iden> 307 temporary redirects  ;Fixes Android bug 41739;Similar;0.6344509720802307
Add a test for corner-case behavior;Im looking to make HttpURLConnectionImpl delegate to Job, and that means writing tests for all the weird things it does above HttpEngine.;Add wildcard hostnames support in <file_name>;support;Similar;0.535331130027771
Add a test for corner-case behavior;Im looking to make HttpURLConnectionImpl delegate to Job, and that means writing tests for all the weird things it does above HttpEngine.;Fix correctness of WebSocketReader reserved flags test;reserved flags;Similar;0.6241433620452881
Add some pings to force happens-before in <iden> tests;Previously we were relying on accidents to get our tests to pass;Move  <file_name>  pooling logic  ;"previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams; move  <file_name>  reuse to  <file_name>, with policy informed by  <method_name>  specifying what to do when the  <file_name>  becomes idle: pool, close or hold, so the  <file_name>  does what its told.";Similar;0.6807121634483337
Add some pings to force happens-before in <iden> tests;Previously we were relying on accidents to get our tests to pass;Implement moving bytes between OkBuffers  ;This is more complicated than Id anticipated;Similar;0.661693811416626
Add some pings to force happens-before in <iden> tests;Previously we were relying on accidents to get our tests to pass;"Define async APIs and switch <file_name> to use <iden> directly. I think this is the best route going forward; and eventually we could invert this relationship to have <iden> depending on <file_name> directly rather than vice versa.";Using <iden> directly introduces some duplicated code with <iden>. It also breaks the <file_name> cache.;Similar;0.5933494567871094
Add some pings to force happens-before in <iden> tests;Previously we were relying on accidents to get our tests to pass;Fix checkstyle issues in new <iden> code;checkstyle issues;Similar;0.7351481914520264
Add some pings to force happens-before in <iden> tests;Previously we were relying on accidents to get our tests to pass;Introduce a <file_name> interface between engine and connection.;This breaks the direct dependency from <file_name> to <method_name>;Similar;0.5856894254684448
Add some pings to force happens-before in <iden> tests;Previously we were relying on accidents to get our tests to pass;Update to the latest <method_name>;Includes everything thru 8842981cbcfe20eb4721c0a2c867fa9a18233062;Similar;0.6341533660888672
Add some pings to force happens-before in <iden> tests;Previously we were relying on accidents to get our tests to pass;Be more careful around IOExceptions;my goal is to make it easier to differentiate between protocol-level problems (bogus frames) from transport-level problems (closed sockets and EOF streams);Similar;0.5081925392150879
Add some pings to force happens-before in <iden> tests;Previously we were relying on accidents to get our tests to pass;Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;Similar;0.6647424697875977
Add some pings to force happens-before in <iden> tests;Previously we were relying on accidents to get our tests to pass;Move out of the <file_name> package;To promote the code into AOSP, well keep this package as-is and do the jarjar in <iden> instead;Similar;0.5110013484954834
Add some pings to force happens-before in <iden> tests;Previously we were relying on accidents to get our tests to pass;Make the `<method_name>` return full working connections;Previously the returned connections required the caller to do extra work: setting up tunnels and performing an `<iden>` handshake. With this change, we make a complete working connection in `<method_name>`. This will make it easier to fix fallback when a single domain has multiple `<iden>` addresses that are not reachable. Also, this will make it easier to do SPDY through `<iden>` proxies.;Similar;0.6106182932853699
Add some pings to force happens-before in <iden> tests;Previously we were relying on accidents to get our tests to pass;Add error-prone compiler and fix its found issues;error-prone, its found issues;Similar;0.6490693092346191
Add some pings to force happens-before in <iden> tests;Previously we were relying on accidents to get our tests to pass;Expose <iden> directly on <method_name>  ;direct;Similar;0.5637953281402588
Add some pings to force happens-before in <iden> tests;Previously we were relying on accidents to get our tests to pass;Use HTML entity for ampersand;to represent the ampersand symbol in HTML;Similar;0.523206353187561
Add some pings to force happens-before in <iden> tests;Previously we were relying on accidents to get our tests to pass;Add convenience overload for <iden>-backed <method_name>;convenience;Similar;0.6693361401557922
Add some pings to force happens-before in <iden> tests;Previously we were relying on accidents to get our tests to pass;Update website to the latest design  ;latest design;Similar;0.6392551064491272
Add some pings to force happens-before in <iden> tests;Previously we were relying on accidents to get our tests to pass;Transfer to/from <iden> directly from <iden>  ;<pr_link>;Similar;0.5686917901039124
Add some pings to force happens-before in <iden> tests;Previously we were relying on accidents to get our tests to pass;add @override for subclass override method;subclass override method;Similar;0.6660579442977905
Add some pings to force happens-before in <iden> tests;Previously we were relying on accidents to get our tests to pass;Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Similar;0.6471529006958008
Add some pings to force happens-before in <iden> tests;Previously we were relying on accidents to get our tests to pass;Partially revert connection timeout behavior  ;The modification of the timeout behavior during connection caused problems;Similar;0.5773621201515198
Add some pings to force happens-before in <iden> tests;Previously we were relying on accidents to get our tests to pass;This change logs the exception but prevent it from propagating out of the top of the call stack.;This decreases overall flakiness.;Similar;0.5493451356887817
Add some pings to force happens-before in <iden> tests;Previously we were relying on accidents to get our tests to pass;The changes to <iden>s  <file_name> have been ported  ;Upstream commit of <iden> / <iden> fix, This does not include the introduction of PlatformTest, which will be difficult to write so it works everywhere;Similar;0.7220156192779541
Add some pings to force happens-before in <iden> tests;Previously we were relying on accidents to get our tests to pass;Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Similar;0.6882038712501526
Add some pings to force happens-before in <iden> tests;Previously we were relying on accidents to get our tests to pass;Return <file_name> to previous (e.g. KitKat) behavior;this change required to handle this <iden> scenario;Similar;0.589076578617096
Add some pings to force happens-before in <iden> tests;Previously we were relying on accidents to get our tests to pass;Document <file_name> throwing modes;To include the <pr_link> information;Similar;0.6122742295265198
Add some pings to force happens-before in <iden> tests;Previously we were relying on accidents to get our tests to pass;Convert <file_name> to Kotlin;<pr_link>, <iden>, <file_name>;Similar;0.5448958873748779
Add some pings to force happens-before in <iden> tests;Previously we were relying on accidents to get our tests to pass;Convert <file_name>, <file_name> to Kotlin  ;"to Kotlin

Decision: Rename <file_name> <version> to .kt (and others)  ";Similar;0.5721440315246582
Add some pings to force happens-before in <iden> tests;Previously we were relying on accidents to get our tests to pass;Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Similar;0.6621276140213013
Add some pings to force happens-before in <iden> tests;Previously we were relying on accidents to get our tests to pass;Just pass the <iden> and <iden> objects in directly;Dont summarize the request and response;Similar;0.5740591883659363
Add some pings to force happens-before in <iden> tests;Previously we were relying on accidents to get our tests to pass;Fix a race in <method_name> ( <pr_link> );We were assuming on a client failure the server wouldnt have any further events. But it will get a failure if we give it a moment. This was causing some test flakiness.;Similar;0.6742899417877197
Add some pings to force happens-before in <iden> tests;Previously we were relying on accidents to get our tests to pass;Improve some Markdown;improve;Similar;0.5804205536842346
Add some pings to force happens-before in <iden> tests;Previously we were relying on accidents to get our tests to pass;Refactor <file_name> by using <iden>;We can use <iden> instead of overriding <iden> abstract class;Similar;0.5993959307670593
Add some pings to force happens-before in <iden> tests;Previously we were relying on accidents to get our tests to pass;Enable GitHub Security Scanning;To configure GitHub workflow for code security scanning;Similar;0.5102507472038269
Add some pings to force happens-before in <iden> tests;Previously we were relying on accidents to get our tests to pass;Fix bug where request body isnt sent when it should  ;request body isnt sent when it should;Similar;0.5931308269500732
Add some pings to force happens-before in <iden> tests;Previously we were relying on accidents to get our tests to pass;Add support for following <iden> 307 temporary redirects  ;Fixes Android bug 41739;Similar;0.6414981484413147
Add some pings to force happens-before in <iden> tests;Previously we were relying on accidents to get our tests to pass;Add wildcard hostnames support in <file_name>;support;Similar;0.5812044143676758
Add some pings to force happens-before in <iden> tests;Previously we were relying on accidents to get our tests to pass;Fix correctness of WebSocketReader reserved flags test;reserved flags;Similar;0.6002703905105591
Track <file_name> ownership  ;<file_name> ownership is somewhat racy: when an HttpURLConnection reads the last byte of a connection, its ownership is released and given to the <method_name>;Move  <file_name>  pooling logic  ;"previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams; move  <file_name>  reuse to  <file_name>, with policy informed by  <method_name>  specifying what to do when the  <file_name>  becomes idle: pool, close or hold, so the  <file_name>  does what its told.";Similar;0.718961238861084
Track <file_name> ownership  ;<file_name> ownership is somewhat racy: when an HttpURLConnection reads the last byte of a connection, its ownership is released and given to the <method_name>;Implement moving bytes between OkBuffers  ;This is more complicated than Id anticipated;Similar;0.5466479659080505
Track <file_name> ownership  ;<file_name> ownership is somewhat racy: when an HttpURLConnection reads the last byte of a connection, its ownership is released and given to the <method_name>;Dont attempt <iden> modes we know will fail.;we know will fail;Similar;0.5179054141044617
Track <file_name> ownership  ;<file_name> ownership is somewhat racy: when an HttpURLConnection reads the last byte of a connection, its ownership is released and given to the <method_name>;Introduce a <file_name> interface between engine and connection.;This breaks the direct dependency from <file_name> to <method_name>;Similar;0.7357305288314819
Track <file_name> ownership  ;<file_name> ownership is somewhat racy: when an HttpURLConnection reads the last byte of a connection, its ownership is released and given to the <method_name>;Update to the latest <method_name>;Includes everything thru 8842981cbcfe20eb4721c0a2c867fa9a18233062;Similar;0.5998780727386475
Track <file_name> ownership  ;<file_name> ownership is somewhat racy: when an HttpURLConnection reads the last byte of a connection, its ownership is released and given to the <method_name>;Be more careful around IOExceptions;my goal is to make it easier to differentiate between protocol-level problems (bogus frames) from transport-level problems (closed sockets and EOF streams);Similar;0.5344610810279846
Track <file_name> ownership  ;<file_name> ownership is somewhat racy: when an HttpURLConnection reads the last byte of a connection, its ownership is released and given to the <method_name>;Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;Similar;0.5237680673599243
Track <file_name> ownership  ;<file_name> ownership is somewhat racy: when an HttpURLConnection reads the last byte of a connection, its ownership is released and given to the <method_name>;Move out of the <file_name> package;To promote the code into AOSP, well keep this package as-is and do the jarjar in <iden> instead;Similar;0.5872942805290222
Track <file_name> ownership  ;<file_name> ownership is somewhat racy: when an HttpURLConnection reads the last byte of a connection, its ownership is released and given to the <method_name>;Make the `<method_name>` return full working connections;Previously the returned connections required the caller to do extra work: setting up tunnels and performing an `<iden>` handshake. With this change, we make a complete working connection in `<method_name>`. This will make it easier to fix fallback when a single domain has multiple `<iden>` addresses that are not reachable. Also, this will make it easier to do SPDY through `<iden>` proxies.;Similar;0.6316927075386047
Track <file_name> ownership  ;<file_name> ownership is somewhat racy: when an HttpURLConnection reads the last byte of a connection, its ownership is released and given to the <method_name>;Remove old <iden> protocol method;old;Similar;0.5854939818382263
Track <file_name> ownership  ;<file_name> ownership is somewhat racy: when an HttpURLConnection reads the last byte of a connection, its ownership is released and given to the <method_name>;Expose <iden> directly on <method_name>  ;direct;Similar;0.7765756249427795
Track <file_name> ownership  ;<file_name> ownership is somewhat racy: when an HttpURLConnection reads the last byte of a connection, its ownership is released and given to the <method_name>;Use HTML entity for ampersand;to represent the ampersand symbol in HTML;Similar;0.6554526686668396
Track <file_name> ownership  ;<file_name> ownership is somewhat racy: when an HttpURLConnection reads the last byte of a connection, its ownership is released and given to the <method_name>;Add convenience overload for <iden>-backed <method_name>;convenience;Similar;0.6121676564216614
Track <file_name> ownership  ;<file_name> ownership is somewhat racy: when an HttpURLConnection reads the last byte of a connection, its ownership is released and given to the <method_name>;Use consistent camel casing of <iden>;consistent camel casing;Similar;0.5093331933021545
Track <file_name> ownership  ;<file_name> ownership is somewhat racy: when an HttpURLConnection reads the last byte of a connection, its ownership is released and given to the <method_name>;Drop unused dependencies;unused;Similar;0.5081623196601868
Track <file_name> ownership  ;<file_name> ownership is somewhat racy: when an HttpURLConnection reads the last byte of a connection, its ownership is released and given to the <method_name>;Transfer to/from <iden> directly from <iden>  ;<pr_link>;Similar;0.7457808256149292
Track <file_name> ownership  ;<file_name> ownership is somewhat racy: when an HttpURLConnection reads the last byte of a connection, its ownership is released and given to the <method_name>;add @override for subclass override method;subclass override method;Similar;0.6226397752761841
Track <file_name> ownership  ;<file_name> ownership is somewhat racy: when an HttpURLConnection reads the last byte of a connection, its ownership is released and given to the <method_name>;Partially revert connection timeout behavior  ;The modification of the timeout behavior during connection caused problems;Similar;0.5620586276054382
Track <file_name> ownership  ;<file_name> ownership is somewhat racy: when an HttpURLConnection reads the last byte of a connection, its ownership is released and given to the <method_name>;The changes to <iden>s  <file_name> have been ported  ;Upstream commit of <iden> / <iden> fix, This does not include the introduction of PlatformTest, which will be difficult to write so it works everywhere;Similar;0.5779905915260315
Track <file_name> ownership  ;<file_name> ownership is somewhat racy: when an HttpURLConnection reads the last byte of a connection, its ownership is released and given to the <method_name>;Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Similar;0.7052282094955444
Track <file_name> ownership  ;<file_name> ownership is somewhat racy: when an HttpURLConnection reads the last byte of a connection, its ownership is released and given to the <method_name>;Return <file_name> to previous (e.g. KitKat) behavior;this change required to handle this <iden> scenario;Similar;0.7632447481155396
Track <file_name> ownership  ;<file_name> ownership is somewhat racy: when an HttpURLConnection reads the last byte of a connection, its ownership is released and given to the <method_name>;Document <file_name> throwing modes;To include the <pr_link> information;Similar;0.673911452293396
Track <file_name> ownership  ;<file_name> ownership is somewhat racy: when an HttpURLConnection reads the last byte of a connection, its ownership is released and given to the <method_name>;Convert <file_name> to Kotlin;<pr_link>, <iden>, <file_name>;Similar;0.7194485068321228
Track <file_name> ownership  ;<file_name> ownership is somewhat racy: when an HttpURLConnection reads the last byte of a connection, its ownership is released and given to the <method_name>;Convert <file_name>, <file_name> to Kotlin  ;"to Kotlin

Decision: Rename <file_name> <version> to .kt (and others)  ";Similar;0.716230571269989
Track <file_name> ownership  ;<file_name> ownership is somewhat racy: when an HttpURLConnection reads the last byte of a connection, its ownership is released and given to the <method_name>;Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Similar;0.5858911275863647
Track <file_name> ownership  ;<file_name> ownership is somewhat racy: when an HttpURLConnection reads the last byte of a connection, its ownership is released and given to the <method_name>;Just pass the <iden> and <iden> objects in directly;Dont summarize the request and response;Similar;0.6579189300537109
Track <file_name> ownership  ;<file_name> ownership is somewhat racy: when an HttpURLConnection reads the last byte of a connection, its ownership is released and given to the <method_name>;Fix a race in <method_name> ( <pr_link> );We were assuming on a client failure the server wouldnt have any further events. But it will get a failure if we give it a moment. This was causing some test flakiness.;Similar;0.5205801725387573
Track <file_name> ownership  ;<file_name> ownership is somewhat racy: when an HttpURLConnection reads the last byte of a connection, its ownership is released and given to the <method_name>;Refactor <file_name> by using <iden>;We can use <iden> instead of overriding <iden> abstract class;Similar;0.7612144947052002
Track <file_name> ownership  ;<file_name> ownership is somewhat racy: when an HttpURLConnection reads the last byte of a connection, its ownership is released and given to the <method_name>;Enable GitHub Security Scanning;To configure GitHub workflow for code security scanning;Similar;0.5845857262611389
Track <file_name> ownership  ;<file_name> ownership is somewhat racy: when an HttpURLConnection reads the last byte of a connection, its ownership is released and given to the <method_name>;load through bootstrap;-;Similar;0.65748131275177
Track <file_name> ownership  ;<file_name> ownership is somewhat racy: when an HttpURLConnection reads the last byte of a connection, its ownership is released and given to the <method_name>;Add support for following <iden> 307 temporary redirects  ;Fixes Android bug 41739;Similar;0.5633517503738403
Track <file_name> ownership  ;<file_name> ownership is somewhat racy: when an HttpURLConnection reads the last byte of a connection, its ownership is released and given to the <method_name>;Add wildcard hostnames support in <file_name>;support;Similar;0.6187546253204346
Move  <file_name>  pooling logic  ;"previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams; move  <file_name>  reuse to  <file_name>, with policy informed by  <method_name>  specifying what to do when the  <file_name>  becomes idle: pool, close or hold, so the  <file_name>  does what its told.";Implement moving bytes between OkBuffers  ;This is more complicated than Id anticipated;Similar;0.7572574019432068
Move  <file_name>  pooling logic  ;"previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams; move  <file_name>  reuse to  <file_name>, with policy informed by  <method_name>  specifying what to do when the  <file_name>  becomes idle: pool, close or hold, so the  <file_name>  does what its told.";Remove <iden> 2 warnings;Small docs fixes;Similar;0.5440135598182678
Move  <file_name>  pooling logic  ;"previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams; move  <file_name>  reuse to  <file_name>, with policy informed by  <method_name>  specifying what to do when the  <file_name>  becomes idle: pool, close or hold, so the  <file_name>  does what its told.";"Define async APIs and switch <file_name> to use <iden> directly. I think this is the best route going forward; and eventually we could invert this relationship to have <iden> depending on <file_name> directly rather than vice versa.";Using <iden> directly introduces some duplicated code with <iden>. It also breaks the <file_name> cache.;Similar;0.5434792041778564
Move  <file_name>  pooling logic  ;"previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams; move  <file_name>  reuse to  <file_name>, with policy informed by  <method_name>  specifying what to do when the  <file_name>  becomes idle: pool, close or hold, so the  <file_name>  does what its told.";Fix checkstyle issues in new <iden> code;checkstyle issues;Similar;0.6126704216003418
Move  <file_name>  pooling logic  ;"previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams; move  <file_name>  reuse to  <file_name>, with policy informed by  <method_name>  specifying what to do when the  <file_name>  becomes idle: pool, close or hold, so the  <file_name>  does what its told.";Kill <file_name> in the process  ;Teach <file_name> <iden>;Similar;0.5229222774505615
Move  <file_name>  pooling logic  ;"previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams; move  <file_name>  reuse to  <file_name>, with policy informed by  <method_name>  specifying what to do when the  <file_name>  becomes idle: pool, close or hold, so the  <file_name>  does what its told.";Introduce a <file_name> interface between engine and connection.;This breaks the direct dependency from <file_name> to <method_name>;Similar;0.7870287895202637
Move  <file_name>  pooling logic  ;"previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams; move  <file_name>  reuse to  <file_name>, with policy informed by  <method_name>  specifying what to do when the  <file_name>  becomes idle: pool, close or hold, so the  <file_name>  does what its told.";Update to the latest <method_name>;Includes everything thru 8842981cbcfe20eb4721c0a2c867fa9a18233062;Similar;0.6607303619384766
Move  <file_name>  pooling logic  ;"previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams; move  <file_name>  reuse to  <file_name>, with policy informed by  <method_name>  specifying what to do when the  <file_name>  becomes idle: pool, close or hold, so the  <file_name>  does what its told.";Be more careful around IOExceptions;my goal is to make it easier to differentiate between protocol-level problems (bogus frames) from transport-level problems (closed sockets and EOF streams);Similar;0.569165825843811
Move  <file_name>  pooling logic  ;"previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams; move  <file_name>  reuse to  <file_name>, with policy informed by  <method_name>  specifying what to do when the  <file_name>  becomes idle: pool, close or hold, so the  <file_name>  does what its told.";Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;Similar;0.6561287641525269
Move  <file_name>  pooling logic  ;"previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams; move  <file_name>  reuse to  <file_name>, with policy informed by  <method_name>  specifying what to do when the  <file_name>  becomes idle: pool, close or hold, so the  <file_name>  does what its told.";Move out of the <file_name> package;To promote the code into AOSP, well keep this package as-is and do the jarjar in <iden> instead;Similar;0.6824299097061157
Move  <file_name>  pooling logic  ;"previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams; move  <file_name>  reuse to  <file_name>, with policy informed by  <method_name>  specifying what to do when the  <file_name>  becomes idle: pool, close or hold, so the  <file_name>  does what its told.";Make the `<method_name>` return full working connections;Previously the returned connections required the caller to do extra work: setting up tunnels and performing an `<iden>` handshake. With this change, we make a complete working connection in `<method_name>`. This will make it easier to fix fallback when a single domain has multiple `<iden>` addresses that are not reachable. Also, this will make it easier to do SPDY through `<iden>` proxies.;Similar;0.7120950222015381
Move  <file_name>  pooling logic  ;"previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams; move  <file_name>  reuse to  <file_name>, with policy informed by  <method_name>  specifying what to do when the  <file_name>  becomes idle: pool, close or hold, so the  <file_name>  does what its told.";Add error-prone compiler and fix its found issues;error-prone, its found issues;Similar;0.5612372159957886
Move  <file_name>  pooling logic  ;"previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams; move  <file_name>  reuse to  <file_name>, with policy informed by  <method_name>  specifying what to do when the  <file_name>  becomes idle: pool, close or hold, so the  <file_name>  does what its told.";Remove old <iden> protocol method;old;Similar;0.5634092092514038
Move  <file_name>  pooling logic  ;"previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams; move  <file_name>  reuse to  <file_name>, with policy informed by  <method_name>  specifying what to do when the  <file_name>  becomes idle: pool, close or hold, so the  <file_name>  does what its told.";Expose <iden> directly on <method_name>  ;direct;Similar;0.787390410900116
Move  <file_name>  pooling logic  ;"previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams; move  <file_name>  reuse to  <file_name>, with policy informed by  <method_name>  specifying what to do when the  <file_name>  becomes idle: pool, close or hold, so the  <file_name>  does what its told.";Use HTML entity for ampersand;to represent the ampersand symbol in HTML;Similar;0.704729437828064
Move  <file_name>  pooling logic  ;"previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams; move  <file_name>  reuse to  <file_name>, with policy informed by  <method_name>  specifying what to do when the  <file_name>  becomes idle: pool, close or hold, so the  <file_name>  does what its told.";Add convenience overload for <iden>-backed <method_name>;convenience;Similar;0.7519171833992004
Move  <file_name>  pooling logic  ;"previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams; move  <file_name>  reuse to  <file_name>, with policy informed by  <method_name>  specifying what to do when the  <file_name>  becomes idle: pool, close or hold, so the  <file_name>  does what its told.";Update website to the latest design  ;latest design;Similar;0.522343635559082
Move  <file_name>  pooling logic  ;"previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams; move  <file_name>  reuse to  <file_name>, with policy informed by  <method_name>  specifying what to do when the  <file_name>  becomes idle: pool, close or hold, so the  <file_name>  does what its told.";Transfer to/from <iden> directly from <iden>  ;<pr_link>;Similar;0.7450380325317383
Move  <file_name>  pooling logic  ;"previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams; move  <file_name>  reuse to  <file_name>, with policy informed by  <method_name>  specifying what to do when the  <file_name>  becomes idle: pool, close or hold, so the  <file_name>  does what its told.";add @override for subclass override method;subclass override method;Similar;0.7313033938407898
Move  <file_name>  pooling logic  ;"previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams; move  <file_name>  reuse to  <file_name>, with policy informed by  <method_name>  specifying what to do when the  <file_name>  becomes idle: pool, close or hold, so the  <file_name>  does what its told.";Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Similar;0.6123886108398438
Move  <file_name>  pooling logic  ;"previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams; move  <file_name>  reuse to  <file_name>, with policy informed by  <method_name>  specifying what to do when the  <file_name>  becomes idle: pool, close or hold, so the  <file_name>  does what its told.";Partially revert connection timeout behavior  ;The modification of the timeout behavior during connection caused problems;Similar;0.5732808113098145
Move  <file_name>  pooling logic  ;"previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams; move  <file_name>  reuse to  <file_name>, with policy informed by  <method_name>  specifying what to do when the  <file_name>  becomes idle: pool, close or hold, so the  <file_name>  does what its told.";The changes to <iden>s  <file_name> have been ported  ;Upstream commit of <iden> / <iden> fix, This does not include the introduction of PlatformTest, which will be difficult to write so it works everywhere;Similar;0.700549840927124
Move  <file_name>  pooling logic  ;"previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams; move  <file_name>  reuse to  <file_name>, with policy informed by  <method_name>  specifying what to do when the  <file_name>  becomes idle: pool, close or hold, so the  <file_name>  does what its told.";Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Similar;0.8417710661888123
Move  <file_name>  pooling logic  ;"previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams; move  <file_name>  reuse to  <file_name>, with policy informed by  <method_name>  specifying what to do when the  <file_name>  becomes idle: pool, close or hold, so the  <file_name>  does what its told.";Return <file_name> to previous (e.g. KitKat) behavior;this change required to handle this <iden> scenario;Similar;0.6956777572631836
Move  <file_name>  pooling logic  ;"previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams; move  <file_name>  reuse to  <file_name>, with policy informed by  <method_name>  specifying what to do when the  <file_name>  becomes idle: pool, close or hold, so the  <file_name>  does what its told.";Document <file_name> throwing modes;To include the <pr_link> information;Similar;0.7737849950790405
Move  <file_name>  pooling logic  ;"previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams; move  <file_name>  reuse to  <file_name>, with policy informed by  <method_name>  specifying what to do when the  <file_name>  becomes idle: pool, close or hold, so the  <file_name>  does what its told.";Convert <file_name> to Kotlin;<pr_link>, <iden>, <file_name>;Similar;0.7765922546386719
Move  <file_name>  pooling logic  ;"previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams; move  <file_name>  reuse to  <file_name>, with policy informed by  <method_name>  specifying what to do when the  <file_name>  becomes idle: pool, close or hold, so the  <file_name>  does what its told.";Convert <file_name>, <file_name> to Kotlin  ;"to Kotlin

Decision: Rename <file_name> <version> to .kt (and others)  ";Similar;0.7839120626449585
Move  <file_name>  pooling logic  ;"previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams; move  <file_name>  reuse to  <file_name>, with policy informed by  <method_name>  specifying what to do when the  <file_name>  becomes idle: pool, close or hold, so the  <file_name>  does what its told.";Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Similar;0.6235172748565674
Move  <file_name>  pooling logic  ;"previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams; move  <file_name>  reuse to  <file_name>, with policy informed by  <method_name>  specifying what to do when the  <file_name>  becomes idle: pool, close or hold, so the  <file_name>  does what its told.";Just pass the <iden> and <iden> objects in directly;Dont summarize the request and response;Similar;0.6770216822624207
Move  <file_name>  pooling logic  ;"previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams; move  <file_name>  reuse to  <file_name>, with policy informed by  <method_name>  specifying what to do when the  <file_name>  becomes idle: pool, close or hold, so the  <file_name>  does what its told.";Fix a race in <method_name> ( <pr_link> );We were assuming on a client failure the server wouldnt have any further events. But it will get a failure if we give it a moment. This was causing some test flakiness.;Similar;0.6525481343269348
Move  <file_name>  pooling logic  ;"previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams; move  <file_name>  reuse to  <file_name>, with policy informed by  <method_name>  specifying what to do when the  <file_name>  becomes idle: pool, close or hold, so the  <file_name>  does what its told.";Improve some Markdown;improve;Similar;0.5411438345909119
Move  <file_name>  pooling logic  ;"previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams; move  <file_name>  reuse to  <file_name>, with policy informed by  <method_name>  specifying what to do when the  <file_name>  becomes idle: pool, close or hold, so the  <file_name>  does what its told.";Refactor <file_name> by using <iden>;We can use <iden> instead of overriding <iden> abstract class;Similar;0.7953429818153381
Move  <file_name>  pooling logic  ;"previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams; move  <file_name>  reuse to  <file_name>, with policy informed by  <method_name>  specifying what to do when the  <file_name>  becomes idle: pool, close or hold, so the  <file_name>  does what its told.";Enable GitHub Security Scanning;To configure GitHub workflow for code security scanning;Similar;0.5969568490982056
Move  <file_name>  pooling logic  ;"previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams; move  <file_name>  reuse to  <file_name>, with policy informed by  <method_name>  specifying what to do when the  <file_name>  becomes idle: pool, close or hold, so the  <file_name>  does what its told.";load through bootstrap;-;Similar;0.6719762682914734
Move  <file_name>  pooling logic  ;"previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams; move  <file_name>  reuse to  <file_name>, with policy informed by  <method_name>  specifying what to do when the  <file_name>  becomes idle: pool, close or hold, so the  <file_name>  does what its told.";Fix bug where request body isnt sent when it should  ;request body isnt sent when it should;Similar;0.5440866351127625
Move  <file_name>  pooling logic  ;"previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams; move  <file_name>  reuse to  <file_name>, with policy informed by  <method_name>  specifying what to do when the  <file_name>  becomes idle: pool, close or hold, so the  <file_name>  does what its told.";Add support for following <iden> 307 temporary redirects  ;Fixes Android bug 41739;Similar;0.6749801635742188
Move  <file_name>  pooling logic  ;"previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams; move  <file_name>  reuse to  <file_name>, with policy informed by  <method_name>  specifying what to do when the  <file_name>  becomes idle: pool, close or hold, so the  <file_name>  does what its told.";Add wildcard hostnames support in <file_name>;support;Similar;0.717886209487915
Move  <file_name>  pooling logic  ;"previously we had this ugly, awkward release() method that attempted to manage  <file_name>  pooling, discarding streams for caching, and closing broken streams; move  <file_name>  reuse to  <file_name>, with policy informed by  <method_name>  specifying what to do when the  <file_name>  becomes idle: pool, close or hold, so the  <file_name>  does what its told.";Fix correctness of WebSocketReader reserved flags test;reserved flags;Similar;0.5606154203414917
Implement moving bytes between OkBuffers  ;This is more complicated than Id anticipated;Remove <iden> 2 warnings;Small docs fixes;Similar;0.5357019901275635
Implement moving bytes between OkBuffers  ;This is more complicated than Id anticipated;Fix checkstyle issues in new <iden> code;checkstyle issues;Similar;0.6117098927497864
Implement moving bytes between OkBuffers  ;This is more complicated than Id anticipated;Introduce a <file_name> interface between engine and connection.;This breaks the direct dependency from <file_name> to <method_name>;Similar;0.7289779186248779
Implement moving bytes between OkBuffers  ;This is more complicated than Id anticipated;Update to the latest <method_name>;Includes everything thru 8842981cbcfe20eb4721c0a2c867fa9a18233062;Similar;0.5609217286109924
Implement moving bytes between OkBuffers  ;This is more complicated than Id anticipated;Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;Similar;0.6323087215423584
Implement moving bytes between OkBuffers  ;This is more complicated than Id anticipated;Move out of the <file_name> package;To promote the code into AOSP, well keep this package as-is and do the jarjar in <iden> instead;Similar;0.6703383922576904
Implement moving bytes between OkBuffers  ;This is more complicated than Id anticipated;Make the `<method_name>` return full working connections;Previously the returned connections required the caller to do extra work: setting up tunnels and performing an `<iden>` handshake. With this change, we make a complete working connection in `<method_name>`. This will make it easier to fix fallback when a single domain has multiple `<iden>` addresses that are not reachable. Also, this will make it easier to do SPDY through `<iden>` proxies.;Similar;0.6349567174911499
Implement moving bytes between OkBuffers  ;This is more complicated than Id anticipated;Add error-prone compiler and fix its found issues;error-prone, its found issues;Similar;0.5867840051651001
Implement moving bytes between OkBuffers  ;This is more complicated than Id anticipated;Remove old <iden> protocol method;old;Similar;0.5547239780426025
Implement moving bytes between OkBuffers  ;This is more complicated than Id anticipated;Expose <iden> directly on <method_name>  ;direct;Similar;0.6309589743614197
Implement moving bytes between OkBuffers  ;This is more complicated than Id anticipated;Use HTML entity for ampersand;to represent the ampersand symbol in HTML;Similar;0.6660617589950562
Implement moving bytes between OkBuffers  ;This is more complicated than Id anticipated;Add convenience overload for <iden>-backed <method_name>;convenience;Similar;0.6302758455276489
Implement moving bytes between OkBuffers  ;This is more complicated than Id anticipated;Transfer to/from <iden> directly from <iden>  ;<pr_link>;Similar;0.6910446286201477
Implement moving bytes between OkBuffers  ;This is more complicated than Id anticipated;add @override for subclass override method;subclass override method;Similar;0.6308026313781738
Implement moving bytes between OkBuffers  ;This is more complicated than Id anticipated;Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Similar;0.6102643013000488
Implement moving bytes between OkBuffers  ;This is more complicated than Id anticipated;Partially revert connection timeout behavior  ;The modification of the timeout behavior during connection caused problems;Similar;0.6112646460533142
Implement moving bytes between OkBuffers  ;This is more complicated than Id anticipated;The changes to <iden>s  <file_name> have been ported  ;Upstream commit of <iden> / <iden> fix, This does not include the introduction of PlatformTest, which will be difficult to write so it works everywhere;Similar;0.7136379480361938
Implement moving bytes between OkBuffers  ;This is more complicated than Id anticipated;Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Similar;0.7595804929733276
Implement moving bytes between OkBuffers  ;This is more complicated than Id anticipated;Return <file_name> to previous (e.g. KitKat) behavior;this change required to handle this <iden> scenario;Similar;0.6799152493476868
Implement moving bytes between OkBuffers  ;This is more complicated than Id anticipated;Document <file_name> throwing modes;To include the <pr_link> information;Similar;0.681329071521759
Implement moving bytes between OkBuffers  ;This is more complicated than Id anticipated;Convert <file_name> to Kotlin;<pr_link>, <iden>, <file_name>;Similar;0.7090263366699219
Implement moving bytes between OkBuffers  ;This is more complicated than Id anticipated;Convert <file_name>, <file_name> to Kotlin  ;"to Kotlin

Decision: Rename <file_name> <version> to .kt (and others)  ";Similar;0.7223354578018188
Implement moving bytes between OkBuffers  ;This is more complicated than Id anticipated;Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Similar;0.6461946368217468
Implement moving bytes between OkBuffers  ;This is more complicated than Id anticipated;Just pass the <iden> and <iden> objects in directly;Dont summarize the request and response;Similar;0.6254688501358032
Implement moving bytes between OkBuffers  ;This is more complicated than Id anticipated;Fix a race in <method_name> ( <pr_link> );We were assuming on a client failure the server wouldnt have any further events. But it will get a failure if we give it a moment. This was causing some test flakiness.;Similar;0.5533406734466553
Implement moving bytes between OkBuffers  ;This is more complicated than Id anticipated;Improve some Markdown;improve;Similar;0.5599383115768433
Implement moving bytes between OkBuffers  ;This is more complicated than Id anticipated;Refactor <file_name> by using <iden>;We can use <iden> instead of overriding <iden> abstract class;Similar;0.690159022808075
Implement moving bytes between OkBuffers  ;This is more complicated than Id anticipated;Enable GitHub Security Scanning;To configure GitHub workflow for code security scanning;Similar;0.5605291128158569
Implement moving bytes between OkBuffers  ;This is more complicated than Id anticipated;load through bootstrap;-;Similar;0.7091245651245117
Implement moving bytes between OkBuffers  ;This is more complicated than Id anticipated;Fix bug where request body isnt sent when it should  ;request body isnt sent when it should;Similar;0.5863123536109924
Implement moving bytes between OkBuffers  ;This is more complicated than Id anticipated;Add support for following <iden> 307 temporary redirects  ;Fixes Android bug 41739;Similar;0.6313315629959106
Implement moving bytes between OkBuffers  ;This is more complicated than Id anticipated;Add wildcard hostnames support in <file_name>;support;Similar;0.6456698179244995
Implement moving bytes between OkBuffers  ;This is more complicated than Id anticipated;Fix correctness of WebSocketReader reserved flags test;reserved flags;Similar;0.5232363343238831
Dont attempt <iden> modes we know will fail.;we know will fail;Remove <iden> 2 warnings;Small docs fixes;Similar;0.5153528451919556
Dont attempt <iden> modes we know will fail.;we know will fail;"Define async APIs and switch <file_name> to use <iden> directly. I think this is the best route going forward; and eventually we could invert this relationship to have <iden> depending on <file_name> directly rather than vice versa.";Using <iden> directly introduces some duplicated code with <iden>. It also breaks the <file_name> cache.;Similar;0.5185788869857788
Dont attempt <iden> modes we know will fail.;we know will fail;Dont use <iden> APIs not in Gingerbread;APIs not in Gingerbread;Similar;0.5239168405532837
Dont attempt <iden> modes we know will fail.;we know will fail;Make  <file_name> less flaky;I was seeing flaky results in the debugger because pooled connections were being evicted as the test ran;Similar;0.599885880947113
Dont attempt <iden> modes we know will fail.;we know will fail;Be more careful around IOExceptions;my goal is to make it easier to differentiate between protocol-level problems (bogus frames) from transport-level problems (closed sockets and EOF streams);Similar;0.6173787713050842
Dont attempt <iden> modes we know will fail.;we know will fail;Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;Similar;0.5123928785324097
Dont attempt <iden> modes we know will fail.;we know will fail;We dont need no stinkin braces;no stinkin braces;Similar;0.6162922382354736
Dont attempt <iden> modes we know will fail.;we know will fail;Remove old <iden> protocol method;old;Similar;0.5428870916366577
Dont attempt <iden> modes we know will fail.;we know will fail;Add convenience overload for <iden>-backed <method_name>;convenience;Similar;0.5466833710670471
Dont attempt <iden> modes we know will fail.;we know will fail;Drop unused dependencies;unused;Similar;0.5563527941703796
Dont attempt <iden> modes we know will fail.;we know will fail;Transfer to/from <iden> directly from <iden>  ;<pr_link>;Similar;0.5329498052597046
Dont attempt <iden> modes we know will fail.;we know will fail;Partially revert connection timeout behavior  ;The modification of the timeout behavior during connection caused problems;Similar;0.5529406070709229
Dont attempt <iden> modes we know will fail.;we know will fail;This change logs the exception but prevent it from propagating out of the top of the call stack.;This decreases overall flakiness.;Similar;0.5336455702781677
Dont attempt <iden> modes we know will fail.;we know will fail;Just pass the <iden> and <iden> objects in directly;Dont summarize the request and response;Similar;0.6400030255317688
Dont attempt <iden> modes we know will fail.;we know will fail;Improve some Markdown;improve;Similar;0.5259495377540588
Dont attempt <iden> modes we know will fail.;we know will fail;fix <issue_link> : PROPFIND request should not redirect to GET request;PROPFIND request should not redirect to GET request;Similar;0.7413880825042725
Dont attempt <iden> modes we know will fail.;we know will fail;Remove unnecessary use of grouping parentheses  ;Lets remove warnings found by errorprone.;Similar;0.6073181629180908
Dont attempt <iden> modes we know will fail.;we know will fail;Fix bug where request body isnt sent when it should  ;request body isnt sent when it should;Similar;0.5474798083305359
Remove <iden> 2 warnings;Small docs fixes;Kill <file_name> in the process  ;Teach <file_name> <iden>;Similar;0.5989231467247009
Remove <iden> 2 warnings;Small docs fixes;Dont use <iden> APIs not in Gingerbread;APIs not in Gingerbread;Similar;0.5383126139640808
Remove <iden> 2 warnings;Small docs fixes;Make  <file_name> less flaky;I was seeing flaky results in the debugger because pooled connections were being evicted as the test ran;Similar;0.6236808896064758
Remove <iden> 2 warnings;Small docs fixes;Be more careful around IOExceptions;my goal is to make it easier to differentiate between protocol-level problems (bogus frames) from transport-level problems (closed sockets and EOF streams);Similar;0.5402396321296692
Remove <iden> 2 warnings;Small docs fixes;Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;Similar;0.5721136331558228
Remove <iden> 2 warnings;Small docs fixes;Move out of the <file_name> package;To promote the code into AOSP, well keep this package as-is and do the jarjar in <iden> instead;Similar;0.7615112662315369
Remove <iden> 2 warnings;Small docs fixes;Fix <iden> which was being computed incorrectly;<enter> We were only returning true once we were already in a tunnel. This was bogus. In theory a <iden> tunnel sending extra data could be corrupted due to this bug.;Similar;0.5737104415893555
Remove <iden> 2 warnings;Small docs fixes;Remove old <iden> protocol method;old;Similar;0.7952004671096802
Remove <iden> 2 warnings;Small docs fixes;Expose <iden> directly on <method_name>  ;direct;Similar;0.559111475944519
Remove <iden> 2 warnings;Small docs fixes;Add convenience overload for <iden>-backed <method_name>;convenience;Similar;0.5312348008155823
Remove <iden> 2 warnings;Small docs fixes;Drop unused dependencies;unused;Similar;0.7351973652839661
Remove <iden> 2 warnings;Small docs fixes;Transfer to/from <iden> directly from <iden>  ;<pr_link>;Similar;0.6022263765335083
Remove <iden> 2 warnings;Small docs fixes;Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Similar;0.6147624254226685
Remove <iden> 2 warnings;Small docs fixes;Partially revert connection timeout behavior  ;The modification of the timeout behavior during connection caused problems;Similar;0.5708875060081482
Remove <iden> 2 warnings;Small docs fixes;The changes to <iden>s  <file_name> have been ported  ;Upstream commit of <iden> / <iden> fix, This does not include the introduction of PlatformTest, which will be difficult to write so it works everywhere;Similar;0.5100281238555908
Remove <iden> 2 warnings;Small docs fixes;Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Similar;0.6835718750953674
Remove <iden> 2 warnings;Small docs fixes;Document <file_name> throwing modes;To include the <pr_link> information;Similar;0.5483419895172119
Remove <iden> 2 warnings;Small docs fixes;Convert <file_name> to Kotlin;<pr_link>, <iden>, <file_name>;Similar;0.5899372100830078
Remove <iden> 2 warnings;Small docs fixes;Convert <file_name>, <file_name> to Kotlin  ;"to Kotlin

Decision: Rename <file_name> <version> to .kt (and others)  ";Similar;0.5918630957603455
Remove <iden> 2 warnings;Small docs fixes;Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Similar;0.5043634176254272
Remove <iden> 2 warnings;Small docs fixes;Fail HTTP/2 connections if the pong is not received;This removes the abstraction from our http2 package;Similar;0.634791374206543
Remove <iden> 2 warnings;Small docs fixes;Just pass the <iden> and <iden> objects in directly;Dont summarize the request and response;Similar;0.6097943782806396
Remove <iden> 2 warnings;Small docs fixes;Fix a race in <method_name> ( <pr_link> );We were assuming on a client failure the server wouldnt have any further events. But it will get a failure if we give it a moment. This was causing some test flakiness.;Similar;0.5187255144119263
Remove <iden> 2 warnings;Small docs fixes;Improve some Markdown;improve;Similar;0.5411151647567749
Remove <iden> 2 warnings;Small docs fixes;fix <issue_link> : PROPFIND request should not redirect to GET request;PROPFIND request should not redirect to GET request;Similar;0.5650634765625
Remove <iden> 2 warnings;Small docs fixes;Refactor <file_name> by using <iden>;We can use <iden> instead of overriding <iden> abstract class;Similar;0.5442069172859192
Remove <iden> 2 warnings;Small docs fixes;Remove unnecessary use of grouping parentheses  ;Lets remove warnings found by errorprone.;Similar;0.6970797777175903
Remove <iden> 2 warnings;Small docs fixes;load through bootstrap;-;Similar;0.5790815949440002
Remove <iden> 2 warnings;Small docs fixes;Fix bug where request body isnt sent when it should  ;request body isnt sent when it should;Similar;0.6129457354545593
"Define async APIs and switch <file_name> to use <iden> directly. I think this is the best route going forward; and eventually we could invert this relationship to have <iden> depending on <file_name> directly rather than vice versa.";Using <iden> directly introduces some duplicated code with <iden>. It also breaks the <file_name> cache.;Fix checkstyle issues in new <iden> code;checkstyle issues;Similar;0.5855472087860107
"Define async APIs and switch <file_name> to use <iden> directly. I think this is the best route going forward; and eventually we could invert this relationship to have <iden> depending on <file_name> directly rather than vice versa.";Using <iden> directly introduces some duplicated code with <iden>. It also breaks the <file_name> cache.;Introduce a <file_name> interface between engine and connection.;This breaks the direct dependency from <file_name> to <method_name>;Similar;0.5281899571418762
"Define async APIs and switch <file_name> to use <iden> directly. I think this is the best route going forward; and eventually we could invert this relationship to have <iden> depending on <file_name> directly rather than vice versa.";Using <iden> directly introduces some duplicated code with <iden>. It also breaks the <file_name> cache.;Update to the latest <method_name>;Includes everything thru 8842981cbcfe20eb4721c0a2c867fa9a18233062;Similar;0.5459585785865784
"Define async APIs and switch <file_name> to use <iden> directly. I think this is the best route going forward; and eventually we could invert this relationship to have <iden> depending on <file_name> directly rather than vice versa.";Using <iden> directly introduces some duplicated code with <iden>. It also breaks the <file_name> cache.;Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;Similar;0.5362575054168701
"Define async APIs and switch <file_name> to use <iden> directly. I think this is the best route going forward; and eventually we could invert this relationship to have <iden> depending on <file_name> directly rather than vice versa.";Using <iden> directly introduces some duplicated code with <iden>. It also breaks the <file_name> cache.;Make the `<method_name>` return full working connections;Previously the returned connections required the caller to do extra work: setting up tunnels and performing an `<iden>` handshake. With this change, we make a complete working connection in `<method_name>`. This will make it easier to fix fallback when a single domain has multiple `<iden>` addresses that are not reachable. Also, this will make it easier to do SPDY through `<iden>` proxies.;Similar;0.6317799091339111
"Define async APIs and switch <file_name> to use <iden> directly. I think this is the best route going forward; and eventually we could invert this relationship to have <iden> depending on <file_name> directly rather than vice versa.";Using <iden> directly introduces some duplicated code with <iden>. It also breaks the <file_name> cache.;Add error-prone compiler and fix its found issues;error-prone, its found issues;Similar;0.5197029709815979
"Define async APIs and switch <file_name> to use <iden> directly. I think this is the best route going forward; and eventually we could invert this relationship to have <iden> depending on <file_name> directly rather than vice versa.";Using <iden> directly introduces some duplicated code with <iden>. It also breaks the <file_name> cache.;Expose <iden> directly on <method_name>  ;direct;Similar;0.5336960554122925
"Define async APIs and switch <file_name> to use <iden> directly. I think this is the best route going forward; and eventually we could invert this relationship to have <iden> depending on <file_name> directly rather than vice versa.";Using <iden> directly introduces some duplicated code with <iden>. It also breaks the <file_name> cache.;Add convenience overload for <iden>-backed <method_name>;convenience;Similar;0.6569002270698547
"Define async APIs and switch <file_name> to use <iden> directly. I think this is the best route going forward; and eventually we could invert this relationship to have <iden> depending on <file_name> directly rather than vice versa.";Using <iden> directly introduces some duplicated code with <iden>. It also breaks the <file_name> cache.;Transfer to/from <iden> directly from <iden>  ;<pr_link>;Similar;0.5114874839782715
"Define async APIs and switch <file_name> to use <iden> directly. I think this is the best route going forward; and eventually we could invert this relationship to have <iden> depending on <file_name> directly rather than vice versa.";Using <iden> directly introduces some duplicated code with <iden>. It also breaks the <file_name> cache.;add @override for subclass override method;subclass override method;Similar;0.5885583162307739
"Define async APIs and switch <file_name> to use <iden> directly. I think this is the best route going forward; and eventually we could invert this relationship to have <iden> depending on <file_name> directly rather than vice versa.";Using <iden> directly introduces some duplicated code with <iden>. It also breaks the <file_name> cache.;This change logs the exception but prevent it from propagating out of the top of the call stack.;This decreases overall flakiness.;Similar;0.5085641145706177
"Define async APIs and switch <file_name> to use <iden> directly. I think this is the best route going forward; and eventually we could invert this relationship to have <iden> depending on <file_name> directly rather than vice versa.";Using <iden> directly introduces some duplicated code with <iden>. It also breaks the <file_name> cache.;The changes to <iden>s  <file_name> have been ported  ;Upstream commit of <iden> / <iden> fix, This does not include the introduction of PlatformTest, which will be difficult to write so it works everywhere;Similar;0.6078590154647827
"Define async APIs and switch <file_name> to use <iden> directly. I think this is the best route going forward; and eventually we could invert this relationship to have <iden> depending on <file_name> directly rather than vice versa.";Using <iden> directly introduces some duplicated code with <iden>. It also breaks the <file_name> cache.;Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Similar;0.5599669814109802
"Define async APIs and switch <file_name> to use <iden> directly. I think this is the best route going forward; and eventually we could invert this relationship to have <iden> depending on <file_name> directly rather than vice versa.";Using <iden> directly introduces some duplicated code with <iden>. It also breaks the <file_name> cache.;Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Similar;0.5915900468826294
"Define async APIs and switch <file_name> to use <iden> directly. I think this is the best route going forward; and eventually we could invert this relationship to have <iden> depending on <file_name> directly rather than vice versa.";Using <iden> directly introduces some duplicated code with <iden>. It also breaks the <file_name> cache.;Just pass the <iden> and <iden> objects in directly;Dont summarize the request and response;Similar;0.5522704124450684
"Define async APIs and switch <file_name> to use <iden> directly. I think this is the best route going forward; and eventually we could invert this relationship to have <iden> depending on <file_name> directly rather than vice versa.";Using <iden> directly introduces some duplicated code with <iden>. It also breaks the <file_name> cache.;Fix a race in <method_name> ( <pr_link> );We were assuming on a client failure the server wouldnt have any further events. But it will get a failure if we give it a moment. This was causing some test flakiness.;Similar;0.55592942237854
"Define async APIs and switch <file_name> to use <iden> directly. I think this is the best route going forward; and eventually we could invert this relationship to have <iden> depending on <file_name> directly rather than vice versa.";Using <iden> directly introduces some duplicated code with <iden>. It also breaks the <file_name> cache.;Add wildcard hostnames support in <file_name>;support;Similar;0.5581090450286865
"Define async APIs and switch <file_name> to use <iden> directly. I think this is the best route going forward; and eventually we could invert this relationship to have <iden> depending on <file_name> directly rather than vice versa.";Using <iden> directly introduces some duplicated code with <iden>. It also breaks the <file_name> cache.;Fix correctness of WebSocketReader reserved flags test;reserved flags;Similar;0.5161791443824768
Fix checkstyle issues in new <iden> code;checkstyle issues;Introduce a <file_name> interface between engine and connection.;This breaks the direct dependency from <file_name> to <method_name>;Similar;0.6255085468292236
Fix checkstyle issues in new <iden> code;checkstyle issues;Make  <file_name> less flaky;I was seeing flaky results in the debugger because pooled connections were being evicted as the test ran;Similar;0.5039721131324768
Fix checkstyle issues in new <iden> code;checkstyle issues;Update to the latest <method_name>;Includes everything thru 8842981cbcfe20eb4721c0a2c867fa9a18233062;Similar;0.683007001876831
Fix checkstyle issues in new <iden> code;checkstyle issues;Be more careful around IOExceptions;my goal is to make it easier to differentiate between protocol-level problems (bogus frames) from transport-level problems (closed sockets and EOF streams);Similar;0.5368999242782593
Fix checkstyle issues in new <iden> code;checkstyle issues;Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;Similar;0.6722781658172607
Fix checkstyle issues in new <iden> code;checkstyle issues;Make the `<method_name>` return full working connections;Previously the returned connections required the caller to do extra work: setting up tunnels and performing an `<iden>` handshake. With this change, we make a complete working connection in `<method_name>`. This will make it easier to fix fallback when a single domain has multiple `<iden>` addresses that are not reachable. Also, this will make it easier to do SPDY through `<iden>` proxies.;Similar;0.590289831161499
Fix checkstyle issues in new <iden> code;checkstyle issues;Fix <iden> which was being computed incorrectly;<enter> We were only returning true once we were already in a tunnel. This was bogus. In theory a <iden> tunnel sending extra data could be corrupted due to this bug.;Similar;0.6329200267791748
Fix checkstyle issues in new <iden> code;checkstyle issues;Add error-prone compiler and fix its found issues;error-prone, its found issues;Similar;0.8196260333061218
Fix checkstyle issues in new <iden> code;checkstyle issues;Expose <iden> directly on <method_name>  ;direct;Similar;0.5478987693786621
Fix checkstyle issues in new <iden> code;checkstyle issues;Use HTML entity for ampersand;to represent the ampersand symbol in HTML;Similar;0.5418822765350342
Fix checkstyle issues in new <iden> code;checkstyle issues;Add convenience overload for <iden>-backed <method_name>;convenience;Similar;0.6957904696464539
Fix checkstyle issues in new <iden> code;checkstyle issues;Update website to the latest design  ;latest design;Similar;0.7229235172271729
Fix checkstyle issues in new <iden> code;checkstyle issues;Transfer to/from <iden> directly from <iden>  ;<pr_link>;Similar;0.5373402237892151
Fix checkstyle issues in new <iden> code;checkstyle issues;add @override for subclass override method;subclass override method;Similar;0.6690902709960938
Fix checkstyle issues in new <iden> code;checkstyle issues;Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Similar;0.7131030559539795
Fix checkstyle issues in new <iden> code;checkstyle issues;Partially revert connection timeout behavior  ;The modification of the timeout behavior during connection caused problems;Similar;0.5767470002174377
Fix checkstyle issues in new <iden> code;checkstyle issues;The changes to <iden>s  <file_name> have been ported  ;Upstream commit of <iden> / <iden> fix, This does not include the introduction of PlatformTest, which will be difficult to write so it works everywhere;Similar;0.7498462796211243
Fix checkstyle issues in new <iden> code;checkstyle issues;Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Similar;0.642935037612915
Fix checkstyle issues in new <iden> code;checkstyle issues;Return <file_name> to previous (e.g. KitKat) behavior;this change required to handle this <iden> scenario;Similar;0.5631266832351685
Fix checkstyle issues in new <iden> code;checkstyle issues;Document <file_name> throwing modes;To include the <pr_link> information;Similar;0.5264205932617188
Fix checkstyle issues in new <iden> code;checkstyle issues;Convert <file_name> to Kotlin;<pr_link>, <iden>, <file_name>;Similar;0.5989861488342285
Fix checkstyle issues in new <iden> code;checkstyle issues;Convert <file_name>, <file_name> to Kotlin  ;"to Kotlin

Decision: Rename <file_name> <version> to .kt (and others)  ";Similar;0.5898836851119995
Fix checkstyle issues in new <iden> code;checkstyle issues;Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Similar;0.8317853212356567
Fix checkstyle issues in new <iden> code;checkstyle issues;Fix a race in <method_name> ( <pr_link> );We were assuming on a client failure the server wouldnt have any further events. But it will get a failure if we give it a moment. This was causing some test flakiness.;Similar;0.7148755788803101
Fix checkstyle issues in new <iden> code;checkstyle issues;Improve some Markdown;improve;Similar;0.6731593012809753
Fix checkstyle issues in new <iden> code;checkstyle issues;Refactor <file_name> by using <iden>;We can use <iden> instead of overriding <iden> abstract class;Similar;0.6639237403869629
Fix checkstyle issues in new <iden> code;checkstyle issues;Enable GitHub Security Scanning;To configure GitHub workflow for code security scanning;Similar;0.5811305642127991
Fix checkstyle issues in new <iden> code;checkstyle issues;Fix bug where request body isnt sent when it should  ;request body isnt sent when it should;Similar;0.6873652935028076
Fix checkstyle issues in new <iden> code;checkstyle issues;Add support for following <iden> 307 temporary redirects  ;Fixes Android bug 41739;Similar;0.6393620371818542
Fix checkstyle issues in new <iden> code;checkstyle issues;Add wildcard hostnames support in <file_name>;support;Similar;0.5882787704467773
Fix checkstyle issues in new <iden> code;checkstyle issues;Fix correctness of WebSocketReader reserved flags test;reserved flags;Similar;0.7331622838973999
Kill <file_name> in the process  ;Teach <file_name> <iden>;Introduce a <file_name> interface between engine and connection.;This breaks the direct dependency from <file_name> to <method_name>;Similar;0.5129321813583374
Kill <file_name> in the process  ;Teach <file_name> <iden>;Move out of the <file_name> package;To promote the code into AOSP, well keep this package as-is and do the jarjar in <iden> instead;Similar;0.6434985995292664
Kill <file_name> in the process  ;Teach <file_name> <iden>;Fix <iden> which was being computed incorrectly;<enter> We were only returning true once we were already in a tunnel. This was bogus. In theory a <iden> tunnel sending extra data could be corrupted due to this bug.;Similar;0.588663637638092
Kill <file_name> in the process  ;Teach <file_name> <iden>;Remove old <iden> protocol method;old;Similar;0.6557128429412842
Kill <file_name> in the process  ;Teach <file_name> <iden>;Expose <iden> directly on <method_name>  ;direct;Similar;0.5025878548622131
Kill <file_name> in the process  ;Teach <file_name> <iden>;Use HTML entity for ampersand;to represent the ampersand symbol in HTML;Similar;0.5043482184410095
Kill <file_name> in the process  ;Teach <file_name> <iden>;Drop unused dependencies;unused;Similar;0.501779317855835
Kill <file_name> in the process  ;Teach <file_name> <iden>;This change logs the exception but prevent it from propagating out of the top of the call stack.;This decreases overall flakiness.;Similar;0.5166522860527039
Kill <file_name> in the process  ;Teach <file_name> <iden>;Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Similar;0.5410621762275696
Kill <file_name> in the process  ;Teach <file_name> <iden>;Document <file_name> throwing modes;To include the <pr_link> information;Similar;0.6186490058898926
Kill <file_name> in the process  ;Teach <file_name> <iden>;Convert <file_name> to Kotlin;<pr_link>, <iden>, <file_name>;Similar;0.5362300276756287
Kill <file_name> in the process  ;Teach <file_name> <iden>;Convert <file_name>, <file_name> to Kotlin  ;"to Kotlin

Decision: Rename <file_name> <version> to .kt (and others)  ";Similar;0.5355896949768066
Kill <file_name> in the process  ;Teach <file_name> <iden>;Fail HTTP/2 connections if the pong is not received;This removes the abstraction from our http2 package;Similar;0.623658299446106
Kill <file_name> in the process  ;Teach <file_name> <iden>;Fix a race in <method_name> ( <pr_link> );We were assuming on a client failure the server wouldnt have any further events. But it will get a failure if we give it a moment. This was causing some test flakiness.;Similar;0.5441086888313293
Kill <file_name> in the process  ;Teach <file_name> <iden>;Refactor <file_name> by using <iden>;We can use <iden> instead of overriding <iden> abstract class;Similar;0.5004023313522339
Kill <file_name> in the process  ;Teach <file_name> <iden>;Remove unnecessary use of grouping parentheses  ;Lets remove warnings found by errorprone.;Similar;0.5571106672286987
Kill <file_name> in the process  ;Teach <file_name> <iden>;Fix bug where request body isnt sent when it should  ;request body isnt sent when it should;Similar;0.5309342741966248
Dont use <iden> APIs not in Gingerbread;APIs not in Gingerbread;Make  <file_name> less flaky;I was seeing flaky results in the debugger because pooled connections were being evicted as the test ran;Similar;0.5836462378501892
Dont use <iden> APIs not in Gingerbread;APIs not in Gingerbread;Move out of the <file_name> package;To promote the code into AOSP, well keep this package as-is and do the jarjar in <iden> instead;Similar;0.550284206867218
Dont use <iden> APIs not in Gingerbread;APIs not in Gingerbread;We dont need no stinkin braces;no stinkin braces;Similar;0.8297960162162781
Dont use <iden> APIs not in Gingerbread;APIs not in Gingerbread;Remove old <iden> protocol method;old;Similar;0.532951831817627
Dont use <iden> APIs not in Gingerbread;APIs not in Gingerbread;Drop unused dependencies;unused;Similar;0.5719958543777466
Dont use <iden> APIs not in Gingerbread;APIs not in Gingerbread;HTTP/2 initial window size is 65535 not 65536  ;not 65536;Similar;0.5287297964096069
Dont use <iden> APIs not in Gingerbread;APIs not in Gingerbread;Fail HTTP/2 connections if the pong is not received;This removes the abstraction from our http2 package;Similar;0.6226028203964233
Dont use <iden> APIs not in Gingerbread;APIs not in Gingerbread;fix <issue_link> : PROPFIND request should not redirect to GET request;PROPFIND request should not redirect to GET request;Similar;0.7633446455001831
Dont use <iden> APIs not in Gingerbread;APIs not in Gingerbread;Remove unnecessary use of grouping parentheses  ;Lets remove warnings found by errorprone.;Similar;0.6339358687400818
Dont use <iden> APIs not in Gingerbread;APIs not in Gingerbread;Fix bug where request body isnt sent when it should  ;request body isnt sent when it should;Similar;0.5108054280281067
Introduce a <file_name> interface between engine and connection.;This breaks the direct dependency from <file_name> to <method_name>;Update to the latest <method_name>;Includes everything thru 8842981cbcfe20eb4721c0a2c867fa9a18233062;Similar;0.6681430339813232
Introduce a <file_name> interface between engine and connection.;This breaks the direct dependency from <file_name> to <method_name>;Be more careful around IOExceptions;my goal is to make it easier to differentiate between protocol-level problems (bogus frames) from transport-level problems (closed sockets and EOF streams);Similar;0.5088141560554504
Introduce a <file_name> interface between engine and connection.;This breaks the direct dependency from <file_name> to <method_name>;Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;Similar;0.6349738240242004
Introduce a <file_name> interface between engine and connection.;This breaks the direct dependency from <file_name> to <method_name>;Move out of the <file_name> package;To promote the code into AOSP, well keep this package as-is and do the jarjar in <iden> instead;Similar;0.6570507884025574
Introduce a <file_name> interface between engine and connection.;This breaks the direct dependency from <file_name> to <method_name>;Make the `<method_name>` return full working connections;Previously the returned connections required the caller to do extra work: setting up tunnels and performing an `<iden>` handshake. With this change, we make a complete working connection in `<method_name>`. This will make it easier to fix fallback when a single domain has multiple `<iden>` addresses that are not reachable. Also, this will make it easier to do SPDY through `<iden>` proxies.;Similar;0.7453631162643433
Introduce a <file_name> interface between engine and connection.;This breaks the direct dependency from <file_name> to <method_name>;Add error-prone compiler and fix its found issues;error-prone, its found issues;Similar;0.5592050552368164
Introduce a <file_name> interface between engine and connection.;This breaks the direct dependency from <file_name> to <method_name>;Remove old <iden> protocol method;old;Similar;0.5842096209526062
Introduce a <file_name> interface between engine and connection.;This breaks the direct dependency from <file_name> to <method_name>;Expose <iden> directly on <method_name>  ;direct;Similar;0.8104908466339111
Introduce a <file_name> interface between engine and connection.;This breaks the direct dependency from <file_name> to <method_name>;Use HTML entity for ampersand;to represent the ampersand symbol in HTML;Similar;0.7665141820907593
Introduce a <file_name> interface between engine and connection.;This breaks the direct dependency from <file_name> to <method_name>;Add convenience overload for <iden>-backed <method_name>;convenience;Similar;0.7103098034858704
Introduce a <file_name> interface between engine and connection.;This breaks the direct dependency from <file_name> to <method_name>;Use consistent camel casing of <iden>;consistent camel casing;Similar;0.5097257494926453
Introduce a <file_name> interface between engine and connection.;This breaks the direct dependency from <file_name> to <method_name>;Update website to the latest design  ;latest design;Similar;0.5906646847724915
Introduce a <file_name> interface between engine and connection.;This breaks the direct dependency from <file_name> to <method_name>;Transfer to/from <iden> directly from <iden>  ;<pr_link>;Similar;0.7483986616134644
Introduce a <file_name> interface between engine and connection.;This breaks the direct dependency from <file_name> to <method_name>;add @override for subclass override method;subclass override method;Similar;0.7803182601928711
Introduce a <file_name> interface between engine and connection.;This breaks the direct dependency from <file_name> to <method_name>;Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Similar;0.5818613171577454
Introduce a <file_name> interface between engine and connection.;This breaks the direct dependency from <file_name> to <method_name>;Partially revert connection timeout behavior  ;The modification of the timeout behavior during connection caused problems;Similar;0.5415511131286621
Introduce a <file_name> interface between engine and connection.;This breaks the direct dependency from <file_name> to <method_name>;The changes to <iden>s  <file_name> have been ported  ;Upstream commit of <iden> / <iden> fix, This does not include the introduction of PlatformTest, which will be difficult to write so it works everywhere;Similar;0.7843016982078552
Introduce a <file_name> interface between engine and connection.;This breaks the direct dependency from <file_name> to <method_name>;Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Similar;0.7693966031074524
Introduce a <file_name> interface between engine and connection.;This breaks the direct dependency from <file_name> to <method_name>;Return <file_name> to previous (e.g. KitKat) behavior;this change required to handle this <iden> scenario;Similar;0.7552592754364014
Introduce a <file_name> interface between engine and connection.;This breaks the direct dependency from <file_name> to <method_name>;Document <file_name> throwing modes;To include the <pr_link> information;Similar;0.7264049649238586
Introduce a <file_name> interface between engine and connection.;This breaks the direct dependency from <file_name> to <method_name>;Convert <file_name> to Kotlin;<pr_link>, <iden>, <file_name>;Similar;0.829817533493042
Introduce a <file_name> interface between engine and connection.;This breaks the direct dependency from <file_name> to <method_name>;Convert <file_name>, <file_name> to Kotlin  ;"to Kotlin

Decision: Rename <file_name> <version> to .kt (and others)  ";Similar;0.8344882726669312
Introduce a <file_name> interface between engine and connection.;This breaks the direct dependency from <file_name> to <method_name>;Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Similar;0.7364636063575745
Introduce a <file_name> interface between engine and connection.;This breaks the direct dependency from <file_name> to <method_name>;Just pass the <iden> and <iden> objects in directly;Dont summarize the request and response;Similar;0.6231786012649536
Introduce a <file_name> interface between engine and connection.;This breaks the direct dependency from <file_name> to <method_name>;Fix a race in <method_name> ( <pr_link> );We were assuming on a client failure the server wouldnt have any further events. But it will get a failure if we give it a moment. This was causing some test flakiness.;Similar;0.694422721862793
Introduce a <file_name> interface between engine and connection.;This breaks the direct dependency from <file_name> to <method_name>;Refactor <file_name> by using <iden>;We can use <iden> instead of overriding <iden> abstract class;Similar;0.8634790778160095
Introduce a <file_name> interface between engine and connection.;This breaks the direct dependency from <file_name> to <method_name>;Enable GitHub Security Scanning;To configure GitHub workflow for code security scanning;Similar;0.6360566020011902
Introduce a <file_name> interface between engine and connection.;This breaks the direct dependency from <file_name> to <method_name>;load through bootstrap;-;Similar;0.6181423664093018
Introduce a <file_name> interface between engine and connection.;This breaks the direct dependency from <file_name> to <method_name>;Fix bug where request body isnt sent when it should  ;request body isnt sent when it should;Similar;0.5566772818565369
Introduce a <file_name> interface between engine and connection.;This breaks the direct dependency from <file_name> to <method_name>;Add support for following <iden> 307 temporary redirects  ;Fixes Android bug 41739;Similar;0.6535807251930237
Introduce a <file_name> interface between engine and connection.;This breaks the direct dependency from <file_name> to <method_name>;Add wildcard hostnames support in <file_name>;support;Similar;0.8170636296272278
Introduce a <file_name> interface between engine and connection.;This breaks the direct dependency from <file_name> to <method_name>;Fix correctness of WebSocketReader reserved flags test;reserved flags;Similar;0.5945258140563965
Make  <file_name> less flaky;I was seeing flaky results in the debugger because pooled connections were being evicted as the test ran;Be more careful around IOExceptions;my goal is to make it easier to differentiate between protocol-level problems (bogus frames) from transport-level problems (closed sockets and EOF streams);Similar;0.5987660884857178
Make  <file_name> less flaky;I was seeing flaky results in the debugger because pooled connections were being evicted as the test ran;Move out of the <file_name> package;To promote the code into AOSP, well keep this package as-is and do the jarjar in <iden> instead;Similar;0.6406334042549133
Make  <file_name> less flaky;I was seeing flaky results in the debugger because pooled connections were being evicted as the test ran;We dont need no stinkin braces;no stinkin braces;Similar;0.5819248557090759
Make  <file_name> less flaky;I was seeing flaky results in the debugger because pooled connections were being evicted as the test ran;Fix <iden> which was being computed incorrectly;<enter> We were only returning true once we were already in a tunnel. This was bogus. In theory a <iden> tunnel sending extra data could be corrupted due to this bug.;Similar;0.5762236714363098
Make  <file_name> less flaky;I was seeing flaky results in the debugger because pooled connections were being evicted as the test ran;Remove old <iden> protocol method;old;Similar;0.701831579208374
Make  <file_name> less flaky;I was seeing flaky results in the debugger because pooled connections were being evicted as the test ran;Add convenience overload for <iden>-backed <method_name>;convenience;Similar;0.6005657911300659
Make  <file_name> less flaky;I was seeing flaky results in the debugger because pooled connections were being evicted as the test ran;Drop unused dependencies;unused;Similar;0.6667782664299011
Make  <file_name> less flaky;I was seeing flaky results in the debugger because pooled connections were being evicted as the test ran;HTTP/2 initial window size is 65535 not 65536  ;not 65536;Similar;0.5031145811080933
Make  <file_name> less flaky;I was seeing flaky results in the debugger because pooled connections were being evicted as the test ran;Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Similar;0.5612236857414246
Make  <file_name> less flaky;I was seeing flaky results in the debugger because pooled connections were being evicted as the test ran;Partially revert connection timeout behavior  ;The modification of the timeout behavior during connection caused problems;Similar;0.508501410484314
Make  <file_name> less flaky;I was seeing flaky results in the debugger because pooled connections were being evicted as the test ran;Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Similar;0.5481221079826355
Make  <file_name> less flaky;I was seeing flaky results in the debugger because pooled connections were being evicted as the test ran;Return <file_name> to previous (e.g. KitKat) behavior;this change required to handle this <iden> scenario;Similar;0.5048199892044067
Make  <file_name> less flaky;I was seeing flaky results in the debugger because pooled connections were being evicted as the test ran;Document <file_name> throwing modes;To include the <pr_link> information;Similar;0.5007386803627014
Make  <file_name> less flaky;I was seeing flaky results in the debugger because pooled connections were being evicted as the test ran;Convert <file_name> to Kotlin;<pr_link>, <iden>, <file_name>;Similar;0.511443018913269
Make  <file_name> less flaky;I was seeing flaky results in the debugger because pooled connections were being evicted as the test ran;Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Similar;0.5317556858062744
Make  <file_name> less flaky;I was seeing flaky results in the debugger because pooled connections were being evicted as the test ran;Fail HTTP/2 connections if the pong is not received;This removes the abstraction from our http2 package;Similar;0.5572271347045898
Make  <file_name> less flaky;I was seeing flaky results in the debugger because pooled connections were being evicted as the test ran;Just pass the <iden> and <iden> objects in directly;Dont summarize the request and response;Similar;0.5229079127311707
Make  <file_name> less flaky;I was seeing flaky results in the debugger because pooled connections were being evicted as the test ran;Improve some Markdown;improve;Similar;0.5983417630195618
Make  <file_name> less flaky;I was seeing flaky results in the debugger because pooled connections were being evicted as the test ran;fix <issue_link> : PROPFIND request should not redirect to GET request;PROPFIND request should not redirect to GET request;Similar;0.6080561876296997
Make  <file_name> less flaky;I was seeing flaky results in the debugger because pooled connections were being evicted as the test ran;Refactor <file_name> by using <iden>;We can use <iden> instead of overriding <iden> abstract class;Similar;0.5412242412567139
Make  <file_name> less flaky;I was seeing flaky results in the debugger because pooled connections were being evicted as the test ran;Remove unnecessary use of grouping parentheses  ;Lets remove warnings found by errorprone.;Similar;0.7203131914138794
Make  <file_name> less flaky;I was seeing flaky results in the debugger because pooled connections were being evicted as the test ran;Fix bug where request body isnt sent when it should  ;request body isnt sent when it should;Similar;0.6604137420654297
Make  <file_name> less flaky;I was seeing flaky results in the debugger because pooled connections were being evicted as the test ran;Add support for following <iden> 307 temporary redirects  ;Fixes Android bug 41739;Similar;0.5126209855079651
Make  <file_name> less flaky;I was seeing flaky results in the debugger because pooled connections were being evicted as the test ran;Fix correctness of WebSocketReader reserved flags test;reserved flags;Similar;0.5240010619163513
Update to the latest <method_name>;Includes everything thru 8842981cbcfe20eb4721c0a2c867fa9a18233062;Be more careful around IOExceptions;my goal is to make it easier to differentiate between protocol-level problems (bogus frames) from transport-level problems (closed sockets and EOF streams);Similar;0.517978847026825
Update to the latest <method_name>;Includes everything thru 8842981cbcfe20eb4721c0a2c867fa9a18233062;Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;Similar;0.6566184759140015
Update to the latest <method_name>;Includes everything thru 8842981cbcfe20eb4721c0a2c867fa9a18233062;Move out of the <file_name> package;To promote the code into AOSP, well keep this package as-is and do the jarjar in <iden> instead;Similar;0.5865525007247925
Update to the latest <method_name>;Includes everything thru 8842981cbcfe20eb4721c0a2c867fa9a18233062;Make the `<method_name>` return full working connections;Previously the returned connections required the caller to do extra work: setting up tunnels and performing an `<iden>` handshake. With this change, we make a complete working connection in `<method_name>`. This will make it easier to fix fallback when a single domain has multiple `<iden>` addresses that are not reachable. Also, this will make it easier to do SPDY through `<iden>` proxies.;Similar;0.6894892454147339
Update to the latest <method_name>;Includes everything thru 8842981cbcfe20eb4721c0a2c867fa9a18233062;Add error-prone compiler and fix its found issues;error-prone, its found issues;Similar;0.5355443358421326
Update to the latest <method_name>;Includes everything thru 8842981cbcfe20eb4721c0a2c867fa9a18233062;Remove old <iden> protocol method;old;Similar;0.5698808431625366
Update to the latest <method_name>;Includes everything thru 8842981cbcfe20eb4721c0a2c867fa9a18233062;Expose <iden> directly on <method_name>  ;direct;Similar;0.670143723487854
Update to the latest <method_name>;Includes everything thru 8842981cbcfe20eb4721c0a2c867fa9a18233062;Use HTML entity for ampersand;to represent the ampersand symbol in HTML;Similar;0.6256111860275269
Update to the latest <method_name>;Includes everything thru 8842981cbcfe20eb4721c0a2c867fa9a18233062;Add convenience overload for <iden>-backed <method_name>;convenience;Similar;0.6734387278556824
Update to the latest <method_name>;Includes everything thru 8842981cbcfe20eb4721c0a2c867fa9a18233062;Update website to the latest design  ;latest design;Similar;0.7842639684677124
Update to the latest <method_name>;Includes everything thru 8842981cbcfe20eb4721c0a2c867fa9a18233062;Transfer to/from <iden> directly from <iden>  ;<pr_link>;Similar;0.6437138319015503
Update to the latest <method_name>;Includes everything thru 8842981cbcfe20eb4721c0a2c867fa9a18233062;add @override for subclass override method;subclass override method;Similar;0.6655216813087463
Update to the latest <method_name>;Includes everything thru 8842981cbcfe20eb4721c0a2c867fa9a18233062;Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Similar;0.6535794734954834
Update to the latest <method_name>;Includes everything thru 8842981cbcfe20eb4721c0a2c867fa9a18233062;Partially revert connection timeout behavior  ;The modification of the timeout behavior during connection caused problems;Similar;0.5954958200454712
Update to the latest <method_name>;Includes everything thru 8842981cbcfe20eb4721c0a2c867fa9a18233062;The changes to <iden>s  <file_name> have been ported  ;Upstream commit of <iden> / <iden> fix, This does not include the introduction of PlatformTest, which will be difficult to write so it works everywhere;Similar;0.7108116745948792
Update to the latest <method_name>;Includes everything thru 8842981cbcfe20eb4721c0a2c867fa9a18233062;Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Similar;0.7376397252082825
Update to the latest <method_name>;Includes everything thru 8842981cbcfe20eb4721c0a2c867fa9a18233062;Return <file_name> to previous (e.g. KitKat) behavior;this change required to handle this <iden> scenario;Similar;0.7160878777503967
Update to the latest <method_name>;Includes everything thru 8842981cbcfe20eb4721c0a2c867fa9a18233062;Document <file_name> throwing modes;To include the <pr_link> information;Similar;0.5867398381233215
Update to the latest <method_name>;Includes everything thru 8842981cbcfe20eb4721c0a2c867fa9a18233062;Convert <file_name> to Kotlin;<pr_link>, <iden>, <file_name>;Similar;0.6750606298446655
Update to the latest <method_name>;Includes everything thru 8842981cbcfe20eb4721c0a2c867fa9a18233062;Convert <file_name>, <file_name> to Kotlin  ;"to Kotlin

Decision: Rename <file_name> <version> to .kt (and others)  ";Similar;0.6965600848197937
Update to the latest <method_name>;Includes everything thru 8842981cbcfe20eb4721c0a2c867fa9a18233062;Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Similar;0.6260478496551514
Update to the latest <method_name>;Includes everything thru 8842981cbcfe20eb4721c0a2c867fa9a18233062;Just pass the <iden> and <iden> objects in directly;Dont summarize the request and response;Similar;0.5864644646644592
Update to the latest <method_name>;Includes everything thru 8842981cbcfe20eb4721c0a2c867fa9a18233062;Fix a race in <method_name> ( <pr_link> );We were assuming on a client failure the server wouldnt have any further events. But it will get a failure if we give it a moment. This was causing some test flakiness.;Similar;0.6376757621765137
Update to the latest <method_name>;Includes everything thru 8842981cbcfe20eb4721c0a2c867fa9a18233062;Improve some Markdown;improve;Similar;0.6163073778152466
Update to the latest <method_name>;Includes everything thru 8842981cbcfe20eb4721c0a2c867fa9a18233062;Refactor <file_name> by using <iden>;We can use <iden> instead of overriding <iden> abstract class;Similar;0.6907855272293091
Update to the latest <method_name>;Includes everything thru 8842981cbcfe20eb4721c0a2c867fa9a18233062;load through bootstrap;-;Similar;0.5303448438644409
Update to the latest <method_name>;Includes everything thru 8842981cbcfe20eb4721c0a2c867fa9a18233062;Fix bug where request body isnt sent when it should  ;request body isnt sent when it should;Similar;0.5264579057693481
Update to the latest <method_name>;Includes everything thru 8842981cbcfe20eb4721c0a2c867fa9a18233062;Add support for following <iden> 307 temporary redirects  ;Fixes Android bug 41739;Similar;0.67564457654953
Update to the latest <method_name>;Includes everything thru 8842981cbcfe20eb4721c0a2c867fa9a18233062;Add wildcard hostnames support in <file_name>;support;Similar;0.5876966118812561
Update to the latest <method_name>;Includes everything thru 8842981cbcfe20eb4721c0a2c867fa9a18233062;Fix correctness of WebSocketReader reserved flags test;reserved flags;Similar;0.5017496347427368
Be more careful around IOExceptions;my goal is to make it easier to differentiate between protocol-level problems (bogus frames) from transport-level problems (closed sockets and EOF streams);Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;Similar;0.6594161987304688
Be more careful around IOExceptions;my goal is to make it easier to differentiate between protocol-level problems (bogus frames) from transport-level problems (closed sockets and EOF streams);Fix <iden> which was being computed incorrectly;<enter> We were only returning true once we were already in a tunnel. This was bogus. In theory a <iden> tunnel sending extra data could be corrupted due to this bug.;Similar;0.5278552770614624
Be more careful around IOExceptions;my goal is to make it easier to differentiate between protocol-level problems (bogus frames) from transport-level problems (closed sockets and EOF streams);Add error-prone compiler and fix its found issues;error-prone, its found issues;Similar;0.5172846913337708
Be more careful around IOExceptions;my goal is to make it easier to differentiate between protocol-level problems (bogus frames) from transport-level problems (closed sockets and EOF streams);Remove old <iden> protocol method;old;Similar;0.5392310619354248
Be more careful around IOExceptions;my goal is to make it easier to differentiate between protocol-level problems (bogus frames) from transport-level problems (closed sockets and EOF streams);Expose <iden> directly on <method_name>  ;direct;Similar;0.5687928199768066
Be more careful around IOExceptions;my goal is to make it easier to differentiate between protocol-level problems (bogus frames) from transport-level problems (closed sockets and EOF streams);Use HTML entity for ampersand;to represent the ampersand symbol in HTML;Similar;0.5263326168060303
Be more careful around IOExceptions;my goal is to make it easier to differentiate between protocol-level problems (bogus frames) from transport-level problems (closed sockets and EOF streams);Add convenience overload for <iden>-backed <method_name>;convenience;Similar;0.685845673084259
Be more careful around IOExceptions;my goal is to make it easier to differentiate between protocol-level problems (bogus frames) from transport-level problems (closed sockets and EOF streams);Use consistent camel casing of <iden>;consistent camel casing;Similar;0.506012499332428
Be more careful around IOExceptions;my goal is to make it easier to differentiate between protocol-level problems (bogus frames) from transport-level problems (closed sockets and EOF streams);Transfer to/from <iden> directly from <iden>  ;<pr_link>;Similar;0.5991424322128296
Be more careful around IOExceptions;my goal is to make it easier to differentiate between protocol-level problems (bogus frames) from transport-level problems (closed sockets and EOF streams);add @override for subclass override method;subclass override method;Similar;0.5240176916122437
Be more careful around IOExceptions;my goal is to make it easier to differentiate between protocol-level problems (bogus frames) from transport-level problems (closed sockets and EOF streams);Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Similar;0.6132732629776001
Be more careful around IOExceptions;my goal is to make it easier to differentiate between protocol-level problems (bogus frames) from transport-level problems (closed sockets and EOF streams);Partially revert connection timeout behavior  ;The modification of the timeout behavior during connection caused problems;Similar;0.6262692213058472
Be more careful around IOExceptions;my goal is to make it easier to differentiate between protocol-level problems (bogus frames) from transport-level problems (closed sockets and EOF streams);Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Similar;0.6050232648849487
Be more careful around IOExceptions;my goal is to make it easier to differentiate between protocol-level problems (bogus frames) from transport-level problems (closed sockets and EOF streams);Return <file_name> to previous (e.g. KitKat) behavior;this change required to handle this <iden> scenario;Similar;0.5072886943817139
Be more careful around IOExceptions;my goal is to make it easier to differentiate between protocol-level problems (bogus frames) from transport-level problems (closed sockets and EOF streams);Document <file_name> throwing modes;To include the <pr_link> information;Similar;0.5059142112731934
Be more careful around IOExceptions;my goal is to make it easier to differentiate between protocol-level problems (bogus frames) from transport-level problems (closed sockets and EOF streams);Convert <file_name> to Kotlin;<pr_link>, <iden>, <file_name>;Similar;0.5167925357818604
Be more careful around IOExceptions;my goal is to make it easier to differentiate between protocol-level problems (bogus frames) from transport-level problems (closed sockets and EOF streams);Convert <file_name>, <file_name> to Kotlin  ;"to Kotlin

Decision: Rename <file_name> <version> to .kt (and others)  ";Similar;0.5151278376579285
Be more careful around IOExceptions;my goal is to make it easier to differentiate between protocol-level problems (bogus frames) from transport-level problems (closed sockets and EOF streams);Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Similar;0.5758054256439209
Be more careful around IOExceptions;my goal is to make it easier to differentiate between protocol-level problems (bogus frames) from transport-level problems (closed sockets and EOF streams);Just pass the <iden> and <iden> objects in directly;Dont summarize the request and response;Similar;0.5805730819702148
Be more careful around IOExceptions;my goal is to make it easier to differentiate between protocol-level problems (bogus frames) from transport-level problems (closed sockets and EOF streams);Fix a race in <method_name> ( <pr_link> );We were assuming on a client failure the server wouldnt have any further events. But it will get a failure if we give it a moment. This was causing some test flakiness.;Similar;0.5044353008270264
Be more careful around IOExceptions;my goal is to make it easier to differentiate between protocol-level problems (bogus frames) from transport-level problems (closed sockets and EOF streams);Improve some Markdown;improve;Similar;0.6467517614364624
Be more careful around IOExceptions;my goal is to make it easier to differentiate between protocol-level problems (bogus frames) from transport-level problems (closed sockets and EOF streams);fix <issue_link> : PROPFIND request should not redirect to GET request;PROPFIND request should not redirect to GET request;Similar;0.5452242493629456
Be more careful around IOExceptions;my goal is to make it easier to differentiate between protocol-level problems (bogus frames) from transport-level problems (closed sockets and EOF streams);Refactor <file_name> by using <iden>;We can use <iden> instead of overriding <iden> abstract class;Similar;0.5663870573043823
Be more careful around IOExceptions;my goal is to make it easier to differentiate between protocol-level problems (bogus frames) from transport-level problems (closed sockets and EOF streams);Remove unnecessary use of grouping parentheses  ;Lets remove warnings found by errorprone.;Similar;0.5311080813407898
Be more careful around IOExceptions;my goal is to make it easier to differentiate between protocol-level problems (bogus frames) from transport-level problems (closed sockets and EOF streams);Enable GitHub Security Scanning;To configure GitHub workflow for code security scanning;Similar;0.5621895790100098
Be more careful around IOExceptions;my goal is to make it easier to differentiate between protocol-level problems (bogus frames) from transport-level problems (closed sockets and EOF streams);load through bootstrap;-;Similar;0.5807269215583801
Be more careful around IOExceptions;my goal is to make it easier to differentiate between protocol-level problems (bogus frames) from transport-level problems (closed sockets and EOF streams);Fix bug where request body isnt sent when it should  ;request body isnt sent when it should;Similar;0.5857609510421753
Be more careful around IOExceptions;my goal is to make it easier to differentiate between protocol-level problems (bogus frames) from transport-level problems (closed sockets and EOF streams);Add support for following <iden> 307 temporary redirects  ;Fixes Android bug 41739;Similar;0.5743474364280701
Be more careful around IOExceptions;my goal is to make it easier to differentiate between protocol-level problems (bogus frames) from transport-level problems (closed sockets and EOF streams);Fix correctness of WebSocketReader reserved flags test;reserved flags;Similar;0.5428005456924438
Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;Move out of the <file_name> package;To promote the code into AOSP, well keep this package as-is and do the jarjar in <iden> instead;Similar;0.5690990090370178
Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;Make the `<method_name>` return full working connections;Previously the returned connections required the caller to do extra work: setting up tunnels and performing an `<iden>` handshake. With this change, we make a complete working connection in `<method_name>`. This will make it easier to fix fallback when a single domain has multiple `<iden>` addresses that are not reachable. Also, this will make it easier to do SPDY through `<iden>` proxies.;Similar;0.6606440544128418
Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;Fix <iden> which was being computed incorrectly;<enter> We were only returning true once we were already in a tunnel. This was bogus. In theory a <iden> tunnel sending extra data could be corrupted due to this bug.;Similar;0.5495904088020325
Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;Add error-prone compiler and fix its found issues;error-prone, its found issues;Similar;0.684593141078949
Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;Remove old <iden> protocol method;old;Similar;0.6037635803222656
Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;Expose <iden> directly on <method_name>  ;direct;Similar;0.5597326755523682
Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;Use HTML entity for ampersand;to represent the ampersand symbol in HTML;Similar;0.5472747087478638
Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;Add convenience overload for <iden>-backed <method_name>;convenience;Similar;0.7083706259727478
Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;Drop unused dependencies;unused;Similar;0.5552294254302979
Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;Update website to the latest design  ;latest design;Similar;0.5383242964744568
Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;Transfer to/from <iden> directly from <iden>  ;<pr_link>;Similar;0.6161511540412903
Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;add @override for subclass override method;subclass override method;Similar;0.646670401096344
Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Similar;0.7076210379600525
Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;Partially revert connection timeout behavior  ;The modification of the timeout behavior during connection caused problems;Similar;0.7740004062652588
Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;This change logs the exception but prevent it from propagating out of the top of the call stack.;This decreases overall flakiness.;Similar;0.5087580680847168
Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;The changes to <iden>s  <file_name> have been ported  ;Upstream commit of <iden> / <iden> fix, This does not include the introduction of PlatformTest, which will be difficult to write so it works everywhere;Similar;0.6555337905883789
Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Similar;0.6961875557899475
Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;Return <file_name> to previous (e.g. KitKat) behavior;this change required to handle this <iden> scenario;Similar;0.6519140601158142
Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;Document <file_name> throwing modes;To include the <pr_link> information;Similar;0.5534080266952515
Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;Convert <file_name> to Kotlin;<pr_link>, <iden>, <file_name>;Similar;0.6324610710144043
Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;Convert <file_name>, <file_name> to Kotlin  ;"to Kotlin

Decision: Rename <file_name> <version> to .kt (and others)  ";Similar;0.6482270956039429
Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Similar;0.7696988582611084
Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;Just pass the <iden> and <iden> objects in directly;Dont summarize the request and response;Similar;0.5648210644721985
Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;Fix a race in <method_name> ( <pr_link> );We were assuming on a client failure the server wouldnt have any further events. But it will get a failure if we give it a moment. This was causing some test flakiness.;Similar;0.6890497207641602
Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;Improve some Markdown;improve;Similar;0.7805582880973816
Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;fix <issue_link> : PROPFIND request should not redirect to GET request;PROPFIND request should not redirect to GET request;Similar;0.5011385679244995
Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;Refactor <file_name> by using <iden>;We can use <iden> instead of overriding <iden> abstract class;Similar;0.6587907075881958
Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;Remove unnecessary use of grouping parentheses  ;Lets remove warnings found by errorprone.;Similar;0.5299761891365051
Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;Enable GitHub Security Scanning;To configure GitHub workflow for code security scanning;Similar;0.5626161098480225
Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;load through bootstrap;-;Similar;0.5375040769577026
Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;Fix bug where request body isnt sent when it should  ;request body isnt sent when it should;Similar;0.6884588599205017
Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;Add support for following <iden> 307 temporary redirects  ;Fixes Android bug 41739;Similar;0.7016538381576538
Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;Add wildcard hostnames support in <file_name>;support;Similar;0.5297312140464783
Restore tests for response caching;One of the test cases bitrotted to failure as a consequence of the <iden> route selector change. I stopped assigning the socket, which it needed to cache the <iden> metadata. This is fixed.;Fix correctness of WebSocketReader reserved flags test;reserved flags;Similar;0.6569845676422119
Move out of the <file_name> package;To promote the code into AOSP, well keep this package as-is and do the jarjar in <iden> instead;Fix <iden> which was being computed incorrectly;<enter> We were only returning true once we were already in a tunnel. This was bogus. In theory a <iden> tunnel sending extra data could be corrupted due to this bug.;Similar;0.5428797006607056
Move out of the <file_name> package;To promote the code into AOSP, well keep this package as-is and do the jarjar in <iden> instead;Remove old <iden> protocol method;old;Similar;0.8113645911216736
Move out of the <file_name> package;To promote the code into AOSP, well keep this package as-is and do the jarjar in <iden> instead;Expose <iden> directly on <method_name>  ;direct;Similar;0.6178871393203735
Move out of the <file_name> package;To promote the code into AOSP, well keep this package as-is and do the jarjar in <iden> instead;Use HTML entity for ampersand;to represent the ampersand symbol in HTML;Similar;0.5988646149635315
Move out of the <file_name> package;To promote the code into AOSP, well keep this package as-is and do the jarjar in <iden> instead;Add convenience overload for <iden>-backed <method_name>;convenience;Similar;0.5722723603248596
Move out of the <file_name> package;To promote the code into AOSP, well keep this package as-is and do the jarjar in <iden> instead;Drop unused dependencies;unused;Similar;0.7568860650062561
Move out of the <file_name> package;To promote the code into AOSP, well keep this package as-is and do the jarjar in <iden> instead;HTTP/2 initial window size is 65535 not 65536  ;not 65536;Similar;0.5179073810577393
Move out of the <file_name> package;To promote the code into AOSP, well keep this package as-is and do the jarjar in <iden> instead;Transfer to/from <iden> directly from <iden>  ;<pr_link>;Similar;0.6538122296333313
Move out of the <file_name> package;To promote the code into AOSP, well keep this package as-is and do the jarjar in <iden> instead;add @override for subclass override method;subclass override method;Similar;0.5661342740058899
Move out of the <file_name> package;To promote the code into AOSP, well keep this package as-is and do the jarjar in <iden> instead;Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Similar;0.5675045251846313
Move out of the <file_name> package;To promote the code into AOSP, well keep this package as-is and do the jarjar in <iden> instead;Partially revert connection timeout behavior  ;The modification of the timeout behavior during connection caused problems;Similar;0.5877198576927185
Move out of the <file_name> package;To promote the code into AOSP, well keep this package as-is and do the jarjar in <iden> instead;This change logs the exception but prevent it from propagating out of the top of the call stack.;This decreases overall flakiness.;Similar;0.5630302429199219
Move out of the <file_name> package;To promote the code into AOSP, well keep this package as-is and do the jarjar in <iden> instead;The changes to <iden>s  <file_name> have been ported  ;Upstream commit of <iden> / <iden> fix, This does not include the introduction of PlatformTest, which will be difficult to write so it works everywhere;Similar;0.6505160331726074
Move out of the <file_name> package;To promote the code into AOSP, well keep this package as-is and do the jarjar in <iden> instead;Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Similar;0.8065208196640015
Move out of the <file_name> package;To promote the code into AOSP, well keep this package as-is and do the jarjar in <iden> instead;Return <file_name> to previous (e.g. KitKat) behavior;this change required to handle this <iden> scenario;Similar;0.6704995632171631
Move out of the <file_name> package;To promote the code into AOSP, well keep this package as-is and do the jarjar in <iden> instead;Document <file_name> throwing modes;To include the <pr_link> information;Similar;0.7390835881233215
Move out of the <file_name> package;To promote the code into AOSP, well keep this package as-is and do the jarjar in <iden> instead;Convert <file_name> to Kotlin;<pr_link>, <iden>, <file_name>;Similar;0.7068579196929932
Move out of the <file_name> package;To promote the code into AOSP, well keep this package as-is and do the jarjar in <iden> instead;Convert <file_name>, <file_name> to Kotlin  ;"to Kotlin

Decision: Rename <file_name> <version> to .kt (and others)  ";Similar;0.7109163403511047
Move out of the <file_name> package;To promote the code into AOSP, well keep this package as-is and do the jarjar in <iden> instead;Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Similar;0.5353246927261353
Move out of the <file_name> package;To promote the code into AOSP, well keep this package as-is and do the jarjar in <iden> instead;Fail HTTP/2 connections if the pong is not received;This removes the abstraction from our http2 package;Similar;0.6578525900840759
Move out of the <file_name> package;To promote the code into AOSP, well keep this package as-is and do the jarjar in <iden> instead;Just pass the <iden> and <iden> objects in directly;Dont summarize the request and response;Similar;0.6215386986732483
Move out of the <file_name> package;To promote the code into AOSP, well keep this package as-is and do the jarjar in <iden> instead;Fix a race in <method_name> ( <pr_link> );We were assuming on a client failure the server wouldnt have any further events. But it will get a failure if we give it a moment. This was causing some test flakiness.;Similar;0.5279107093811035
Move out of the <file_name> package;To promote the code into AOSP, well keep this package as-is and do the jarjar in <iden> instead;fix <issue_link> : PROPFIND request should not redirect to GET request;PROPFIND request should not redirect to GET request;Similar;0.5517591834068298
Move out of the <file_name> package;To promote the code into AOSP, well keep this package as-is and do the jarjar in <iden> instead;Refactor <file_name> by using <iden>;We can use <iden> instead of overriding <iden> abstract class;Similar;0.6704838275909424
Move out of the <file_name> package;To promote the code into AOSP, well keep this package as-is and do the jarjar in <iden> instead;Remove unnecessary use of grouping parentheses  ;Lets remove warnings found by errorprone.;Similar;0.7125328183174133
Move out of the <file_name> package;To promote the code into AOSP, well keep this package as-is and do the jarjar in <iden> instead;load through bootstrap;-;Similar;0.6323040723800659
Move out of the <file_name> package;To promote the code into AOSP, well keep this package as-is and do the jarjar in <iden> instead;Fix bug where request body isnt sent when it should  ;request body isnt sent when it should;Similar;0.6343242526054382
Move out of the <file_name> package;To promote the code into AOSP, well keep this package as-is and do the jarjar in <iden> instead;Add support for following <iden> 307 temporary redirects  ;Fixes Android bug 41739;Similar;0.5978926420211792
Move out of the <file_name> package;To promote the code into AOSP, well keep this package as-is and do the jarjar in <iden> instead;Add wildcard hostnames support in <file_name>;support;Similar;0.5793542265892029
Make the `<method_name>` return full working connections;Previously the returned connections required the caller to do extra work: setting up tunnels and performing an `<iden>` handshake. With this change, we make a complete working connection in `<method_name>`. This will make it easier to fix fallback when a single domain has multiple `<iden>` addresses that are not reachable. Also, this will make it easier to do SPDY through `<iden>` proxies.;Add error-prone compiler and fix its found issues;error-prone, its found issues;Similar;0.5898362994194031
Make the `<method_name>` return full working connections;Previously the returned connections required the caller to do extra work: setting up tunnels and performing an `<iden>` handshake. With this change, we make a complete working connection in `<method_name>`. This will make it easier to fix fallback when a single domain has multiple `<iden>` addresses that are not reachable. Also, this will make it easier to do SPDY through `<iden>` proxies.;Expose <iden> directly on <method_name>  ;direct;Similar;0.7376343607902527
Make the `<method_name>` return full working connections;Previously the returned connections required the caller to do extra work: setting up tunnels and performing an `<iden>` handshake. With this change, we make a complete working connection in `<method_name>`. This will make it easier to fix fallback when a single domain has multiple `<iden>` addresses that are not reachable. Also, this will make it easier to do SPDY through `<iden>` proxies.;Use HTML entity for ampersand;to represent the ampersand symbol in HTML;Similar;0.599734365940094
Make the `<method_name>` return full working connections;Previously the returned connections required the caller to do extra work: setting up tunnels and performing an `<iden>` handshake. With this change, we make a complete working connection in `<method_name>`. This will make it easier to fix fallback when a single domain has multiple `<iden>` addresses that are not reachable. Also, this will make it easier to do SPDY through `<iden>` proxies.;Add convenience overload for <iden>-backed <method_name>;convenience;Similar;0.7395771145820618
Make the `<method_name>` return full working connections;Previously the returned connections required the caller to do extra work: setting up tunnels and performing an `<iden>` handshake. With this change, we make a complete working connection in `<method_name>`. This will make it easier to fix fallback when a single domain has multiple `<iden>` addresses that are not reachable. Also, this will make it easier to do SPDY through `<iden>` proxies.;Use consistent camel casing of <iden>;consistent camel casing;Similar;0.5152055621147156
Make the `<method_name>` return full working connections;Previously the returned connections required the caller to do extra work: setting up tunnels and performing an `<iden>` handshake. With this change, we make a complete working connection in `<method_name>`. This will make it easier to fix fallback when a single domain has multiple `<iden>` addresses that are not reachable. Also, this will make it easier to do SPDY through `<iden>` proxies.;Update website to the latest design  ;latest design;Similar;0.5564478635787964
Make the `<method_name>` return full working connections;Previously the returned connections required the caller to do extra work: setting up tunnels and performing an `<iden>` handshake. With this change, we make a complete working connection in `<method_name>`. This will make it easier to fix fallback when a single domain has multiple `<iden>` addresses that are not reachable. Also, this will make it easier to do SPDY through `<iden>` proxies.;Transfer to/from <iden> directly from <iden>  ;<pr_link>;Similar;0.6724639534950256
Make the `<method_name>` return full working connections;Previously the returned connections required the caller to do extra work: setting up tunnels and performing an `<iden>` handshake. With this change, we make a complete working connection in `<method_name>`. This will make it easier to fix fallback when a single domain has multiple `<iden>` addresses that are not reachable. Also, this will make it easier to do SPDY through `<iden>` proxies.;add @override for subclass override method;subclass override method;Similar;0.7026374936103821
Make the `<method_name>` return full working connections;Previously the returned connections required the caller to do extra work: setting up tunnels and performing an `<iden>` handshake. With this change, we make a complete working connection in `<method_name>`. This will make it easier to fix fallback when a single domain has multiple `<iden>` addresses that are not reachable. Also, this will make it easier to do SPDY through `<iden>` proxies.;Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Similar;0.5734794735908508
Make the `<method_name>` return full working connections;Previously the returned connections required the caller to do extra work: setting up tunnels and performing an `<iden>` handshake. With this change, we make a complete working connection in `<method_name>`. This will make it easier to fix fallback when a single domain has multiple `<iden>` addresses that are not reachable. Also, this will make it easier to do SPDY through `<iden>` proxies.;Partially revert connection timeout behavior  ;The modification of the timeout behavior during connection caused problems;Similar;0.5463199019432068
Make the `<method_name>` return full working connections;Previously the returned connections required the caller to do extra work: setting up tunnels and performing an `<iden>` handshake. With this change, we make a complete working connection in `<method_name>`. This will make it easier to fix fallback when a single domain has multiple `<iden>` addresses that are not reachable. Also, this will make it easier to do SPDY through `<iden>` proxies.;The changes to <iden>s  <file_name> have been ported  ;Upstream commit of <iden> / <iden> fix, This does not include the introduction of PlatformTest, which will be difficult to write so it works everywhere;Similar;0.6813302040100098
Make the `<method_name>` return full working connections;Previously the returned connections required the caller to do extra work: setting up tunnels and performing an `<iden>` handshake. With this change, we make a complete working connection in `<method_name>`. This will make it easier to fix fallback when a single domain has multiple `<iden>` addresses that are not reachable. Also, this will make it easier to do SPDY through `<iden>` proxies.;Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Similar;0.6612931489944458
Make the `<method_name>` return full working connections;Previously the returned connections required the caller to do extra work: setting up tunnels and performing an `<iden>` handshake. With this change, we make a complete working connection in `<method_name>`. This will make it easier to fix fallback when a single domain has multiple `<iden>` addresses that are not reachable. Also, this will make it easier to do SPDY through `<iden>` proxies.;Return <file_name> to previous (e.g. KitKat) behavior;this change required to handle this <iden> scenario;Similar;0.6658352613449097
Make the `<method_name>` return full working connections;Previously the returned connections required the caller to do extra work: setting up tunnels and performing an `<iden>` handshake. With this change, we make a complete working connection in `<method_name>`. This will make it easier to fix fallback when a single domain has multiple `<iden>` addresses that are not reachable. Also, this will make it easier to do SPDY through `<iden>` proxies.;Document <file_name> throwing modes;To include the <pr_link> information;Similar;0.5665968060493469
Make the `<method_name>` return full working connections;Previously the returned connections required the caller to do extra work: setting up tunnels and performing an `<iden>` handshake. With this change, we make a complete working connection in `<method_name>`. This will make it easier to fix fallback when a single domain has multiple `<iden>` addresses that are not reachable. Also, this will make it easier to do SPDY through `<iden>` proxies.;Convert <file_name> to Kotlin;<pr_link>, <iden>, <file_name>;Similar;0.6625909209251404
Make the `<method_name>` return full working connections;Previously the returned connections required the caller to do extra work: setting up tunnels and performing an `<iden>` handshake. With this change, we make a complete working connection in `<method_name>`. This will make it easier to fix fallback when a single domain has multiple `<iden>` addresses that are not reachable. Also, this will make it easier to do SPDY through `<iden>` proxies.;Convert <file_name>, <file_name> to Kotlin  ;"to Kotlin

Decision: Rename <file_name> <version> to .kt (and others)  ";Similar;0.6961721181869507
Make the `<method_name>` return full working connections;Previously the returned connections required the caller to do extra work: setting up tunnels and performing an `<iden>` handshake. With this change, we make a complete working connection in `<method_name>`. This will make it easier to fix fallback when a single domain has multiple `<iden>` addresses that are not reachable. Also, this will make it easier to do SPDY through `<iden>` proxies.;Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Similar;0.7068091630935669
Make the `<method_name>` return full working connections;Previously the returned connections required the caller to do extra work: setting up tunnels and performing an `<iden>` handshake. With this change, we make a complete working connection in `<method_name>`. This will make it easier to fix fallback when a single domain has multiple `<iden>` addresses that are not reachable. Also, this will make it easier to do SPDY through `<iden>` proxies.;Just pass the <iden> and <iden> objects in directly;Dont summarize the request and response;Similar;0.6669986248016357
Make the `<method_name>` return full working connections;Previously the returned connections required the caller to do extra work: setting up tunnels and performing an `<iden>` handshake. With this change, we make a complete working connection in `<method_name>`. This will make it easier to fix fallback when a single domain has multiple `<iden>` addresses that are not reachable. Also, this will make it easier to do SPDY through `<iden>` proxies.;Fix a race in <method_name> ( <pr_link> );We were assuming on a client failure the server wouldnt have any further events. But it will get a failure if we give it a moment. This was causing some test flakiness.;Similar;0.6230473518371582
Make the `<method_name>` return full working connections;Previously the returned connections required the caller to do extra work: setting up tunnels and performing an `<iden>` handshake. With this change, we make a complete working connection in `<method_name>`. This will make it easier to fix fallback when a single domain has multiple `<iden>` addresses that are not reachable. Also, this will make it easier to do SPDY through `<iden>` proxies.;Improve some Markdown;improve;Similar;0.5561344623565674
Make the `<method_name>` return full working connections;Previously the returned connections required the caller to do extra work: setting up tunnels and performing an `<iden>` handshake. With this change, we make a complete working connection in `<method_name>`. This will make it easier to fix fallback when a single domain has multiple `<iden>` addresses that are not reachable. Also, this will make it easier to do SPDY through `<iden>` proxies.;Refactor <file_name> by using <iden>;We can use <iden> instead of overriding <iden> abstract class;Similar;0.6950830221176147
Make the `<method_name>` return full working connections;Previously the returned connections required the caller to do extra work: setting up tunnels and performing an `<iden>` handshake. With this change, we make a complete working connection in `<method_name>`. This will make it easier to fix fallback when a single domain has multiple `<iden>` addresses that are not reachable. Also, this will make it easier to do SPDY through `<iden>` proxies.;Enable GitHub Security Scanning;To configure GitHub workflow for code security scanning;Similar;0.5865369439125061
Make the `<method_name>` return full working connections;Previously the returned connections required the caller to do extra work: setting up tunnels and performing an `<iden>` handshake. With this change, we make a complete working connection in `<method_name>`. This will make it easier to fix fallback when a single domain has multiple `<iden>` addresses that are not reachable. Also, this will make it easier to do SPDY through `<iden>` proxies.;load through bootstrap;-;Similar;0.5994695425033569
Make the `<method_name>` return full working connections;Previously the returned connections required the caller to do extra work: setting up tunnels and performing an `<iden>` handshake. With this change, we make a complete working connection in `<method_name>`. This will make it easier to fix fallback when a single domain has multiple `<iden>` addresses that are not reachable. Also, this will make it easier to do SPDY through `<iden>` proxies.;Add support for following <iden> 307 temporary redirects  ;Fixes Android bug 41739;Similar;0.670259416103363
Make the `<method_name>` return full working connections;Previously the returned connections required the caller to do extra work: setting up tunnels and performing an `<iden>` handshake. With this change, we make a complete working connection in `<method_name>`. This will make it easier to fix fallback when a single domain has multiple `<iden>` addresses that are not reachable. Also, this will make it easier to do SPDY through `<iden>` proxies.;Add wildcard hostnames support in <file_name>;support;Similar;0.6930723190307617
Make the `<method_name>` return full working connections;Previously the returned connections required the caller to do extra work: setting up tunnels and performing an `<iden>` handshake. With this change, we make a complete working connection in `<method_name>`. This will make it easier to fix fallback when a single domain has multiple `<iden>` addresses that are not reachable. Also, this will make it easier to do SPDY through `<iden>` proxies.;Fix correctness of WebSocketReader reserved flags test;reserved flags;Similar;0.5808706283569336
We dont need no stinkin braces;no stinkin braces;Drop unused dependencies;unused;Similar;0.5730773210525513
We dont need no stinkin braces;no stinkin braces;fix <issue_link> : PROPFIND request should not redirect to GET request;PROPFIND request should not redirect to GET request;Similar;0.6873822212219238
We dont need no stinkin braces;no stinkin braces;Remove unnecessary use of grouping parentheses  ;Lets remove warnings found by errorprone.;Similar;0.6363065242767334
Fix <iden> which was being computed incorrectly;<enter> We were only returning true once we were already in a tunnel. This was bogus. In theory a <iden> tunnel sending extra data could be corrupted due to this bug.;Add error-prone compiler and fix its found issues;error-prone, its found issues;Similar;0.7072692513465881
Fix <iden> which was being computed incorrectly;<enter> We were only returning true once we were already in a tunnel. This was bogus. In theory a <iden> tunnel sending extra data could be corrupted due to this bug.;Remove old <iden> protocol method;old;Similar;0.6127771735191345
Fix <iden> which was being computed incorrectly;<enter> We were only returning true once we were already in a tunnel. This was bogus. In theory a <iden> tunnel sending extra data could be corrupted due to this bug.;Drop unused dependencies;unused;Similar;0.5485304594039917
Fix <iden> which was being computed incorrectly;<enter> We were only returning true once we were already in a tunnel. This was bogus. In theory a <iden> tunnel sending extra data could be corrupted due to this bug.;Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Similar;0.5842494964599609
Fix <iden> which was being computed incorrectly;<enter> We were only returning true once we were already in a tunnel. This was bogus. In theory a <iden> tunnel sending extra data could be corrupted due to this bug.;Partially revert connection timeout behavior  ;The modification of the timeout behavior during connection caused problems;Similar;0.5448821187019348
Fix <iden> which was being computed incorrectly;<enter> We were only returning true once we were already in a tunnel. This was bogus. In theory a <iden> tunnel sending extra data could be corrupted due to this bug.;This change logs the exception but prevent it from propagating out of the top of the call stack.;This decreases overall flakiness.;Similar;0.5638300776481628
Fix <iden> which was being computed incorrectly;<enter> We were only returning true once we were already in a tunnel. This was bogus. In theory a <iden> tunnel sending extra data could be corrupted due to this bug.;Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Similar;0.5060747265815735
Fix <iden> which was being computed incorrectly;<enter> We were only returning true once we were already in a tunnel. This was bogus. In theory a <iden> tunnel sending extra data could be corrupted due to this bug.;Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Similar;0.5993064045906067
Fix <iden> which was being computed incorrectly;<enter> We were only returning true once we were already in a tunnel. This was bogus. In theory a <iden> tunnel sending extra data could be corrupted due to this bug.;Fail HTTP/2 connections if the pong is not received;This removes the abstraction from our http2 package;Similar;0.6923428177833557
Fix <iden> which was being computed incorrectly;<enter> We were only returning true once we were already in a tunnel. This was bogus. In theory a <iden> tunnel sending extra data could be corrupted due to this bug.;Improve some Markdown;improve;Similar;0.616560161113739
Fix <iden> which was being computed incorrectly;<enter> We were only returning true once we were already in a tunnel. This was bogus. In theory a <iden> tunnel sending extra data could be corrupted due to this bug.;fix <issue_link> : PROPFIND request should not redirect to GET request;PROPFIND request should not redirect to GET request;Similar;0.5209127068519592
Fix <iden> which was being computed incorrectly;<enter> We were only returning true once we were already in a tunnel. This was bogus. In theory a <iden> tunnel sending extra data could be corrupted due to this bug.;Remove unnecessary use of grouping parentheses  ;Lets remove warnings found by errorprone.;Similar;0.6678086519241333
Fix <iden> which was being computed incorrectly;<enter> We were only returning true once we were already in a tunnel. This was bogus. In theory a <iden> tunnel sending extra data could be corrupted due to this bug.;load through bootstrap;-;Similar;0.5329297184944153
Fix <iden> which was being computed incorrectly;<enter> We were only returning true once we were already in a tunnel. This was bogus. In theory a <iden> tunnel sending extra data could be corrupted due to this bug.;Fix bug where request body isnt sent when it should  ;request body isnt sent when it should;Similar;0.7353070974349976
Fix <iden> which was being computed incorrectly;<enter> We were only returning true once we were already in a tunnel. This was bogus. In theory a <iden> tunnel sending extra data could be corrupted due to this bug.;Fix correctness of WebSocketReader reserved flags test;reserved flags;Similar;0.5385293364524841
Add error-prone compiler and fix its found issues;error-prone, its found issues;Expose <iden> directly on <method_name>  ;direct;Similar;0.5358111262321472
Add error-prone compiler and fix its found issues;error-prone, its found issues;Use HTML entity for ampersand;to represent the ampersand symbol in HTML;Similar;0.5444755554199219
Add error-prone compiler and fix its found issues;error-prone, its found issues;Add convenience overload for <iden>-backed <method_name>;convenience;Similar;0.6463403701782227
Add error-prone compiler and fix its found issues;error-prone, its found issues;Update website to the latest design  ;latest design;Similar;0.5252516865730286
Add error-prone compiler and fix its found issues;error-prone, its found issues;add @override for subclass override method;subclass override method;Similar;0.588383138179779
Add error-prone compiler and fix its found issues;error-prone, its found issues;Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Similar;0.6639119386672974
Add error-prone compiler and fix its found issues;error-prone, its found issues;Partially revert connection timeout behavior  ;The modification of the timeout behavior during connection caused problems;Similar;0.5545992851257324
Add error-prone compiler and fix its found issues;error-prone, its found issues;This change logs the exception but prevent it from propagating out of the top of the call stack.;This decreases overall flakiness.;Similar;0.5170271396636963
Add error-prone compiler and fix its found issues;error-prone, its found issues;The changes to <iden>s  <file_name> have been ported  ;Upstream commit of <iden> / <iden> fix, This does not include the introduction of PlatformTest, which will be difficult to write so it works everywhere;Similar;0.629047155380249
Add error-prone compiler and fix its found issues;error-prone, its found issues;Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Similar;0.5764961242675781
Add error-prone compiler and fix its found issues;error-prone, its found issues;Return <file_name> to previous (e.g. KitKat) behavior;this change required to handle this <iden> scenario;Similar;0.5358079075813293
Add error-prone compiler and fix its found issues;error-prone, its found issues;Document <file_name> throwing modes;To include the <pr_link> information;Similar;0.5033569931983948
Add error-prone compiler and fix its found issues;error-prone, its found issues;Convert <file_name> to Kotlin;<pr_link>, <iden>, <file_name>;Similar;0.5468877553939819
Add error-prone compiler and fix its found issues;error-prone, its found issues;Convert <file_name>, <file_name> to Kotlin  ;"to Kotlin

Decision: Rename <file_name> <version> to .kt (and others)  ";Similar;0.5448806285858154
Add error-prone compiler and fix its found issues;error-prone, its found issues;Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Similar;0.7735395431518555
Add error-prone compiler and fix its found issues;error-prone, its found issues;Fix a race in <method_name> ( <pr_link> );We were assuming on a client failure the server wouldnt have any further events. But it will get a failure if we give it a moment. This was causing some test flakiness.;Similar;0.6411651968955994
Add error-prone compiler and fix its found issues;error-prone, its found issues;Improve some Markdown;improve;Similar;0.6830261945724487
Add error-prone compiler and fix its found issues;error-prone, its found issues;Refactor <file_name> by using <iden>;We can use <iden> instead of overriding <iden> abstract class;Similar;0.5973572134971619
Add error-prone compiler and fix its found issues;error-prone, its found issues;Enable GitHub Security Scanning;To configure GitHub workflow for code security scanning;Similar;0.5623409748077393
Add error-prone compiler and fix its found issues;error-prone, its found issues;load through bootstrap;-;Similar;0.5029467940330505
Add error-prone compiler and fix its found issues;error-prone, its found issues;Fix bug where request body isnt sent when it should  ;request body isnt sent when it should;Similar;0.7046608328819275
Add error-prone compiler and fix its found issues;error-prone, its found issues;Add support for following <iden> 307 temporary redirects  ;Fixes Android bug 41739;Similar;0.6090919375419617
Add error-prone compiler and fix its found issues;error-prone, its found issues;Fix correctness of WebSocketReader reserved flags test;reserved flags;Similar;0.7204810976982117
Remove old <iden> protocol method;old;Expose <iden> directly on <method_name>  ;direct;Similar;0.6298410892486572
Remove old <iden> protocol method;old;Use HTML entity for ampersand;to represent the ampersand symbol in HTML;Similar;0.5985374450683594
Remove old <iden> protocol method;old;Add convenience overload for <iden>-backed <method_name>;convenience;Similar;0.5551266074180603
Remove old <iden> protocol method;old;Drop unused dependencies;unused;Similar;0.7534624934196472
Remove old <iden> protocol method;old;Transfer to/from <iden> directly from <iden>  ;<pr_link>;Similar;0.6586092114448547
Remove old <iden> protocol method;old;add @override for subclass override method;subclass override method;Similar;0.5235113501548767
Remove old <iden> protocol method;old;Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Similar;0.567686915397644
Remove old <iden> protocol method;old;Partially revert connection timeout behavior  ;The modification of the timeout behavior during connection caused problems;Similar;0.6267560720443726
Remove old <iden> protocol method;old;This change logs the exception but prevent it from propagating out of the top of the call stack.;This decreases overall flakiness.;Similar;0.5169037580490112
Remove old <iden> protocol method;old;The changes to <iden>s  <file_name> have been ported  ;Upstream commit of <iden> / <iden> fix, This does not include the introduction of PlatformTest, which will be difficult to write so it works everywhere;Similar;0.5710450410842896
Remove old <iden> protocol method;old;Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Similar;0.7297981977462769
Remove old <iden> protocol method;old;Return <file_name> to previous (e.g. KitKat) behavior;this change required to handle this <iden> scenario;Similar;0.6761256456375122
Remove old <iden> protocol method;old;Document <file_name> throwing modes;To include the <pr_link> information;Similar;0.5917974710464478
Remove old <iden> protocol method;old;Convert <file_name> to Kotlin;<pr_link>, <iden>, <file_name>;Similar;0.6503089070320129
Remove old <iden> protocol method;old;Convert <file_name>, <file_name> to Kotlin  ;"to Kotlin

Decision: Rename <file_name> <version> to .kt (and others)  ";Similar;0.6560079455375671
Remove old <iden> protocol method;old;Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Similar;0.5832602977752686
Remove old <iden> protocol method;old;Fail HTTP/2 connections if the pong is not received;This removes the abstraction from our http2 package;Similar;0.6310542821884155
Remove old <iden> protocol method;old;Just pass the <iden> and <iden> objects in directly;Dont summarize the request and response;Similar;0.6393066644668579
Remove old <iden> protocol method;old;Fix a race in <method_name> ( <pr_link> );We were assuming on a client failure the server wouldnt have any further events. But it will get a failure if we give it a moment. This was causing some test flakiness.;Similar;0.5256749987602234
Remove old <iden> protocol method;old;Improve some Markdown;improve;Similar;0.5321865081787109
Remove old <iden> protocol method;old;fix <issue_link> : PROPFIND request should not redirect to GET request;PROPFIND request should not redirect to GET request;Similar;0.5977938175201416
Remove old <iden> protocol method;old;Refactor <file_name> by using <iden>;We can use <iden> instead of overriding <iden> abstract class;Similar;0.6461434364318848
Remove old <iden> protocol method;old;Remove unnecessary use of grouping parentheses  ;Lets remove warnings found by errorprone.;Similar;0.7581265568733215
Remove old <iden> protocol method;old;load through bootstrap;-;Similar;0.6219814419746399
Remove old <iden> protocol method;old;Fix bug where request body isnt sent when it should  ;request body isnt sent when it should;Similar;0.6379369497299194
Remove old <iden> protocol method;old;Add support for following <iden> 307 temporary redirects  ;Fixes Android bug 41739;Similar;0.5507029891014099
Expose <iden> directly on <method_name>  ;direct;Use HTML entity for ampersand;to represent the ampersand symbol in HTML;Similar;0.7587170600891113
Expose <iden> directly on <method_name>  ;direct;Add convenience overload for <iden>-backed <method_name>;convenience;Similar;0.7615357637405396
Expose <iden> directly on <method_name>  ;direct;Use consistent camel casing of <iden>;consistent camel casing;Similar;0.5442920923233032
Expose <iden> directly on <method_name>  ;direct;Transfer to/from <iden> directly from <iden>  ;<pr_link>;Similar;0.8753862977027893
Expose <iden> directly on <method_name>  ;direct;add @override for subclass override method;subclass override method;Similar;0.7261378765106201
Expose <iden> directly on <method_name>  ;direct;Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Similar;0.6005064845085144
Expose <iden> directly on <method_name>  ;direct;Partially revert connection timeout behavior  ;The modification of the timeout behavior during connection caused problems;Similar;0.5000947117805481
Expose <iden> directly on <method_name>  ;direct;The changes to <iden>s  <file_name> have been ported  ;Upstream commit of <iden> / <iden> fix, This does not include the introduction of PlatformTest, which will be difficult to write so it works everywhere;Similar;0.6727184057235718
Expose <iden> directly on <method_name>  ;direct;Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Similar;0.8162170648574829
Expose <iden> directly on <method_name>  ;direct;Return <file_name> to previous (e.g. KitKat) behavior;this change required to handle this <iden> scenario;Similar;0.738775908946991
Expose <iden> directly on <method_name>  ;direct;Document <file_name> throwing modes;To include the <pr_link> information;Similar;0.7118238210678101
Expose <iden> directly on <method_name>  ;direct;Convert <file_name> to Kotlin;<pr_link>, <iden>, <file_name>;Similar;0.7967020273208618
Expose <iden> directly on <method_name>  ;direct;Convert <file_name>, <file_name> to Kotlin  ;"to Kotlin

Decision: Rename <file_name> <version> to .kt (and others)  ";Similar;0.8090091943740845
Expose <iden> directly on <method_name>  ;direct;Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Similar;0.6454195976257324
Expose <iden> directly on <method_name>  ;direct;Just pass the <iden> and <iden> objects in directly;Dont summarize the request and response;Similar;0.8140782117843628
Expose <iden> directly on <method_name>  ;direct;Fix a race in <method_name> ( <pr_link> );We were assuming on a client failure the server wouldnt have any further events. But it will get a failure if we give it a moment. This was causing some test flakiness.;Similar;0.5998290181159973
Expose <iden> directly on <method_name>  ;direct;Improve some Markdown;improve;Similar;0.5153821706771851
Expose <iden> directly on <method_name>  ;direct;Refactor <file_name> by using <iden>;We can use <iden> instead of overriding <iden> abstract class;Similar;0.8688902854919434
Expose <iden> directly on <method_name>  ;direct;Enable GitHub Security Scanning;To configure GitHub workflow for code security scanning;Similar;0.5460043549537659
Expose <iden> directly on <method_name>  ;direct;load through bootstrap;-;Similar;0.6734015345573425
Expose <iden> directly on <method_name>  ;direct;Add support for following <iden> 307 temporary redirects  ;Fixes Android bug 41739;Similar;0.6151708960533142
Expose <iden> directly on <method_name>  ;direct;Add wildcard hostnames support in <file_name>;support;Similar;0.6849923729896545
Expose <iden> directly on <method_name>  ;direct;Fix correctness of WebSocketReader reserved flags test;reserved flags;Similar;0.5274750590324402
Use HTML entity for ampersand;to represent the ampersand symbol in HTML;Add convenience overload for <iden>-backed <method_name>;convenience;Similar;0.6832998991012573
Use HTML entity for ampersand;to represent the ampersand symbol in HTML;Update website to the latest design  ;latest design;Similar;0.5135325193405151
Use HTML entity for ampersand;to represent the ampersand symbol in HTML;Transfer to/from <iden> directly from <iden>  ;<pr_link>;Similar;0.7053196430206299
Use HTML entity for ampersand;to represent the ampersand symbol in HTML;add @override for subclass override method;subclass override method;Similar;0.7149831056594849
Use HTML entity for ampersand;to represent the ampersand symbol in HTML;Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Similar;0.6579732894897461
Use HTML entity for ampersand;to represent the ampersand symbol in HTML;Partially revert connection timeout behavior  ;The modification of the timeout behavior during connection caused problems;Similar;0.5272899866104126
Use HTML entity for ampersand;to represent the ampersand symbol in HTML;The changes to <iden>s  <file_name> have been ported  ;Upstream commit of <iden> / <iden> fix, This does not include the introduction of PlatformTest, which will be difficult to write so it works everywhere;Similar;0.645976185798645
Use HTML entity for ampersand;to represent the ampersand symbol in HTML;Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Similar;0.7449027895927429
Use HTML entity for ampersand;to represent the ampersand symbol in HTML;Return <file_name> to previous (e.g. KitKat) behavior;this change required to handle this <iden> scenario;Similar;0.6964040994644165
Use HTML entity for ampersand;to represent the ampersand symbol in HTML;Document <file_name> throwing modes;To include the <pr_link> information;Similar;0.7070322036743164
Use HTML entity for ampersand;to represent the ampersand symbol in HTML;Convert <file_name> to Kotlin;<pr_link>, <iden>, <file_name>;Similar;0.7659462690353394
Use HTML entity for ampersand;to represent the ampersand symbol in HTML;Convert <file_name>, <file_name> to Kotlin  ;"to Kotlin

Decision: Rename <file_name> <version> to .kt (and others)  ";Similar;0.7614755630493164
Use HTML entity for ampersand;to represent the ampersand symbol in HTML;Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Similar;0.6158723831176758
Use HTML entity for ampersand;to represent the ampersand symbol in HTML;Just pass the <iden> and <iden> objects in directly;Dont summarize the request and response;Similar;0.6219661235809326
Use HTML entity for ampersand;to represent the ampersand symbol in HTML;Fix a race in <method_name> ( <pr_link> );We were assuming on a client failure the server wouldnt have any further events. But it will get a failure if we give it a moment. This was causing some test flakiness.;Similar;0.5966534614562988
Use HTML entity for ampersand;to represent the ampersand symbol in HTML;Improve some Markdown;improve;Similar;0.5056666135787964
Use HTML entity for ampersand;to represent the ampersand symbol in HTML;Refactor <file_name> by using <iden>;We can use <iden> instead of overriding <iden> abstract class;Similar;0.8001756072044373
Use HTML entity for ampersand;to represent the ampersand symbol in HTML;Enable GitHub Security Scanning;To configure GitHub workflow for code security scanning;Similar;0.641150712966919
Use HTML entity for ampersand;to represent the ampersand symbol in HTML;load through bootstrap;-;Similar;0.6307064890861511
Use HTML entity for ampersand;to represent the ampersand symbol in HTML;Fix bug where request body isnt sent when it should  ;request body isnt sent when it should;Similar;0.5219589471817017
Use HTML entity for ampersand;to represent the ampersand symbol in HTML;Add support for following <iden> 307 temporary redirects  ;Fixes Android bug 41739;Similar;0.6450336575508118
Use HTML entity for ampersand;to represent the ampersand symbol in HTML;Add wildcard hostnames support in <file_name>;support;Similar;0.7027113437652588
Use HTML entity for ampersand;to represent the ampersand symbol in HTML;Fix correctness of WebSocketReader reserved flags test;reserved flags;Similar;0.611286997795105
Add convenience overload for <iden>-backed <method_name>;convenience;Use consistent camel casing of <iden>;consistent camel casing;Similar;0.6047016978263855
Add convenience overload for <iden>-backed <method_name>;convenience;Update website to the latest design  ;latest design;Similar;0.5112131834030151
Add convenience overload for <iden>-backed <method_name>;convenience;Transfer to/from <iden> directly from <iden>  ;<pr_link>;Similar;0.7285603880882263
Add convenience overload for <iden>-backed <method_name>;convenience;add @override for subclass override method;subclass override method;Similar;0.7936077117919922
Add convenience overload for <iden>-backed <method_name>;convenience;Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Similar;0.6958462595939636
Add convenience overload for <iden>-backed <method_name>;convenience;Partially revert connection timeout behavior  ;The modification of the timeout behavior during connection caused problems;Similar;0.6348891854286194
Add convenience overload for <iden>-backed <method_name>;convenience;The changes to <iden>s  <file_name> have been ported  ;Upstream commit of <iden> / <iden> fix, This does not include the introduction of PlatformTest, which will be difficult to write so it works everywhere;Similar;0.6920725107192993
Add convenience overload for <iden>-backed <method_name>;convenience;Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Similar;0.7797359824180603
Add convenience overload for <iden>-backed <method_name>;convenience;Return <file_name> to previous (e.g. KitKat) behavior;this change required to handle this <iden> scenario;Similar;0.672073483467102
Add convenience overload for <iden>-backed <method_name>;convenience;Document <file_name> throwing modes;To include the <pr_link> information;Similar;0.629979133605957
Add convenience overload for <iden>-backed <method_name>;convenience;Convert <file_name> to Kotlin;<pr_link>, <iden>, <file_name>;Similar;0.701714038848877
Add convenience overload for <iden>-backed <method_name>;convenience;Convert <file_name>, <file_name> to Kotlin  ;"to Kotlin

Decision: Rename <file_name> <version> to .kt (and others)  ";Similar;0.7222409248352051
Add convenience overload for <iden>-backed <method_name>;convenience;Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Similar;0.7573174238204956
Add convenience overload for <iden>-backed <method_name>;convenience;Just pass the <iden> and <iden> objects in directly;Dont summarize the request and response;Similar;0.7044440507888794
Add convenience overload for <iden>-backed <method_name>;convenience;Fix a race in <method_name> ( <pr_link> );We were assuming on a client failure the server wouldnt have any further events. But it will get a failure if we give it a moment. This was causing some test flakiness.;Similar;0.6494839787483215
Add convenience overload for <iden>-backed <method_name>;convenience;Improve some Markdown;improve;Similar;0.6995605826377869
Add convenience overload for <iden>-backed <method_name>;convenience;Refactor <file_name> by using <iden>;We can use <iden> instead of overriding <iden> abstract class;Similar;0.7892455458641052
Add convenience overload for <iden>-backed <method_name>;convenience;Remove unnecessary use of grouping parentheses  ;Lets remove warnings found by errorprone.;Similar;0.5043870806694031
Add convenience overload for <iden>-backed <method_name>;convenience;Enable GitHub Security Scanning;To configure GitHub workflow for code security scanning;Similar;0.612830400466919
Add convenience overload for <iden>-backed <method_name>;convenience;load through bootstrap;-;Similar;0.5672619938850403
Add convenience overload for <iden>-backed <method_name>;convenience;Fix bug where request body isnt sent when it should  ;request body isnt sent when it should;Similar;0.6037812232971191
Add convenience overload for <iden>-backed <method_name>;convenience;Add support for following <iden> 307 temporary redirects  ;Fixes Android bug 41739;Similar;0.7646595239639282
Add convenience overload for <iden>-backed <method_name>;convenience;Add wildcard hostnames support in <file_name>;support;Similar;0.7271385192871094
Add convenience overload for <iden>-backed <method_name>;convenience;Fix correctness of WebSocketReader reserved flags test;reserved flags;Similar;0.6636606454849243
Use consistent camel casing of <iden>;consistent camel casing;Transfer to/from <iden> directly from <iden>  ;<pr_link>;Similar;0.5109769701957703
Use consistent camel casing of <iden>;consistent camel casing;Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Similar;0.5241339206695557
Use consistent camel casing of <iden>;consistent camel casing;Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Similar;0.5209852457046509
Use consistent camel casing of <iden>;consistent camel casing;Return <file_name> to previous (e.g. KitKat) behavior;this change required to handle this <iden> scenario;Similar;0.5417414903640747
Use consistent camel casing of <iden>;consistent camel casing;Convert <file_name> to Kotlin;<pr_link>, <iden>, <file_name>;Similar;0.5204092264175415
Use consistent camel casing of <iden>;consistent camel casing;Convert <file_name>, <file_name> to Kotlin  ;"to Kotlin

Decision: Rename <file_name> <version> to .kt (and others)  ";Similar;0.5218565464019775
Use consistent camel casing of <iden>;consistent camel casing;Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Similar;0.5235663056373596
Use consistent camel casing of <iden>;consistent camel casing;Just pass the <iden> and <iden> objects in directly;Dont summarize the request and response;Similar;0.5181139707565308
Use consistent camel casing of <iden>;consistent camel casing;Refactor <file_name> by using <iden>;We can use <iden> instead of overriding <iden> abstract class;Similar;0.5788695216178894
Use consistent camel casing of <iden>;consistent camel casing;Enable GitHub Security Scanning;To configure GitHub workflow for code security scanning;Similar;0.5134468674659729
Use consistent camel casing of <iden>;consistent camel casing;Add support for following <iden> 307 temporary redirects  ;Fixes Android bug 41739;Similar;0.5390818119049072
Use consistent camel casing of <iden>;consistent camel casing;Fix correctness of WebSocketReader reserved flags test;reserved flags;Similar;0.5451574921607971
Drop unused dependencies;unused;Transfer to/from <iden> directly from <iden>  ;<pr_link>;Similar;0.5687362551689148
Drop unused dependencies;unused;Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Similar;0.5096327662467957
Drop unused dependencies;unused;Partially revert connection timeout behavior  ;The modification of the timeout behavior during connection caused problems;Similar;0.6220935583114624
Drop unused dependencies;unused;Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Similar;0.6083102822303772
Drop unused dependencies;unused;Fail HTTP/2 connections if the pong is not received;This removes the abstraction from our http2 package;Similar;0.6355301141738892
Drop unused dependencies;unused;Just pass the <iden> and <iden> objects in directly;Dont summarize the request and response;Similar;0.5967650413513184
Drop unused dependencies;unused;Improve some Markdown;improve;Similar;0.534285843372345
Drop unused dependencies;unused;fix <issue_link> : PROPFIND request should not redirect to GET request;PROPFIND request should not redirect to GET request;Similar;0.6058983206748962
Drop unused dependencies;unused;Remove unnecessary use of grouping parentheses  ;Lets remove warnings found by errorprone.;Similar;0.7514904737472534
Drop unused dependencies;unused;load through bootstrap;-;Similar;0.5613631010055542
Drop unused dependencies;unused;Fix bug where request body isnt sent when it should  ;request body isnt sent when it should;Similar;0.6298173069953918
Update website to the latest design  ;latest design;add @override for subclass override method;subclass override method;Similar;0.5484645366668701
Update website to the latest design  ;latest design;Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Similar;0.5495591163635254
Update website to the latest design  ;latest design;The changes to <iden>s  <file_name> have been ported  ;Upstream commit of <iden> / <iden> fix, This does not include the introduction of PlatformTest, which will be difficult to write so it works everywhere;Similar;0.6909517645835876
Update website to the latest design  ;latest design;Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Similar;0.5147162675857544
Update website to the latest design  ;latest design;Return <file_name> to previous (e.g. KitKat) behavior;this change required to handle this <iden> scenario;Similar;0.5108824968338013
Update website to the latest design  ;latest design;Convert <file_name> to Kotlin;<pr_link>, <iden>, <file_name>;Similar;0.5010184645652771
Update website to the latest design  ;latest design;Convert <file_name>, <file_name> to Kotlin  ;"to Kotlin

Decision: Rename <file_name> <version> to .kt (and others)  ";Similar;0.5048558115959167
Update website to the latest design  ;latest design;Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Similar;0.5985473990440369
Update website to the latest design  ;latest design;Fix a race in <method_name> ( <pr_link> );We were assuming on a client failure the server wouldnt have any further events. But it will get a failure if we give it a moment. This was causing some test flakiness.;Similar;0.6200804114341736
Update website to the latest design  ;latest design;Refactor <file_name> by using <iden>;We can use <iden> instead of overriding <iden> abstract class;Similar;0.5191921591758728
Update website to the latest design  ;latest design;Enable GitHub Security Scanning;To configure GitHub workflow for code security scanning;Similar;0.5172911286354065
Update website to the latest design  ;latest design;Add support for following <iden> 307 temporary redirects  ;Fixes Android bug 41739;Similar;0.529151976108551
Update website to the latest design  ;latest design;Add wildcard hostnames support in <file_name>;support;Similar;0.5435616970062256
Update website to the latest design  ;latest design;Fix correctness of WebSocketReader reserved flags test;reserved flags;Similar;0.5327547192573547
HTTP/2 initial window size is 65535 not 65536  ;not 65536;Return <file_name> to previous (e.g. KitKat) behavior;this change required to handle this <iden> scenario;Similar;0.5123937129974365
Transfer to/from <iden> directly from <iden>  ;<pr_link>;add @override for subclass override method;subclass override method;Similar;0.7156764268875122
Transfer to/from <iden> directly from <iden>  ;<pr_link>;Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Similar;0.5908105373382568
Transfer to/from <iden> directly from <iden>  ;<pr_link>;Partially revert connection timeout behavior  ;The modification of the timeout behavior during connection caused problems;Similar;0.6556400060653687
Transfer to/from <iden> directly from <iden>  ;<pr_link>;The changes to <iden>s  <file_name> have been ported  ;Upstream commit of <iden> / <iden> fix, This does not include the introduction of PlatformTest, which will be difficult to write so it works everywhere;Similar;0.6632094979286194
Transfer to/from <iden> directly from <iden>  ;<pr_link>;Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Similar;0.8199807405471802
Transfer to/from <iden> directly from <iden>  ;<pr_link>;Return <file_name> to previous (e.g. KitKat) behavior;this change required to handle this <iden> scenario;Similar;0.7176454067230225
Transfer to/from <iden> directly from <iden>  ;<pr_link>;Document <file_name> throwing modes;To include the <pr_link> information;Similar;0.6523145437240601
Transfer to/from <iden> directly from <iden>  ;<pr_link>;Convert <file_name> to Kotlin;<pr_link>, <iden>, <file_name>;Similar;0.7519081234931946
Transfer to/from <iden> directly from <iden>  ;<pr_link>;Convert <file_name>, <file_name> to Kotlin  ;"to Kotlin

Decision: Rename <file_name> <version> to .kt (and others)  ";Similar;0.7712807655334473
Transfer to/from <iden> directly from <iden>  ;<pr_link>;Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Similar;0.6598118543624878
Transfer to/from <iden> directly from <iden>  ;<pr_link>;Just pass the <iden> and <iden> objects in directly;Dont summarize the request and response;Similar;0.8539905548095703
Transfer to/from <iden> directly from <iden>  ;<pr_link>;Fix a race in <method_name> ( <pr_link> );We were assuming on a client failure the server wouldnt have any further events. But it will get a failure if we give it a moment. This was causing some test flakiness.;Similar;0.5394580364227295
Transfer to/from <iden> directly from <iden>  ;<pr_link>;Improve some Markdown;improve;Similar;0.5969117283821106
Transfer to/from <iden> directly from <iden>  ;<pr_link>;Refactor <file_name> by using <iden>;We can use <iden> instead of overriding <iden> abstract class;Similar;0.8195908069610596
Transfer to/from <iden> directly from <iden>  ;<pr_link>;Remove unnecessary use of grouping parentheses  ;Lets remove warnings found by errorprone.;Similar;0.5180839896202087
Transfer to/from <iden> directly from <iden>  ;<pr_link>;load through bootstrap;-;Similar;0.7050557732582092
Transfer to/from <iden> directly from <iden>  ;<pr_link>;Fix bug where request body isnt sent when it should  ;request body isnt sent when it should;Similar;0.5296130180358887
Transfer to/from <iden> directly from <iden>  ;<pr_link>;Add support for following <iden> 307 temporary redirects  ;Fixes Android bug 41739;Similar;0.6149047613143921
Transfer to/from <iden> directly from <iden>  ;<pr_link>;Add wildcard hostnames support in <file_name>;support;Similar;0.6134933233261108
add @override for subclass override method;subclass override method;Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Similar;0.6461834907531738
add @override for subclass override method;subclass override method;Partially revert connection timeout behavior  ;The modification of the timeout behavior during connection caused problems;Similar;0.614090621471405
add @override for subclass override method;subclass override method;The changes to <iden>s  <file_name> have been ported  ;Upstream commit of <iden> / <iden> fix, This does not include the introduction of PlatformTest, which will be difficult to write so it works everywhere;Similar;0.7185400128364563
add @override for subclass override method;subclass override method;Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Similar;0.7666218280792236
add @override for subclass override method;subclass override method;Return <file_name> to previous (e.g. KitKat) behavior;this change required to handle this <iden> scenario;Similar;0.639657199382782
add @override for subclass override method;subclass override method;Document <file_name> throwing modes;To include the <pr_link> information;Similar;0.6312984824180603
add @override for subclass override method;subclass override method;Convert <file_name> to Kotlin;<pr_link>, <iden>, <file_name>;Similar;0.6901024580001831
add @override for subclass override method;subclass override method;Convert <file_name>, <file_name> to Kotlin  ;"to Kotlin

Decision: Rename <file_name> <version> to .kt (and others)  ";Similar;0.7001752853393555
add @override for subclass override method;subclass override method;Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Similar;0.7229092121124268
add @override for subclass override method;subclass override method;Just pass the <iden> and <iden> objects in directly;Dont summarize the request and response;Similar;0.6118468046188354
add @override for subclass override method;subclass override method;Fix a race in <method_name> ( <pr_link> );We were assuming on a client failure the server wouldnt have any further events. But it will get a failure if we give it a moment. This was causing some test flakiness.;Similar;0.7069882154464722
add @override for subclass override method;subclass override method;Improve some Markdown;improve;Similar;0.5333792567253113
add @override for subclass override method;subclass override method;Refactor <file_name> by using <iden>;We can use <iden> instead of overriding <iden> abstract class;Similar;0.7745198011398315
add @override for subclass override method;subclass override method;Enable GitHub Security Scanning;To configure GitHub workflow for code security scanning;Similar;0.5631473660469055
add @override for subclass override method;subclass override method;load through bootstrap;-;Similar;0.5587472915649414
add @override for subclass override method;subclass override method;Fix bug where request body isnt sent when it should  ;request body isnt sent when it should;Similar;0.5827993154525757
add @override for subclass override method;subclass override method;Add support for following <iden> 307 temporary redirects  ;Fixes Android bug 41739;Similar;0.6610134243965149
add @override for subclass override method;subclass override method;Add wildcard hostnames support in <file_name>;support;Similar;0.779777467250824
add @override for subclass override method;subclass override method;Fix correctness of WebSocketReader reserved flags test;reserved flags;Similar;0.6186679005622864
Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Partially revert connection timeout behavior  ;The modification of the timeout behavior during connection caused problems;Similar;0.6470392942428589
Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;The changes to <iden>s  <file_name> have been ported  ;Upstream commit of <iden> / <iden> fix, This does not include the introduction of PlatformTest, which will be difficult to write so it works everywhere;Similar;0.6155117154121399
Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Similar;0.6872017979621887
Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Return <file_name> to previous (e.g. KitKat) behavior;this change required to handle this <iden> scenario;Similar;0.6108320355415344
Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Document <file_name> throwing modes;To include the <pr_link> information;Similar;0.5679567456245422
Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Convert <file_name> to Kotlin;<pr_link>, <iden>, <file_name>;Similar;0.646791398525238
Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Convert <file_name>, <file_name> to Kotlin  ;"to Kotlin

Decision: Rename <file_name> <version> to .kt (and others)  ";Similar;0.6421859860420227
Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Similar;0.7148166298866272
Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Fail HTTP/2 connections if the pong is not received;This removes the abstraction from our http2 package;Similar;0.5089835524559021
Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Just pass the <iden> and <iden> objects in directly;Dont summarize the request and response;Similar;0.5782986283302307
Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Fix a race in <method_name> ( <pr_link> );We were assuming on a client failure the server wouldnt have any further events. But it will get a failure if we give it a moment. This was causing some test flakiness.;Similar;0.6409875154495239
Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Improve some Markdown;improve;Similar;0.651017427444458
Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;fix <issue_link> : PROPFIND request should not redirect to GET request;PROPFIND request should not redirect to GET request;Similar;0.5063517689704895
Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Refactor <file_name> by using <iden>;We can use <iden> instead of overriding <iden> abstract class;Similar;0.6397266387939453
Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Enable GitHub Security Scanning;To configure GitHub workflow for code security scanning;Similar;0.5561800003051758
Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;load through bootstrap;-;Similar;0.5516860485076904
Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Fix bug where request body isnt sent when it should  ;request body isnt sent when it should;Similar;0.7147933840751648
Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Add support for following <iden> 307 temporary redirects  ;Fixes Android bug 41739;Similar;0.6518111228942871
Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Add wildcard hostnames support in <file_name>;support;Similar;0.5226888656616211
Fix flaky testRfc2109Response();The time delta in the cookie max-age is rounded down, so is at most 59 seconds. Possibly a GC or some other hiccup can occasionally make it lower, so allow some room for error.;Fix correctness of WebSocketReader reserved flags test;reserved flags;Similar;0.7383289933204651
Partially revert connection timeout behavior  ;The modification of the timeout behavior during connection caused problems;The changes to <iden>s  <file_name> have been ported  ;Upstream commit of <iden> / <iden> fix, This does not include the introduction of PlatformTest, which will be difficult to write so it works everywhere;Similar;0.6127161979675293
Partially revert connection timeout behavior  ;The modification of the timeout behavior during connection caused problems;Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Similar;0.6989118456840515
Partially revert connection timeout behavior  ;The modification of the timeout behavior during connection caused problems;Return <file_name> to previous (e.g. KitKat) behavior;this change required to handle this <iden> scenario;Similar;0.6663892269134521
Partially revert connection timeout behavior  ;The modification of the timeout behavior during connection caused problems;Convert <file_name> to Kotlin;<pr_link>, <iden>, <file_name>;Similar;0.5849235653877258
Partially revert connection timeout behavior  ;The modification of the timeout behavior during connection caused problems;Convert <file_name>, <file_name> to Kotlin  ;"to Kotlin

Decision: Rename <file_name> <version> to .kt (and others)  ";Similar;0.6001375317573547
Partially revert connection timeout behavior  ;The modification of the timeout behavior during connection caused problems;Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Similar;0.6694122552871704
Partially revert connection timeout behavior  ;The modification of the timeout behavior during connection caused problems;Just pass the <iden> and <iden> objects in directly;Dont summarize the request and response;Similar;0.5951618552207947
Partially revert connection timeout behavior  ;The modification of the timeout behavior during connection caused problems;Fix a race in <method_name> ( <pr_link> );We were assuming on a client failure the server wouldnt have any further events. But it will get a failure if we give it a moment. This was causing some test flakiness.;Similar;0.5288263559341431
Partially revert connection timeout behavior  ;The modification of the timeout behavior during connection caused problems;Improve some Markdown;improve;Similar;0.7199201583862305
Partially revert connection timeout behavior  ;The modification of the timeout behavior during connection caused problems;fix <issue_link> : PROPFIND request should not redirect to GET request;PROPFIND request should not redirect to GET request;Similar;0.5055094361305237
Partially revert connection timeout behavior  ;The modification of the timeout behavior during connection caused problems;Refactor <file_name> by using <iden>;We can use <iden> instead of overriding <iden> abstract class;Similar;0.572041392326355
Partially revert connection timeout behavior  ;The modification of the timeout behavior during connection caused problems;Remove unnecessary use of grouping parentheses  ;Lets remove warnings found by errorprone.;Similar;0.5160441398620605
Partially revert connection timeout behavior  ;The modification of the timeout behavior during connection caused problems;load through bootstrap;-;Similar;0.5418256521224976
Partially revert connection timeout behavior  ;The modification of the timeout behavior during connection caused problems;Fix bug where request body isnt sent when it should  ;request body isnt sent when it should;Similar;0.6378268003463745
Partially revert connection timeout behavior  ;The modification of the timeout behavior during connection caused problems;Add support for following <iden> 307 temporary redirects  ;Fixes Android bug 41739;Similar;0.665290355682373
Partially revert connection timeout behavior  ;The modification of the timeout behavior during connection caused problems;Fix correctness of WebSocketReader reserved flags test;reserved flags;Similar;0.5265015959739685
This change logs the exception but prevent it from propagating out of the top of the call stack.;This decreases overall flakiness.;Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Similar;0.5038895010948181
This change logs the exception but prevent it from propagating out of the top of the call stack.;This decreases overall flakiness.;Fail HTTP/2 connections if the pong is not received;This removes the abstraction from our http2 package;Similar;0.6927362680435181
This change logs the exception but prevent it from propagating out of the top of the call stack.;This decreases overall flakiness.;fix <issue_link> : PROPFIND request should not redirect to GET request;PROPFIND request should not redirect to GET request;Similar;0.6857337951660156
This change logs the exception but prevent it from propagating out of the top of the call stack.;This decreases overall flakiness.;Remove unnecessary use of grouping parentheses  ;Lets remove warnings found by errorprone.;Similar;0.6170130372047424
This change logs the exception but prevent it from propagating out of the top of the call stack.;This decreases overall flakiness.;Fix bug where request body isnt sent when it should  ;request body isnt sent when it should;Similar;0.6886380910873413
This change logs the exception but prevent it from propagating out of the top of the call stack.;This decreases overall flakiness.;Fix correctness of WebSocketReader reserved flags test;reserved flags;Similar;0.5462315082550049
The changes to <iden>s  <file_name> have been ported  ;Upstream commit of <iden> / <iden> fix, This does not include the introduction of PlatformTest, which will be difficult to write so it works everywhere;Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Similar;0.756147027015686
The changes to <iden>s  <file_name> have been ported  ;Upstream commit of <iden> / <iden> fix, This does not include the introduction of PlatformTest, which will be difficult to write so it works everywhere;Return <file_name> to previous (e.g. KitKat) behavior;this change required to handle this <iden> scenario;Similar;0.7397817373275757
The changes to <iden>s  <file_name> have been ported  ;Upstream commit of <iden> / <iden> fix, This does not include the introduction of PlatformTest, which will be difficult to write so it works everywhere;Document <file_name> throwing modes;To include the <pr_link> information;Similar;0.659563422203064
The changes to <iden>s  <file_name> have been ported  ;Upstream commit of <iden> / <iden> fix, This does not include the introduction of PlatformTest, which will be difficult to write so it works everywhere;Convert <file_name> to Kotlin;<pr_link>, <iden>, <file_name>;Similar;0.764236569404602
The changes to <iden>s  <file_name> have been ported  ;Upstream commit of <iden> / <iden> fix, This does not include the introduction of PlatformTest, which will be difficult to write so it works everywhere;Convert <file_name>, <file_name> to Kotlin  ;"to Kotlin

Decision: Rename <file_name> <version> to .kt (and others)  ";Similar;0.7802080512046814
The changes to <iden>s  <file_name> have been ported  ;Upstream commit of <iden> / <iden> fix, This does not include the introduction of PlatformTest, which will be difficult to write so it works everywhere;Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Similar;0.7637133598327637
The changes to <iden>s  <file_name> have been ported  ;Upstream commit of <iden> / <iden> fix, This does not include the introduction of PlatformTest, which will be difficult to write so it works everywhere;Just pass the <iden> and <iden> objects in directly;Dont summarize the request and response;Similar;0.5812142491340637
The changes to <iden>s  <file_name> have been ported  ;Upstream commit of <iden> / <iden> fix, This does not include the introduction of PlatformTest, which will be difficult to write so it works everywhere;Fix a race in <method_name> ( <pr_link> );We were assuming on a client failure the server wouldnt have any further events. But it will get a failure if we give it a moment. This was causing some test flakiness.;Similar;0.664239227771759
The changes to <iden>s  <file_name> have been ported  ;Upstream commit of <iden> / <iden> fix, This does not include the introduction of PlatformTest, which will be difficult to write so it works everywhere;Improve some Markdown;improve;Similar;0.5734797716140747
The changes to <iden>s  <file_name> have been ported  ;Upstream commit of <iden> / <iden> fix, This does not include the introduction of PlatformTest, which will be difficult to write so it works everywhere;Refactor <file_name> by using <iden>;We can use <iden> instead of overriding <iden> abstract class;Similar;0.7559037208557129
The changes to <iden>s  <file_name> have been ported  ;Upstream commit of <iden> / <iden> fix, This does not include the introduction of PlatformTest, which will be difficult to write so it works everywhere;Enable GitHub Security Scanning;To configure GitHub workflow for code security scanning;Similar;0.558229923248291
The changes to <iden>s  <file_name> have been ported  ;Upstream commit of <iden> / <iden> fix, This does not include the introduction of PlatformTest, which will be difficult to write so it works everywhere;load through bootstrap;-;Similar;0.5090208053588867
The changes to <iden>s  <file_name> have been ported  ;Upstream commit of <iden> / <iden> fix, This does not include the introduction of PlatformTest, which will be difficult to write so it works everywhere;Fix bug where request body isnt sent when it should  ;request body isnt sent when it should;Similar;0.6046566963195801
The changes to <iden>s  <file_name> have been ported  ;Upstream commit of <iden> / <iden> fix, This does not include the introduction of PlatformTest, which will be difficult to write so it works everywhere;Add support for following <iden> 307 temporary redirects  ;Fixes Android bug 41739;Similar;0.6738585233688354
The changes to <iden>s  <file_name> have been ported  ;Upstream commit of <iden> / <iden> fix, This does not include the introduction of PlatformTest, which will be difficult to write so it works everywhere;Add wildcard hostnames support in <file_name>;support;Similar;0.7426090240478516
The changes to <iden>s  <file_name> have been ported  ;Upstream commit of <iden> / <iden> fix, This does not include the introduction of PlatformTest, which will be difficult to write so it works everywhere;Fix correctness of WebSocketReader reserved flags test;reserved flags;Similar;0.6261458396911621
Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Return <file_name> to previous (e.g. KitKat) behavior;this change required to handle this <iden> scenario;Similar;0.7798190116882324
Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Document <file_name> throwing modes;To include the <pr_link> information;Similar;0.7794541716575623
Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Push OkHttp 3.1<version> into the sea;It is no longer supported;Similar;0.5341991186141968
Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Convert <file_name> to Kotlin;<pr_link>, <iden>, <file_name>;Similar;0.8098671436309814
Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Convert <file_name>, <file_name> to Kotlin  ;"to Kotlin

Decision: Rename <file_name> <version> to .kt (and others)  ";Similar;0.8312361240386963
Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Similar;0.6560881733894348
Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Just pass the <iden> and <iden> objects in directly;Dont summarize the request and response;Similar;0.7292691469192505
Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Fix a race in <method_name> ( <pr_link> );We were assuming on a client failure the server wouldnt have any further events. But it will get a failure if we give it a moment. This was causing some test flakiness.;Similar;0.6874691247940063
Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Improve some Markdown;improve;Similar;0.5927040576934814
Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Refactor <file_name> by using <iden>;We can use <iden> instead of overriding <iden> abstract class;Similar;0.8216032981872559
Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Remove unnecessary use of grouping parentheses  ;Lets remove warnings found by errorprone.;Similar;0.5719679594039917
Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;load through bootstrap;-;Similar;0.6689335107803345
Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Fix bug where request body isnt sent when it should  ;request body isnt sent when it should;Similar;0.6131166219711304
Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Add support for following <iden> 307 temporary redirects  ;Fixes Android bug 41739;Similar;0.7439979314804077
Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Add wildcard hostnames support in <file_name>;support;Similar;0.7097287774085999
Move <iden> retries / fallback into <method_name>;The decision is explained by the improvements in handling connection attempts and IOExceptions, making retries smarter in different scenarios.;Fix correctness of WebSocketReader reserved flags test;reserved flags;Similar;0.5583509206771851
Return <file_name> to previous (e.g. KitKat) behavior;this change required to handle this <iden> scenario;Document <file_name> throwing modes;To include the <pr_link> information;Similar;0.6738510727882385
Return <file_name> to previous (e.g. KitKat) behavior;this change required to handle this <iden> scenario;Convert <file_name> to Kotlin;<pr_link>, <iden>, <file_name>;Similar;0.7924479246139526
Return <file_name> to previous (e.g. KitKat) behavior;this change required to handle this <iden> scenario;Convert <file_name>, <file_name> to Kotlin  ;"to Kotlin

Decision: Rename <file_name> <version> to .kt (and others)  ";Similar;0.8039604425430298
Return <file_name> to previous (e.g. KitKat) behavior;this change required to handle this <iden> scenario;Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Similar;0.7009726166725159
Return <file_name> to previous (e.g. KitKat) behavior;this change required to handle this <iden> scenario;Just pass the <iden> and <iden> objects in directly;Dont summarize the request and response;Similar;0.6705827116966248
Return <file_name> to previous (e.g. KitKat) behavior;this change required to handle this <iden> scenario;Fix a race in <method_name> ( <pr_link> );We were assuming on a client failure the server wouldnt have any further events. But it will get a failure if we give it a moment. This was causing some test flakiness.;Similar;0.5849703550338745
Return <file_name> to previous (e.g. KitKat) behavior;this change required to handle this <iden> scenario;Improve some Markdown;improve;Similar;0.5643067359924316
Return <file_name> to previous (e.g. KitKat) behavior;this change required to handle this <iden> scenario;Refactor <file_name> by using <iden>;We can use <iden> instead of overriding <iden> abstract class;Similar;0.7945290803909302
Return <file_name> to previous (e.g. KitKat) behavior;this change required to handle this <iden> scenario;Enable GitHub Security Scanning;To configure GitHub workflow for code security scanning;Similar;0.5775343775749207
Return <file_name> to previous (e.g. KitKat) behavior;this change required to handle this <iden> scenario;load through bootstrap;-;Similar;0.6147149205207825
Return <file_name> to previous (e.g. KitKat) behavior;this change required to handle this <iden> scenario;Fix bug where request body isnt sent when it should  ;request body isnt sent when it should;Similar;0.5743131041526794
Return <file_name> to previous (e.g. KitKat) behavior;this change required to handle this <iden> scenario;Add support for following <iden> 307 temporary redirects  ;Fixes Android bug 41739;Similar;0.6440479755401611
Return <file_name> to previous (e.g. KitKat) behavior;this change required to handle this <iden> scenario;Add wildcard hostnames support in <file_name>;support;Similar;0.6804693937301636
Return <file_name> to previous (e.g. KitKat) behavior;this change required to handle this <iden> scenario;Fix correctness of WebSocketReader reserved flags test;reserved flags;Similar;0.5553961992263794
Document <file_name> throwing modes;To include the <pr_link> information;Push OkHttp 3.1<version> into the sea;It is no longer supported;Similar;0.538339376449585
Document <file_name> throwing modes;To include the <pr_link> information;Convert <file_name> to Kotlin;<pr_link>, <iden>, <file_name>;Similar;0.6947643160820007
Document <file_name> throwing modes;To include the <pr_link> information;Convert <file_name>, <file_name> to Kotlin  ;"to Kotlin

Decision: Rename <file_name> <version> to .kt (and others)  ";Similar;0.7031115293502808
Document <file_name> throwing modes;To include the <pr_link> information;Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Similar;0.5523357391357422
Document <file_name> throwing modes;To include the <pr_link> information;Just pass the <iden> and <iden> objects in directly;Dont summarize the request and response;Similar;0.5764381289482117
Document <file_name> throwing modes;To include the <pr_link> information;Fix a race in <method_name> ( <pr_link> );We were assuming on a client failure the server wouldnt have any further events. But it will get a failure if we give it a moment. This was causing some test flakiness.;Similar;0.5848029851913452
Document <file_name> throwing modes;To include the <pr_link> information;Refactor <file_name> by using <iden>;We can use <iden> instead of overriding <iden> abstract class;Similar;0.7399917244911194
Document <file_name> throwing modes;To include the <pr_link> information;Enable GitHub Security Scanning;To configure GitHub workflow for code security scanning;Similar;0.5448344945907593
Document <file_name> throwing modes;To include the <pr_link> information;load through bootstrap;-;Similar;0.5600677728652954
Document <file_name> throwing modes;To include the <pr_link> information;Fix bug where request body isnt sent when it should  ;request body isnt sent when it should;Similar;0.5151718258857727
Document <file_name> throwing modes;To include the <pr_link> information;Add support for following <iden> 307 temporary redirects  ;Fixes Android bug 41739;Similar;0.5993393063545227
Document <file_name> throwing modes;To include the <pr_link> information;Add wildcard hostnames support in <file_name>;support;Similar;0.6944679021835327
Document <file_name> throwing modes;To include the <pr_link> information;Fix correctness of WebSocketReader reserved flags test;reserved flags;Similar;0.5039950609207153
Convert <file_name> to Kotlin;<pr_link>, <iden>, <file_name>;Convert <file_name>, <file_name> to Kotlin  ;"to Kotlin

Decision: Rename <file_name> <version> to .kt (and others)  ";Similar;0.9855733513832092
Convert <file_name> to Kotlin;<pr_link>, <iden>, <file_name>;Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Similar;0.7005361914634705
Convert <file_name> to Kotlin;<pr_link>, <iden>, <file_name>;Just pass the <iden> and <iden> objects in directly;Dont summarize the request and response;Similar;0.6109901666641235
Convert <file_name> to Kotlin;<pr_link>, <iden>, <file_name>;Fix a race in <method_name> ( <pr_link> );We were assuming on a client failure the server wouldnt have any further events. But it will get a failure if we give it a moment. This was causing some test flakiness.;Similar;0.6537832021713257
Convert <file_name> to Kotlin;<pr_link>, <iden>, <file_name>;Improve some Markdown;improve;Similar;0.540614128112793
Convert <file_name> to Kotlin;<pr_link>, <iden>, <file_name>;Refactor <file_name> by using <iden>;We can use <iden> instead of overriding <iden> abstract class;Similar;0.8696914911270142
Convert <file_name> to Kotlin;<pr_link>, <iden>, <file_name>;Enable GitHub Security Scanning;To configure GitHub workflow for code security scanning;Similar;0.6089856624603271
Convert <file_name> to Kotlin;<pr_link>, <iden>, <file_name>;load through bootstrap;-;Similar;0.6570061445236206
Convert <file_name> to Kotlin;<pr_link>, <iden>, <file_name>;Fix bug where request body isnt sent when it should  ;request body isnt sent when it should;Similar;0.5530554056167603
Convert <file_name> to Kotlin;<pr_link>, <iden>, <file_name>;Add support for following <iden> 307 temporary redirects  ;Fixes Android bug 41739;Similar;0.6825540065765381
Convert <file_name> to Kotlin;<pr_link>, <iden>, <file_name>;Add wildcard hostnames support in <file_name>;support;Similar;0.7323089838027954
Convert <file_name> to Kotlin;<pr_link>, <iden>, <file_name>;Fix correctness of WebSocketReader reserved flags test;reserved flags;Similar;0.5739616751670837
Convert <file_name>, <file_name> to Kotlin  ;"to Kotlin

Decision: Rename <file_name> <version> to .kt (and others)  ";Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Similar;0.69209885597229
Convert <file_name>, <file_name> to Kotlin  ;"to Kotlin

Decision: Rename <file_name> <version> to .kt (and others)  ";Just pass the <iden> and <iden> objects in directly;Dont summarize the request and response;Similar;0.6375648379325867
Convert <file_name>, <file_name> to Kotlin  ;"to Kotlin

Decision: Rename <file_name> <version> to .kt (and others)  ";Fix a race in <method_name> ( <pr_link> );We were assuming on a client failure the server wouldnt have any further events. But it will get a failure if we give it a moment. This was causing some test flakiness.;Similar;0.6592399477958679
Convert <file_name>, <file_name> to Kotlin  ;"to Kotlin

Decision: Rename <file_name> <version> to .kt (and others)  ";Improve some Markdown;improve;Similar;0.5468531250953674
Convert <file_name>, <file_name> to Kotlin  ;"to Kotlin

Decision: Rename <file_name> <version> to .kt (and others)  ";Refactor <file_name> by using <iden>;We can use <iden> instead of overriding <iden> abstract class;Similar;0.8671493530273438
Convert <file_name>, <file_name> to Kotlin  ;"to Kotlin

Decision: Rename <file_name> <version> to .kt (and others)  ";Enable GitHub Security Scanning;To configure GitHub workflow for code security scanning;Similar;0.5917028784751892
Convert <file_name>, <file_name> to Kotlin  ;"to Kotlin

Decision: Rename <file_name> <version> to .kt (and others)  ";load through bootstrap;-;Similar;0.6499549150466919
Convert <file_name>, <file_name> to Kotlin  ;"to Kotlin

Decision: Rename <file_name> <version> to .kt (and others)  ";Fix bug where request body isnt sent when it should  ;request body isnt sent when it should;Similar;0.5333287715911865
Convert <file_name>, <file_name> to Kotlin  ;"to Kotlin

Decision: Rename <file_name> <version> to .kt (and others)  ";Add support for following <iden> 307 temporary redirects  ;Fixes Android bug 41739;Similar;0.7013537883758545
Convert <file_name>, <file_name> to Kotlin  ;"to Kotlin

Decision: Rename <file_name> <version> to .kt (and others)  ";Add wildcard hostnames support in <file_name>;support;Similar;0.7429938912391663
Convert <file_name>, <file_name> to Kotlin  ;"to Kotlin

Decision: Rename <file_name> <version> to .kt (and others)  ";Fix correctness of WebSocketReader reserved flags test;reserved flags;Similar;0.5569356679916382
Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Just pass the <iden> and <iden> objects in directly;Dont summarize the request and response;Similar;0.5798726081848145
Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Fix a race in <method_name> ( <pr_link> );We were assuming on a client failure the server wouldnt have any further events. But it will get a failure if we give it a moment. This was causing some test flakiness.;Similar;0.7196410894393921
Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Improve some Markdown;improve;Similar;0.7028623223304749
Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Refactor <file_name> by using <iden>;We can use <iden> instead of overriding <iden> abstract class;Similar;0.7513770461082458
Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Enable GitHub Security Scanning;To configure GitHub workflow for code security scanning;Similar;0.6721467971801758
Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;load through bootstrap;-;Similar;0.5312559008598328
Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Fix bug where request body isnt sent when it should  ;request body isnt sent when it should;Similar;0.7108606696128845
Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Add support for following <iden> 307 temporary redirects  ;Fixes Android bug 41739;Similar;0.6984019875526428
Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Add wildcard hostnames support in <file_name>;support;Similar;0.6682957410812378
Fix source compatibility for some <iden> callsites;supporting existing source patterns is more important;Fix correctness of WebSocketReader reserved flags test;reserved flags;Similar;0.7413225173950195
Fail HTTP/2 connections if the pong is not received;This removes the abstraction from our http2 package;fix <issue_link> : PROPFIND request should not redirect to GET request;PROPFIND request should not redirect to GET request;Similar;0.6191697120666504
Fail HTTP/2 connections if the pong is not received;This removes the abstraction from our http2 package;Remove unnecessary use of grouping parentheses  ;Lets remove warnings found by errorprone.;Similar;0.6564967632293701
Fail HTTP/2 connections if the pong is not received;This removes the abstraction from our http2 package;Fix bug where request body isnt sent when it should  ;request body isnt sent when it should;Similar;0.689303994178772
Just pass the <iden> and <iden> objects in directly;Dont summarize the request and response;Improve some Markdown;improve;Similar;0.5780066251754761
Just pass the <iden> and <iden> objects in directly;Dont summarize the request and response;fix <issue_link> : PROPFIND request should not redirect to GET request;PROPFIND request should not redirect to GET request;Similar;0.5446628332138062
Just pass the <iden> and <iden> objects in directly;Dont summarize the request and response;Refactor <file_name> by using <iden>;We can use <iden> instead of overriding <iden> abstract class;Similar;0.6780606508255005
Just pass the <iden> and <iden> objects in directly;Dont summarize the request and response;Remove unnecessary use of grouping parentheses  ;Lets remove warnings found by errorprone.;Similar;0.5668894052505493
Just pass the <iden> and <iden> objects in directly;Dont summarize the request and response;load through bootstrap;-;Similar;0.6784588098526001
Just pass the <iden> and <iden> objects in directly;Dont summarize the request and response;Fix bug where request body isnt sent when it should  ;request body isnt sent when it should;Similar;0.5353114008903503
Just pass the <iden> and <iden> objects in directly;Dont summarize the request and response;Add support for following <iden> 307 temporary redirects  ;Fixes Android bug 41739;Similar;0.5902212858200073
Just pass the <iden> and <iden> objects in directly;Dont summarize the request and response;Add wildcard hostnames support in <file_name>;support;Similar;0.5048151016235352
Fix a race in <method_name> ( <pr_link> );We were assuming on a client failure the server wouldnt have any further events. But it will get a failure if we give it a moment. This was causing some test flakiness.;Improve some Markdown;improve;Similar;0.5132593512535095
Fix a race in <method_name> ( <pr_link> );We were assuming on a client failure the server wouldnt have any further events. But it will get a failure if we give it a moment. This was causing some test flakiness.;Refactor <file_name> by using <iden>;We can use <iden> instead of overriding <iden> abstract class;Similar;0.6788802742958069
Fix a race in <method_name> ( <pr_link> );We were assuming on a client failure the server wouldnt have any further events. But it will get a failure if we give it a moment. This was causing some test flakiness.;Enable GitHub Security Scanning;To configure GitHub workflow for code security scanning;Similar;0.521300733089447
Fix a race in <method_name> ( <pr_link> );We were assuming on a client failure the server wouldnt have any further events. But it will get a failure if we give it a moment. This was causing some test flakiness.;Fix bug where request body isnt sent when it should  ;request body isnt sent when it should;Similar;0.6180945634841919
Fix a race in <method_name> ( <pr_link> );We were assuming on a client failure the server wouldnt have any further events. But it will get a failure if we give it a moment. This was causing some test flakiness.;Add support for following <iden> 307 temporary redirects  ;Fixes Android bug 41739;Similar;0.6246285438537598
Fix a race in <method_name> ( <pr_link> );We were assuming on a client failure the server wouldnt have any further events. But it will get a failure if we give it a moment. This was causing some test flakiness.;Add wildcard hostnames support in <file_name>;support;Similar;0.6349397897720337
Fix a race in <method_name> ( <pr_link> );We were assuming on a client failure the server wouldnt have any further events. But it will get a failure if we give it a moment. This was causing some test flakiness.;Fix correctness of WebSocketReader reserved flags test;reserved flags;Similar;0.6688225865364075
Improve some Markdown;improve;Refactor <file_name> by using <iden>;We can use <iden> instead of overriding <iden> abstract class;Similar;0.5877652168273926
Improve some Markdown;improve;Remove unnecessary use of grouping parentheses  ;Lets remove warnings found by errorprone.;Similar;0.5737069249153137
Improve some Markdown;improve;Enable GitHub Security Scanning;To configure GitHub workflow for code security scanning;Similar;0.5082536935806274
Improve some Markdown;improve;load through bootstrap;-;Similar;0.5609312057495117
Improve some Markdown;improve;Fix bug where request body isnt sent when it should  ;request body isnt sent when it should;Similar;0.5983796119689941
Improve some Markdown;improve;Add support for following <iden> 307 temporary redirects  ;Fixes Android bug 41739;Similar;0.6314573884010315
Improve some Markdown;improve;Fix correctness of WebSocketReader reserved flags test;reserved flags;Similar;0.5608150959014893
fix <issue_link> : PROPFIND request should not redirect to GET request;PROPFIND request should not redirect to GET request;Remove unnecessary use of grouping parentheses  ;Lets remove warnings found by errorprone.;Similar;0.6738393306732178
fix <issue_link> : PROPFIND request should not redirect to GET request;PROPFIND request should not redirect to GET request;Fix bug where request body isnt sent when it should  ;request body isnt sent when it should;Similar;0.7020754218101501
Refactor <file_name> by using <iden>;We can use <iden> instead of overriding <iden> abstract class;Enable GitHub Security Scanning;To configure GitHub workflow for code security scanning;Similar;0.6410616040229797
Refactor <file_name> by using <iden>;We can use <iden> instead of overriding <iden> abstract class;load through bootstrap;-;Similar;0.6518362760543823
Refactor <file_name> by using <iden>;We can use <iden> instead of overriding <iden> abstract class;Fix bug where request body isnt sent when it should  ;request body isnt sent when it should;Similar;0.5747520923614502
Refactor <file_name> by using <iden>;We can use <iden> instead of overriding <iden> abstract class;Add support for following <iden> 307 temporary redirects  ;Fixes Android bug 41739;Similar;0.6879050731658936
Refactor <file_name> by using <iden>;We can use <iden> instead of overriding <iden> abstract class;Add wildcard hostnames support in <file_name>;support;Similar;0.7613447308540344
Refactor <file_name> by using <iden>;We can use <iden> instead of overriding <iden> abstract class;Fix correctness of WebSocketReader reserved flags test;reserved flags;Similar;0.6374523639678955
Remove unnecessary use of grouping parentheses  ;Lets remove warnings found by errorprone.;load through bootstrap;-;Similar;0.5301023721694946
Remove unnecessary use of grouping parentheses  ;Lets remove warnings found by errorprone.;Fix bug where request body isnt sent when it should  ;request body isnt sent when it should;Similar;0.6355973482131958
Enable GitHub Security Scanning;To configure GitHub workflow for code security scanning;load through bootstrap;-;Similar;0.5536405444145203
Enable GitHub Security Scanning;To configure GitHub workflow for code security scanning;Add support for following <iden> 307 temporary redirects  ;Fixes Android bug 41739;Similar;0.5290462970733643
Enable GitHub Security Scanning;To configure GitHub workflow for code security scanning;Add wildcard hostnames support in <file_name>;support;Similar;0.6363552212715149
Enable GitHub Security Scanning;To configure GitHub workflow for code security scanning;Fix correctness of WebSocketReader reserved flags test;reserved flags;Similar;0.6737975478172302
load through bootstrap;-;Fix bug where request body isnt sent when it should  ;request body isnt sent when it should;Similar;0.5178065896034241
load through bootstrap;-;Add support for following <iden> 307 temporary redirects  ;Fixes Android bug 41739;Similar;0.5399526953697205
Fix bug where request body isnt sent when it should  ;request body isnt sent when it should;Add support for following <iden> 307 temporary redirects  ;Fixes Android bug 41739;Similar;0.5529416799545288
Fix bug where request body isnt sent when it should  ;request body isnt sent when it should;Fix correctness of WebSocketReader reserved flags test;reserved flags;Similar;0.7187007069587708
Add support for following <iden> 307 temporary redirects  ;Fixes Android bug 41739;Add wildcard hostnames support in <file_name>;support;Similar;0.6022465825080872
Add support for following <iden> 307 temporary redirects  ;Fixes Android bug 41739;Fix correctness of WebSocketReader reserved flags test;reserved flags;Similar;0.6059101819992065
Add wildcard hostnames support in <file_name>;support;Fix correctness of WebSocketReader reserved flags test;reserved flags;Similar;0.583399772644043
